var searchIndex = JSON.parse('{\
"blockchain":{"doc":"Blockchain management module","t":"NDDDDNEEENNNNNNNNNDEAAMMAAMMMMMMMMAMMMMMMMMMMMMMMMMMEENNNNNNNLLLLLLLLLLLLLLLLLLLLFLLLLFLFLLLLLLLLLLNDDENLLLLLLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLMLMLLLLLLLLLLLLLMMMMMDLLLLLLLLLLLLLLLLLLLDENNLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLMLLLLLLLLLLMNENNNNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLMLLLMLLLLLLLLLLLLLLLLLMMMMMMMM","n":["Added","Blockchain","Checkpoints","Configuration","EpochInfo","EpochInfo","EpochInfoError","Error","Event","HeaderVerification","InvalidBlock0","InvalidBlockDate","InvalidChainLength","Ledger","MissingParent","NotTheParentBlock","PreferCandidate","PreferCurrent","Reference","Selection","block0","blockchain","cache","cache_capacity","checkpoints","epoch_info","epoch_info","epoch_leadership_schedule","epoch_rewards_info","header","heads","heads_capacity","ledger","previous_epoch_state","reference","rewards_info_params","time_frame","tip","source","current","current","current","expected","expected","parent","source","source","epoch_transition","new_branch","new_reference","new_tip","parent","Block0Error","Block0Malformed","CannotParseEntity","Malformed","NoDiscrimination","NoInitialSettings","NoSlotDuration","NoSlotsPerEpoch","NoStartTime","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","initial","into","into","provide","provide","slot_duration","source","start_time","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Added","Blockchain","Configuration","Event","MissingParent","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","branches","cache","cache_capacity","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","heads","heads_capacity","init","init","init","into","into","into","new","put","put_head","rewards_info_params","tip","tip","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","epoch_transition","new_branch","new_reference","new_tip","parent","Checkpoints","as_ref","borrow","borrow_mut","deref","deref","deref_mut","drop","eq","fmt","from","init","into","into_iter","iter","new","try_from","try_into","type_id","vzip","EpochInfo","EpochInfoError","HeaderVerification","InvalidBlock0","borrow","borrow","borrow_mut","borrow_mut","chain","check_header","deref","deref","deref_mut","deref_mut","drop","drop","epoch","epoch_leadership_schedule","epoch_leadership_schedule","epoch_rewards_info","epoch_rewards_info","fmt","fmt","from","from","from","from","init","init","into","into","new","provide","slot_of","source","time_frame","time_of","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","source","EpochInfo","Error","InvalidBlockDate","InvalidChainLength","Ledger","NotTheParentBlock","PreferCandidate","PreferCurrent","Reference","Selection","approximate_common_ancestor","block_date","block_parent_hash","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain","chain_epoch_info","chain_length","check_block_date","check_chain_length","check_child","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","elapsed","epoch_info","epoch_info","epoch_transition","fmt","fmt","from","from","from","from","hash","header","header","init","init","init","into","into","into","ledger","ledger","new","new_epoch_info","previous_epoch_state","previous_epoch_state","provide","select","source","time","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","current","current","current","expected","expected","parent","source","source"],"q":[[0,"blockchain"],[38,"blockchain::EpochInfoError"],[39,"blockchain::Error"],[47,"blockchain::Event"],[52,"blockchain::block0"],[99,"blockchain::blockchain"],[156,"blockchain::blockchain::Event"],[161,"blockchain::checkpoints"],[181,"blockchain::epoch_info"],[227,"blockchain::epoch_info::EpochInfoError"],[228,"blockchain::reference"],[304,"blockchain::reference::Error"]],"d":["","","different checkpoints in time of the blockchain","configuration entries for the blockchain parameters","","","","","","","","","","","","","","","","","","","","","","","the block’s epoch info","the leadership used to validate the current header’s …","If present, this is the rewards info distributed at the …","keeping the block’s header here to save some lookup time …","","","the ledger at the state of the left by applying the …","last <code>Ref</code>. Every time there is a transition this value will …","","","the time frame applicable in the current branch of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","configuration entries for the blockchain parameters","","","","","","","","","get an iterator for all the branches currently being …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","start a blockchain with the given block as starting point","","","","","","","","","","","","","","","","","","","","","","","","different checkpoints in time of the blockchain","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","the leadership used to validate the current header’s …","access the rewards info that were distributed at the end …","If present, this is the rewards info distributed at the …","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","get the slot for the given BlockDate","","the time frame applicable in the current branch of the …","get the system time scheduled for the given block date","","","","","","","","","","","","","","","","","","","","","approximate a common ancestor between the given References","retrieve the block date of the <code>Ref</code>","access the reference’s parent hash","","","","","","","chain a new block, expecting the new block to be a child …","","retrieve the chain length, the number of blocks created …","","","","","","","","","","","","","retrieve the number of seconds since this block was …","retrieve the block’s epoch info","the block’s epoch info","once we suppose the end of an epoch as come, we can …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","retrieve the header hash of the <code>Ref</code>","access the <code>Header</code> of the block pointed by this <code>Ref</code>","keeping the block’s header here to save some lookup time …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","the ledger at the state of the left by applying the …","create a new block reference with the given block0","compute a new epoch info from the given Reference for the …","","last <code>Ref</code>. Every time there is a transition this value will …","","compare the current Reference with the candidate one","","get the time the block was schedule for","","","","","","","","","","","","","","","","","","","","",""],"i":[23,0,0,0,0,24,0,0,0,32,32,24,24,24,23,24,41,41,0,0,0,0,17,22,0,0,19,28,28,19,17,22,19,19,0,22,28,17,42,43,44,45,43,44,45,46,47,48,48,48,48,49,0,0,2,2,5,5,5,5,5,2,5,2,5,2,5,2,5,2,5,2,2,5,5,2,2,2,5,2,5,0,2,5,2,5,0,2,0,2,5,2,5,2,5,2,5,2,5,23,0,0,0,23,17,23,22,17,23,22,17,17,22,22,22,22,17,23,22,17,23,22,17,23,22,22,17,23,22,17,22,17,23,22,17,23,22,17,17,17,22,17,17,22,17,23,22,17,23,22,17,23,22,17,23,22,48,48,48,48,49,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,32,32,28,32,28,32,28,28,28,32,28,32,28,32,28,28,28,28,28,32,32,28,32,32,32,28,32,28,32,28,32,28,32,28,28,32,28,32,28,32,28,32,28,32,42,24,0,24,24,24,24,41,41,0,0,19,19,19,19,41,24,19,41,24,19,19,19,19,19,19,19,41,24,19,41,24,19,41,24,19,19,19,19,24,24,19,41,24,24,19,19,19,19,41,24,19,41,24,19,19,19,19,19,19,24,19,24,19,24,19,41,24,19,41,24,19,41,24,19,41,24,43,44,45,43,44,45,46,47],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[[2,3],4],[[2,3],4],[[5,3],4],[[5,3],4],[[]],[6,2],[5,2],[[]],[[],1],[[],1],[7,[[9,[8,5]]]],[[]],[[]],[10],[10],[7,[[9,[11,2]]]],[2,[[13,[12]]]],[7,[[9,[14,2]]]],[[],15],[[],15],[[],9],[[],9],[[],9],[[],9],[[],16],[[],16],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[17,[[21,[18,[20,[19]]]]]],0,0,[22,22],[[]],[[],22],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[22,3],4],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[[22,[20,[19]]],17],[[17,7],[[9,[23,24]]]],[[17,[20,[19]],25,25],23],0,[17,[[20,[19]]]],0,[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],16],[[],16],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,[26],[[]],[[]],[26],[1],[1],[1],[[26,26],25],[[26,3],4],[[]],[[],1],[[]],[26],[26,[[27,[18]]]],[19,26],[[],9],[[],9],[[],16],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[28,29,[13,[30]]],28],[[28,31],[[9,[32]]]],[1],[1],[1],[1],[1],[1],[28,33],[28,29],0,[28,[[13,[30]]]],0,[[32,3],4],[[32,3],4],[[]],[2,32],[34,32],[[]],[[],1],[[],1],[[]],[[]],[[7,35],[[9,[28,32]]]],[10],[[28,36],37],[32,[[13,[12]]]],0,[[28,36],[[13,[14]]]],[[],15],[[],9],[[],9],[[],9],[[],9],[[],16],[[],16],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[20,20],[[13,[[20,[19]]]]]],[19,36],[19,18],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]],7],[[9,[19,24]]]],[[[20,[19]],7],[[9,[[20,[19]],24]]]],[19,38],[[19,7],[[9,[24]]]],[[19,7],[[9,[24]]]],[[19,7],[[9,[24]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[19,[[9,[11,39]]]],[19,[[20,[28]]]],0,[19,[[9,[19,24]]]],[[24,3],4],[[24,3],4],[[]],[[]],[32,24],[[]],[19,18],[19,31],0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[19,35],0,[7,[[9,[19,24]]]],[[19,40],[[9,[[20,[28]],24]]]],[19,[[13,[20]]]],0,[10],[[20,20],41],[24,[[13,[12]]]],[19,14],[[],15],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],16],[[],16],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,0,0],"c":[],"p":[[15,"usize"],[4,"Block0Error"],[3,"Formatter"],[6,"Result"],[4,"Block0Malformed"],[4,"Error"],[3,"Block"],[3,"ConfigParams"],[4,"Result"],[3,"Demand"],[3,"Duration"],[8,"Error"],[4,"Option"],[3,"SystemTime"],[3,"String"],[3,"TypeId"],[3,"Blockchain"],[6,"HeaderId"],[3,"Reference"],[3,"Arc"],[3,"Iter"],[3,"Configuration"],[4,"Event"],[4,"Error"],[15,"bool"],[3,"Checkpoints"],[3,"Iter"],[3,"EpochInfo"],[3,"Leadership"],[3,"EpochRewardsInfo"],[4,"Header"],[4,"EpochInfoError"],[15,"u32"],[3,"Error"],[3,"Ledger"],[3,"BlockDate"],[3,"Slot"],[3,"ChainLength"],[3,"SystemTimeError"],[6,"Epoch"],[4,"Selection"],[13,"HeaderVerification"],[13,"NotTheParentBlock"],[13,"InvalidChainLength"],[13,"InvalidBlockDate"],[13,"Ledger"],[13,"EpochInfo"],[13,"Added"],[13,"MissingParent"]]},\
"cardano_cli_mock":{"doc":"","t":"F","n":["main"],"q":[[0,"cardano_cli_mock"]],"d":[""],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[3,"Report"],[4,"Result"]]},\
"cardano_legacy_address":{"doc":"Cardano Legacy Address generation and parsing","t":"DEDNNDNENMAMAAAMMRRDEDNRNDGNEDRDNMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLMLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLREGNFFLLLLLFFLLLLLLLLLLLLAFFRDLLFLLLLLLLLLL","n":["Addr","AddressMatchXPub","Attributes","Base58Error","EncodingError","ExtendedAddr","No","ParseExtendedAddrError","Yes","addr","address","attributes","base58","cbor","crc32","derivation_path","network_magic","ATTRIBUTE_NAME_TAG_DERIVATION","ATTRIBUTE_NAME_TAG_NETWORK_MAGIC","Addr","AddressMatchXPub","Attributes","Base58Error","EXTENDED_ADDR_LEN","EncodingError","ExtendedAddr","HdAddressPayload","No","ParseExtendedAddrError","PubKeyTag","SPENDING_DATA_TAG_PUBKEY","SpendingData","Yes","addr","as_ref","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","deconstruct","derivation_path","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash_spending_data","identical_with_pubkey_raw","identical_with_xpub","identical_with_xpub_raw","into","into","into","into","into","into","into","network_magic","new","new","new_bootstrap_era","new_simple","partial_cmp","partial_cmp","provide","serialize","serialize","serialize","serialize","serialize","sha3_then_blake2b224","source","to_address","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ALPHABET","Error","Result","UnknownSymbol","base_decode","base_encode","borrow","borrow_mut","clone","clone_into","cmp","decode","encode","eq","fmt","fmt","from","into","partial_cmp","provide","to_owned","to_string","try_from","try_into","type_id","util","encode_with_crc32_","raw_with_crc32","CRC_TABLE","Crc32","borrow","borrow_mut","crc32","finalize","flush","from","into","new","try_from","try_into","type_id","update","write"],"q":[[0,"cardano_legacy_address"],[17,"cardano_legacy_address::address"],[151,"cardano_legacy_address::base58"],[176,"cardano_legacy_address::cbor"],[177,"cardano_legacy_address::cbor::util"],[179,"cardano_legacy_address::crc32"]],"d":["A valid cardano Address that is displayed in base58","","","","","A valid cardano address deconstructed","","","","","Address creation and parsing","","bitcoin’s base58 encoding format","the CBOR util and compatible with the haskell usage…","","","","","","A valid cardano Address that is displayed in base58","","","","","","A valid cardano address deconstructed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","mostly helper of the previous function, so not to have to …","Check if the Addr can be reconstructed with a specific xpub","mostly helper of the previous function, so not to have to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","error when a given character is not part of the supported …","","","","","","","","decode from base58 the given input","encode in base58 the given input","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","CBor util and other stuff","","","","structure to compute the CRC32 of chunks of bytes.","","","function is kept for compatibility. however prefer the …","finalize the CRC32, recovering the computed value","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","initialise a new CRC32 state","","","","update the CRC32 with the given bytes.",""],"i":[0,0,0,13,13,0,3,0,3,4,0,4,0,0,0,2,2,0,0,0,0,0,13,0,13,0,0,3,0,0,0,0,3,4,1,4,8,2,1,3,4,13,5,8,2,1,3,4,13,5,2,1,3,4,5,2,1,3,4,5,2,1,1,2,8,2,1,4,2,1,3,4,5,2,1,1,3,4,4,13,13,5,8,2,1,1,3,4,13,5,1,4,1,0,1,1,1,8,2,1,3,4,13,5,2,1,4,2,4,2,1,13,8,2,1,4,5,0,13,4,2,1,3,4,5,1,4,13,8,2,1,1,3,4,4,13,5,8,2,1,3,4,13,5,8,2,1,3,4,13,5,0,0,0,26,0,0,26,26,26,26,26,0,0,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,27,27,0,27,27,27,27,27,27,27,27,27,27],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[1,1],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[[2,2],6],[[1,1],6],[1,4],0,[7,[[9,[8]]]],[7,[[9,[2]]]],[7,[[9,[1]]]],[7,[[9,[4]]]],[[2,2],10],[[1,1],10],[[3,3],10],[[4,4],10],[[5,5],10],[[2,11],12],[[1,11],12],[[1,11],12],[[3,11],12],[[4,11],12],[[4,11],12],[[13,11],12],[[13,11],12],[[5,11],12],[[]],[[]],[4,1],[[]],[[]],[[]],[[]],[[]],[14,[[15,[1]]]],[14,[[15,[4]]]],[1],[[16,2]],[1,3],[[1,16],3],[1,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[18,[17]]],1],[[16,2],4],[[[19,[[18,[17]]]],[19,[20]]],2],[[16,[19,[20]]],4],[[2,2],[[19,[6]]]],[[1,1],[[19,[6]]]],[21],[[8,22],[[9,[22]]]],[[2,22],[[9,[22]]]],[[1,22],[[9,[22]]]],[[4,22],[[9,[22]]]],[[5,22],[[9,[22]]]],[[]],[13,[[19,[23]]]],[4,1],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],15],[[],15],[[],[[15,[1]]]],[[],15],[[],15],[[],15],[[],[[15,[4]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,[14,[[15,[[18,[17]],26]]]],[14,[[18,[17]]]],[[]],[[]],[26,26],[[]],[[26,26],6],[14,[[15,[[18,[17]],26]]]],[[],24],[[26,26],10],[[26,11],12],[[26,11],12],[[]],[[]],[[26,26],[[19,[6]]]],[21],[[]],[[],24],[[],15],[[],15],[[],25],0,[22,9],[7,[[9,[[18,[17]]]]]],0,0,[[]],[[]],[[],20],[27,20],[27,[[15,[28]]]],[[]],[[]],[[],27],[[],15],[[],15],[[],25],[[27,29],27],[27,[[15,[30,28]]]]],"c":[],"p":[[3,"Addr"],[3,"Attributes"],[4,"AddressMatchXPub"],[3,"ExtendedAddr"],[3,"SpendingData"],[4,"Ordering"],[3,"Deserializer"],[3,"PubKeyTag"],[6,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"ParseExtendedAddrError"],[15,"str"],[4,"Result"],[3,"XPub"],[15,"u8"],[3,"Vec"],[4,"Option"],[15,"u32"],[3,"Demand"],[3,"Serializer"],[8,"Error"],[3,"String"],[3,"TypeId"],[4,"Error"],[3,"Crc32"],[3,"Error"],[8,"IntoIterator"],[15,"usize"]]},\
"cat_data_service":{"doc":"","t":"AAFAAAAWEENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNRENLLLLLLLLLFLLLLLLLLLWWWWHHRNREDNHHHHFLLLLFLLLLLLMLLLLLLFALLLLFLFFLFLLFLLLLLLAALLWWHHHHFFFAFWHHFFDLLLLLLALLLMMAALLLFLWWHHHHAFFFAWHHFFWWHHHHAFFFFAAWHHFFWWHHHHAFFFAWHHFFWHHFFWHHFFWWHHDHHDLLLLFLLLLLLLLMMLLLLLLFLLLLLLFLLMWHHDLLLLLLLLLMMFFMLLLLRDMLLLLLLMLLLLLLLLLLMMLLLLLLLWDLLLLLMLLLLLLLLDALLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLAAAAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLAALDDDDMMMLLLLLLLLMMMLLLLLLLLLLLLMLLLLMLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLDDDDDDDMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLMMLLLLLLLMMMLLLLLLLMLLLLLLLMMMMMMMMMMMMLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLDDDDDDLLLLLLLLLLLLMMLLLLLLLLLLLLMMMLLLLLLLLLLLLMMMMLLLLLLLLLLLLMMLLLLLLMMMLLLLLLLLLLLLLLLLLLMMLLLLLLDDDDLLLLLLLLMLLLLLLLLMLLLLMMLLLLMMLLLLLLLLMMMLLLLMMMMLLLLLLLLLLLLMMLLLLDDDDDMMLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMMMMMMLLLLLMLLLLLLLLLLLLLLLMMMMMMLLLLLMDDDMLLLLLLLLLLLLMLLLLLLMMLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLNNNNNNEDDDDENNLLLLLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLAAAAADDLLLLMMLLLLMLLLLMMMLLMLLMMLLMMLLLLLLLLDDDDMLLLLLLLLMMLLLLLLLLLLLLMLLLLMMMMMMMMMMLLLLMLLLLMMMMMMMMLLLLMMMMMLLLLLLLLLLLLMMMLLLLDLLLLLLMMMLLLLLLLDLLLLLLMMLLLMLLLLDLLMMMMMMLLLLMMLLLMLLLLDLLLLLLLLMMLMLLLL","n":["cli","logger","main","service","settings","state","types","","Cli","Error","EventDb","Run","Service","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","into","into","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","Debug","Error","Info","LOG_LEVEL_DEFAULT","LogLevel","Warn","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_ref","init","init","into","to_owned","to_possible_value","try_from","try_into","type_id","value_variants","vzip","","","","","CALLSITE","CALLSITE","COUNT","CannotRunService","EXPONENTIAL_SECONDS","Error","ErrorMessage","EventDbError","META","META","METRIC_NAME","METRIC_NAME","app","borrow","borrow","borrow_mut","borrow_mut","cors_layer","deref","deref","deref_mut","deref_mut","drop","drop","error","fmt","fmt","fmt","from","from","from","handle_result","health","init","init","into","into","metrics_app","provide","run","run_service","serialize","setup_metrics_recorder","source","to_string","track_metrics","try_from","try_from","try_into","try_into","type_id","type_id","v0","v1","vzip","vzip","","","CALLSITE","CALLSITE","META","META","health","live_exec","ready_exec","fund","v0","","CALLSITE","META","fund","fund_exec","LimitOffset","borrow","borrow_mut","deref","deref_mut","deserialize","drop","event","from","init","into","limit","offset","registration","search","try_from","try_into","type_id","v1","vzip","","","CALLSITE","CALLSITE","META","META","ballots","event","event_exec","events_exec","objective","","CALLSITE","META","ballots","ballots_exec","","","CALLSITE","CALLSITE","META","META","ballots","mocked_voting_status_data","objective","objectives_exec","objectives_voting_statuses_exec","proposal","review_type","","CALLSITE","META","ballots","ballots_exec","","","CALLSITE","CALLSITE","META","META","ballot","proposal","proposal_exec","proposals_exec","review","","CALLSITE","META","ballot","ballot_exec","","CALLSITE","META","review","reviews_exec","","CALLSITE","META","review_type","review_types_exec","","","CALLSITE","CALLSITE","DelegationsQuery","META","META","VotersQuery","borrow","borrow","borrow_mut","borrow_mut","delegations_exec","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","event_id","event_id","from","from","init","init","into","into","registration","try_from","try_from","try_into","try_into","type_id","type_id","voter_exec","vzip","vzip","with_delegators","","CALLSITE","META","SearchParam","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","init","into","limit","offset","search","search_exec","total","try_from","try_into","type_id","vzip","ADDRESS_DEFAULT","Settings","address","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","database_url","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","from_ref","group_id","init","into","log_level","metrics_address","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","","State","borrow","borrow_mut","deref","deref_mut","drop","event_db","from","init","into","new","try_from","try_into","type_id","vzip","SerdeType","ballot","borrow","borrow_mut","clone","clone_into","deref","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","eq","equivalent","event","fmt","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_ref","from_socketlike","init","into","objective","proposal","registration","review","search","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_datetime_as_rfc3339","serialize_option_datetime_as_rfc3339","to_owned","try_from","try_into","type_id","vit_ss","voting_status","vzip","BallotSerde","ObjectiveBallotsSerde","ProposalBallotSerde","VotePlanSerde","ballot","ballot_type","ballots","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_index","chain_voteplan_id","choices","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encryption_key","from","from","from","from","group","init","init","init","init","into","into","into","into","objective_id","proposal_id","serialize","serialize","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","voteplans","vzip","vzip","vzip","vzip","EventDetailsSerde","EventGoalSerde","EventRegistrationSerde","EventScheduleSerde","EventSerde","EventSummarySerde","VotingPowerSettingsSerde","alg","assessment_qa_start","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deadline","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","details","drop","drop","drop","drop","drop","drop","drop","ends","finalize_proposals","from","from","from","from","from","from","from","goals","id","idx","init","init","init","init","init","init","init","insight_sharing","into","into","into","into","into","into","into","is_final","max_pct","min_ada","name","name","proposal_assessment","proposal_submission","purpose","refine_proposals","reg_checked","registration","schedule","serialize","serialize","serialize","serialize","serialize","serialize","serialize","starts","summary","taken","tallying","tallying_end","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voting","voting_power","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ObjectiveDetailsSerde","ObjectiveSerde","ObjectiveSummarySerde","ObjectiveTypeSerde","RewardDefintionSerde","VoterGroupSerde","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","currency","deleted","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","details","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","group","groups","id","id","init","init","init","init","init","init","into","into","into","into","into","into","objective_type","reward","serialize","serialize","serialize","serialize","serialize","serialize","summary","supplemental","title","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","voting_token","vzip","vzip","vzip","vzip","vzip","vzip","ProposalDetailsSerde","ProposalSerde","ProposalSummarySerde","ProposerDetailsSerde","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deleted","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","details","drop","drop","drop","drop","email","files","from","from","from","from","funds","id","init","init","init","init","into","into","into","into","name","payment_key","proposer","serialize","serialize","serialize","serialize","summary","summary","supplemental","title","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","url","url","vzip","vzip","vzip","vzip","DelegationSerde","DelegatorSerde","RewardAddressSerde","VoterInfoSerde","VoterSerde","as_at","as_at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","delegations","delegations_count","delegations_power","delegator_addresses","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","group","init","init","init","init","init","into","into","into","into","into","is_final","is_final","last_updated","last_updated","raw_power","reward_address","reward_address","reward_payable","serialize","serialize","serialize","serialize","serialize","total_power","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","voter_info","voting_group","voting_key","voting_power","voting_power_saturation","vzip","vzip","vzip","vzip","vzip","weight","AdvisorReviewSerde","RatingSerde","ReviewTypeSerde","assessor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","from","from","from","group","id","init","init","init","into","into","into","map","max","min","name","note","note","ratings","review_type","score","serialize","serialize","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Author","Description","Events","Funds","Objectives","Proposals","SearchColumnSerde","SearchConstraintSerde","SearchOrderBySerde","SearchQuerySerde","SearchResultSerde","SearchTableSerde","Title","Type","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","column","column","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","filter","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","order_by","results","search","serialize","table","total","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","challenge","fund","goal","group","vote_plan","ChallengeHighlightsSerde","ChallengeSerde","borrow","borrow","borrow_mut","borrow_mut","challenge_type","challenge_url","deref","deref","deref_mut","deref_mut","description","drop","drop","from","from","fund_id","highlights","id","init","init","internal_id","into","into","proposers_rewards","rewards_total","serialize","serialize","sponsor","title","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FundNextInfoSerde","FundSerde","FundStageDatesSerde","FundWithNextSerde","assessment_qa_start","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_vote_plans","challenges","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finalize_proposals_start","from","from","from","from","fund","fund_end_time","fund_goal","fund_name","fund_name","fund_start_time","goals","groups","id","id","init","init","init","init","insight_sharing_start","into","into","into","into","next","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","results_url","serialize","serialize","serialize","serialize","snapshot_start","stage_dates","stage_dates","survey_url","tallying_end","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","voting_end","voting_power_threshold","voting_start","vzip","vzip","vzip","vzip","GoalSerde","borrow","borrow_mut","deref","deref_mut","drop","from","fund_id","goal_name","id","init","into","serialize","try_from","try_into","type_id","vzip","GroupSerde","borrow","borrow_mut","deref","deref_mut","drop","from","fund_id","group_id","init","into","serialize","token_identifier","try_from","try_into","type_id","vzip","VoteplanSerde","borrow","borrow_mut","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","deref","deref_mut","drop","from","fund_id","id","init","into","serialize","token_identifier","try_from","try_into","type_id","vzip","VotingStatusSerde","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","objective_id","open","serialize","settings","try_from","try_into","type_id","vzip"],"q":[[0,"cat_data_service"],[7,"cat_data_service::cli"],[54,"cat_data_service::logger"],[79,"cat_data_service::service"],[139,"cat_data_service::service::health"],[148,"cat_data_service::service::v0"],[150,"cat_data_service::service::v0::fund"],[155,"cat_data_service::service::v1"],[175,"cat_data_service::service::v1::event"],[186,"cat_data_service::service::v1::event::ballots"],[191,"cat_data_service::service::v1::event::objective"],[204,"cat_data_service::service::v1::event::objective::ballots"],[209,"cat_data_service::service::v1::event::objective::proposal"],[220,"cat_data_service::service::v1::event::objective::proposal::ballot"],[225,"cat_data_service::service::v1::event::objective::proposal::review"],[230,"cat_data_service::service::v1::event::objective::review_type"],[235,"cat_data_service::service::v1::registration"],[275,"cat_data_service::service::v1::search"],[297,"cat_data_service::settings"],[326,"cat_data_service::state"],[342,"cat_data_service::types"],[487,"cat_data_service::types::ballot"],[554,"cat_data_service::types::event"],[681,"cat_data_service::types::objective"],[781,"cat_data_service::types::proposal"],[852,"cat_data_service::types::registration"],[945,"cat_data_service::types::review"],[1000,"cat_data_service::types::search"],[1101,"cat_data_service::types::vit_ss"],[1106,"cat_data_service::types::vit_ss::challenge"],[1145,"cat_data_service::types::vit_ss::fund"],[1232,"cat_data_service::types::vit_ss::goal"],[1249,"cat_data_service::types::vit_ss::group"],[1266,"cat_data_service::types::vit_ss::vote_plan"],[1289,"cat_data_service::types::voting_status"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Cannot use serde flattening, look this issue …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Server binding address","","","","","","","Url to the postgres event db","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Logging level","Server binding address","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,5,1,5,5,1,5,1,5,5,5,1,5,1,5,1,5,5,1,1,1,1,1,5,5,5,5,1,5,1,5,1,1,1,1,5,1,5,1,5,5,5,1,5,19,19,19,0,0,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,0,8,26,8,26,0,8,26,8,26,8,26,26,8,8,26,8,8,26,0,0,8,26,8,26,0,8,0,0,26,0,8,8,0,8,26,8,26,8,26,0,0,8,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,38,38,38,38,38,0,38,38,38,38,38,0,0,38,38,38,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,54,56,54,0,56,54,56,54,56,54,56,54,56,54,56,54,56,54,56,54,0,56,54,56,54,56,54,0,56,54,56,0,0,0,0,58,58,58,58,58,58,58,58,58,58,58,0,0,58,58,58,58,58,0,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,0,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,36,36,36,36,0,0,36,0,0,0,0,111,109,112,109,110,111,112,109,110,111,112,109,109,110,109,110,111,112,109,110,111,112,109,110,111,112,109,109,110,111,112,109,109,110,111,112,109,110,111,112,112,111,109,110,111,112,109,110,111,112,109,110,111,112,109,110,111,112,110,109,110,111,112,0,0,0,0,0,0,0,114,117,113,114,115,116,117,118,119,113,114,115,116,117,118,119,115,113,114,115,116,117,118,119,113,114,115,116,117,118,119,119,113,114,115,116,117,118,119,113,117,113,114,115,116,117,118,119,118,113,116,113,114,115,116,117,118,119,117,113,114,115,116,117,118,119,113,114,114,113,116,117,117,115,117,113,118,118,113,114,115,116,117,118,119,113,119,115,117,117,113,114,115,116,117,118,119,113,114,115,116,117,118,119,113,114,115,116,117,118,119,117,118,113,114,115,116,117,118,119,0,0,0,0,0,0,120,121,122,123,124,125,120,121,122,123,124,125,122,121,120,121,122,123,124,125,120,121,122,123,124,125,120,121,125,120,121,122,123,124,125,120,121,122,123,124,125,123,124,120,121,120,121,122,123,124,125,120,121,122,123,124,125,121,124,120,121,122,123,124,125,125,124,121,120,121,122,123,124,125,120,121,122,123,124,125,120,121,122,123,124,125,122,123,120,121,122,123,124,125,0,0,0,0,126,127,128,129,126,127,128,129,126,126,127,128,129,126,127,128,129,129,126,127,128,129,127,128,126,127,128,129,128,126,126,127,128,129,126,127,128,129,127,127,128,126,127,128,129,126,129,128,126,126,127,128,129,126,127,128,129,126,127,128,129,127,128,126,127,128,129,0,0,0,0,0,131,134,130,131,132,133,134,130,131,132,133,134,134,130,130,130,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,132,130,131,132,133,134,130,131,132,133,134,131,134,131,134,134,133,134,133,130,131,132,133,134,134,130,131,132,133,134,130,131,132,133,134,130,131,132,133,134,132,131,130,132,130,130,130,131,132,133,134,132,0,0,0,137,135,136,137,135,136,137,135,136,137,135,136,137,135,135,136,137,135,136,137,135,135,135,136,137,135,136,137,135,135,135,135,135,136,137,136,136,135,136,137,135,136,137,135,136,137,135,136,137,135,136,137,139,139,138,139,138,138,0,0,0,0,0,0,139,139,138,139,140,141,142,143,138,139,140,141,142,143,140,141,138,139,140,141,142,143,138,139,140,141,142,143,141,138,139,140,141,142,138,139,140,141,142,143,142,138,139,140,141,142,143,138,139,140,141,142,143,138,139,140,141,142,143,142,143,140,143,142,143,138,139,140,141,142,143,138,139,140,141,142,143,138,139,140,141,142,143,138,139,140,141,142,143,0,0,0,0,0,0,0,144,145,144,145,145,145,144,145,144,145,145,144,145,144,145,145,145,145,144,145,145,144,145,145,145,144,145,144,145,144,145,144,145,144,145,144,145,0,0,0,0,146,146,147,148,149,146,147,148,149,147,147,146,147,148,149,146,147,148,149,146,147,148,149,146,146,147,148,149,149,147,147,147,148,147,147,147,147,148,146,147,148,149,146,146,147,148,149,149,147,147,146,146,146,147,147,146,147,148,149,146,147,148,147,146,146,147,148,149,146,147,148,149,146,147,148,149,146,147,146,146,147,148,149,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153],"f":[0,0,[[],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,[3,3],[3,3],[[]],[[]],[[]],[[]],[[],3],[[],3],[4],[4],[4],[4],[4],[4],[5,[[2,[1]]]],[[1,6],7],[[1,6],7],[8,1],[9,1],[[]],[[]],[10,[[2,[5,11]]]],[10,[[2,[5,11]]]],[12,13],[[],4],[[],4],[[]],[[]],[14],[1,[[16,[15]]]],[[],17],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[5,10],[[2,[11]]]],[[5,10],[[2,[11]]]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[19,19],[[]],[4],[4],[4],[[]],[[]],[19,[[2,[20]]]],[[],4],[[]],[[]],[19,[[16,[21]]]],[[],2],[[],2],[[],18],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[23,[22]]],24],[[]],[[]],[[]],[[]],[[],25],[4],[4],[4],[4],[4],[4],0,[[8,6],7],[[8,6],7],[[26,6],7],[9,8],[[]],[[]],[[[2,[27,8]]],28],0,[[],4],[[],4],[[]],[[]],[[],24],[14],[[29,16,[23,[22]]],[[2,[8]]]],[[24,29,12],[[2,[8]]]],[[26,30],2],[[],31],[8,[[16,[15]]]],[[],17],[[32,33],34],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],0,0,[[]],[[]],0,0,0,0,0,0,[[],24],[[],[[2,[13,8]]]],[[],[[2,[13,8]]]],0,[[[23,[22]]],24],0,0,0,[[[23,[22]]],24],[[[23,[22]]],[[2,[[36,[35]],8]]]],0,[[]],[[]],[4],[4],[37,[[2,[38]]]],[4],0,[[]],[[],4],[[]],0,0,0,0,[[],2],[[],2],[[],18],[[[23,[22]]],24],[[]],0,0,0,0,0,0,0,[[[23,[22]]],24],[[[40,[[36,[39]]]],[23,[22]]],[[2,[[36,[41]],8]]]],[[[42,[38]],[23,[22]]],[[2,[[44,[[36,[43]]]],8]]]],0,0,0,0,[[[23,[22]]],24],[[[40,[[36,[39]]]],[23,[22]]],[[2,[[44,[[36,[45]]]],8]]]],0,0,0,0,0,0,0,[[]],[[[23,[22]]],24],[[[40,[[36,[39]]]],[42,[38]],[23,[22]]],[[2,[[44,[[36,[46]]]],8]]]],[[[40,[[36,[39]]]],[42,[38]],[23,[22]]],[[2,[[44,[[36,[47]]]],8]]]],0,0,0,0,0,[[[23,[22]]],24],[[40,[23,[22]]],[[2,[[44,[[36,[48]]]],8]]]],0,0,0,0,0,0,0,[[[23,[22]]],24],[[40,[23,[22]]],[[2,[[36,[49]],8]]]],[[40,[42,[38]],[23,[22]]],[[2,[[44,[[36,[50]]]],8]]]],0,0,0,0,[[[23,[22]]],24],[[40,[23,[22]]],[[2,[[36,[51]],8]]]],0,0,0,[[[23,[22]]],24],[[40,[42,[38]],[23,[22]]],[[2,[[44,[[36,[52]]]],8]]]],0,0,0,[[[23,[22]]],24],[[40,[42,[38]],[23,[22]]],[[2,[[44,[[36,[53]]]],8]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[40,[17]],[42,[54]],[23,[22]]],[[2,[[36,[55]],8]]]],[4],[4],[4],[4],[37,[[2,[56]]]],[37,[[2,[54]]]],[4],[4],0,0,[[]],[[]],[[],4],[[],4],[[]],[[]],[[[23,[22]]],24],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[[40,[17]],[42,[56]],[23,[22]]],[[2,[[36,[57]],8]]]],[[]],[[]],0,0,0,0,0,[[]],[[]],[4],[4],[37,[[2,[58]]]],[4],[[]],[[],4],[[]],0,0,[[[23,[22]]],24],[[[42,[58]],[60,[[36,[59]]]],[23,[22]]],[[2,[[36,[61]],8]]]],0,[[],2],[[],2],[[],18],[[]],0,0,0,[3,3],[3,3],[[]],[[]],[62,62],[[]],0,[4],[4],[4],[[]],[10,[[2,[62,11]]]],[10,[[2,[62,11]]]],[[]],[[],[[16,[63]]]],[[],4],[[]],0,0,[[]],[[],2],[[],2],[[],18],[[62,10],[[2,[11]]]],[[62,10],[[2,[11]]]],[[]],0,0,[[]],[[]],[4],[4],[4],0,[[]],[[],4],[[]],[[[16,[17]]],[[2,[22,1]]]],[[],2],[[],2],[[],18],[[]],0,0,[[]],[[]],[[[36,[64]]],[[36,[64]]]],[[]],[36],[4],[4],[37,[[2,[[36,[65]]]]]],[37,[[2,[[36,[39]]]]]],[37,[[2,[[36,[66]]]]]],[37,[[2,[[36,[67]]]]]],[37,[[2,[[36,[68]]]]]],[37,[[2,[[36,[69]]]]]],[37,[[2,[[36,[70]]]]]],[37,[[2,[[36,[71]]]]]],[37,[[2,[[36,[59]]]]]],[4],[[[36,[72]],36],13],[[],13],0,[[[36,[73]],6],7],[74],[[],36],[[]],[75],[75],[76],[77],[[]],[75],[[],4],[[]],0,0,0,0,0,[[[36,[78]],30],2],[[[36,[46]],30],2],[[[36,[57]],30],2],[[[36,[79]],30],2],[[[36,[70]],30],2],[[[36,[50]],30],2],[[[36,[80]],30],2],[[[36,[51]],30],2],[[[36,[81]],30],2],[[[36,[82]],30],2],[[[36,[83]],30],2],[[[36,[84]],30],2],[[[36,[83]],30],2],[[[36,[41]],30],2],[[[36,[85]],30],2],[[[36,[57]],30],2],[[[36,[35]],30],2],[[[36,[86]],30],2],[[[36,[46]],30],2],[[[36,[87]],30],2],[[[36,[88]],30],2],[[[36,[47]],30],2],[[[36,[66]],30],2],[[[36,[89]],30],2],[[[36,[90]],30],2],[[[36,[91]],30],2],[[[36,[92]],30],2],[[[36,[90]],30],2],[[[36,[93]],30],2],[[[36,[61]],30],2],[[[36,[45]],30],2],[[[36,[69]],30],2],[[[36,[94]],30],2],[[[36,[95]],30],2],[[[36,[53]],30],2],[[[36,[43]],30],2],[[[36,[86]],30],2],[[[36,[69]],30],2],[[[36,[96]],30],2],[[[36,[50]],30],2],[[[36,[39]],30],2],[[[36,[97]],30],2],[[[36,[98]],30],2],[[[36,[81]],30],2],[[[36,[99]],30],2],[[[36,[89]],30],2],[[[36,[78]],30],2],[[[36,[100]],30],2],[[[36,[48]],30],2],[[[36,[101]],30],2],[[[36,[55]],30],2],[[[36,[35]],30],2],[[[36,[92]],30],2],[[[36,[49]],30],2],[[[36,[94]],30],2],[[[36,[102]],30],2],[[[36,[96]],30],2],[[[36,[79]],30],2],[[[36,[103]],30],2],[[[36,[95]],30],2],[[[36,[104]],30],2],[[[36,[91]],30],2],[[[36,[84]],30],2],[[[36,[102]],30],2],[[[36,[82]],30],2],[[[36,[52]],30],2],[[[36,[70]],30],2],[[[36,[97]],30],2],[[[36,[100]],30],2],[[[36,[61]],30],2],[[[36,[39]],30],2],[[[36,[41]],30],2],[[[36,[99]],30],2],[[[36,[87]],30],2],[[[36,[66]],30],2],[[[36,[85]],30],2],[[[36,[105]],30],2],[[[36,[103]],30],2],[[[36,[88]],30],2],[[[36,[93]],30],2],[[[36,[51]],30],2],[[[36,[106]],30],2],[[[36,[107]],30],2],[[[36,[48]],30],2],[[[36,[52]],30],2],[[[36,[107]],30],2],[[[36,[49]],30],2],[[[36,[104]],30],2],[[[36,[101]],30],2],[[[36,[98]],30],2],[[[36,[80]],30],2],[[[36,[55]],30],2],[[[36,[53]],30],2],[[[36,[105]],30],2],[[[36,[106]],30],2],[[[36,[45]],30],2],[[[36,[43]],30],2],[[108,30],2],[[16,30],2],[[]],[[],2],[[],2],[[],18],0,0,[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[[]],[[]],[[]],[[]],0,[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],0,0,[[109,30],2],[[110,30],2],[[111,30],2],[[112,30],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[4],[4],[4],[4],[4],[4],[4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[113,30],2],[[114,30],2],[[115,30],2],[[116,30],2],[[117,30],2],[[118,30],2],[[119,30],2],0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,0,0,[4],[4],[4],[4],[4],[4],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[120,30],2],[[121,30],2],[[122,30],2],[[123,30],2],[[124,30],2],[[125,30],2],0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4],[4],[4],[4],[4],[4],[4],[4],0,[4],[4],[4],[4],0,0,[[]],[[]],[[]],[[]],0,0,[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],0,0,0,[[126,30],2],[[127,30],2],[[128,30],2],[[129,30],2],0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[],18],[[],18],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[130,30],2],[[131,30],2],[[132,30],2],[[133,30],2],[[134,30],2],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[4],[4],[4],[4],[4],[4],0,[4],[4],[4],[[]],[[]],[[]],0,0,[[],4],[[],4],[[],4],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[135,30],2],[[136,30],2],[[137,30],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[37,[[2,[138]]]],[37,[[2,[139]]]],[37,[[2,[140]]]],[37,[[2,[141]]]],[37,[[2,[142]]]],[4],[4],[4],[4],[4],[4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[143,30],2],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[4],[4],[4],[4],0,[4],[4],[[]],[[]],0,0,0,[[],4],[[],4],0,[[]],[[]],0,0,[[144,30],2],[[145,30],2],0,0,[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[146,30],2],[[147,30],2],[[148,30],2],[[149,30],2],0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],18],[[],18],[[],18],[[],18],0,0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[4],[4],[4],[[]],0,0,0,[[],4],[[]],[[150,30],2],[[],2],[[],2],[[],18],[[]],0,[[]],[[]],[4],[4],[4],[[]],0,0,[[],4],[[]],[[151,30],2],0,[[],2],[[],2],[[],18],[[]],0,[[]],[[]],0,0,0,0,0,0,[4],[4],[4],[[]],0,0,[[],4],[[]],[[152,30],2],0,[[],2],[[],2],[[],18],[[]],0,[[]],[[]],[4],[4],[4],[[]],[[],4],[[]],0,0,[[153,30],2],0,[[],2],[[],2],[[],18],[[]]],"c":[],"p":[[4,"Error"],[4,"Result"],[3,"Command"],[15,"usize"],[4,"Cli"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Error"],[3,"ArgMatches"],[6,"Error"],[15,"str"],[15,"bool"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[4,"LogLevel"],[3,"SetGlobalDefaultError"],[3,"PossibleValue"],[3,"State"],[3,"Arc"],[3,"Router"],[3,"CorsLayer"],[3,"ErrorMessage"],[8,"Serialize"],[6,"Response"],[4,"SocketAddr"],[8,"Serializer"],[3,"PrometheusHandle"],[3,"Request"],[3,"Next"],[8,"IntoResponse"],[3,"FundWithNext"],[3,"SerdeType"],[8,"Deserializer"],[3,"LimitOffset"],[3,"EventId"],[3,"Path"],[3,"Event"],[3,"Query"],[3,"EventSummary"],[3,"Vec"],[3,"ObjectiveBallots"],[3,"Objective"],[3,"VotingStatus"],[3,"ProposalBallot"],[3,"Proposal"],[3,"ProposalSummary"],[3,"Ballot"],[3,"AdvisorReview"],[3,"ReviewType"],[3,"DelegationsQuery"],[3,"Delegator"],[3,"VotersQuery"],[3,"Voter"],[3,"SearchParam"],[3,"SearchQuery"],[3,"Json"],[3,"SearchResult"],[3,"Settings"],[3,"Id"],[8,"Clone"],[4,"SearchTable"],[3,"VoterGroupId"],[4,"SearchColumn"],[3,"SearchOrderBy"],[3,"ObjectiveId"],[3,"ProposalId"],[3,"SearchConstraint"],[8,"PartialEq"],[8,"Debug"],[15,"never"],[3,"OwnedFd"],[8,"IntoFilelike"],[8,"IntoSocketlike"],[3,"VotePlan"],[3,"BallotType"],[3,"Delegation"],[3,"Fund"],[3,"ObjectiveType"],[3,"EventGoal"],[3,"Group"],[3,"RewardAddress"],[3,"VoterInfo"],[3,"Voteplan"],[3,"ObjectiveChoices"],[3,"EventSchedule"],[3,"VoterGroup"],[3,"Challenge"],[3,"FundNextInfo"],[3,"VotingPowerSettings"],[3,"ChallengeHighlights"],[4,"VotingPowerAlgorithm"],[3,"ProposerDetails"],[3,"GroupVotePlans"],[3,"ProposalDetails"],[4,"ValueResults"],[3,"Goal"],[3,"FundStageDates"],[3,"EventDetails"],[3,"RewardDefintion"],[3,"EventRegistration"],[3,"ObjectiveSummary"],[3,"Rating"],[3,"ObjectiveDetails"],[3,"DateTime"],[3,"VotePlanSerde"],[3,"BallotSerde"],[3,"ProposalBallotSerde"],[3,"ObjectiveBallotsSerde"],[3,"EventSummarySerde"],[3,"VotingPowerSettingsSerde"],[3,"EventRegistrationSerde"],[3,"EventGoalSerde"],[3,"EventScheduleSerde"],[3,"EventDetailsSerde"],[3,"EventSerde"],[3,"ObjectiveTypeSerde"],[3,"ObjectiveSummarySerde"],[3,"RewardDefintionSerde"],[3,"VoterGroupSerde"],[3,"ObjectiveDetailsSerde"],[3,"ObjectiveSerde"],[3,"ProposalSummarySerde"],[3,"ProposerDetailsSerde"],[3,"ProposalDetailsSerde"],[3,"ProposalSerde"],[3,"VoterInfoSerde"],[3,"VoterSerde"],[3,"DelegationSerde"],[3,"RewardAddressSerde"],[3,"DelegatorSerde"],[3,"ReviewTypeSerde"],[3,"RatingSerde"],[3,"AdvisorReviewSerde"],[4,"SearchTableSerde"],[4,"SearchColumnSerde"],[3,"SearchConstraintSerde"],[3,"SearchOrderBySerde"],[3,"SearchQuerySerde"],[3,"SearchResultSerde"],[3,"ChallengeHighlightsSerde"],[3,"ChallengeSerde"],[3,"FundStageDatesSerde"],[3,"FundSerde"],[3,"FundNextInfoSerde"],[3,"FundWithNextSerde"],[3,"GoalSerde"],[3,"GroupSerde"],[3,"VoteplanSerde"],[3,"VotingStatusSerde"]]},\
"catalyst_toolbox":{"doc":"","t":"AAAAAAAAAAAAAAAAANENRNNDLLLLMMLLLLLLLLMLLLLLFLLLLLLLLMLMLLMLLLLLLLLLAGDNDNEGDMMMMLLLLALLLLLLLLMMMMMMLLMMMMMLLLLLLMMMMMLLLLLLMLLGDGDLMMMMLLLLLLLLLLLLLLLLMMMMMMLLLMMMMMLLLLLLLMMFLLLLLLLLLLLMLLWHIDHRMMLLFLLLLKLLLLAALMLLLLHHDLLLLLLLLLMLLMLLLLLRDMLLMLLLLLLLLLLLLLLDEDNNNRNGNGLLLLFFFMLLLLLLAFFFLLLLLLLLLMMFFLLLLLLLLAMMMMMMMMMMMLLLLLLLLLLLHHHHHHGGFFFFFAAADLLLLLLLLLLLLMMMMMMMMMMLLLLCCDCCDDDDDDAAMMLLLLLLLLLLLLLLMAMMCALLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDHDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDHDLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLMMMMMMMFLLLLLLLLMLLLLLLLLLLLLMMMMMLLLLMLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLMMMLLLLLLLLLLLLLLLLNEENNNNNNNNNDNENERENNDNNNNNLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLALLLLLLMLLLLLLLLLMALLLLLLLLLLLLLLLLLLLLLLLNNNNNDENNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNNLLFLLLLLLLLLLFLLLLLLLLLLLLAADDLLLLMMFLLLLLLMMLLLMMMLLLLLLLLLFMMLLLLLLMMLLRRRREHDNRDNNDRGDNNDDEDIDNNNMFFMMLLLLLLLLLLLLLLLLLLLLMKLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMLMFMKLLLLLLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMNNENNNNLLLLLLLLLLLLLLLLLLAAALLLLLLMMNDELLLLALLLLLLLLLLLLLLLLMLLLLLLLLLLDDEDDRRNENNGNLMMMMLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMLMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMADDLLLLLLLLLLFLLLLLLLLLLLLMMLLFMMLLLLLLLLFDDDDEDDNDDMLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLMFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFRNENNNNRDMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLFFMLFMLLLLLLLLLLENNNLLLLLLLLLLLLLLLLLFFLLLLLNNNNNDENMMMMAAHHNNENNHHDNEDNENNDNNLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNHHHHHHNNEDNNNNNHHHHHHNNNENDNNNNNNNDENNDNNMLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMFMLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMMFLMLLMMLLMMMFFLLLLLLLLLLLLLLLLLLLLLLLLFLFFLLLLLLLMMMMMEGNGDGLLLLFALLLLALLLLLLLLLLLLLLLLMMALLMLLLLLLAALLGDGNDCRNGDDEGCGMMMLLLLLLFFFLLLLLLFLLLMLLLLLAFMLLLLLLLLLFAMMMMMMMLLLLLLLLLLLLMMMMMMDDLMLLLLLLLLLLLLLMLLMLLLLLLMMLLMMLLLLLLLLLGGGFENNLLFLLLFLLLLLLLLLLLLLLNHHHHHHHHDNNERNHHHHHHHHRNNEENDDRNEMMMMMLLFFFFFMMMMLLLMMFFFLMLMLLAMMMMMMMMMMMFMMFMMMLLLAAMLMGFFFFNDNNENNNEENDNEMMLLMOLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLLLLLLLLMMMMMMMMMMMMLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLMHHFFGGDLLFFFLLFLLLLLMMLLLLLRENNNGNFLLFFLLLFLLLLLLLLLFLLLLLNNNNNENNNNNNALLLLALLLLLLLLLLLLLLLLLLLLALALLLLLALEEDNNNNNNAFFAMEDNNNNFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLEDNNDLLLLLLMMLLLLLLLFLLLLLLLLMLLLLLLLLLLLLLLLLFFMLMLMLLLLLLLLLLLLLLENDDLLLLLLLLMMLLLLLLLLLLLLFLLLLLLLLLLLLLLFLLLLLLMLLLLLLLLLLLLEDNNNNDLLLLLMMMLLLLLLLALLLMLLMAMLMALFMLLLLLDDLLLLLLLLLLMLLLLLLLLLLLLLMMMMLMLLLLLLMLLFDLLLLLMMLLMLLMLMLLLLLFFFFFFFFFENDLMLMLMLLLLLMLLMLLLLLLLLMLLLLLLLLLLLLLLLMLMLMLLMLLLMLLLLLLLLAAADNNNNEMMMLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMMLLLLLLLMMLLLLLLLLLLLLDLLLLLLLLLLLLMLLLMMLMLLLLLDDDDLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLMLLLLRFAFAFFFFNNELLLLLLLLLLLLLLLFLLLLLLDENNNRNNNNNLLLLLLLLLLLLALLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMDLLLLLLLLLLALLLLGGGGRRDDDDDRMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLL","n":["archive","community_advisors","http","ideascale","kedqr","logs","notifications","proposal_score","recovery","rewards","stats","testing","types","utils","vca_reviews","vote_check","node","Csv","Error","Io","MAIN_TAG","Storage","UnhandledInput","Vote","borrow","borrow","borrow_mut","borrow_mut","caster","choice","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fragment_id","from","from","from","from","from","generate_archive_files","header","in_current_span","init","init","into","into","into_request","into_request","proposal","provide","raw_fragment","serialize","source","time","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","models","AdvisorReviewId","AdvisorReviewRow","Approved","ApprovedProposalRow","NotApproved","ProposalStatus","VeteranAdvisorId","VeteranRankingRow","assessor","assessor","auditability_note","auditability_rating","borrow","borrow","borrow_mut","borrow_mut","de","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","excellent","excellent","feasibility_note","feasibility_rating","filtered_out","filtered_out","from","from","good","good","idea_url","impact_alignment_note","impact_alignment_rating","init","init","into","into","into_request","into_request","proposal_id","proposal_id","proposal_id","requested_dollars","status","try_from","try_from","try_into","try_into","type_id","type_id","vca","vzip","vzip","AdvisorReviewId","AdvisorReviewRow","VeteranAdvisorId","VeteranRankingRow","as_advisor_review","assessor","assessor","auditability_note","auditability_rating","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","excellent","excellent","feasibility_note","feasibility_rating","filtered_out","filtered_out","fmt","from","from","good","good","idea_url","impact_alignment_note","impact_alignment_rating","init","init","into","into","into_request","into_request","new","proposal_id","proposal_id","ranking_mux","review_id","score","score","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vca","vzip","vzip","","CALLSITE","HttpClient","HttpResponse","META","RATE_LIMIT_ENV_VAR","_marker","body","borrow","borrow_mut","default_http_client","deref","deref_mut","drop","from","get","init","into","into_request","json","rate_limit","reqwest","status","status","try_from","try_into","type_id","vzip","CALLSITE","META","RateLimitClient","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","get","init","inner","into","into_request","limiter","new","try_from","try_into","type_id","vzip","BASE_IDEASCALE_URL","ReqwestClient","base_url","borrow","borrow_mut","client","deref","deref_mut","drop","fmt","from","get","init","into","into_request","new","try_from","try_into","type_id","vzip","CustomFieldTags","Error","IdeaScaleData","InvalidToken","Join","Other","PROCESS_IMPROVEMENTS_ID","Regex","Scores","Serde","Sponsors","borrow","borrow","borrow_mut","borrow_mut","build_challenges","build_fund","build_proposals","challenges","deref","deref","deref_mut","deref_mut","drop","drop","fetch","fetch_all","filter_proposal_by_stage_type","filter_stages","fmt","fmt","fmt","from","from","from","from","from","from","fund","funnels","get_from_extra_fields","get_from_extra_fields_options","header","in_current_span","init","init","into","into","into_request","into_request","models","proposal_brief","proposal_funds","proposal_goal","proposal_importance","proposal_metrics","proposal_public_key","proposal_relevant_experience","proposal_solution","proposal_why","proposals","proposer_url","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","META","META","META","Scores","Sponsors","get_funds_data","get_funnels_data_for_fund","get_proposals_data","get_stages","is_token_valid","custom_fields","de","se","CustomFieldTags","borrow","borrow_mut","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","proposal_brief","proposal_funds","proposal_goal","proposal_importance","proposal_metrics","proposal_public_key","proposal_relevant_experience","proposal_solution","proposal_why","proposer_url","try_from","try_into","type_id","vzip","AdaRewards","Approval","Challenge","ChallengeTitle","CleanString","Fund","Funnel","Proposal","ProposalCustomFieldsByKey","Proposer","Stage","ada_rewards","approval","approved","assessment_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge_id","challenge_title","challenge_url","challenges","clean_str","clean_string","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contact","custom_fields","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","fund_id","funnel_id","funnel_id","id","id","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_community","label","name","name","proposal_category","proposal_files_url","proposal_id","proposal_summary","proposal_title","proposal_url","proposer","rewards","stage_id","stage_type","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AdaRewards","REGEX","V","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","expecting","fmt","fmt","fmt","from","from","from","header","init","init","into","into","into_request","into_request","partial_cmp","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","visit_str","vzip","vzip","Approval","Approved","NotApproved","V","as_bool","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","expecting","fmt","fmt","from","from","from","init","init","into","into","into_request","into_request","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","visit_str","vzip","vzip","ChallengeTitle","V","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","expecting","fmt","fmt","from","from","init","init","into","into","into_request","into_request","into_resettable","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","visit_str","vzip","vzip","CleanString","REGEX","V","as_ref","borrow","borrow","borrow_mut","borrow_mut","clean_str","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","expecting","fmt","fmt","from","from","from","from","init","init","into","into","into_request","into_request","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","visit_str","vzip","vzip","Challenge","Fund","Highlight","Proposal","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category_name","chain_vote_options","chain_vote_type","challenge_id","challenge_type","challenge_type","challenge_url","default_vote_options","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","fund_id","goal","highlight","id","id","init","init","init","init","internal_id","into","into","into","into","into_request","into_request","into_request","into_request","proposal_brief","proposal_funds","proposal_goal","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_solution","proposal_summary","proposal_title","proposal_url","proposer_email","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","rewards_info","rewards_total","serialize","serialize","serialize","serialize","sponsor","threshold","title","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BadPin","BadPinError","Error","FromFileName","Global","HexDecode","HexDecodeError","Image","InvalidDigit","InvalidLength","Io","Io","KeyQrCode","KeyQrCode","KeyQrCodeError","KeyQrCodeHash","KeyQrCodePayloadError","PIN_LENGTH","PinReadMode","QrCodeHashError","QrDecodeError","QrPin","SecretKey","SecretKey","SymmetricCipher","SymmetricCipher","UnableToDetectFileName","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decode","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","from_str","generate","header","header","img","in_current_span","in_current_span","init","init","init","init","inner","into","into","into","into","into_qr_pin","into_request","into_request","into_request","into_request","password","payload","provide","provide","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DecodeError","ExtractError","HexDecodeError","Image","Io","KeyQrCode","KeyQrCodeError","NonUtf8Payload","QrCodeHashError","QrDecodeError","QrDecodeError","SecretKey","SymmetricCipher","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decode","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","generate","header","header","header","in_current_span","in_current_span","init","init","init","inner","into","into","into","into_request","into_request","into_request","provide","provide","source","source","to_img","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_svg","Error","HexDecode","Io","SecretKey","SymmetricCipher","borrow","borrow_mut","decode","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","generate","header","in_current_span","init","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","compare","sentry","LogCmpFields","LogCmpStats","borrow","borrow","borrow_mut","borrow_mut","chain_proposal_index","choice","compare_logs","deref","deref","deref_mut","deref_mut","drop","drop","duplicated_fragment_logs","duplicated_sentry_logs","eq","equivalent","fmt","fragment_id","fragment_ids_differ","fragment_logs_size","from","from","from","init","init","into","into","into_request","into_request","persistent_fragment_log_to_log_cmp_fields","public_key","sentry_logs_size","try_from","try_from","try_into","try_into","type_id","type_id","unhandled_fragment_logs","voteplan_id","vzip","vzip","ARR_LEN","CONCATP_NHPMWYD3NJA","CONCAT_ARR","CONCAT_STR","Error","LAZY","LazySentryLogs","LogParseError","MALFORMED_QR_MESSAGE","MalformedQr","MalformedQr","NotVoteCastTransaction","REGEX","REGISTERED_MESSAGE","RawLog","RegexMatch","RegexMatch","RequestError","SentryFragmentLog","SentryLogClient","SentryLogsStatChecker","SentryLogsStatsExecutor","Stat","SuccessfulScan","SuccessfulScans","UrlParseError","ValidationError","__private_field","__stability","__static_ref_initialize","api_url","auth_token","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_index","check_raw_log","check_raw_log","check_raw_log","check_raw_log","check_raw_log","check_raw_log","choice","chunk_size","client","client","clone","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fragment_id","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","get_json_logs","get_json_logs_chunks","get_raw_logs","header","header","in_current_span","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","matches","new","new","new","new","new","new","process_raw_logs","proposal_index","provide","public_key","raw_log_message_starts_with","re","report","report","report","report","report","report","source","spending_counter","to_owned","to_string","to_string","total","total","total_checked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voteplan_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","fragment_id","BadDataSent","CreateMessageError","Error","FileError","RequestError","SerdeError","UnsuccessfulRequest","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","header","in_current_span","init","into","into_request","provide","requests","responses","send","source","to_string","try_from","try_into","type_id","vzip","request","response","CreateMessageRequest","Request","RequestData","borrow","borrow","borrow_mut","borrow_mut","create_message","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","from","from","init","init","into","into","into_request","into_request","new","request","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ContentSettings","ContentSettingsBuilder","ContentType","CreateMessage","CreateMessageBuilder","DATETIME_FMT","DESCRIPTION","EmptyContentSettingsError","Error","MissingFieldOnBuilderError","MultiLanguage","MultiLanguageContent","Plain","add_content_settings","application","application","auth","auth","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","campaign","campaign","content","content","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","filter","filter","fmt","fmt","from","from","from","from","from","from","header","ignore_user_timezones","ignore_user_timezones","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","new","new","notifications","notifications","provide","send_date","send_date","serialize","serialize","serialize","timezone","timezone","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","with_application","with_auth","with_campaign","with_content","with_filter","with_ignore_user_timezones","with_multi_content","with_plain_content","with_send_date","with_timezone","field_name","object_name","create_message","CreateMessageResponse","InnerResponse","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize_status_code","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","messages","response","serialize","serialize","serialize_status_code","status_code","status_message","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","send_create_message","AlignmentReviews","AlignmentScore","AuditabilityReviews","AuditabilityScore","Error","FeasibilityReviews","FeasibilityScore","InvalidWeights","ProposalId","Review","allocated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc_score","cmp","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_hash","hash","header","in_current_span","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","load","partial_cmp","provide","rating","review_weight","store","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weighted_avarage_score","ALLOCATED_TYPE","Csv","Error","IO","InvalidProposalData","InvalidReviewType","Json","NOT_ALLOCATED_TYPE","ReviewsRow","alignment_rating","auditability_rating","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","feasibility_rating","fmt","fmt","fmt","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","load_proposals_from_json","load_reviews_from_csv","proposal_id","provide","retrieve_proposal_id","review_type","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","IO","InvalidProposalData","Json","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","header","in_current_span","init","into","into_request","provide","source","store_proposals_into_file","store_score_into_proposal","to_string","try_from","try_into","type_id","vzip","Io","OutputFile","OutputFormat","PersistenLogsLoading","Recovery","Replay","ReplayError","Serialization","block0","logs_path","output","output_format","replay","tally","CALLSITE","CALLSITE","CannotOpen","CustomFormattingFailed","Error","Io","JsonFormattingFailed","META","META","OutputFile","OutputFile","OutputFileError","OutputFormat","OutputFormat","OutputFormatError","PersistenLogsLoading","Recovery","Replay","Serialization","YamlFormattingFailed","augment_args","augment_args","augment_args_for_update","augment_args_for_update","block0","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_json","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","header","header","header","in_current_span","in_current_span","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","logs_path","new","open","output","output","output_format","provide","provide","provide","source","source","source","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","cause","path","AccountNotFound","Block0ConfigurationError","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DeserializeError","DuplicatedFragment","Error","FragmentReplayer","InvalidTransactionSignature","InvalidUtxoInputs","InvalidUtxoWitnesses","InvalidVoteCast","LedgerError","META","META","META","META","META","META","NonVotingAccount","NotAVotingFragment","NotAVotingFragment","ReplayError","ReplayError","ReplayedFragment","TallyPeriodError","TransactionBeforeStart","TransactionValidForTooLong","TxBuilderError","UnbalancedTransaction","UnsupportedMultipleOutputs","UnsupportedPrivateVotes","ValidatedFragment","ValidationError","ValidationError","ValueError","VoteFragmentFilter","VotingPeriodError","WalletError","block0","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","committee_id_to_address","confirm_fragment","deconstruct_account_transaction","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","era","fees","fmt","fmt","fmt","fmt","fmt","fmt","fragment","fragment_log_timestamp_to_blockdate","fragments","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_block0","header","header","header","in_current_span","in_current_span","in_current_span","increment_ledger_time_up_to","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","next","non_voting_wallets","original","pending_requests","progress_with","provide","provide","provide","range_check","recorded_date","recover_ledger_from_logs","replay","replay_protection","replay_tx","replay_votecast","replayed","settings","source","source","spending_counter","spending_counters","timeframe","timeframe_from_block0_start_and_slot_duration","timestamp_to_system_time","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_vote_cast","validate_tx","verify_original_tx","voteplans_from_block0","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallets","id","id","id","range","Error","Funds","InvalidHash","Rewards","Threshold","VoteCount","borrow","borrow","borrow_mut","borrow_mut","chain_proposal_id_bytes","community_advisors","deref","deref","deref_mut","deref_mut","dreps","drop","drop","filter","fmt","fmt","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","per_challenge","proposals_per_challenge","proposers","provide","to_string","total","try_from","try_from","try_into","try_into","type_id","type_id","veterans","voters","vzip","vzip","ApprovedProposals","CaRewards","CommunityAdvisor","Fund7","FundSetting","Funds","LEGACY_MAX_WINNING_TICKETS","Legacy","ProposalId","ProposalRewardSlots","ProposalRewards","ProposalTickets","ProposalsReviews","Rewards","Seed","base_ticket_reward","bonus_ratio","bonus_rewards","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_ca_rewards","calculate_ca_rewards_for_proposal","calculate_rewards_per_proposal","deref","deref","deref","deref_mut","deref_mut","deref_mut","double_lottery","drop","drop","drop","excellent_slots","fmt","fmt","from","from","from","funding","get_tickets_per_proposal","good_slots","init","init","init","into","into","into","into_request","into_request","into_request","load_tickets_from_reviews","lottery","max_excellent_reviews","max_good_reviews","per_ticket_reward","proposal_ratio","rewards","tickets","total","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","eligible_assessors","excellent_tkts","excellent_winning_tkts","good_tkts","good_winning_tkts","winning_tkts","FundSetting","ProposalRewardSlots","bonus_funds","bonus_ratio","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","excellent_slots","from","from","good_slots","init","init","into","into","into_request","into_request","max_excellent_reviews","max_good_reviews","max_winning_tickets","proposal_funds","proposal_ratio","total","total_funds","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CasWinnings","TicketsDistribution","TotalTickets","lottery_distribution","Error","MultipleEntries","Overflow","borrow","borrow_mut","calc_dreps_rewards","deref","deref_mut","drop","filter_requirements","fmt","fmt","from","header","in_current_span","init","into","into_request","provide","to_string","try_from","try_into","type_id","vzip","ApprovalThreshold","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Calculation","Csv","Funded","FundedStatus","INVALID_CHAIN_ID_UTF8_MSG","Json","META","META","META","META","META","META","META","META","NO","No","NotFunded","NotFundedReason","OutputFormat","OverBudget","ProposerRewards","ProposerRewardsInputs","YES","Yes","YesNo","active_voteplans","approval_threshold","approval_threshold","block0","block0_config","borrow","borrow_mut","build_path_for_challenge","calculate_approval_threshold","calculate_results","calculate_total_stake_from_block0","calculate_vote_difference_and_threshold_success","challenges","challenges","committee_keys","committee_keys","deref","deref_mut","drop","excluded_proposals","excluded_proposals","extract_yes_no_votes","filter_data_by_challenge","filter_excluded_proposals","from","fund_depletion","init","internal_id","into","into_request","io","link_to_ideascale","meets_approval_threshold","no","not_funded_reason","output","output_format","overall_score","proposal","proposal_id","proposals","proposals","proposer_rewards","requested_dollars","result","sanity_check_data","status","total_stake_threshold","total_stake_threshold","try_from","try_into","type_id","types","util","voteplans","vzip","yes","CleanedVitSSData","vecs_to_maps","write_csv","write_json","write_results","ApprovalThreshold","Calculation","Csv","Funded","FundedStatus","Json","No","NotFunded","NotFundedReason","OutputFormat","OverBudget","ProposerRewards","Yes","YesNo","active_voteplans","approval_threshold","augment_args","augment_args_for_update","block0","bool_enum","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenges","clone","clone_into","command","command_for_update","committee_keys","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","excluded_proposals","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_str","fund_depletion","group_id","init","init","init","init","init","init","internal_id","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","link_to_ideascale","meets_approval_threshold","no","not_funded_reason","output","output_format","overall_score","proposal","proposal_id","proposals","requested_dollars","result","serialize","serialize","serialize","serialize","status","to_owned","total_stake_threshold","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","yes","REMOVE_REGEX","REPLACE_UNDERSCORE_REGEX","build_path_for_challenge","sanitize_name","EligibilityThresholds","VcaRewards","VeteranAdvisorIncentive","borrow","borrow_mut","calc_final_eligible_rankings","calc_final_ranking_per_review","calculate_veteran_advisors_incentives","deref","deref_mut","disagreement_modifier","drop","from","init","into","into_request","reputation","rewards","serialize","try_from","try_into","type_id","vzip","ADA_TO_LOVELACE_FACTOR","Error","InvalidHash","MultipleEntries","Overflow","Rewards","UnknownVoterGroup","account_hex_to_address","borrow","borrow_mut","calc_voter_rewards","calculate_reward","deref","deref_mut","drop","filter_active_addresses","fmt","fmt","from","header","in_current_span","init","into","into_request","provide","rewards_to_mainnet_addresses","to_string","try_from","try_into","type_id","vzip","ArchiveCalculator","ArchiveReader","Bech32","Block0Parse","Csv","Error","GetBlock0","Io","Live","Read","Reqwest","Serde","archive","borrow","borrow_mut","deref","deref_mut","distribution","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","into","into_request","live","provide","snapshot","source","to_string","try_from","try_into","type_id","voters","vzip","ArchiveCalculatorError","ArchiveReaderError","ArchiveStats","BlockDateParse","Csv","Csv","EmptyResult","General","General","calculator","load_from_csv","load_from_folder","loader","records","ArchiveCalculatorError","ArchiveStats","BlockDateParse","Csv","EmptyResult","General","are_equal_or_adjacent","borrow","borrow","borrow_mut","borrow_mut","calculate_distribution","deref","deref","deref_mut","deref_mut","distinct_casters","drop","drop","fmt","fmt","from","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","max_batch_size_per_caster","number_of_tx_per_slot","number_of_votes_per_caster","provide","records","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArchiveReaderError","ArchiverRecord","Csv","General","VoteOptionsDeserializer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","caster","choice","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_block_date_from_float","drop","drop","drop","expecting","fmt","fmt","fmt","fmt","fragment_id","from","from","from","from","from","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","load_from_csv","load_from_folder","proposal","provide","raw_fragment","source","time","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visit_f64","vzip","vzip","vzip","Error","InvalidThreshold","Record","Stats","add","add_with_weight","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","content","count","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","format_big_number","from","from","from","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","levels","new","new_with_levels","print_ada_per_level","print_count_per_level","provide","to_string","total","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Error","Harvester","Io","Reqwest","Rest","Serde","Settings","borrow","borrow_mut","deref","deref_mut","drop","duration","endpoint","endpoint","fmt","fmt","from","from","from","from","from","harvester","header","in_current_span","init","interval","into","into_request","logger","monitor","progress","provide","rest","settings","source","start","timeout","to_string","try_from","try_into","type_id","vzip","Harvester","Snapshot","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","endpoint","entry","fragment_logs","from","from","harvest","header","init","init","into","into","into_request","into_request","new","pending","rest","timeout","timestamp","to_console_output","total_tx","try_from","try_from","try_into","try_into","type_id","type_id","votes_count","vzip","vzip","start","Settings","borrow","borrow_mut","deref","deref_mut","drop","duration","endpoint","from","init","interval","into","into_request","logger","monitor","progress","progress_bar_mode","try_from","try_into","type_id","vzip","read_initials","read_initials_from_file","addr_to_id","blacklist_addresses","calculate_active_wallet_distribution","calculate_wallet_distribution","calculate_wallet_distribution_from_initials","calculate_wallet_distribution_from_initials_utxo","vote_counts_as_utxo","Error","Io","ProposerRewardsCommand","active_voteplan_path","active_voteplan_path","approval_threshold","approval_threshold","block0_path","block0_path","borrow","borrow","borrow_mut","borrow_mut","challenges_path","challenges_path","cmd","committee_keys_path","committee_keys_path","default","deref","deref","deref_mut","deref_mut","drop","drop","excluded_proposals_path","excluded_proposals_path","fmt","fmt","fmt","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","output_file","output_file","output_format","output_format","proposals_path","proposals_path","provide","python_exec","python_exec","source","to_string","total_stake_threshold","total_stake_threshold","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","advisor_review","challenge","proposal","AdvisorReview","Excellent","FilteredOut","Good","NotReviewedByVCA","ReviewRanking","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","feasibility_note","feasibility_rating_given","fmt","fmt","from","from","get_hash","hash","id","impact_alignment_note","impact_alignment_rating_given","init","init","into","into","into_request","into_request","is_positive","proposal_id","ranking","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Challenge","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","id","init","into","into_request","proposers_rewards","rewards_total","serialize","title","to_owned","try_from","try_into","type_id","vzip","FullProposalInfo","Proposal","ProposalVotePlanCommon","VoteOptions","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_id","chain_proposal_index","chain_vote_options","chain_voteplan_id","challenge_id","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","group_id","init","init","init","init","internal_id","into","into","into","into","into_request","into_request","into_request","into_request","proposal","proposal_funds","proposal_id","proposal_impact_score","proposal_title","proposal_url","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","voteplan","vzip","vzip","vzip","vzip","DEFAULT_DECIMAL_PRECISION","assert_are_close","csv","json_from_file","serde","dump_data_to_csv","dump_to_csv_or_print","load_data_from_csv","deserialize_truthy_falsy","CouldNotReadCsv","CouldntParseTag","Error","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","header","in_current_span","init","into","into_request","provide","read_vca_reviews_aggregated_file","source","to_string","try_from","try_into","type_id","vzip","CheckNode","Error","ErrorInLogs","Explorer","Io","JORMUNGANDR_APP","Json","NodeStartup","Rest","ResultsDoNotMatch","TransactionNotOnChain","active_vote_plans","borrow","borrow","borrow_mut","borrow_mut","check_transactions_on_chain","deref","deref","deref_mut","deref_mut","drop","drop","explorer","fmt","fmt","from","from","from","from","from","from","from","from","header","in_current_span","init","init","inner","into","into","into_request","into_request","provide","source","spawn","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","actual","expected","TransactionById","borrow","borrow_mut","build_query","deref","deref_mut","drop","from","init","into","into_request","transaction_by_id","try_from","try_into","type_id","vzip","Boolean","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","TransactionByIdTransaction","TransactionByIdTransactionBlocks","TransactionByIdTransactionBlocksBranches","Variables","__QUERY_WORKAROUND","blocks","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","id","id","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","serialize","transaction","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"catalyst_toolbox"],[16,"catalyst_toolbox::archive"],[17,"catalyst_toolbox::archive::node"],[68,"catalyst_toolbox::community_advisors"],[69,"catalyst_toolbox::community_advisors::models"],[127,"catalyst_toolbox::community_advisors::models::de"],[190,"catalyst_toolbox::http"],[218,"catalyst_toolbox::http::rate_limit"],[239,"catalyst_toolbox::http::reqwest"],[259,"catalyst_toolbox::ideascale"],[332,"catalyst_toolbox::ideascale::fetch"],[345,"catalyst_toolbox::ideascale::models"],[348,"catalyst_toolbox::ideascale::models::custom_fields"],[375,"catalyst_toolbox::ideascale::models::de"],[549,"catalyst_toolbox::ideascale::models::de::ada_rewards"],[594,"catalyst_toolbox::ideascale::models::de::approval"],[636,"catalyst_toolbox::ideascale::models::de::challenge_title"],[677,"catalyst_toolbox::ideascale::models::de::clean_string"],[721,"catalyst_toolbox::ideascale::models::se"],[821,"catalyst_toolbox::kedqr"],[935,"catalyst_toolbox::kedqr::img"],[1018,"catalyst_toolbox::kedqr::payload"],[1049,"catalyst_toolbox::logs"],[1051,"catalyst_toolbox::logs::compare"],[1096,"catalyst_toolbox::logs::sentry"],[1320,"catalyst_toolbox::logs::sentry::Error"],[1321,"catalyst_toolbox::notifications"],[1355,"catalyst_toolbox::notifications::Error"],[1357,"catalyst_toolbox::notifications::requests"],[1392,"catalyst_toolbox::notifications::requests::create_message"],[1530,"catalyst_toolbox::notifications::requests::create_message::Error"],[1532,"catalyst_toolbox::notifications::responses"],[1533,"catalyst_toolbox::notifications::responses::create_message"],[1573,"catalyst_toolbox::notifications::send"],[1574,"catalyst_toolbox::proposal_score"],[1725,"catalyst_toolbox::proposal_score::load"],[1780,"catalyst_toolbox::proposal_score::store"],[1808,"catalyst_toolbox::recovery"],[1822,"catalyst_toolbox::recovery::replay"],[1980,"catalyst_toolbox::recovery::replay::OutputFileError"],[1982,"catalyst_toolbox::recovery::tally"],[2182,"catalyst_toolbox::recovery::tally::ReplayError"],[2183,"catalyst_toolbox::recovery::tally::ValidationError"],[2186,"catalyst_toolbox::rewards"],[2235,"catalyst_toolbox::rewards::community_advisors"],[2311,"catalyst_toolbox::rewards::community_advisors::ProposalTickets"],[2317,"catalyst_toolbox::rewards::community_advisors::funding"],[2359,"catalyst_toolbox::rewards::community_advisors::lottery"],[2363,"catalyst_toolbox::rewards::dreps"],[2387,"catalyst_toolbox::rewards::proposers"],[2478,"catalyst_toolbox::rewards::proposers::io"],[2483,"catalyst_toolbox::rewards::proposers::types"],[2627,"catalyst_toolbox::rewards::proposers::util"],[2631,"catalyst_toolbox::rewards::veterans"],[2654,"catalyst_toolbox::rewards::voters"],[2685,"catalyst_toolbox::stats"],[2733,"catalyst_toolbox::stats::archive"],[2747,"catalyst_toolbox::stats::archive::calculator"],[2797,"catalyst_toolbox::stats::archive::loader"],[2864,"catalyst_toolbox::stats::distribution"],[2925,"catalyst_toolbox::stats::live"],[2968,"catalyst_toolbox::stats::live::harvester"],[3009,"catalyst_toolbox::stats::live::monitor"],[3010,"catalyst_toolbox::stats::live::settings"],[3031,"catalyst_toolbox::stats::snapshot"],[3033,"catalyst_toolbox::stats::voters"],[3040,"catalyst_toolbox::testing"],[3102,"catalyst_toolbox::types"],[3105,"catalyst_toolbox::types::advisor_review"],[3166,"catalyst_toolbox::types::challenge"],[3192,"catalyst_toolbox::types::proposal"],[3295,"catalyst_toolbox::utils"],[3300,"catalyst_toolbox::utils::csv"],[3303,"catalyst_toolbox::utils::serde"],[3304,"catalyst_toolbox::vca_reviews"],[3329,"catalyst_toolbox::vote_check"],[3384,"catalyst_toolbox::vote_check::Error"],[3386,"catalyst_toolbox::vote_check::explorer"],[3402,"catalyst_toolbox::vote_check::explorer::transaction_by_id"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","(Proposal Id, Assessor Id), an assessor cannot assess the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","(Proposal Id, Assessor Id), an assessor cannot assess the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Types which can make HTTP requests","A value returned from a HTTP method","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","we test token by running lightweight query and observe …","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","A newtype wrapper around <code>String</code>","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pushwoosh application code","","API access token from Pushwoosh Control Panel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Push notifications properties","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weighted average score calculation","","","","","","","","","Represents a cvs’s row, as an example of csv file in …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Recover the tally from fragment log files and the initial …","","","","Path to the folder containing the log files used for the …","","","","","","","","","","","","","","","","","","","","","","Recover the tally from fragment log files and the initial …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Path to the folder containing the log files used for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check that the transaction input/outputs/witnesses is …","","","","","","","","","","","","","","","","","","","","","","","","","","Convert a slice of bytes that represent a valid …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","returns (yes, no)","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Method return max batch size calculated as biggest …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Wrapper over proposers rewards scripts. It uses script …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Wrapper that exposes the functionalities of the node used …","","","","","","","","","","","","","","","","Check that all transactions are present on the main chain …","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,2,0,2,16,2,16,16,16,2,16,2,16,2,16,2,2,16,2,2,2,2,16,0,2,2,2,16,2,16,2,16,16,2,16,16,2,16,2,2,16,2,16,2,16,2,16,0,0,0,23,0,23,0,0,0,25,27,25,25,23,24,23,24,0,23,24,23,24,23,24,23,24,25,27,25,25,25,27,23,24,25,27,25,25,25,23,24,23,24,23,24,25,27,24,24,24,23,24,23,24,23,24,27,23,24,0,0,0,0,25,25,27,25,25,25,27,25,27,27,27,25,27,25,27,25,27,25,27,27,27,25,27,25,25,25,27,27,25,27,25,27,25,25,25,25,27,25,27,25,27,27,25,27,0,27,25,27,27,27,25,27,25,27,25,27,27,25,27,0,0,0,0,0,0,35,35,35,35,0,35,35,35,35,33,35,35,35,35,0,0,35,35,35,35,35,35,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,56,56,56,0,56,0,56,0,56,44,56,44,0,0,0,44,56,44,56,44,56,44,0,0,0,0,56,56,44,56,56,56,56,56,44,44,44,0,0,56,56,56,44,56,44,56,44,0,53,53,53,53,53,53,53,53,53,44,53,56,56,56,56,44,56,44,56,44,56,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,0,0,0,0,0,0,0,0,65,58,66,64,63,65,67,68,58,66,64,63,65,67,68,58,65,0,66,63,0,0,66,64,63,65,67,68,58,66,64,63,65,67,68,58,67,65,66,64,63,65,67,68,58,66,64,63,65,67,68,58,66,64,66,64,63,65,67,68,58,66,64,63,65,67,68,58,68,66,64,63,65,67,68,58,66,64,63,65,67,68,58,66,66,58,66,64,63,66,64,63,65,67,68,58,66,64,63,65,67,68,58,66,64,63,65,67,68,58,64,58,63,67,65,65,65,65,65,65,65,66,65,65,66,64,66,64,63,65,67,68,58,66,64,63,65,67,68,58,66,64,63,65,67,68,58,66,64,63,65,67,68,58,66,64,63,65,67,68,58,0,0,0,71,69,71,69,69,69,69,71,69,71,69,69,71,69,69,69,71,71,69,69,71,69,69,69,71,69,71,69,71,69,69,69,69,71,69,71,69,71,69,71,71,69,0,74,74,0,74,75,74,75,74,74,74,75,74,75,74,74,75,74,74,74,75,75,74,75,74,74,75,74,75,74,75,74,74,75,74,75,74,75,74,75,75,74,0,0,76,77,76,77,76,76,76,77,76,77,76,76,77,76,76,76,77,77,76,77,76,77,76,77,76,77,76,76,76,76,77,76,77,76,77,76,77,77,76,0,0,0,79,80,79,80,79,0,79,79,80,79,80,79,79,80,79,79,79,80,80,79,80,79,79,79,80,79,80,79,80,79,79,79,80,79,80,79,80,79,80,80,79,0,0,0,0,47,81,50,54,47,81,50,54,54,54,54,54,47,54,47,0,47,81,50,54,47,81,50,54,47,47,81,50,54,47,81,50,54,47,81,50,54,47,50,47,47,50,47,81,50,54,54,47,81,50,54,47,81,50,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,47,50,47,47,81,50,54,81,50,47,47,81,50,54,47,81,50,54,47,81,50,54,47,81,50,54,88,0,0,83,83,87,90,90,89,89,90,87,0,88,0,88,0,0,0,90,90,0,90,87,90,87,89,82,88,89,83,82,88,89,83,82,83,82,83,0,82,88,89,83,82,88,89,83,82,88,89,83,82,82,82,88,88,89,89,83,82,88,88,88,88,89,83,82,82,0,88,89,0,88,89,82,88,89,83,92,82,88,89,83,83,82,88,89,83,82,0,88,89,88,82,83,88,89,82,88,89,83,82,88,89,83,82,88,89,83,82,88,89,83,93,93,90,90,90,0,0,93,90,0,90,90,90,92,90,93,92,90,93,92,92,90,93,92,90,93,92,90,93,92,90,90,93,93,92,90,90,90,90,90,90,90,90,93,93,93,92,92,90,93,90,93,92,90,93,92,92,90,93,92,90,93,90,93,90,93,92,92,90,93,92,90,93,92,90,93,92,90,93,92,90,93,92,0,87,87,87,87,87,87,0,87,87,87,87,87,87,87,87,87,87,0,87,87,87,87,87,87,87,87,87,87,87,87,0,0,0,0,104,105,104,105,105,105,0,104,105,104,105,104,105,104,104,105,105,105,105,104,104,104,105,105,104,105,104,105,104,105,0,105,104,104,105,104,105,104,105,104,105,104,105,0,0,0,0,0,0,0,108,0,0,111,108,0,0,0,0,111,108,0,0,0,0,0,0,111,108,108,115,0,0,119,119,119,120,110,111,112,108,113,114,106,115,119,120,110,111,112,108,113,114,106,115,106,299,110,111,112,113,114,106,120,119,120,106,106,113,114,119,120,110,111,112,108,113,114,106,115,115,119,120,110,111,112,108,113,114,106,115,119,120,110,111,112,108,113,114,106,115,112,108,108,106,106,119,120,110,111,112,108,108,108,108,113,114,106,115,106,106,119,119,119,112,108,108,119,120,110,111,112,108,113,114,106,115,119,120,110,111,112,108,113,114,106,115,120,119,120,110,111,112,108,113,114,106,115,110,110,119,120,110,112,113,114,299,106,108,106,0,110,299,110,111,112,113,114,108,106,106,112,108,113,114,110,119,120,110,111,112,108,113,114,106,115,119,120,110,111,112,108,113,114,106,115,119,120,110,111,112,108,113,114,106,115,106,119,120,110,111,112,108,113,114,106,115,300,123,123,0,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,0,0,0,123,123,123,123,123,123,301,302,125,0,0,125,126,125,126,0,125,126,125,126,125,125,126,125,126,125,126,125,126,125,126,126,126,125,126,125,126,125,126,125,126,125,126,0,0,0,0,0,0,0,124,0,124,131,0,131,127,130,127,130,127,129,124,131,128,130,127,129,124,131,128,130,127,129,127,129,128,129,128,129,127,129,124,131,128,130,127,129,124,131,128,130,127,131,128,130,129,124,131,128,130,127,129,128,124,124,129,124,131,128,130,127,124,129,128,124,129,124,131,128,130,127,129,124,131,128,130,127,129,124,131,128,130,127,129,127,130,127,124,129,128,131,128,130,129,128,124,129,124,131,128,130,127,129,124,131,128,130,127,129,124,131,128,130,127,129,124,131,128,130,127,127,127,129,129,129,129,129,129,129,129,303,303,0,0,0,134,135,134,135,134,135,134,135,134,135,0,134,135,134,135,134,135,134,135,134,135,134,135,134,135,134,135,0,135,135,134,135,134,135,134,135,134,135,0,0,0,0,0,0,0,0,140,0,0,142,146,147,148,141,137,138,139,140,142,146,147,148,141,137,138,139,140,142,0,141,146,147,148,141,137,138,139,140,142,146,147,148,141,137,138,139,140,142,146,147,148,141,137,138,139,140,142,141,141,141,137,138,139,140,140,142,146,147,148,141,137,138,139,140,142,141,141,140,140,146,147,148,141,137,138,139,140,142,146,147,148,141,137,138,139,140,142,146,147,148,141,137,138,139,140,142,0,141,140,142,0,0,140,146,147,148,141,137,138,139,140,142,146,147,148,141,137,138,139,140,142,146,147,148,141,137,138,139,140,142,146,147,148,141,137,138,139,140,142,0,0,144,0,144,144,144,144,0,0,143,143,144,143,144,143,144,143,144,143,143,144,143,143,144,144,143,144,144,144,144,143,144,144,144,143,144,143,144,143,0,0,143,144,0,143,144,144,144,143,144,143,144,143,144,143,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,0,0,145,145,145,145,145,151,151,151,151,151,0,0,151,150,150,150,150,0,0,0,0,152,154,0,151,154,0,0,0,151,0,0,151,0,151,151,0,151,154,153,155,153,155,150,150,151,152,153,155,154,150,151,152,153,155,154,153,155,153,155,150,151,152,153,155,154,150,151,152,153,155,154,150,151,152,153,155,154,150,151,151,152,152,153,154,154,155,155,150,151,151,151,151,151,151,152,153,153,155,155,154,154,154,154,153,155,153,155,153,155,151,152,154,151,152,154,150,151,152,153,155,154,150,151,152,153,155,154,150,151,152,153,155,154,150,150,153,150,153,150,151,152,154,151,152,154,151,152,154,150,151,152,153,155,154,150,151,152,153,155,154,150,151,152,153,155,154,153,155,153,155,150,151,152,153,155,154,304,304,172,156,0,0,0,0,0,0,156,116,0,0,116,116,116,116,156,0,0,0,0,0,0,172,116,172,0,156,0,116,116,116,156,116,172,116,0,0,156,156,0,116,156,186,189,190,186,169,156,116,172,189,190,186,169,156,116,172,0,169,0,189,190,186,169,156,116,172,189,190,186,169,156,116,172,189,190,186,169,156,116,172,186,186,156,156,116,116,172,172,189,0,186,189,190,186,169,156,156,156,156,156,156,156,156,156,116,116,172,169,156,116,172,156,116,172,0,189,190,186,169,156,116,172,189,190,186,169,156,116,172,186,189,190,186,169,156,116,172,186,186,169,190,169,186,156,116,172,186,189,0,169,186,169,169,190,169,156,116,189,186,186,0,0,156,116,172,189,190,186,169,156,116,172,189,190,186,169,156,116,172,189,190,186,169,156,116,172,0,186,0,0,189,190,186,169,156,116,172,169,305,306,307,306,0,0,203,0,0,0,204,203,204,203,0,0,204,203,204,203,0,204,203,204,203,203,204,203,203,203,204,203,204,203,204,203,204,204,204,0,203,203,204,204,203,204,203,204,203,0,0,204,203,0,0,0,217,0,0,0,217,0,0,0,0,0,0,0,211,208,211,211,212,217,211,212,217,0,0,0,211,212,217,211,212,217,0,211,212,217,209,212,217,211,212,217,0,0,209,211,212,217,211,212,217,211,212,217,0,0,209,209,212,208,211,212,208,211,212,217,211,212,217,211,212,217,211,212,217,308,309,309,309,309,308,0,0,208,208,208,209,208,209,209,208,209,208,209,208,209,208,209,209,208,209,209,208,209,208,209,208,209,209,209,209,208,208,208,208,208,209,208,209,208,209,208,209,0,0,0,0,0,224,224,224,224,0,224,224,224,0,224,224,224,224,224,224,224,224,224,224,224,224,224,224,238,0,0,0,0,0,0,0,0,0,234,237,0,0,234,0,0,0,0,0,0,0,0,0,236,237,0,0,238,0,0,0,236,0,239,231,239,239,231,231,231,0,0,0,0,0,231,239,231,239,231,231,231,231,239,0,0,0,231,227,231,227,231,231,0,227,227,227,227,239,239,227,227,227,231,239,0,227,227,0,227,231,239,231,231,231,0,0,231,231,227,0,0,0,0,0,238,0,234,237,0,234,236,237,0,0,238,0,236,0,239,239,239,239,239,0,236,237,238,239,227,234,236,237,238,239,227,234,239,234,234,239,239,239,236,237,238,239,227,234,236,237,238,239,227,234,236,237,238,227,236,237,238,239,227,234,239,236,237,238,227,234,236,236,237,237,238,239,227,234,239,239,234,227,239,236,237,238,239,227,234,227,236,237,238,239,227,234,236,237,238,239,227,234,227,227,227,227,239,239,227,227,227,239,227,227,236,237,238,227,227,234,239,236,237,238,239,227,234,236,237,238,239,227,234,236,237,238,239,227,234,239,239,236,237,238,239,227,234,227,0,0,0,0,0,0,0,244,244,0,0,0,244,244,0,244,244,244,244,244,244,244,244,244,244,244,244,0,0,253,253,253,0,253,0,253,253,0,0,253,253,253,0,253,253,253,253,253,253,253,253,253,0,253,253,253,253,253,254,254,254,254,254,0,254,254,254,254,254,254,0,254,254,254,254,0,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,0,254,0,254,254,254,254,254,0,254,0,0,0,256,256,258,256,256,258,0,0,0,0,263,0,0,256,256,256,256,0,263,256,263,256,263,263,256,263,256,263,263,256,256,256,263,263,256,256,256,256,256,256,263,256,263,256,263,256,263,263,263,256,263,256,256,263,256,263,256,263,256,263,256,0,0,258,258,0,266,261,258,266,261,258,261,261,266,261,258,266,261,258,261,0,266,261,258,266,266,261,258,258,261,266,261,258,258,258,258,258,266,261,258,266,261,258,266,261,258,0,0,261,258,261,258,261,258,266,261,258,266,261,258,266,261,258,266,266,261,258,0,269,0,0,267,267,267,268,269,267,268,269,267,268,268,267,268,269,267,268,269,267,268,269,269,269,0,267,268,269,269,269,267,268,269,267,268,269,267,268,269,0,267,267,267,267,269,269,268,267,268,269,267,268,269,267,268,269,267,268,269,0,0,257,257,257,257,0,257,257,257,257,257,272,271,272,257,257,257,257,257,257,257,0,257,257,257,272,257,257,272,0,272,257,271,0,257,0,271,257,257,257,257,257,0,0,271,273,271,273,271,273,271,273,271,273,271,273,271,271,273,271,273,271,273,271,273,271,273,271,273,271,271,273,273,273,271,273,271,273,271,273,273,271,273,0,0,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,0,0,0,0,0,0,0,0,0,0,282,0,279,279,279,279,279,279,279,282,279,282,279,279,279,279,279,279,279,282,279,282,279,282,279,279,279,282,282,279,282,282,282,282,279,282,279,282,279,282,279,279,279,279,279,279,282,279,279,282,282,279,279,279,282,279,282,279,282,279,282,0,0,0,0,30,30,30,30,0,26,26,26,30,26,30,26,30,26,30,26,30,26,30,26,30,26,30,26,30,26,30,26,26,26,30,26,30,26,30,30,26,26,26,30,26,30,26,30,26,30,26,26,30,26,30,26,30,26,30,26,30,26,30,26,0,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,0,0,0,0,283,225,284,205,283,225,284,205,225,284,225,284,225,283,225,284,205,283,225,284,205,283,225,284,205,283,225,284,205,283,225,284,205,283,225,284,205,283,225,284,205,283,225,284,205,283,225,284,205,283,225,284,205,205,205,283,225,284,205,225,283,225,284,205,283,225,284,205,205,225,225,225,225,225,283,225,284,205,283,225,284,205,283,225,284,205,283,225,284,205,283,225,284,205,205,283,225,284,205,0,0,0,0,0,0,0,0,0,287,287,0,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,0,287,287,287,287,287,287,0,0,289,289,289,0,289,289,289,289,289,288,288,289,288,289,288,288,289,288,289,288,289,0,289,289,288,289,289,289,289,289,289,289,289,289,288,289,288,288,289,288,289,289,289,288,289,288,289,288,289,288,289,288,289,310,310,0,311,311,311,311,311,311,311,311,311,311,0,311,311,311,311,0,0,0,0,0,0,0,0,0,0,0,0,296,294,295,296,297,298,294,295,296,297,298,295,294,295,296,297,298,294,295,296,297,298,294,295,296,297,294,295,296,297,298,294,295,296,297,294,295,296,297,298,294,295,298,294,295,296,297,298,294,295,296,297,298,294,295,296,297,298,298,297,294,295,296,297,298,294,295,296,297,298,294,295,296,297,298,294,295,296,297,298],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[1],[1],[1],[1],[1],[1],[[2,3],4],[[2,3],4],0,[5,2],[6,2],[7,2],[[]],[[]],[[8,8],[[9,[2]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],[[]],[[]],[[],14],[[],14],0,[15],0,[[16,17],9],[2,[[19,[18]]]],0,[[],20],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[1],[1],[1],[1],[22,[[9,[23]]]],[22,[[9,[24]]]],[1],[1],0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[],14],[[],14],0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],0,[[]],[[]],0,0,0,0,[25,26],0,0,0,0,[[]],[[]],[[]],[[]],[27,27],[[]],[1],[1],[1],[1],[22,[[9,[25]]]],[22,[[9,[27]]]],[1],[1],[[27,27],28],[[],28],0,0,0,0,0,0,[[27,3],4],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[],14],[[],14],[[20,20,29,30],27],0,0,[[28,28,28],30],[27,31],[25,30],[27,30],[[27,17],9],[[]],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],0,[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[[19,[32]]],33],[1],[1],[1],[[]],[32,[[36,[[35,[34]]]]]],[[],1],[[]],[[],14],[[[35,[34]]],[[36,[34]]]],0,0,[[[35,[34]]],37],0,[[],9],[[],9],[[],21],[[]],0,0,0,[[]],[[]],[1],[1],[1],[[[39,[[0,[38,33]]]],3],4],[[]],[[[39,[33]],32],[[9,[[35,[34]],40]]]],[[],1],0,[[]],[[],14],0,[[33,41],[[39,[33]]]],[[],9],[[],9],[[],21],[[]],0,0,0,[[]],[[]],0,[1],[1],[1],[[42,3],4],[[]],[[42,32],[[36,[[35,[34]]]]]],[[],1],[[]],[[],14],[[[19,[32]]],42],[[],9],[[],9],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[43,44,45],[[48,[46,47]]]],[[43,20,49],[[51,[50]]]],[[44,48,52,32,1,53],[[51,[54]]]],0,[1],[1],[1],[1],[1],[1],0,[[1,32,55],[[9,[44,56]]]],[[32,57],28],[[58,32,48],28],[[56,3],4],[[56,3],4],[[44,3],4],[40,56],[59,56],[60,56],[[]],[61,56],[[]],0,0,[[62,32],[[19,[20]]]],[62,[[19,[20]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],[[]],[[]],[[],14],[[],14],0,0,0,0,0,0,0,0,0,0,0,0,[15],[56,[[19,[18]]]],[[],20],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,[[],[[9,[[51,[63]],40]]]],[[],[[9,[[51,[64]],40]]]],[46,[[9,[[51,[65]],40]]]],[[],[[9,[[51,[58]],40]]]],[[],[[9,[28,40]]]],0,0,0,0,[[]],[[]],[[],53],[1],[1],[22,[[9,[53]]]],[1],[[53,3],4],[[]],[[],1],[[]],[[],14],0,0,0,0,0,0,0,0,0,0,[[],9],[[],9],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[66,66],[64,64],[63,63],[65,65],[67,67],[68,68],[58,58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[22,[[9,[66]]]],[22,[[9,[64]]]],[22,[[9,[63]]]],[22,[[9,[65]]]],[22,[[9,[67]]]],[22,[[9,[68]]]],[22,[[9,[58]]]],[1],[1],[1],[1],[1],[1],[1],0,[[66,3],4],[[64,3],4],[[63,3],4],[[65,3],4],[[67,3],4],[[68,3],4],[[58,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[64,28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[69,69],[[]],[[69,69],70],[1],[1],[1],[1],[22,[[9,[69]]]],[1],[1],[[69,69],28],[[],28],[[71,3],4],[3,[[9,[72]]]],[[69,3],4],[[69,3],4],[[]],[[]],[41,69],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[[69,69],[[19,[70]]]],[[]],[[],20],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[71,32],[[9,[73]]]],[[]],[[]],0,0,0,0,[74,28],[[]],[[]],[[]],[[]],[74,74],[[]],[1],[1],[1],[1],[22,[[9,[74]]]],[1],[1],[[74,74],28],[[],28],[[75,3],4],[3,[[9,[72]]]],[[74,3],4],[[]],[[]],[28,74],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[[]],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[75,32],[[9,[73]]]],[[]],[[]],0,0,[76,32],[[]],[[]],[[]],[[]],[76,76],[[]],[1],[1],[1],[1],[22,[[9,[76]]]],[1],[1],[[76,76],28],[[],28],[[77,3],4],[3,[[9,[72]]]],[[76,3],4],[[]],[[]],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[[],[[78,[20]]]],[32,76],[[]],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[77,32],[[9,[73]]]],[[]],[[]],0,0,0,[79,32],[[]],[[]],[[]],[[]],[32,20],[79,79],[[]],[1],[1],[1],[1],[22,[[9,[79]]]],[1],[1],[[79,79],28],[[],28],[[80,3],4],[3,[[9,[72]]]],[[79,3],4],[[]],[[]],[32,79],[20,79],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[[]],[79,20],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[80,32],[[9,[73]]]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],32],[1],[1],[1],[1],[1],[1],[1],[1],0,[1],[1],[1],[1],[[47,3],4],[[81,3],4],[[50,3],4],[[54,3],4],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[47,17],9],[[81,17],9],[[50,17],9],[[54,17],9],0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,82],[83,83],[[]],[[]],[[[84,[20]]],[[9,[[86,[85]],87]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[82,82],28],[[],28],[[82,3],4],[[88,3],4],[[88,3],4],[[89,3],4],[[89,3],4],[[83,3],4],[[]],[90,88],[87,88],[[]],[89,88],[[]],[[]],[32,9],[32,[[9,[82]]]],[[[86,[85]]],20],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],0,[[]],[[]],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[83,[[9,[82,89]]]],[[],14],[[],14],[[],14],[[],14],0,0,[15],[15],[88,[[19,[18]]]],[[]],[[]],[[],20],[[],20],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[91,[[9,[[51,[[86,[85]]]],90]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[92,3],4],[[90,3],4],[[90,3],4],[[93,3],4],[[93,3],4],[[]],[5,90],[[]],[94,90],[93,90],[95,90],[87,90],[96,90],[97,90],[98,93],[[]],[99,93],[[[86,[85]]],92],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[]],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[],14],[[],14],[[],14],[15],[15],[90,[[19,[18]]]],[93,[[19,[18]]]],[92,[[102,[[101,[100]],[51,[100]]]]]],[[],20],[[],20],[[],20],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[92,[103,[8]]],[[9,[90]]]],0,0,0,0,0,[[]],[[]],[[[84,[20]]],[[9,[[86,[85]],87]]]],[1],[1],[1],[[87,3],4],[[87,3],4],[96,87],[[]],[94,87],[5,87],[97,87],[[[86,[85]]],20],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[]],[[],14],[15],[87,[[19,[18]]]],[[],20],[[],9],[[],9],[[],21],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[],104],[1],[1],[1],[1],[1],[1],0,0,[[105,105],28],[[],28],[[105,3],4],0,0,0,[[]],[[]],[106,105],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[107,[[9,[105,108]]]],0,0,[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],57],[[],57],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[109],[[110,109]],[[111,109]],[[112,109]],[[113,109]],[[114,109]],0,0,0,0,[106,106],[[]],[[],113],[[],114],[1],[1],[1],[1],[1],[1],[1],[1],[1],[115,57],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[112,3],4],[[108,3],4],[[108,3],4],[[106,3],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[116,108],[117,108],[118,108],[[]],[[]],[[]],[[]],[32,[[9,[106]]]],[32,9],[119,[[9,[[51,[109]],108]]]],[[119,1],[[9,[[51,[109]],108]]]],[119,[[9,[20,108]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,[[121,20],119],[[119,1],120],[[57,20],110],[[[51,[111]]],112],[[],113],[[],114],[122],0,[15],0,[[109,32],28],0,[3,4],[[110,3],4],[[111,3],4],[[112,3],4],[[113,3],4],[[114,3],4],[108,[[19,[18]]]],0,[[]],[[],20],[[],20],0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[1],[1],[1],[[123,3],4],[[123,3],4],[59,123],[124,123],[5,123],[118,123],[[]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[]],[[],14],[15],0,0,0,[123,[[19,[18]]]],[[],20],[[],9],[[],9],[[],21],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],0,[1],[1],[1],[1],[22,[[9,[125]]]],[1],[1],[[]],[[]],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[125,126],0,[[125,17],9],[[126,17],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[127,128],127],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[129,[[9,[128,124]]]],[127,[[9,[130,124]]]],0,0,0,0,[[],129],[[],127],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[22,[[9,[131]]]],[22,[[9,[128]]]],[22,[[9,[130]]]],[1],[1],[1],[1],[1],[1],0,0,[[124,3],4],[[124,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],0,0,[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],129],[[],127],0,0,[15],0,0,[[131,17],9],[[128,17],9],[[130,17],9],0,0,[[],20],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[127,20],127],[[127,20],127],[[129,[19,[20]]],129],[[129,131],129],[[129,[19,[20]]],129],[[129,28],129],[[129,132],129],[[129,20],129],[[129,133],129],[[129,[19,[20]]],129],0,0,0,0,0,[[]],[[]],[[]],[[]],[1],[1],[1],[1],[22,[[9,[134]]]],[22,[[9,[135]]]],[22,[[9,[37]]]],[1],[1],[[134,3],4],[[135,3],4],[[]],[[]],[[],1],[[],1],[[]],[[]],[[],14],[[],14],0,0,[[134,17],9],[[135,17],9],[[37,17],9],0,0,[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]],[[121,126],[[9,[135,123]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[136,136,137,138,139],[[9,[140]]]],[[141,141],70],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[141,141],28],[[],28],[[141,3],4],[[137,3],4],[[138,3],4],[[139,3],4],[[140,3],4],[[140,3],4],[[142,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],41],[141],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[141,141],[[19,[70]]]],[15],0,[[136,1],136],0,[[],20],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[136,136],[[9,[136,140]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1],[1],[1],[1],[22,[[9,[143]]]],[1],[1],0,[[144,3],4],[[144,3],4],[[143,3],4],[[]],[5,144],[7,144],[59,144],[[]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[8,[[9,[[48,[141,62]],144]]]],[8,[[9,[[48,[141]],144]]]],0,[15],[62,[[9,[141,144]]]],0,[144,[[19,[18]]]],[[],20],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]],0,0,0,0,[[]],[[]],[1],[1],[1],[[145,3],4],[[145,3],4],[[]],[59,145],[5,145],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[]],[[],14],[15],[145,[[19,[18]]]],[[8,[51,[62]]],[[9,[145]]]],[[62,146,147,148],[[9,[145]]]],[[],20],[[],9],[[],9],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[149,149],[149,149],[149,149],[149,149],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],149],[[],149],[[],149],[[],149],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[150,[[9,[151]]]],[[151,3],4],[[151,3],4],[[152,3],[[9,[72]]]],[[152,3],[[9,[72]]]],[[153,3],[[9,[72]]]],[[154,3],[[9,[72]]]],[[154,3],[[9,[72]]]],0,[[155,62],[[9,[20,154]]]],[[]],[156,151],[5,151],[154,151],[[]],[59,151],[152,151],[[]],[157,153],[[]],[[]],[158,155],[[]],[59,154],[159,154],[160,154],[161,[[9,[153,[163,[162]]]]]],[161,[[9,[155,[163,[162]]]]]],[161,[[9,[153,[163,[162]]]]]],[161,[[9,[155,[163,[162]]]]]],[[],[[19,[164]]]],[[],[[19,[164]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[165,157,153,155],150],[153,[[9,[166,152]]]],0,0,0,[15],[15],[15],[151,[[19,[18]]]],[152,[[19,[18]]]],[154,[[19,[18]]]],[[],20],[[],20],[[],20],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[153,161],[[9,[[163,[162]]]]]],[[155,161],[[9,[[163,[162]]]]]],[[153,161],[[9,[[163,[162]]]]]],[[155,161],[[9,[[163,[162]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[167,168],[[169,170]],[171,[[9,[116]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[156,3],4],[[156,3],4],[[116,3],4],[[116,3],4],[[172,3],4],[[172,3],4],0,[[173,174,175],[[19,[176]]]],0,[[]],[[]],[[]],[[]],[116,156],[177,156],[172,156],[178,156],[[]],[179,156],[180,156],[181,156],[182,156],[[]],[183,116],[[]],[165,[[9,[156]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[]],[[]],[[184,176],184],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[165,[185,[46]],122],[[9,[[186,[122]],156]]]],[[[186,[122]]],19],0,0,0,[187,188],[15],[15],[15],0,0,[[165,122],[[9,[156]]]],[[169,189],[[9,[190]]]],0,[[169,[171,[191]]],[[9,[170,156]]]],[[169,[171,[192]]],[[9,[170,156]]]],0,0,[156,[[19,[18]]]],[116,[[19,[18]]]],0,0,0,[[173,193],174],[173,194],[[],20],[[],20],[[],20],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[171,28],[[[186,[122]],171,195],[[9,[196,116]]]],[[196,197,198,199,200,[185,[46]]]],[165,[[48,[201,202]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],[[9,[203]]]],0,[1],[1],[1],[1],0,[1],[1],[[204,55],28],[[203,3],4],[[203,3],4],[[]],[[]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[[1,[48,[43,1]],[51,[205]]],[[9,[204,203]]]],0,0,0,[15],[[],20],0,[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[206,207,208,209,210],211],[212,[[215,[213,214]]]],[[[215,[216,217]],215,214,209],[[51,[212]]]],[1],[1],[1],[1],[1],[1],[[[215,[213,41]],[215,[213,41]],41,41],[[215,[213,41]]]],[1],[1],[1],0,[[212,3],4],[[217,3],4],[[]],[[]],[[]],0,[[206,209]],0,[[],1],[[],1],[[],1],[[]],[[]],[[]],[[],14],[[],14],[[],14],[209,217],0,0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[208,218],0,[[]],[[]],[[]],[[]],[[],209],[1],[1],[1],[1],[22,[[9,[208]]]],[22,[[9,[209]]]],[1],[1],0,[[]],[[]],0,[[],1],[[],1],[[]],[[]],[[],14],[[],14],0,0,[209,41],[208,218],0,0,[208,218],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]],0,0,0,[[[215,[213,41]],41]],0,0,0,[[]],[[]],[[[51,[219]],220,221,1,204,222],[[9,[[215,[223,214]],224]]]],[1],[1],[1],[[[51,[219]],220,1,204],[[51,[219]]]],[[224,3],4],[[224,3],4],[[]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[]],[[],14],[15],[[],20],[[],9],[[],9],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[8,32],157],[[225,226,136,136],36],[[48,48,49,136,136],[[36,[[51,[227]]]]]],[228,229],[[48,48,136,136],[[36,[[48,[230]]]]]],0,0,0,0,[1],[1],[1],0,0,[[225,226],36],[[43,48,48]],[[48,55],[[48,[230,225]]]],[[]],0,[[],1],0,[[]],[[],14],0,0,0,0,0,0,0,0,0,0,0,0,[231,[[36,[51]]]],0,0,[[48,48],36],0,0,0,[[],9],[[],9],[[],21],0,0,0,[[]],0,0,[[[51,[225]],[51,[232]],[51,[233]]],36],[8,36],[8,36],[[8,234,235],36],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[149,149],[149,149],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[234,234],[[]],[[],149],[[],149],0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[22,[[9,[236]]]],[22,[[9,[237]]]],[22,[[9,[238]]]],[22,[[9,[227]]]],[1],[1],[1],[1],[1],[1],0,[[236,3],4],[[237,3],4],[[238,3],4],[[227,3],4],[[234,3],4],[28,236],[[]],[28,237],[[]],[[]],[[]],[[]],[[]],[161,[[9,[239,240]]]],[161,[[9,[239,240]]]],[32,[[9,[234]]]],0,[[],[[19,[164]]]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,0,0,0,0,[[236,17],9],[[237,17],9],[[238,17],9],[[227,17],9],0,[[]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[239,161],[[9,[240]]]],[[239,161],[[9,[240]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[8,32],157],[32,[[241,[32]]]],0,0,0,[[]],[[]],[[48,[48,[29,1]],242,243],[[215,[29,214]]]],[[],30],[[214,242,242,51,51],[[48,[29,244]]]],[1],[1],[[222,122],222],[1],[[]],[[],1],[[]],[[],14],0,0,[[244,17],9],[[],9],[[],9],[[],21],[[]],0,0,0,0,0,0,0,[[20,245],[[9,[168,96]]]],[[]],[[]],[[220,[51,[[219,[[0,[246,247,248,249,250,251]]]]]],204,252],[[9,[[215,[[0,[246,247,248,249,250,251]],252]],253]]]],[[41,[48,[223,41]],252],[[48,[223,252]]]],[1],[1],[1],[[220,[51,[219]],204],[[51,[219]]]],[[253,3],4],[[253,3],4],[[]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[]],[[],14],[15],[[[48,[223,252]],[51,[[219,[[0,[246,247,248,249,250,251]]]]]]],[[215,[[0,[246,247,248,249,250,251]],252]]]],[[],20],[[],9],[[],9],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1],[1],0,[1],[[254,3],4],[[254,3],4],[118,254],[255,254],[256,254],[257,254],[258,254],[7,254],[5,254],[259,254],[59,254],[[]],[260,254],[179,254],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[]],[[],14],0,[15],0,[254,[[19,[18]]]],[[],20],[[],9],[[],9],[[],21],0,[[]],0,0,0,0,0,0,0,0,0,0,[[[103,[8]]],[[9,[[51,[261]],258]]]],[[[103,[8]]],[[9,[[51,[261]],258]]]],0,0,0,0,0,0,0,0,[[262,262,175],28],[[]],[[]],[[]],[[]],[215,[[215,[1,1]]]],[1],[1],[1],[1],[263,[[264,[20]]]],[1],[1],[[256,3],4],[[256,3],4],[[]],[[[51,[261]]],263],[7,256],[[]],[5,256],[265,256],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[[263,46],[[9,[[215,[20,1]],256]]]],[263,[[215,[20,1]]]],[263,[[215,[20,1]]]],[15],0,[256,[[19,[18]]]],[[],20],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1],[1],[1],[1],[1],[1],[22,[[9,[261]]]],[22,[[9,[262]]]],[1],[1],[1],[[266,3],4],[3,[[9,[72]]]],[[261,3],4],[[258,3],4],[[258,3],4],0,[[]],[[]],[5,258],[7,258],[[]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[[103,[8]]],[[9,[[51,[261]],258]]]],[[[103,[8]]],[[9,[[51,[261]],258]]]],0,[15],0,[258,[[19,[18]]]],0,[[],20],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[266,136],[[9,[262,73]]]],[[]],[[]],[[]],0,0,0,0,[[267,41]],[[267,41,46]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],268],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[269,3],4],[[269,3],4],[41,20],[[]],[[]],[[]],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[],14],[[],14],[[],14],[41,[[9,[[51,[[185,[41]]]],269]]]],[41,[[9,[267,269]]]],[[[51,[[185,[41]]]]],267],[267],[267],[15],[[],20],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[1],[1],[1],0,0,0,[[257,3],4],[[257,3],4],[118,257],[59,257],[270,257],[5,257],[[]],0,[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],0,[[]],[[],14],0,0,0,[15],0,0,[257,[[19,[18]]]],[[271,272,32],[[9,[257]]]],0,[[],20],[[],9],[[],9],[[],21],[[]],0,0,[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],0,[273,20],[271,[[9,[[51,[274]],257]]]],[[]],[[]],[271,[[9,[273,257]]]],[273,20],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[[[84,[20]],275],271],0,0,0,0,[273,20],0,[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],0,[[]],[[]],[[271,272,32],[[9,[257]]]],0,[[]],[[]],[1],[1],[1],0,0,[[]],[[],1],0,[[]],[[],14],0,[272,276],0,[272,277],[[],9],[[],9],[[],21],[[]],[[[84,[20]]],[[9,[[51,[278]],254]]]],[[[103,[8]]],[[9,[[51,[278]],254]]]],[168,223],[228,[[51,[168]]]],[[267,[84,[20]],[103,[8]],28,243],[[9,[267,254]]]],[[[84,[20]],267,28,243],[[9,[267,254]]]],[[267,[51,[278]],[51,[168]],28,243],[[9,[267,254]]]],[[267,51,[51,[168]],28,243],[[9,[267,254]]]],[[220,228],51],0,0,0,[[279,20],279],0,[[279,136],279],0,[[279,157],279],0,[[]],[[]],[[]],[[]],[[279,20],279],0,[[279,280],[[9,[281,282]]]],[[279,20],279],0,[[],279],[1],[1],[1],[1],[1],[1],[[279,20],279],0,[[279,3],4],[[282,3],4],[[282,3],4],[[]],[[]],[5,282],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],[[]],[[]],[[],14],[[],14],[[279,157],279],0,[[279,20],279],0,[[279,20],279],0,[15],[[279,[103,[8]]],279],0,[282,[[19,[18]]]],[[],20],[[279,136],279],0,[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[30,30],[26,26],[[]],[[]],[1],[1],[1],[1],[22,[[9,[30]]]],[22,[[9,[26]]]],[1],[1],[[30,30],28],[[26,26],28],[[],28],[[],28],0,0,[[30,3],4],[[26,3],4],[[]],[[]],[[],41],[30],0,0,0,[[],1],[[],1],[[]],[[]],[[],14],[[],14],[30,28],0,0,[[30,17],9],[[26,17],9],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]],0,[[]],[[]],[233,233],[[]],[1],[1],[22,[[9,[233]]]],[1],[[233,233],28],[[],28],[[233,3],4],[[]],0,[[],1],[[]],[[],14],0,0,[[233,17],9],0,[[]],[[],9],[[],9],[[],21],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[283,283],[225,225],[284,284],[205,205],[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[1],[1],[22,[[9,[283]]]],[22,[[9,[225]]]],[22,[[9,[284]]]],[22,[[9,[205]]]],[1],[1],[1],[1],[[283,283],28],[[225,225],28],[[284,284],28],[[205,205],28],[[],28],[[],28],[[],28],[[],28],[[283,3],4],[[225,3],4],[[284,3],4],[[205,3],4],[[]],[[]],[[]],[285,205],[[]],0,[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,[[283,17],9],[[225,17],9],[[284,17],9],[[205,17],9],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],0,[[222,222]],0,[[[103,[8]]],[[36,[34]]]],0,[[235,8],[[9,[7]]]],[[19,[0,[122,38]]],[[9,[5]]]],[8,[[9,[[51,[286]],7]]]],[22,[[9,[28]]]],0,0,0,[[]],[[]],[1],[1],[1],[[287,3],4],[[287,3],4],[[]],[7,287],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[]],[[],14],[15],[8,[[9,[[51,[26]],287]]]],[287,[[19,[18]]]],[[],20],[[],9],[[],9],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,[288,[[9,[[51,[232]],289]]]],[[]],[[]],[[]],[[]],[[288,[51,[20]]],[[9,[289]]]],[1],[1],[1],[1],[1],[1],0,[[289,3],4],[[289,3],4],[[]],[290,289],[270,289],[291,289],[292,289],[[]],[59,289],[5,289],[[[0,[10,11,12]]],[[13,[[0,[10,11,12]]]]]],[[]],[[],1],[[],1],0,[[]],[[]],[[],14],[[],14],[15],[289,[[19,[18]]]],[[157,20,[19,[157]]],[[9,[288,289]]]],[[],20],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]],0,0,0,[[]],[[]],[[],293],[1],[1],[1],[[]],[[],1],[[]],[[],14],0,[[],9],[[],9],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[22,[[9,[294]]]],[22,[[9,[295]]]],[22,[[9,[296]]]],[22,[[9,[297]]]],[1],[1],[1],[1],[1],[[294,3],4],[[295,3],4],[[296,3],4],[[297,3],4],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[298,17],9],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Error"],[3,"Error"],[3,"Path"],[4,"Result"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"Request"],[3,"Demand"],[3,"Vote"],[8,"Serializer"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[8,"Deserializer"],[4,"ProposalStatus"],[3,"ApprovedProposalRow"],[3,"AdvisorReviewRow"],[3,"AdvisorReview"],[3,"VeteranRankingRow"],[15,"bool"],[6,"VeteranAdvisorId"],[4,"ReviewRanking"],[6,"AdvisorReviewId"],[15,"str"],[8,"HttpClient"],[8,"Deserialize"],[3,"HttpResponse"],[6,"Result"],[3,"StatusCode"],[8,"Debug"],[3,"RateLimitClient"],[3,"Report"],[15,"u64"],[3,"ReqwestClient"],[15,"i32"],[3,"IdeaScaleData"],[6,"Sponsors"],[15,"u32"],[3,"Challenge"],[3,"HashMap"],[15,"i64"],[3,"Fund"],[3,"Vec"],[6,"Scores"],[3,"CustomFieldTags"],[3,"Proposal"],[3,"HashSet"],[4,"Error"],[3,"Regex"],[3,"Stage"],[3,"Error"],[4,"Error"],[3,"JoinError"],[4,"Value"],[3,"Fund"],[3,"Funnel"],[3,"Proposal"],[3,"Challenge"],[3,"Proposer"],[3,"ProposalCustomFieldsByKey"],[3,"AdaRewards"],[4,"Ordering"],[3,"V"],[3,"Error"],[8,"Error"],[4,"Approval"],[3,"V"],[3,"ChallengeTitle"],[3,"V"],[4,"Resettable"],[3,"CleanString"],[3,"V"],[3,"Highlight"],[3,"QrPin"],[4,"PinReadMode"],[8,"Into"],[3,"Ed25519Extended"],[3,"SecretKey"],[4,"Error"],[4,"Error"],[4,"BadPinError"],[4,"KeyQrCodeError"],[4,"DynamicImage"],[3,"KeyQrCode"],[4,"QrDecodeError"],[4,"Error"],[4,"ImageError"],[4,"FromHexError"],[4,"SecretKeyError"],[4,"DecodeError"],[4,"ExtractError"],[15,"u8"],[3,"Luma"],[3,"ImageBuffer"],[8,"AsRef"],[3,"LogCmpStats"],[3,"LogCmpFields"],[3,"SentryFragmentLog"],[3,"PersistentFragmentLog"],[4,"Error"],[6,"RawLog"],[3,"RegexMatch"],[4,"SentryLogsStatChecker"],[3,"SentryLogsStatsExecutor"],[3,"SuccessfulScan"],[3,"MalformedQr"],[3,"REGEX"],[4,"ValidationError"],[4,"ParseError"],[3,"Error"],[3,"SentryLogClient"],[3,"LazySentryLogs"],[3,"Url"],[8,"Iterator"],[4,"Error"],[4,"Error"],[4,"RequestData"],[3,"Request"],[3,"CreateMessageBuilder"],[3,"ContentSettings"],[3,"ContentSettingsBuilder"],[3,"CreateMessage"],[4,"ContentType"],[6,"MultiLanguageContent"],[3,"OffsetDateTime"],[3,"InnerResponse"],[3,"CreateMessageResponse"],[15,"f64"],[3,"AlignmentReviews"],[3,"FeasibilityReviews"],[3,"AuditabilityReviews"],[4,"Error"],[3,"ProposalId"],[3,"Review"],[3,"ReviewsRow"],[4,"Error"],[4,"Error"],[3,"AlignmentScore"],[3,"FeasibilityScore"],[3,"AuditabilityScore"],[3,"Command"],[3,"Replay"],[4,"Error"],[4,"OutputFileError"],[3,"OutputFile"],[4,"OutputFormatError"],[3,"OutputFormat"],[4,"Error"],[3,"PathBuf"],[4,"FormatVariant"],[3,"GtmplError"],[3,"Error"],[3,"ArgMatches"],[3,"RichFormatter"],[3,"Error"],[3,"Id"],[3,"Block"],[8,"Write"],[3,"CommitteeIdDef"],[3,"Address"],[3,"FragmentReplayer"],[4,"Fragment"],[3,"TransactionSlice"],[4,"ReplayError"],[3,"SecondsSinceUnixEpoch"],[3,"TimeFrame"],[3,"TimeEra"],[3,"BlockDate"],[4,"Error"],[4,"Error"],[4,"Block0ConfigurationError"],[4,"Error"],[3,"DeserializeError"],[4,"ValueError"],[4,"BalanceError"],[3,"Ledger"],[3,"Range"],[3,"VoteFragmentFilter"],[3,"ProgressBar"],[3,"ProgressBarIter"],[3,"ValidatedFragment"],[3,"ReplayedFragment"],[3,"NoExtra"],[3,"VoteCast"],[3,"SlotDuration"],[3,"SystemTime"],[6,"FragmentId"],[3,"SpendingCounter"],[6,"HeaderId"],[6,"TransactionSignDataHash"],[3,"Identifier"],[6,"Witness"],[6,"VotePlanId"],[3,"VotePlan"],[4,"Error"],[3,"Threshold"],[3,"FullProposalInfo"],[6,"ProposalsReviews"],[6,"ApprovedProposals"],[3,"FundSetting"],[3,"ProposalRewardSlots"],[6,"Seed"],[3,"CaRewards"],[3,"ProposalRewards"],[6,"CommunityAdvisor"],[6,"Rewards"],[3,"BTreeMap"],[6,"ProposalId"],[4,"ProposalTickets"],[6,"Funds"],[3,"SnapshotInfo"],[6,"VoteCount"],[6,"VotingGroup"],[3,"Decimal"],[3,"Identifier"],[4,"Error"],[3,"Proposal"],[3,"VoteProposalStatus"],[3,"Calculation"],[3,"Block0Configuration"],[3,"Value"],[3,"Hash"],[3,"ProposerRewardsInputs"],[3,"VotePlanStatus"],[3,"Challenge"],[4,"OutputFormat"],[8,"IntoIterator"],[4,"YesNo"],[4,"FundedStatus"],[4,"NotFundedReason"],[3,"ProposerRewards"],[6,"Error"],[4,"Cow"],[6,"EligibilityThresholds"],[8,"Fn"],[3,"VeteranAdvisorIncentive"],[4,"Discrimination"],[8,"Clone"],[8,"Default"],[8,"PartialEq"],[8,"Eq"],[8,"PartialOrd"],[8,"Ord"],[6,"Rewards"],[4,"Error"],[4,"Error"],[4,"Block0Error"],[4,"ArchiveCalculatorError"],[4,"Error"],[4,"ArchiveReaderError"],[4,"Error"],[4,"ReadError"],[3,"ArchiverRecord"],[3,"BlockDate"],[3,"ArchiveStats"],[3,"BTreeSet"],[4,"BlockDateParseError"],[3,"VoteOptionsDeserializer"],[3,"Stats"],[3,"Record"],[4,"Error"],[4,"RestError"],[3,"Harvester"],[3,"Settings"],[3,"Snapshot"],[3,"FragmentLog"],[3,"Duration"],[4,"Monitor"],[4,"ProgressBarMode"],[4,"Initial"],[3,"ProposerRewardsCommand"],[3,"TempDir"],[3,"Command"],[4,"Error"],[3,"VoteOptions"],[3,"ProposalVotePlanCommon"],[3,"FullProposalInfo"],[8,"DeserializeOwned"],[4,"Error"],[3,"CheckNode"],[4,"Error"],[4,"JormungandrError"],[4,"ExplorerError"],[4,"StartupError"],[3,"QueryBody"],[3,"TransactionByIdTransactionBlocksBranches"],[3,"TransactionByIdTransactionBlocks"],[3,"TransactionByIdTransaction"],[3,"ResponseData"],[3,"Variables"],[8,"Stat"],[13,"NotVoteCastTransaction"],[13,"BadDataSent"],[13,"UnsuccessfulRequest"],[13,"MissingFieldOnBuilderError"],[13,"CannotOpen"],[13,"NotAVotingFragment"],[13,"InvalidTransactionSignature"],[13,"DuplicatedFragment"],[13,"Legacy"],[13,"Fund7"],[13,"ResultsDoNotMatch"],[3,"TransactionById"]]},\
"chain_addr":{"doc":"Address","t":"WWWWWWWWRRRRRRRRRRRRNNDDENENNNNNNEENNNDNNNNNNFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLFLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRFF","n":["","","","","","","","","ADDR_KIND_ACCOUNT","ADDR_KIND_GROUP","ADDR_KIND_LOW_SENTINEL","ADDR_KIND_MULTISIG","ADDR_KIND_SCRIPT","ADDR_KIND_SENTINEL","ADDR_KIND_SINGLE","ADDR_SIZE_ACCOUNT","ADDR_SIZE_GROUP","ADDR_SIZE_MULTISIG","ADDR_SIZE_SCRIPT","ADDR_SIZE_SINGLE","Account","Account","Address","AddressReadable","Discrimination","EmptyAddress","Error","Group","Group","InvalidAddress","InvalidInternalEncoding","InvalidKind","InvalidPrefix","Kind","KindType","MismatchPrefix","Multisig","Multisig","ParseDiscriminationError","Production","Script","Script","Single","Single","Test","_strategy_of_0","_strategy_of_0","_strategy_of_0","_strategy_of_0","_strategy_of_0","_strategy_of_0","_strategy_of_1","_strategy_of_1","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","_to_weight","_to_weight","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","arbitrary_with","as_string","base32","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_crypto_err","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize_from_slice","discrimination","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_address","from_bytes","from_str","from_str","from_str","from_str","from_str_anyprefix","from_string","from_string_anyprefix","get_discrimination_value","get_kind_value","get_prefix","hash","hash","hash","hash","into","into","into","into","into","into","into","is_valid_data","kind","partial_cmp","partial_cmp","provide","provide","public_key","serialize","serialize_as_vec","serialized_size","testing","to_address","to_bytes","to_kind_type","to_kind_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_size","to_string","to_string","to_string","to_string","to_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ARBITRARY_PREFIX","arbitrary_32bytes","arbitrary_public_key"],"q":[[0,"chain_addr"],[198,"chain_addr::testing"]],"d":["","","","","","","","","","","","","","","","Size of an Account address","Size of a Group address","Size of an Multisig Account address","Size of a script address","Size of a Single address","","","An unstructured address including the discrimination and …","A valid address in a human readable format","","","","","","","","","","Kind of an address, which include the possible variation …","Kind Type of an address","","","","error that can happen when parsing the Discrimination from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create a base32 encoding of the byte serialization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new AddressReadable from an encoded address","Try to convert from_bytes","","","","","","Validate from a String to create a valid AddressReadable","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Convert a valid AddressReadable to an decoded address","Serialize an address into bytes","Return the Kind type of a given address","","","","","","","Return the size","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,17,0,4,5,17,17,17,17,0,0,17,4,5,0,3,4,5,4,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,5,6,7,3,4,6,7,6,3,4,5,6,17,7,18,3,4,5,6,17,7,18,0,3,4,5,6,7,3,4,5,6,7,6,6,6,3,4,5,6,7,3,3,4,5,6,17,17,7,7,18,18,3,4,5,6,17,17,17,7,18,7,6,3,3,7,7,7,7,7,0,0,7,3,4,5,6,3,4,5,6,17,7,18,0,6,3,4,17,18,6,6,6,6,0,7,6,6,6,3,4,5,6,7,6,3,17,7,18,5,3,4,5,6,17,7,18,3,4,5,6,17,7,18,3,4,5,6,17,7,18,3,4,5,6,17,7,18,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[2,2],[2,2],[[],3],[[],4],[[],5],[[],6],[[],7],[[]],[[]],[[]],[7,8],[6,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,11],[3,3],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],[[]],[12,[[13,[6,11]]]],[12,[[13,[11]]]],[6,3],[[3,3],14],[[4,4],14],[[5,5],14],[[6,6],14],[[7,7],14],[[3,15],16],[[3,15],16],[[4,15],16],[[5,15],16],[[6,15],16],[[17,15],16],[[17,15],16],[[7,15],16],[[7,15],16],[[18,15],16],[[18,15],16],[[]],[[]],[[]],[[]],[10,17],[19,17],[[]],[[]],[[]],[[8,6],7],[[],[[13,[6,17]]]],[8,[[13,[3]]]],[8,13],[8,13],[8,[[13,[7]]]],[8,[[13,[7,17]]]],[[8,8],[[13,[7,17]]]],[8,[[13,[7,17]]]],[20,3],[20,20],[7,9],[3],[4],[5],[6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[13,[17]]]],[6,4],[[3,3],[[22,[21]]]],[[4,4],[[22,[21]]]],[23],[23],[6,[[22,[24]]]],[[6,12],[[13,[25]]]],[6,[[13,[[26,[20]],25]]]],[6,27],0,[7,6],[6,[[26,[20]]]],[6,5],[6,20],[[]],[[]],[[]],[[]],[[]],[6,27],[[],9],[[],9],[[],9],[[],9],[5,20],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[],[[24,[29]]]]],"c":[],"p":[[8,"Strategy"],[15,"u32"],[4,"Discrimination"],[4,"Kind"],[4,"KindType"],[3,"Address"],[3,"AddressReadable"],[15,"str"],[3,"String"],[4,"PublicKeyError"],[4,"ReadError"],[3,"Codec"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Error"],[3,"ParseDiscriminationError"],[4,"Error"],[15,"u8"],[4,"Ordering"],[4,"Option"],[3,"Demand"],[3,"PublicKey"],[4,"WriteError"],[3,"Vec"],[15,"usize"],[3,"TypeId"],[3,"Ed25519"]]},\
"chain_core":{"doc":"","t":"AAANNEDDNNNENNNNNNNLLLLLLLLLLLLLLLMMLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLIIIIQQQQIIQIQIQIIIIQQQQQQNNNNQQEINNIINNQQELLLLKKKKKKLLLLLLKLLLLKKKKKKKLLKKKKLLKLLLLLLLLLLLLKKK","n":["abor","packer","property","Array","Bytes","DecodeError","Decoder","Encoder","EndOfStream","StreamPending","StreamTooSmall","Tag","TypeMismatch","TypeUnknown","U128","U16","U32","U64","U8","array","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","clone","clone","clone_into","clone_into","current_element","data","default","end","eq","finalize","fmt","fmt","from","from","from","from","from_u8","hole","into","into","into","into","new","new","slice","struct_end","struct_start","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u128","u128","u16","u16","u32","u32","u64","u64","u8","u8","expected","got","has","left","want","Codec","borrow","borrow_mut","bytes_left","copy_to_slice","from","get_be_u128","get_be_u16","get_be_u32","get_be_u64","get_bytes","get_le_u128","get_le_u16","get_le_u32","get_le_u64","get_nz_u32","get_nz_u64","get_slice","get_u8","has_bytes_left","i128_size","i16_size","i32_size","i64_size","i8_size","inner","into","into_inner","new","position","put_be_u128","put_be_u16","put_be_u32","put_be_u64","put_bytes","put_le_u128","put_le_u16","put_le_u32","put_le_u64","put_u8","read_to_end","set_position","skip_bytes","try_from","try_into","type_id","u128_size","u16_size","u32_size","u64_size","u8_size","Block","BlockDate","BlockId","ChainLength","ChainLength","ChainLength","Date","Date","Deserialize","DeserializeFromSlice","Error","Fragment","Fragment","FragmentId","Fragments","FromStr","HasFragments","HasHeader","Header","Header","Id","Id","Id","Input","Inputs","InvalidData","IoError","IoError","NotEnoughBytes","Output","Outputs","ReadError","Serialize","SizeTooBig","StructureInvalid","Transaction","TransactionId","UnconsumedData","UnknownTag","Version","Version","WriteError","borrow","borrow","borrow_mut","borrow_mut","chain_length","chain_length","date","date","deserialize","deserialize_from_slice","deserialize_validate","deserialize_validate_from_slice","fmt","fmt","fmt","fmt","fragments","from","from","from","from","from_epoch_slot_id","from_str","header","id","id","id","inputs","into","into","next","outputs","parent_id","parent_id","provide","provide","serialize","serialize_as_vec","serialized_size","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","version","version","zero"],"q":[[0,"chain_core"],[3,"chain_core::abor"],[81,"chain_core::abor::DecodeError"],[86,"chain_core::packer"],[137,"chain_core::property"]],"d":["","Tooling for packing and unpacking from streams","chain core properties","","","","Create a decoder on some data","ABOR Encoder","","","","ABOR Types","","","","","","","","","","","","","","","","","","cannot serialize more than 256 bytes of contiguous data","","","","","","","","","","Finalize the encoder into an immutable array of data","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Terminate an array","Array cannot contain more than 256 elements","","","","","","","","","","","","","","","","Add a 128-bit unsigned value in little endian format","","Add a 16-bit unsigned value in little endian format","","Add a 32-bit unsigned value in little endian format","","Add a 64-bit unsigned value in little endian format","","Add an unsigned byte","","","","","","The structure to support (de)serialization of binary data …","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Block property","A trait representing block dates.","Trait identifying the block identifier type. TODO: add a …","","the length of the blockchain (number of blocks)","the length of the blockchain (number of blocks)","The block date.","the block date (also known as a block number) represents …","Define that an object that can be read from an …","Define that an object can be read from a byte slice. This …","","A fragment is some item contained in a block, such as a …","The type representing fragments in this block.","Trait identifying the fragment identifier type. TODO: add …","A by-reference iterator over block’s fragments.","Defines the way to parse the object from a UTF-8 string.","Accessor to fragments within a block.","Access to the block header.","Trait identifying the block header type.","The block header type.","The block header id.","the Block identifier. It must be unique. This mean that 2 …","","The input type of the transaction (if none use <code>()</code>).","The iterable type of transaction inputs (if none use …","","","","","The output type of the transaction (if none use <code>()</code>).","The iterable type of transaction outputs (if none use …","","Define that an object can be written to an <code>std::io::Write</code> …","","","define a transaction within the blockchain. This …","Trait identifying the transaction identifier type.","","","the type associated to the version of a block","the type associated to the version of a block","","","","","","get the block’s chain length. The number of block …","get the block’s chain length. The number of block …","Retrieves the block’s date.","get the block date of the block","","","","","","","","","Returns a by-reference iterator over the fragments in the …","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Retrieves the block’s header.","Retrieves the block’s header id.","return the Block’s identifier.","Return the message’s identifier.","Returns a reference that can be used to iterate over …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns a reference that can be used to iterate over …","get the parent block identifier (the previous block in the …","get the parent block identifier (the previous block in the …","","","","Convenience method to serialize into a byte vector.","Default implementation, not efficient, not recommended to …","","","","","","","","","","","access the version of a given block","access the version of a given block","A special ID used to denote a non-existent block (e.g. the …"],"i":[0,0,0,8,8,0,0,0,3,3,3,0,3,3,8,8,8,8,8,1,1,7,8,3,1,7,8,3,1,7,8,3,8,3,7,7,7,1,8,7,8,3,1,7,8,3,8,7,1,7,8,3,1,7,1,7,7,8,3,1,7,8,3,1,7,8,3,1,7,8,3,1,7,1,7,1,7,1,7,1,7,33,33,34,35,34,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,36,37,36,37,0,0,38,0,39,0,39,0,0,0,0,40,36,37,41,42,42,21,21,27,21,42,42,0,0,21,21,0,0,21,21,36,37,0,21,27,21,27,36,37,36,37,43,44,43,44,21,21,27,27,39,21,21,27,27,45,38,40,36,37,41,42,21,27,46,42,36,37,21,27,47,47,47,21,27,21,27,21,27,21,27,21,27,36,37,48],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[[6,[5]],3]]]],[7,7],[8,8],[3,3],[[]],[[]],0,0,[[],7],[1,[[4,[3]]]],[[8,8],9],[7,[[6,[5]]]],[[8,10],[[4,[11]]]],[[3,10],[[4,[11]]]],[[]],[[]],[[]],[[]],[12,[[13,[8]]]],0,[[]],[[]],[[]],[[]],[[],1],[[],7],0,[7,7],[7,7],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],14],[[],14],[[],14],[[],14],[1,[[4,[15,3]]]],[[7,15],7],[1,[[4,[16,3]]]],[[7,16],7],[1,[[4,[17,3]]]],[[7,17],7],[1,[[4,[18,3]]]],[[7,18],7],[1,[[4,[12,3]]]],[[7,12],7],0,0,0,0,0,0,[[]],[[]],[19,2],[[[19,[20]]],[[4,[21]]]],[[]],[[[19,[20]]],[[4,[15,21]]]],[[[19,[20]]],[[4,[16,21]]]],[[[19,[20]]],[[4,[17,21]]]],[[[19,[20]]],[[4,[18,21]]]],[[[19,[20]],2],[[4,[[22,[12,5]],21]]]],[[[19,[20]]],[[4,[15,21]]]],[[[19,[20]]],[[4,[16,21]]]],[[[19,[20]]],[[4,[17,21]]]],[[[19,[20]]],[[4,[18,21]]]],[[[19,[20]]],[[4,[23,21]]]],[[[19,[20]]],[[4,[24,21]]]],[[19,2],[[4,[21]]]],[[[19,[20]]],[[4,[12,21]]]],[19,9],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[19],[[],19],[[[19,[25]]],2],[[[19,[26]],15],[[4,[27]]]],[[[19,[26]],16],[[4,[27]]]],[[[19,[26]],17],[[4,[27]]]],[[[19,[26]],18],[[4,[27]]]],[[[19,[26]]],[[4,[27]]]],[[[19,[26]],15],[[4,[27]]]],[[[19,[26]],16],[[4,[27]]]],[[[19,[26]],17],[[4,[27]]]],[[[19,[26]],18],[[4,[27]]]],[[[19,[26]],12],[[4,[27]]]],[[[19,[20]],22],[[4,[2,21]]]],[[[19,[25]],2]],[[19,2]],[[],4],[[],4],[[],14],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,[[4,[21]]]],[19,[[4,[21]]]],[19,[[4,[21]]]],[19,[[4,[21]]]],[[21,10],[[4,[11]]]],[[21,10],[[4,[11]]]],[[27,10],[[4,[11]]]],[[27,10],[[4,[11]]]],[[]],[[]],[28,21],[28,27],[[]],[[17,17]],[29,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30],[30],[19,[[4,[27]]]],[[],[[4,[[22,[12,5]],27]]]],[[],2],[21,[[13,[31]]]],[27,[[13,[31]]]],[[],32],[[],32],[[],4],[[],4],[[],4],[[],4],[[],14],[[],14],[[]],[[]],[[]]],"c":[],"p":[[3,"Decoder"],[15,"usize"],[4,"DecodeError"],[4,"Result"],[3,"Global"],[3,"Box"],[3,"Encoder"],[4,"Tag"],[15,"bool"],[3,"Formatter"],[3,"Error"],[15,"u8"],[4,"Option"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"Codec"],[8,"Read"],[4,"ReadError"],[3,"Vec"],[3,"NonZeroU32"],[3,"NonZeroU64"],[3,"Cursor"],[8,"Write"],[4,"WriteError"],[3,"Error"],[15,"str"],[3,"Demand"],[8,"Error"],[3,"String"],[13,"TypeMismatch"],[13,"StreamTooSmall"],[13,"StreamPending"],[8,"Header"],[8,"Block"],[8,"FromStr"],[8,"HasFragments"],[8,"HasHeader"],[8,"Fragment"],[8,"Transaction"],[8,"Deserialize"],[8,"DeserializeFromSlice"],[8,"BlockDate"],[8,"ChainLength"],[8,"Serialize"],[8,"BlockId"]]},\
"chain_crypto":{"doc":"","t":"IICENNNNNQNIINDSSQQDEEQSSSSQDEIDQEEINNNNNNNNNSIEIQEAAAKAAKAKKKAAAAMKAKAKKMKAKKKAFFFMMDDDCDAAAAAAWWWDDDDFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGLLLLLLLLLLLLLLLRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDFLLLALLLLLLLLLLLALLLLLLWWDDSDFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLWNNERRNNNNSNSSDDRSRGDSRDDDSSRFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLFLLLFLFLLLLLLLFLFLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLCDFLLLLLLLLLLLLLLLLALWWSSSDDDDFFFLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLAADLLLLLLLLLLSDLLMLLLLLLLLLMLLLLLLLLNENRNLLLLFFLLLLFLLLLLSSINNENGNLLLLLLLLLLFKLLKFLLLMMMMWWWDDIQQDESNNDFFFFFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLOLLLLLLLMMAAOOSSDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLENINLLLLLLLKLLLLLKLWDESRNNGFFLLLLLLLLLLLLLLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKIINNDSSQQDEESSQDEINNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKLKLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNERRNRRNNRRRNNLLLLFFLLLLFFFFFFFFFLLLLLDDLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLLNNNSSIDQEEINNNEILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLKKMLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLMMWWDDFFLFFLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLNQQNSIQELLLLLKLLLKLLLLKFFFL","n":["AsymmetricKey","AsymmetricPublicKey","Blake2b256","EvolvingStatus","Failed","Failed","Failed","HexMalformed","HexMalformed","Input","Invalid","KeyEvolvingAlgorithm","KeyEvolvingSignatureAlgorithm","KeyInvalid","KeyPair","PUBLIC_BECH32_HRP","PUBLIC_KEY_SIZE","PubAlg","Public","PublicKey","PublicKeyError","PublicKeyFromStrError","RandomOutput","SECRET_BECH32_HRP","SECRET_KEY_SIZE","SIGNATURE_BECH32_HRP","SIGNATURE_SIZE","Secret","SecretKey","SecretKeyError","SecretKeySizeStatic","Signature","Signature","SignatureError","SignatureFromStrError","SigningAlgorithm","SizeInvalid","SizeInvalid","SizeInvalid","StructureInvalid","StructureInvalid","StructureInvalid","Success","Success","Success","VERIFIED_RANDOM_SIZE","VerifiableRandomFunction","Verification","VerificationAlgorithm","VerifiedRandomOutput","VrfVerification","algorithms","asymlock","bech32","compute_public","digest","ec","evaluate_and_prove","evolving","generate","get_period","get_period","hash","kes","key","multilock","phantom","public_from_binary","role","secret_from_binary","sign","sign","signature_from_bytes","signdata","strip_verification_output","testing","update","verify","verify_bytes","vrf","vrf_evaluate_and_prove","vrf_verified_get_output","vrf_verify","expected","got","Ed25519","Ed25519Bip32","Ed25519Extended","RistrettoGroup2HashDh","SumEd25519_12","ed25519","ed25519_derive","ed25519_extended","sumed25519","vrf","zkps","","","","Ed25519","Priv","Pub","Sig","_strategy_of_0","_strategy_of_0","_strategy_of_0","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","as_ref","as_ref","as_ref","base32_len","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","compute_public","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","fmt","fmt","fmt","fmt","from","from","from","from","generate","hash","into","into","into","into","public_from_binary","secret_from_binary","sign","signature_from_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify_bytes","vzip","vzip","vzip","vzip","write_base32","write_base32","write_base32","Ed25519Bip32","XSig","borrow","borrow_mut","compute_public","from","generate","into","public_from_binary","secret_from_binary","sign","signature_from_bytes","try_from","try_into","type_id","verify_bytes","vzip","EXTENDED_KEY_SIZE","Ed25519Extended","ExtendedPriv","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","compute_public","encode_hex","encode_hex_upper","from","from","from","generate","into","into","secret_from_binary","sign","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","DEPTH","SumEd25519_12","_to_fn_ptr","arbitrary_with","borrow","borrow_mut","common","compute_public","fmt","from","generate","get_period","get_period","into","public_from_binary","secret_from_binary","sign","signature_from_bytes","sum","try_from","try_into","type_id","update","verify_bytes","vzip","","","Depth","Hash","SIZE","Seed","_strategy_of_0","_strategy_of_0","_to_fn_ptr","_to_fn_ptr","arbitrary_with","arbitrary_with","as_ref","base32_len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","decr","encode_hex","encode_hex_upper","eq","eq","fmt","fmt","fmt","from","from","from","from_bytes","from_slice","half","incr","into","into","into","keygen_1","set_zero","split_seed","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_base32","zero","","DataInZeroArea","Ed25519Signature","Error","INDIVIDUAL_PUBLIC_SIZE","INDIVIDUAL_SECRET_SIZE","InvalidPublicKeySize","InvalidSecretKeySize","InvalidSignatureCount","InvalidSignatureSize","KEYPAIR_OFFSET","KeyCannotBeUpdatedMore","MERKLE_PKS_OFFSET","MERKLE_PKS_OFFSET","MerklePublicKeys","MerkleSignaturePublicKeys","PERIOD_SERIALIZE_SIZE","PK_OFFSET","PUBLIC_KEY_SIZE","PeriodSerialized","PublicKey","SIGMA_OFFSET","SIGMA_SIZE","SecretKey","Seeds","Signature","T_OFFSET","T_OFFSET","USE_TRUNCATE","_strategy_of_0","_to_fn_ptr","arbitrary_with","as_bytes","as_bytes","as_ref","as_ref","as_ref","base32_len","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","compute_public","create","create","data","depth","depth","depth","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_ed25519_publickey","generate_leftmost_rs","get_merkle_pks","hash","hash","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_updatable","keygen","len","len","len","maximum_secret_key_size","merkle_pks","minimum_secret_key_size","new","next","next","next","next_back","next_back","pk","pkeygen","rs_extend","rs_from_period","rs_pop","seed_offset","seed_offset_index","set_merkle_pks","set_sk","set_t","sigma","sign","signature_size","size_bytes","sk","t","t","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","write_base32","ProvenOutputSeed","RistrettoGroup2HashDh","_to_fn_ptr","arbitrary_with","borrow","borrow_mut","compute_public","evaluate_and_prove","fmt","from","generate","into","public_from_binary","secret_from_binary","strip_verification_output","try_from","try_into","type_id","verify","vrf","vzip","","","BYTES_LEN","BYTES_LEN","BYTES_LEN","OutputSeed","ProvenOutputSeed","PublicKey","SecretKey","_strategy_of_0","_strategy_of_1","_to_fn_ptr","arbitrary_with","as_bytes","as_bytes","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","check_base32","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","dleq_proof","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","evaluate","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes_unverified","hash","into","into","into","into","prove","public","public","random","secret","to_buffer","to_buffer","to_bytes","to_output","to_output","to_owned","to_owned","to_owned","to_owned","to_verifiable_output","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u","verifiable_output","verify","vzip","vzip","vzip","vzip","write_base32","write_base32","challenge_context","dleq","ChallengeContext","borrow","borrow_mut","first_challenge","from","into","new","try_from","try_into","type_id","vzip","BYTES_LEN","Zkp","borrow","borrow_mut","challenge","clone","clone_into","eq","fmt","from","from_bytes","generate","hash","into","response","to_bytes","to_owned","try_from","try_into","type_id","verify","vzip","write_to_bytes","DataTooSmall","DecryptionError","PointInvalid","SCHEME_OVERHEAD","TagMismatch","borrow","borrow_mut","clone","clone_into","decrypt","encrypt","eq","fmt","from","into","shared_key_to_symmetric_key","to_owned","try_from","try_into","type_id","vzip","BECH32_HRP","BYTES_LEN","Bech32","Bech32Malformed","DataInvalid","Error","HrpInvalid","Result","UnexpectedDataLen","borrow","borrow_mut","data_invalid","fmt","fmt","from","from","into","provide","source","to_bech32_from_bytes","to_bech32_str","to_string","try_from","try_from_bech32_str","try_from_bech32_to_bytes","try_into","type_id","vzip","actual","actual","expected","expected","","","","Context","Digest","DigestAlg","DigestContext","DigestData","DigestOf","Error","HASH_SIZE","InvalidDigestSize","InvalidHexEncoding","TryFromSliceError","_strategy_of_0","_strategy_of_inner","_strategy_of_marker","_to_fn_ptr","_to_fn_ptr","append_data","append_data","arbitrary","arbitrary","arbitrary_with","arbitrary_with","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","coerce","default","define_from_instances","digest","digest","digest_byteslice","digest_with","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","finalize","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","inner","into","into","into","into","into","marker","new","new","partial_cmp","partial_cmp","provide","source","to_bech32_str","to_bech32_str","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bech32_str","try_from_bech32_str","try_from_slice","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","typed_define_from_instances","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","expected","got","macros","ristretto255","gen_group_tests","std_ops_gen","BYTES_LEN","BYTES_LEN","GroupElement","Scalar","ScalarExp","add","add","add","add","add","add","add","add","arbitrary_with","as_bytes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compress","eq","eq","exp_iter","fmt","fmt","from","from","from","from","from_bytes","from_bytes","from_hash","from_u64","generator","hash","hash","hash_to_scalar","increment","into","into","into","into_iter","inverse","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","multiscalar_multiplication","negate","next","next_exp_x","one","power","random","size_hint","sub","sub","sub","sub","sub","sub","sub","sub","sum","sum","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vartime_multiscalar_multiplication","vzip","vzip","vzip","x","zero","zero","EvolvingStatus","Failed","KeyEvolvingAlgorithm","Success","borrow","borrow_mut","clone","clone_into","eq","fmt","from","get_period","into","to_owned","try_from","try_into","type_id","update","vzip","","Blake2b256","Error","HASH_SIZE","HASH_SIZE_256","InvalidHashSize","InvalidHexEncoding","Result","_strategy_of_0","_to_fn_ptr","append_data","arbitrary","arbitrary_with","as_hash_bytes","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone","clone_into","clone_into","cmp","define_blake2b_new","define_hash_object","encode_hex","encode_hex_upper","eq","eq","finalize","fmt","fmt","fmt","fmt","from","from","from","from","from_str","hash","into","into","new","new","partial_cmp","provide","source","to_bech32_str","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from_bech32_str","try_from_slice","try_from_slice","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","KeyEvolvingSignatureAlgorithm","get_period","AsymmetricKey","AsymmetricPublicKey","HexMalformed","KeyInvalid","KeyPair","PUBLIC_BECH32_HRP","PUBLIC_KEY_SIZE","PubAlg","Public","PublicKey","PublicKeyError","PublicKeyFromStrError","SECRET_BECH32_HRP","SECRET_KEY_SIZE","Secret","SecretKey","SecretKeyError","SecretKeySizeStatic","SizeInvalid","SizeInvalid","StructureInvalid","StructureInvalid","arbitrary","arbitrary","arbitrary_with","arbitrary_with","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compute_public","encode_hex","encode_hex_upper","eq","eq","eq","eq","evolve","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_binary","from_binary","from_str","generate","generate","generate","get_period","hash","inner","into","into","into","into","into","into","into_keys","leak_secret","partial_cmp","private_key","provide","provide","provide","public_from_binary","public_key","secret_from_binary","sign","sign_slice","source","test","to_bech32_str","to_bech32_str","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bech32_str","try_from_bech32_str","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","DataNoHeader","DataTooSmall","DecryptionError","EPHEMERAL_PK_SIZE","HEADER_SIZE","HeaderNotValid","PAD1","PAD2","PkNotParticipant","PointInvalid","RECIPIENT_KEY_SIZE","SESSION_KEY_SIZE","TAG_SIZE","TagMismatch","VersionUnknown","borrow","borrow_mut","clone","clone_into","decrypt","encrypt","eq","fmt","from","into","nb_participants","participants","prefix_size","recipient_public_key_nth","recipient_public_key_nth_point","recipient_session_key_nth","recipient_start","scheme_overhead","shared_key_to_symmetric_key","to_owned","try_from","try_into","type_id","vzip","PublicKey","SecretKey","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","eq","from","from","generate","hash","inner","inner","into","into","marker","marker","partial_cmp","role","role","to_owned","to_owned","to_public","try_from","try_from","try_into","try_into","type_id","type_id","unrole","unrole","vzip","vzip","Failed","HexMalformed","Invalid","SIGNATURE_BECH32_HRP","SIGNATURE_SIZE","SafeSignatureCoerce","Signature","Signature","SignatureError","SignatureFromStrError","SigningAlgorithm","SizeInvalid","StructureInvalid","Success","Verification","VerificationAlgorithm","arbitrary","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coerce","encode_hex","encode_hex_upper","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_binary","from_str","into","into","into","into","phantom","provide","provide","safe_coerce","sign","signature_from_bytes","signdata","source","to_bech32_str","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from_bech32_str","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","verify_bytes","verify_slice","vzip","vzip","vzip","vzip","write_base32","expected","got","","","TestCryptoGen","TestCryptoRng","_strategy_of_0","_to_fn_ptr","arbitrary","arbitrary_public_key","arbitrary_secret_key","arbitrary_with","as_rngcore","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fill_bytes","fmt","from","from","from_seed","get_rng","into","into","keypair","next_u32","next_u64","public_key_strategy","secret_key","static_secret_key","to_owned","try_fill_bytes","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Failed","Input","RandomOutput","Success","VERIFIED_RANDOM_SIZE","VerifiableRandomFunction","VerifiedRandomOutput","VrfVerification","borrow","borrow_mut","clone","clone_into","eq","evaluate_and_prove","fmt","from","into","strip_verification_output","to_owned","try_from","try_into","type_id","verify","vrf_evaluate_and_prove","vrf_verified_get_output","vrf_verify","vzip"],"q":[[0,"chain_crypto"],[83,"chain_crypto::SignatureError"],[85,"chain_crypto::algorithms"],[96,"chain_crypto::algorithms::ed25519"],[186,"chain_crypto::algorithms::ed25519_derive"],[203,"chain_crypto::algorithms::ed25519_extended"],[236,"chain_crypto::algorithms::sumed25519"],[261,"chain_crypto::algorithms::sumed25519::common"],[327,"chain_crypto::algorithms::sumed25519::sum"],[500,"chain_crypto::algorithms::vrf"],[521,"chain_crypto::algorithms::vrf::vrf"],[623,"chain_crypto::algorithms::zkps"],[625,"chain_crypto::algorithms::zkps::challenge_context"],[636,"chain_crypto::algorithms::zkps::dleq"],[659,"chain_crypto::asymlock"],[680,"chain_crypto::bech32"],[708,"chain_crypto::bech32::Error"],[712,"chain_crypto::digest"],[857,"chain_crypto::digest::Error"],[859,"chain_crypto::ec"],[861,"chain_crypto::ec::macros"],[863,"chain_crypto::ec::ristretto255"],[966,"chain_crypto::evolving"],[985,"chain_crypto::hash"],[1052,"chain_crypto::kes"],[1054,"chain_crypto::key"],[1206,"chain_crypto::multilock"],[1245,"chain_crypto::role"],[1283,"chain_crypto::sign"],[1381,"chain_crypto::sign::SignatureError"],[1383,"chain_crypto::testing"],[1424,"chain_crypto::vrf"]],"d":["","","","Evolving status","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simple Assymmetric locking mechanism using:","","","module to provide some handy interfaces atop the hashes so …","Module defining the Group Elements and Scalar structures …","","","","Get the period associated with this signature","Get the period associated with this signature","module to provide some handy interfaces atop the hashes so …","","","Similar to asymlock but takes a set of recipients instead …","","","","","","","","","","","Update the secret key to the next period","","","","Evaluate the VRF for a specific input and return a …","","Verify the VRF output for a specific input is correct","","","ED25519 Signing Algorithm","Ed25519 BIP32 Signature algorithm","ED25519 Signing Algorithm with extended secret key","","","","","","","","","","","","ED25519 Signing Algorithm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ed25519 BIP32 Signature algorithm","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","ED25519 Signing Algorithm with extended secret key","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Secret Key in the binary tree sum composition of the …","","Signature using the repetitive MMM sum composition","","","","","","","","Get the bytes representation of the signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Generate a keypair using the seed as master seed for the …","","","","","","","","","","","","","","Generate the public key from a specific level and a given …","","","","","","","","","","","","Compute the size in bytes of a signature currently this is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","VRF","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Verifiable Random Function (VRF) implementation using the …","","","","","","","VRF Output (Point)","VRF Proof of generation","VRF Public Key","VRF Secret Key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate a Proof","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a proof, for the given parameters; no check is made …","Get the public key associated with a secret key","","Create a new random secret key","","","","Serialize the secret key in binary form","Get the output for this input and a known suffix","","","","","","","","","","","","","","","","","","","","Get the verifiable output and the associated input base …","Verify a proof for a given public key and a data slice","","","","","","","","Non-interactive Zero Knowledge proof of Discrete Logarithm …","Challenge context for Discrete Logarithm Equality proof. …","","","Generation of the <code>first_challenge</code>. This challenge is …","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Initialise the challenge context, by including the common …","","","","","","Proof of correct decryption. Note: if the goal is to …","","","","","","","","Returns the argument unchanged.","","Generate a DLEQ proof","","Calls <code>U::from(self)</code>.","","","","","","","Verify a DLEQ proof","","","","","","","","","","","","Decrypt data in the asymmetric lock. this is the dual of …","Encrypt data in an assymetric lock","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","The human-readable prefix that is used to represent the …","Length of the encoded binary data.","Bech32 encoding for fixed-size binary objects.","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Produces a Bech32 string format representation of the …","","","Decodes the object from its Bech32 string representation.","","","","","","","","","","","","A Digest Context for the H digest algorithm","","","","","A typed version of Digest","","","","","","","","","","","","Append data in the context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Coerce a digest of T, to a digest of U","","","Get the digest of a slice of data.","Get the digest of object T, given its AsRef&lt;u8&gt; …","","Get the digest of object T, given its serialization …","","","","","","","","","Finalize a context and create a digest","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new digest context","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal macros","","","","","Size of the byte representation of <code>GroupElement</code>. We always …","","","Provides an iterator over the powers of a <code>Scalar</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator of the powers of <code>x</code>.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns none if slice is not canonical","","Point from hash","","","","","","Increment a","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","multiplicative inverse","","","","","","","","","","","","","","Constant-time multiscalar multiplication using Straus …","","","","multiplicative identity","Raises <code>x</code> to the power <code>n</code> using binary exponentiation, with …","","","","","","","","","","","","","","","","","","","","","","","","","","","Variable multiscalar multiplication. This function is …","","","","","additive identity","","Evolving status","","","","","","","","","","Returns the argument unchanged.","Get the period associated with this signature","Calls <code>U::from(self)</code>.","","","","","Update the secret key to the next period","","","Blake2b 256 bits","","","","","","","","","","","","","","","","","","","","","","","","","defines a blake2b object","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Get the period associated with this signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Evolve the secret key to the next period","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Get the period associated with the current instance of the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decrypt data in the asymmetric lock. this is the dual of …","Encrypt data in an assymetric lock for multiple recipients","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","an Arbitrary friendly cryptographic generator","A faster non-cryptographic RNG to be used in tests. NOTE: …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","get the nth deterministic RNG","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the nth deterministic keypair","","","","Get the nth deterministic secret key","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Evaluate the VRF for a specific input and return a …","","Verify the VRF output for a specific input is correct",""],"i":[0,0,0,0,8,10,9,92,103,109,103,0,0,92,0,91,91,89,91,0,0,0,109,89,98,102,102,89,0,0,0,0,102,0,0,0,6,4,7,6,4,7,8,10,9,109,0,0,0,109,0,0,0,0,89,0,0,109,0,89,93,110,0,0,0,0,97,91,0,89,0,96,102,97,109,0,93,109,102,0,0,0,0,111,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,14,15,16,14,15,16,14,15,16,24,14,15,16,24,14,15,16,14,15,16,14,15,16,14,15,16,24,14,15,16,14,15,16,15,24,14,15,16,24,14,15,16,24,15,24,14,15,16,24,24,24,24,14,15,16,24,14,15,16,24,14,15,16,24,14,15,16,24,24,14,15,16,14,15,16,0,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,0,0,30,30,113,30,113,30,30,30,30,113,30,30,113,30,30,113,113,30,113,113,30,113,30,113,30,113,30,113,30,30,0,0,0,32,32,32,0,32,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,32,32,0,0,0,0,34,0,0,0,0,0,34,36,34,34,35,34,36,35,34,36,34,35,34,36,35,34,36,36,34,34,35,34,35,34,36,35,34,36,34,34,36,36,35,34,36,0,34,0,35,34,36,36,35,34,36,35,34,36,35,34,36,35,34,36,34,34,0,41,41,0,0,0,41,41,41,41,38,41,38,33,0,0,0,33,0,0,0,33,0,0,0,0,38,33,0,0,0,31,31,33,38,31,33,38,31,33,43,44,45,41,38,31,33,43,44,45,41,38,31,33,38,31,33,38,31,33,38,31,33,38,38,33,38,38,33,38,38,31,33,38,31,33,31,41,31,33,43,44,45,41,41,38,31,33,38,31,33,31,0,38,0,31,43,44,45,41,38,31,33,43,44,45,38,0,43,44,45,0,33,0,43,43,44,45,43,45,33,0,38,0,38,38,38,38,38,38,33,0,0,33,38,38,33,38,31,33,43,44,45,41,38,31,33,43,44,45,41,38,31,33,43,44,45,41,38,31,33,0,0,43,44,45,41,38,31,33,38,31,33,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,47,0,0,48,49,50,0,0,0,0,0,0,0,49,48,49,48,49,48,49,48,49,51,50,48,49,51,50,50,48,48,49,48,49,51,50,48,49,51,50,50,48,49,48,49,48,49,51,50,48,48,49,51,50,48,49,51,50,48,49,50,50,49,48,49,51,50,48,48,48,48,48,49,50,48,51,50,48,49,51,50,50,48,49,51,50,48,49,51,50,48,49,51,50,50,48,50,48,49,51,50,48,49,0,0,0,54,54,54,54,54,54,54,54,54,54,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,57,0,57,0,57,57,57,57,57,0,0,57,57,57,57,0,57,57,57,57,57,114,114,0,62,62,0,62,0,62,62,62,62,62,62,62,62,62,62,62,0,114,62,62,114,0,62,62,62,115,116,115,116,0,0,0,0,0,0,70,70,0,0,70,74,74,0,0,0,0,0,0,70,71,72,73,72,73,72,73,72,73,71,74,75,72,73,71,74,75,72,73,72,73,71,74,75,72,73,71,74,75,72,73,72,73,73,71,0,72,73,73,73,72,73,72,73,74,72,73,70,71,74,74,75,75,72,72,73,73,71,74,74,75,72,72,72,72,73,73,73,73,72,73,72,73,73,71,74,75,72,73,73,70,71,72,73,74,74,72,73,71,74,75,72,73,74,75,72,73,71,74,75,72,72,73,73,72,73,70,71,74,75,72,73,71,74,75,72,73,0,71,74,75,72,73,72,73,117,117,0,0,0,0,55,52,0,0,0,55,55,55,55,52,52,52,52,52,55,55,52,81,55,52,81,55,52,81,55,52,81,52,55,52,55,55,52,55,55,52,81,55,52,52,55,52,55,52,55,55,55,52,81,81,55,55,55,55,55,55,55,55,55,52,52,52,52,52,52,55,81,81,55,55,55,81,55,55,55,55,52,52,52,52,55,52,55,52,55,52,81,55,52,81,55,52,81,55,52,81,52,55,52,81,81,55,52,0,8,0,8,8,8,8,8,8,8,8,93,8,8,8,8,8,93,8,0,0,0,53,0,87,87,0,0,0,53,53,53,53,53,53,87,53,87,53,53,87,53,87,53,53,0,0,53,53,87,53,53,87,87,53,53,87,87,53,53,53,53,87,53,53,53,53,87,87,53,87,53,87,53,87,53,53,53,53,87,53,87,53,87,53,53,0,110,0,0,92,92,0,91,91,89,91,0,0,0,89,98,89,0,0,0,6,4,6,4,11,90,12,90,12,12,11,12,90,6,4,92,11,12,90,6,4,92,12,11,12,90,6,4,92,11,12,90,6,4,92,12,89,12,12,12,6,4,92,11,11,12,12,90,90,6,6,4,4,92,92,11,12,90,90,6,6,4,4,92,11,12,12,89,11,90,11,12,12,11,12,90,6,4,92,90,11,12,90,6,4,92,91,90,89,11,11,92,0,11,12,11,12,90,6,4,92,11,12,90,6,4,92,11,12,90,6,4,92,11,12,11,12,90,6,4,92,11,12,90,6,4,92,11,12,90,6,4,92,12,99,99,0,0,0,99,0,0,99,99,0,0,0,99,99,99,99,99,99,0,0,99,99,99,99,0,0,0,0,0,0,0,0,0,99,99,99,99,99,0,0,100,101,100,101,100,101,100,101,101,101,100,101,100,101,100,101,100,101,100,101,101,100,101,100,101,100,100,101,100,101,100,101,100,101,100,101,10,103,103,102,102,0,0,102,0,0,0,7,7,10,0,0,97,97,97,97,10,7,103,97,10,7,103,97,97,10,7,103,97,10,7,103,97,97,97,10,7,103,97,97,10,7,7,103,103,97,10,10,7,7,103,97,97,97,10,7,103,97,7,103,97,96,102,97,103,97,97,10,7,103,97,7,103,97,10,7,103,97,97,10,7,103,97,10,7,103,97,102,97,97,10,7,103,97,111,111,0,0,0,0,0,0,106,0,0,106,107,107,106,107,106,106,106,107,106,107,106,107,106,107,106,106,107,107,0,106,0,106,107,107,106,107,106,107,106,107,106,9,109,109,9,109,0,109,0,9,9,9,9,9,109,9,9,9,109,9,9,9,9,109,0,0,0,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,[[[0,[1,2]]]],0,[[[0,[1,2]]]],[[],3],[[],3],0,0,0,0,0,[[],[[5,[4]]]],0,[[],[[5,[6]]]],0,[[]],[[],[[5,[7]]]],0,[[]],0,[[],8],[[],9],[[],10],0,[[11,[0,[1,2]]]],[[]],[12,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[13,13],[13,13],[13,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14],[15],[16],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[20,[18,19]]]]]],[[],[[5,[[20,[18,19]]]]]],[[],[[5,[[20,[18,19]]]]]],[14,14],[15,15],[16,16],[[]],[[]],[[]],[[]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[15,15],23],[[24,25],26],[[14,25],26],[[15,25],26],[[16,25],26],[[]],[[]],[[]],[[]],[[[0,[1,2]]]],[15],[[]],[[]],[[]],[[]],[[],[[5,[4]]]],[[],[[5,[6]]]],[[],16],[[],[[5,[7]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[],27],[[],27],[[],10],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[[0,[1,2]]]],[[]],[[],[[5,[4]]]],[[],[[5,[6]]]],[[],[[29,[28]]]],[[],[[5,[7]]]],[[],5],[[],5],[[],27],[[],10],[[]],0,0,0,[30],[[],17],[[]],[[]],[[]],[[]],[[],[[5,[[20,[18,19]]]]]],[30,30],[[]],[[]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[]],[[],30],[[]],[[[0,[1,2]]]],[[]],[[]],[[],[[5,[6]]]],[[],16],[[]],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[]],[[]],[[],5],0,0,[[]],[[]],[[]],[[]],0,[[],31],[[32,25],26],[[]],[[[0,[1,2]]]],[[],3],[[],3],[[]],[[],[[5,[4]]]],[[],[[5,[6]]]],[[],33],[[],[[5,[7]]]],0,[[],5],[[],5],[[],27],[[],8],[[],10],[[]],0,0,0,0,0,0,[13,13],[13,13],[[]],[[]],[[]],[[]],[34],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[20,[18,19]]]]]],[35,35],[34,34],[36,36],[[]],[[]],[[]],[36,36],[[],[[22,[21]]]],[[],[[22,[21]]]],[[35,35],23],[[34,34],23],[[35,25],26],[[34,25],26],[[36,25],26],[[]],[[]],[[]],[[],34],[[],34],[36,17],[36,36],[[]],[[]],[[]],[34,37],[34],[34],[[]],[[]],[[]],[36,17],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[],5],[[],34],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[13,13],[[]],[[]],[31],[33],[38],[31],[33],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[20,[18,19]]]]]],[[],[[5,[[20,[18,19]]]]]],[[],[[5,[[20,[18,19]]]]]],[38,38],[31,31],[33,33],[[]],[[]],[[]],[38,31],[[17,37],38],[[17,39,40],33],0,[38,36],[33,36],0,[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[31,31],23],[[41,25],26],[[31,25],26],[[33,25],26],[[]],[[]],[[]],[42,41],[[]],[[]],[[]],[[]],[36,[[5,[38,41]]]],[[],[[5,[31,41]]]],[36,[[5,[33,41]]]],[40,31],[[20,36,34],37],[[38,17]],[[31,31],31],[31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,23],[[36,34]],[43,17],[44,17],[45,17],[36,17],[33,45],[36,17],[[],43],[43,46],[44,46],[45,46],[43,46],[45,46],[33,40],[[36,34],31],[[38,17,44]],[[36,17],3],[38,[[46,[34]]]],[36,17],[[36,17],17],[[38,17]],[[38,37]],[[38,17]],[33,39],[38,33],[36,17],[33,17],[38,37],[38,17],[33,17],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[38,[[5,[41]]]],[[31,33],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[[0,[1,2]]]],[[47,25],26],[[]],[[[0,[1,2]]]],[[]],[[],[[5,[4]]]],[[],[[5,[6]]]],[[]],[[],5],[[],5],[[],27],[[],9],0,[[]],0,0,0,0,0,0,0,0,0,[13,13],[13,13],[[]],[[]],[48],[49],[48],[49],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50],0,[[],[[5,[[20,[18,19]]]]]],[[],[[5,[[20,[18,19]]]]]],[48,48],[49,49],[51,51],[50,50],[[]],[[]],[[]],[[]],0,[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[48,48],23],[[49,49],23],[[51,51],23],[[50,50],23],[48,50],[[48,25],26],[[49,25],26],[[51,25],26],[[50,25],26],[[]],[[]],[[]],[[]],[[],[[46,[48]]]],[[],[[5,[49,4]]]],[49,[[46,[50]]]],[[],[[46,[50]]]],[49],[[]],[[]],[[]],[[]],[[48,52,51],50],[48,49],0,[[[0,[1,2]]],48],0,[49],[50],[48],[51,53],[50,51],[[]],[[]],[[]],[[]],[[50,49],[[46,[51]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[],27],[[],27],0,[48],[[50,49],23],[[]],[[]],[[]],[[]],[[],5],[[],5],0,0,0,[[]],[[]],[[54,52,52],55],[[]],[[]],[[52,52,52,52],54],[[],5],[[],5],[[],27],[[]],0,0,[[]],[[]],0,[56,56],[[]],[[56,56],23],[[56,25],26],[[]],[[],[[46,[56]]]],[[52,52,52,52,55],56],[56],[[]],0,[56],[[]],[[],5],[[],5],[[],27],[[56,52,52,52,52],23],[[]],[56],0,0,0,0,0,[[]],[[]],[57,57],[[]],[55,[[5,[57]]]],[52,[[20,[28]]]],[[57,57],23],[[57,25],26],[[]],[[]],[52,58],[[]],[[],5],[[],5],[[],27],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[[0,[59,60,61]]],62],[[62,25],26],[[62,25],[[5,[63]]]],[64,62],[[]],[[]],[65],[62,[[46,[59]]]],[[],66],[[],66],[[],66],[[],5],[67,[[69,[68]]]],[67,[[69,[[20,[28]]]]]],[[],5],[[],27],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[13,13],[13,13],[13,13],[[]],[[]],[[]],[[[71,[70]]]],[[],[[72,[70]]]],[[],[[73,[70,60]]]],[[]],[[]],[[[72,[70]]]],[[[73,[70]]]],[[],17],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[20,[18,19]]]]]],[[],[[5,[[20,[18,19]]]]]],[[[71,[70]]],[[71,[70]]]],[74,74],[75,75],[[[72,[70]]],[[72,[70]]]],[[[73,[70]]],[[73,[70]]]],[[]],[[]],[[]],[[]],[[]],[[[72,[70]],[72,[70]]],76],[[[73,[70]],[73,[70]]],76],[[[73,[70]]],[[73,[70]]]],[[],[[71,[70]]]],0,[[],[[72,[70]]]],[[],[[73,[70,77]]]],[78,[[73,[70]]]],[79,[[73,[70]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[74,74],23],[[[72,[70]],[72,[70]]],23],[[[73,[70]],[73,[70]]],23],[[]],[[[71,[70]]],[[72,[70]]]],[[74,25],26],[[74,25],26],[[75,25],26],[[75,25],26],[[[72,[70]],25],26],[[[72,[70]],25],26],[[[73,[70]],25],26],[[[73,[70]],25],26],[[]],[80,74],[[]],[[]],[[]],[[[73,[70]]],[[72,[70]]]],[[],[[72,[53]]]],[53,[[72,[53]]]],[53,[[73,[53]]]],[[],[[73,[53]]]],[[[72,[70]]],[[73,[70]]]],[[]],[67,[[5,[[72,[70]]]]]],[67,[[5,[[73,[70]]]]]],[[[72,[70]]]],[[[73,[70]]]],0,[[]],[[]],[[]],[[]],[[]],0,[[]],[[],[[71,[70]]]],[[[72,[70]],[72,[70]]],[[46,[76]]]],[[[73,[70]],[73,[70]]],[[46,[76]]]],[65],[74,[[46,[59]]]],[[[72,[53]]],66],[[[73,[53]]],66],[[]],[[]],[[]],[[]],[[]],[[],66],[[],66],[[],66],[[],66],[[],5],[[],5],[[],5],[[],5],[[],[[5,[[72,[70]]]]]],[[],[[5,[[73,[70]]]]]],[[],5],[67,[[69,[[72,[53]]]]]],[67,[[69,[[73,[53]]]]]],[[],[[5,[74]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[],27],[[],27],[[],27],0,[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,[[55,55]],[[55,55]],[[55,55],55],[[55,55]],[[52,52]],[[52,52]],[[52,52],52],[[52,52]],[[]],[55],[[]],[[]],[[]],[[]],[[]],[[]],[55,55],[52,52],[81,81],[[]],[[]],[[]],[52,82],[[55,55],23],[[52,52],23],[55,81],[[55,25],26],[[52,25],26],[23,55],[[]],[[]],[[]],[[],[[46,[55]]]],[[],[[46,[52]]]],[[],52],[83,55],[[],52],[55],[52],[84,55],[55],[[]],[[]],[[]],[[]],[55,55],[[55,52]],[[55,55]],[[55,52],52],[[55,55]],[[55,52]],[[55,52]],[[55,55]],[[55,55],55],[[52,83],52],[[52,55]],[[52,55],52],[[52,55]],[[52,55]],[[85,85],52],[55,55],[81,[[46,[55]]]],0,[[],55],[[55,17],55],[[],55],[81],[[55,55]],[[55,55]],[[55,55],55],[[55,55]],[[52,52]],[[52,52]],[[52,52]],[[52,52],52],[86,[[46,[55]]]],[86,52],[55],[52],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[],27],[[85,85],52],[[]],[[]],[[]],0,[[],55],[[],52],0,0,0,0,[[]],[[]],[8,8],[[]],[[8,8],23],[[8,25],26],[[]],[[],3],[[]],[[]],[[],5],[[],5],[[],27],[[],8],[[]],0,0,0,0,0,0,0,0,[13,13],[[]],[[]],[[],53],[[]],[53],[53],[[],17],[[]],[[]],[[]],[[]],[[],[[5,[[20,[18,19]]]]]],[87,87],[53,53],[[]],[[]],[[53,53],76],0,0,[[],[[22,[21]]]],[[],[[22,[21]]]],[[87,87],23],[[53,53],23],[[]],[[87,25],26],[[87,25],26],[[53,25],26],[[53,25],26],[80,87],[[]],[[]],[[],53],[67,[[5,[53]]]],[53],[[]],[[]],[[],53],[[]],[[53,53],[[46,[76]]]],[65],[87,[[46,[59]]]],[53,66],[[]],[[]],[[],66],[[],66],[[],5],[[],5],[67,[[69,[53]]]],[[],[[88,[53]]]],[[],[[5,[74]]]],[[],5],[[],5],[[],27],[[],27],[[]],[[]],[[],5],0,[[],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[11,[89]]]],[[],[[90,[89]]]],[[]],[[]],[[[12,[91]]]],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[20,[18,19]]]]]],[[[11,[89]]],[[11,[89]]]],[[[12,[91]]],[[12,[91]]]],[[[90,[89]]],[[90,[89]]]],[6,6],[4,4],[92,92],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[91]],[12,[91]]],76],[[]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[[12,[91]],[12,[91]]],23],[[6,6],23],[[4,4],23],[[92,92],23],[[[11,[93]]],8],[[[11,[89]],25],26],[[[12,[91]],25],26],[[[12,[91]],25],26],[[[90,[89]],25],26],[[[90,[89]],25],26],[[6,25],26],[[6,25],26],[[4,25],26],[[4,25],26],[[92,25],26],[[92,25],26],[[]],[[]],[[[11,[89]]],[[90,[89]]]],[[]],[[]],[94,6],[95,4],[[]],[[]],[[],[[5,[[11,[89]],6]]]],[[],[[5,[[12,[91]],4]]]],[67,[[5,[[12,[91]]]]]],[[[0,[1,2]]]],[[[0,[1,2]]],[[11,[89]]]],[[[0,[1,2]]],[[90,[89]]]],[[[11,[93]]],3],[[[12,[91]]]],[[[12,[91]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[90,[89]]]],[[[11,[89]]]],[[[12,[91]],[12,[91]]],[[46,[76]]]],[[[90,[89]]],11],[65],[65],[65],[[],[[5,[4]]]],[[[90,[89]]],12],[[],[[5,[6]]]],[[[11,[96]]],[[97,[[0,[68,77]]]]]],[[[11,[96]]],[[97,[68]]]],[92,[[46,[59]]]],0,[[[11,[98]]],66],[[[12,[91]]],66],[[]],[[]],[[]],[[]],[[]],[[]],[[[11,[89]]],12],[[],66],[[],66],[[],66],[[],66],[[],66],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[67,[[5,[[11,[98]],62]]]],[67,[[5,[[12,[91]],62]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[99,99],[[]],[55,[[5,[99]]]],[[],[[20,[28]]]],[[99,99],23],[[99,25],26],[[]],[[]],[[],[[5,[17,99]]]],[[],[[5,[[20,[52]],99]]]],[17,17],[17],[17,[[5,[52,99]]]],[17],[17,17],[17,17],[[],58],[[]],[[],5],[[],5],[[],27],[[]],0,0,[[]],[[]],[[]],[[]],[[[100,[89]]],[[100,[89]]]],[[[101,[91]]],[[101,[91]]]],[[]],[[]],[[[101,[91]],[101,[91]]],76],[[[101,[91]],[101,[91]]],23],[[]],[[]],[[[0,[1,2]]],[[100,[89]]]],[[[101,[91]]]],0,0,[[]],[[]],0,0,[[[101,[91]],[101,[91]]],[[46,[76]]]],[[[11,[89]]],[[100,[89]]]],[[[12,[91]]],[[101,[91]]]],[[]],[[]],[[[100,[89]]],101],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[[100,[89]]],[[11,[89]]]],[[[101,[91]]],[[12,[91]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[97,[60,102]]]],[[[97,[68,102]]]],[[],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[[20,[18,19]]]]]],[[[97,[102]]],[[97,[102]]]],[10,10],[7,7],[103,103],[[]],[[]],[[]],[[]],[[[97,[68,102]]],[[97,[68,102]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[10,10],23],[[7,7],23],[[103,103],23],[[[97,[68,102]],25],26],[[[97,[68,102]],25],26],[[10,25],26],[[7,25],26],[[7,25],26],[[103,25],26],[[103,25],26],[[]],[23,10],[[]],[104,7],[[]],[[]],[[],[[5,[[97,[68,102]],7]]]],[67,[[5,[[97,[68,102]]]]]],[[]],[[]],[[]],[[]],0,[65],[65],[[[97,[68,102]]],[[97,[[0,[68,[105,[68]]]],102]]]],[[]],[[],[[5,[7]]]],0,[103,[[46,[59]]]],[[[97,[102]]],66],[[]],[[]],[[]],[[]],[[],66],[[],66],[[],66],[[],5],[[],5],[[],5],[[],5],[67,[[5,[[97,[102]],62]]]],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[],27],[[],27],[[[97,[[0,[68,77]],102]],12],10],[[],10],[[[97,[68,102]],12],10],[[]],[[]],[[]],[[]],[[],5],0,0,0,0,0,0,[13,13],[[]],[[],106],[[],12],[[],[[11,[89]]]],[[]],[[],1],[[]],[[]],[[]],[[]],[106,106],[[]],[107],[[106,25],26],[[]],[[]],[[],107],[[106,3],107],[[]],[[]],[[106,3],[[90,[89]]]],[107,3],[107,83],[[],13],[[106,3],[[11,[89]]]],[[],[[11,[89]]]],[[]],[107,[[5,[108]]]],[[],5],[[],5],[[],5],[[],5],[[],27],[[],27],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[9,9],[[]],[[9,9],23],[[[0,[1,2]]]],[[9,25],26],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],27],[[],9],[[11,[0,[1,2]]]],[[]],[12,9],[[]]],"c":[],"p":[[8,"RngCore"],[8,"CryptoRng"],[15,"u32"],[4,"PublicKeyError"],[4,"Result"],[4,"SecretKeyError"],[4,"SignatureError"],[4,"EvolvingStatus"],[4,"VrfVerification"],[4,"Verification"],[3,"SecretKey"],[3,"PublicKey"],[8,"Strategy"],[3,"Priv"],[3,"Pub"],[3,"Sig"],[15,"usize"],[3,"u5"],[3,"Global"],[3,"Vec"],[15,"char"],[8,"FromIterator"],[15,"bool"],[3,"Ed25519"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[15,"u8"],[3,"Signature"],[3,"ExtendedPriv"],[3,"PublicKey"],[3,"SumEd25519_12"],[3,"Signature"],[3,"Seed"],[3,"Hash"],[3,"Depth"],[3,"Keypair"],[3,"SecretKey"],[3,"Signature"],[3,"PublicKey"],[4,"Error"],[6,"SignatureError"],[3,"MerklePublicKeys"],[3,"Seeds"],[3,"MerkleSignaturePublicKeys"],[4,"Option"],[3,"RistrettoGroup2HashDh"],[3,"SecretKey"],[3,"PublicKey"],[3,"ProvenOutputSeed"],[3,"OutputSeed"],[3,"GroupElement"],[3,"Blake2b256"],[3,"ChallengeContext"],[3,"Scalar"],[3,"Zkp"],[4,"DecryptionError"],[6,"ChaCha20Poly1305"],[8,"Error"],[8,"Send"],[8,"Sync"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"Demand"],[3,"String"],[15,"str"],[8,"Sized"],[6,"Result"],[8,"DigestAlg"],[3,"Context"],[3,"Digest"],[3,"DigestOf"],[4,"Error"],[3,"TryFromSliceError"],[4,"Ordering"],[8,"AsRef"],[3,"ByteSlice"],[8,"FnOnce"],[4,"FromHexError"],[3,"ScalarExp"],[3,"CompressedRistretto"],[15,"u64"],[3,"Blake2b"],[8,"IntoIterator"],[8,"Iterator"],[4,"Error"],[6,"Result"],[8,"AsymmetricKey"],[3,"KeyPair"],[8,"AsymmetricPublicKey"],[4,"PublicKeyFromStrError"],[8,"KeyEvolvingAlgorithm"],[4,"PrivateKeyError"],[4,"PublicKeyError"],[8,"SigningAlgorithm"],[3,"Signature"],[8,"SecretKeySizeStatic"],[4,"DecryptionError"],[3,"SecretKey"],[3,"PublicKey"],[8,"VerificationAlgorithm"],[4,"SignatureFromStrError"],[4,"SignatureError"],[8,"SafeSignatureCoerce"],[3,"TestCryptoGen"],[3,"TestCryptoRng"],[3,"Error"],[8,"VerifiableRandomFunction"],[8,"KeyEvolvingSignatureAlgorithm"],[13,"SizeInvalid"],[3,"Ed25519Bip32"],[3,"Ed25519Extended"],[8,"Bech32"],[13,"HrpInvalid"],[13,"UnexpectedDataLen"],[13,"InvalidDigestSize"]]},\
"chain_impl_mockchain":{"doc":"","t":"","n":["account","accounting","block","certificate","chaineval","chaintypes","config","date","error","evm","fee","fragment","header","key","leadership","ledger","legacy","milli","multisig","multiverse","rewards","setting","stake","testing","tokens","transaction","treasury","update","utxo","value","vote","","AccountAlg","DelegationRatio","DelegationType","Identifier","Ledger","LedgerError","SpendingCounter","SpendingCounterIncreasing","Witness","_strategy_of_0","_to_fn_ptr","arbitrary","arbitrary_with","as_ref","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize_from_slice","drop","eq","fmt","fmt","from","from","hash","init","into","partial_cmp","serialize","serialized_size","test","to_owned","to_string","try_from","try_into","type_id","vzip","account","AlreadyExists","LastRewards","Ledger","LedgerError","NonExistent","NonZero","SpendingCounter","SpendingCounterError","SpendingCounterIncreasing","ValueError","account_state","add_account","add_rewards_to_account","add_value","add_value_or_account","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","exists","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","get_state","get_total_value","init","init","into","into","iter","last_rewards","new","provide","remove_account","set_delegation","source","spend","spend_with_no_counter_check","spending","test","to_owned","to_owned","to_string","token_add","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","","","","","AccountState","DELEGATION_RATIO_MAX_DECLS","DelegationRatio","DelegationType","Full","Iter","NonDelegated","Ratio","_strategy_of_0","_strategy_of_0","_strategy_of_parts","_strategy_of_pools","_to_fn_ptr","_to_fn_ptr","_to_weight","add","add_rewards","add_value","arbitrary","arbitrary","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","delegation","delegation","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","extra","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","is_valid","last_rewards","new","new","new_reward","next","parts","parts","pools","pools","set_delegation","spend","spend_unchecked","spending","to_owned","to_owned","to_owned","token_add","tokens","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","","","LastRewards","_strategy_of_epoch","_strategy_of_reward","_to_fn_ptr","add_for","arbitrary_with","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","epoch","eq","fmt","from","init","into","reward","to_owned","try_from","try_into","type_id","vzip","","CALLSITE","Error","InvalidLaneOrCounter","InvalidLaneValue","LANED_MASK","LANES","LANES_BITS","META","SpendingCounter","SpendingCounterIncreasing","SpendingCredentialInvalid","UNLANED_MASK","UNLANES_BITS","_strategy_of_0","_to_fn_ptr","arbitrary","arbitrary","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bytes","get_valid_counter","get_valid_counters","increment","increment_nth","init","init","init","into","into","into","lane","new","new_from_counter","new_from_counters","next_unchecked","next_verify","nexts","provide","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlaned_counter","vzip","vzip","vzip","zero","actual","expected","","BadEpochId","BadSlotId","BftProof","BftSignature","Block","BlockContentHash","BlockContentSize","BlockDate","BlockDateParseError","BlockVersion","ChainLength","Common","Contents","ContentsBuilder","DotMissing","Epoch","GenesisPraosProof","Header","HeaderId","KesSignature","Proof","SlotId","arbitrary","arbitrary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","builder","chain_length","clone","clone","clone","clone_into","clone_into","clone_into","cmp","contents","contents","date","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","epoch","eq","eq","eq","first","fmt","fmt","fmt","fmt","fmt","fragments","fragments","from","from","from","from","from_epoch_slot_id","from_str","from_str","hash","header","header","header","header","id","init","init","init","into","into","into","new_unchecked","next","next_epoch","parent_id","partial_cmp","provide","serialize","serialized_size","slot_id","source","test","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","vzip","vzip","vzip","builder","BftLeaderBindingSignature","Certificate","CertificatePayload","CertificateSlice","DecryptedPrivateTally","DecryptedPrivateTallyError","DecryptedPrivateTallyProposal","EvmMapping","EvmMapping","EvmMapping","EvmMapping","EvmMapping","ExternalProposalDocument","ExternalProposalId","Full","GenesisPraosLeaderHash","IndexSignatures","ManagementThreshold","MintToken","MintToken","MintToken","MintToken","OffChain","Operator","OwnerStakeDelegation","OwnerStakeDelegation","OwnerStakeDelegation","OwnerStakeDelegation","OwnerStakeDelegation","Owners","Parameters","PoolId","PoolOwnersSigned","PoolPermissions","PoolRegistration","PoolRegistration","PoolRegistration","PoolRegistration","PoolRegistration","PoolRegistrationHash","PoolRetirement","PoolRetirement","PoolRetirement","PoolRetirement","PoolRetirement","PoolSignature","PoolUpdate","PoolUpdate","PoolUpdate","PoolUpdate","PoolUpdate","Private","Private","Proposal","Proposals","Public","Public","PushProposal","SignedCertificate","StakeDelegation","StakeDelegation","StakeDelegation","StakeDelegation","StakeDelegation","Success","TallyProof","Treasury","UpdateProposal","UpdateProposal","UpdateProposal","UpdateProposal","UpdateProposal","UpdateProposalId","UpdateProposerId","UpdateVote","UpdateVote","UpdateVote","UpdateVote","UpdateVote","UpdateVoterId","VoteAction","VoteCast","VoteCast","VoteCast","VoteCast","VotePlan","VotePlan","VotePlan","VotePlan","VotePlan","VotePlanId","VotePlanProof","VoteTally","VoteTally","VoteTally","VoteTally","VoteTally","VoteTallyPayload","account_id","action","arbitrary","as_slice","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changes","clone","clone","clone","clone_into","clone_into","clone_into","committee_end","committee_public_keys","decrypt_shares","delegation","delegation","delegation","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","evm_mapping","external_id","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","init","init","init","init","inner","into","into","into","into","into_owned","keys","last_pool_reg_hash","mint_token","name","need_auth","new_pool_reg","operators","options","owners","payload","payload","payload_type","permissions","policy","pool","pool_id","pool_id","proposal_id","proposal_index","proposals","proposals","proposer_id","retirement_time","reward_account","rewards","serial","signature","start_validity","tally_result","test","to","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_proposal","update_vote","value","vote_cast","vote_end","vote_plan","vote_plan","vote_start","vote_tally","voter_id","voting_token","vzip","vzip","vzip","vzip","proposal","id","id","signature","signature","action","action","inner","OwnerStakeDelegation","StakeDelegation","account_id","arbitrary","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","delegation","delegation","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize_delegation_type","deserialize_from_slice","deserialize_from_slice","drop","drop","eq","eq","fmt","fmt","from","from","get_delegation_type","get_delegation_type","init","init","into","into","payload_auth_data","payload_auth_data","payload_data","payload_data","payload_to_certificate_slice","payload_to_certificate_slice","serialize","serialize","serialize","serialize","serialize_delegation_type","serialize_in","serialize_in","serialized_size","serialized_size","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EvmMapping","EvmMappingSigned","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize_from_slice","drop","drop","eq","eq","evm_mapping","fmt","fmt","from","from","init","init","into","into","payload_auth_data","payload_data","payload_to_certificate_slice","prop_impl","recid","serialize","serialize","serialize_in","serialized_size","signature_data","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","","","","","MintToken","_strategy_of_name","_strategy_of_policy","_strategy_of_to","_strategy_of_value","_to_fn_ptr","arbitrary","arbitrary_with","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize_from_slice","drop","eq","fmt","from","init","into","name","payload_auth_data","payload_data","payload_to_certificate_slice","policy","serialize","serialize","serialize_in","serialized_size","tests","to","to_owned","try_from","try_into","type_id","value","vzip","","","","","","","","","","ALL_USED_BITMASK","GenesisPraosLeaderHash","IndexSignatures","MANAGEMENT_THRESHOLD_BITMASK","ManagementThreshold","Operator","Owners","PoolId","PoolOwnersSignature","PoolOwnersSigned","PoolPermissions","PoolRegistration","PoolRegistrationHash","PoolRetirement","PoolSignature","PoolUpdate","_strategy_of_0","_strategy_of_keys","_strategy_of_operators","_strategy_of_owners","_strategy_of_permissions","_strategy_of_reward_account","_strategy_of_rewards","_strategy_of_serial","_strategy_of_start_validity","_to_fn_ptr","_to_fn_ptr","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_u64","init","init","init","init","init","init","into","into","into","into","into","into","keys","last_pool_reg_hash","management_threshold","management_threshold","new","new_pool_reg","operators","owners","payload_auth_data","payload_auth_data","payload_auth_data","payload_data","payload_data","payload_data","payload_to_certificate_slice","payload_to_certificate_slice","payload_to_certificate_slice","permissions","pool_id","pool_id","retirement_time","reward_account","rewards","serial","serialize","serialize","serialize","serialize","serialize","serialize","serialize_in","serialize_in","serialize_in","serialize_in","serialize_in","serialized_size","serialized_size","serialized_size","signatures","start_validity","to_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify","vzip","vzip","vzip","vzip","vzip","vzip","arbitrary_decrypted_private_tally","BftLeaderBindingSignature","UpdateProposal","UpdateProposerId","arbitrary","borrow","borrow_mut","changes","changes","clone","clone_into","deref","deref_mut","deserialize_from_slice","drop","eq","fmt","from","init","into","new","payload_auth_data","payload_data","payload_to_certificate_slice","proposer_id","proposer_id","serialize","serialize","serialize_in","serialized_size","to_owned","try_from","try_into","type_id","vzip","","","UpdateProposalId","UpdateVote","UpdateVoterId","_strategy_of_proposal_id","_strategy_of_voter_id","_to_fn_ptr","arbitrary","arbitrary_with","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize_from_slice","drop","eq","fmt","from","hash","init","into","new","payload_auth_data","payload_data","payload_to_certificate_slice","proposal_id","proposal_id","serialize","serialize","serialize_in","serialized_size","to_owned","try_from","try_into","type_id","voter_id","voter_id","vzip","VoteCast","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize_from_slice","drop","eq","fmt","from","hash","init","into","into_payload","new","payload","payload","payload_auth_data","payload_data","payload_to_certificate_slice","proposal_index","proposal_index","serialize","serialize","serialize_in","serialized_size","to_owned","try_from","try_into","type_id","vote_plan","vote_plan","vzip","ExternalProposalDocument","ExternalProposalId","Full","MAX_LEN","OffChain","Parameters","Proposal","Proposals","PushProposal","Success","Treasury","VoteAction","VotePlan","VotePlanId","VotePlanProof","action","action","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_vote","check_governance","check_governance","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committee_end","committee_end","committee_finished","committee_public_keys","committee_public_keys","committee_start","committee_started","committee_time","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","external_id","external_id","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","full","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_governance","new","new","new","options","options","payload_auth_data","payload_data","payload_to_certificate_slice","payload_type","payload_type","proposals","proposals","proposals","proposals","proposals_mut","push","serialize","serialize","serialize_in","serialize_in","serialize_in","serialize_in","serialized_size","signature","to_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","vote_end","vote_end","vote_finished","vote_start","vote_start","vote_started","voting_token","voting_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip","proposal","action","action","","DecryptedPrivateTally","DecryptedPrivateTallyError","DecryptedPrivateTallyProposal","Private","Private","Public","Public","TallyProof","VoteTally","VoteTallyPayload","arbitrary","arbitrary","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","decrypt_shares","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","deserialize_from_slice","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","id","id","init","init","init","init","init","init","inner","into","into","into","into","into","into","iter","new","new_private","new_public","payload","payload_auth_data","payload_data","payload_decrypted","payload_to_certificate_slice","payload_type","provide","serialize","serialize","serialize_in","serialize_in","serialized_size","tally_decrypted","tally_result","tally_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","vzip","id","id","signature","signature","inner","Bft","ConsensusEvalContext","Genesis","HeaderContentEvalContext","Praos","PraosNonce","as_ref","base32_len","block_date","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chain_length","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","consensus_eval_context","content_hash","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_hex","encode_hex_upper","eq","fmt","fmt","fmt","from","from","from","from_output_array","hash_with","init","init","init","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_base32","zero","nonce","pool_creator","Bft","ChainLength","ConsensusType","ConsensusVersion","GenesisPraos","HeaderId","arbitrary","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from_payload","from_str","from_str","from_u16","hash","hash","increase","init","init","into","into","next","nth_ancestor","partial_cmp","partial_cmp","tests","to_owned","to_owned","to_payload","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","Block0Date","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","BoolInvalid","ConfigParam","ConfigParamVariant","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusVersion","ConsensusVersion","Discrimination","Discrimination","EpochStabilityDepth","EpochStabilityDepth","Error","FeesInTreasury","FeesInTreasury","Halving","InvalidTag","KesUpdateSpeed","KesUpdateSpeed","Linear","LinearFee","LinearFee","MAXIMUM_LEN","PerCertificateFees","PerCertificateFees","PerVoteCertificateFees","PerVoteCertificateFees","PoolRewardParticipationCapping","PoolRewardParticipationCapping","ProposalExpiration","ProposalExpiration","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardParams","RewardPot","RewardPot","SizeInvalid","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","StructureInvalid","Tag","TagIter","TagLen","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","UnknownString","VAL_PROD","VAL_TEST","arbitrary","arbitrary","arbitrary","arbitrary","as_ref","back_idx","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_payload","from_payload","from_payload","from_str","from_str","from_u16","get","get_len","get_tag","idx","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","iter","len","marker","new","next","next_back","nth","par_bridge","partial_cmp","provide","serialize","serialized_size","size_hint","test","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_payload","to_payload","to_payload","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","constant","constant","epoch_rate","epoch_rate","epoch_start","epoch_start","ratio","ratio","BadEpochId","BadSlotId","BlockDate","BlockDateParseError","DotMissing","EXPECT_FORMAT_MESSAGE","Epoch","SlotId","epoch","slot_id","tests","DoubleSpend","Error","InputDoesNotResolve","InputWasAlreadySet","InvalidSignature","InvalidTxSignature","NotEnoughSignatures","TransactionSumIsNonZero","ZeroOutput","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","fmt","from","init","into","provide","to_owned","to_string","try_from","try_into","type_id","vzip","EvmActionType","EvmTransaction","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","eq","eq","fmt","fmt","from","from","init","init","into","into","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FeeAlgorithm","LinearFee","PerCertificateFee","PerVoteCertificateFee","arbitrary","arbitrary","arbitrary","baseline","baseline","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate","calculate_tx","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","clone","clone","clone","clone_into","clone_into","clone_into","coefficient","constant","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","fees_for_certificate","fees_for_certificate","fees_for_certificate","fees_for_certificate","fees_for_inputs_outputs","fees_for_inputs_outputs","fmt","fmt","fmt","from","from","from","from_payload","from_payload","from_payload","init","init","init","into","into","into","new","new","new","partial_cmp","partial_cmp","partial_cmp","per_certificate_fees","per_certificate_fees","per_vote_certificate_fees","per_vote_certificate_fees","test","to_owned","to_owned","to_owned","to_payload","to_payload","to_payload","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BlockContentHash","BlockContentSize","ConfigParams","Contents","ContentsBuilder","Evm","Evm","EvmMapping","EvmMapping","Fragment","FragmentId","FragmentTag","Initial","Initial","MintToken","MintToken","OldUtxoDeclaration","OldUtxoDeclaration","OwnerStakeDelegation","OwnerStakeDelegation","PoolRegistration","PoolRegistration","PoolRetirement","PoolRetirement","PoolUpdate","PoolUpdate","StakeDelegation","StakeDelegation","Transaction","Transaction","UpdateProposal","UpdateProposal","UpdateVote","UpdateVote","VoteCast","VoteCast","VotePlan","VotePlan","VoteTally","VoteTally","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","content","deref","deref","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","eq","eq","fmt","fmt","from","from","from_u8","get_tag","hash","id","init","init","into","into","serialize","serialized_size","test","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfigParams","arbitrary","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize_from_slice","drop","eq","fmt","from","init","into","iter","new","push","serialize","serialized_size","to_owned","try_from","try_into","type_id","vzip","","BlockContentHash","BlockContentSize","Contents","ContentsBuilder","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute_hash","compute_hash_size","default","deref","deref","deref_mut","deref_mut","drop","drop","empty","eq","fmt","fragments","from","from","from","init","init","into","into","is_empty","iter","iter_slice","len","new","push","push_many","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AnyBlockVersion","BftProof","BftSignature","BlockDate","BlockVersion","ChainLength","Common","Epoch","GenesisPraosProof","Header","HeaderBft","HeaderBftBuilder","HeaderBuilder","HeaderBuilderNew","HeaderDesc","HeaderGenesisPraos","HeaderGenesisPraosBuilder","HeaderId","HeaderSetConsensusData","HeaderSetConsensusSignature","HeaderUnsigned","KesSignature","Proof","SlotId","Supported","Unsupported","VrfProof","builder","components","cstruct","date","deconstruct","epoch","header","header_builder","height","id","slot_id","test","version","HeaderBftBuilder","HeaderBuilder","HeaderBuilderNew","HeaderCommonDone","HeaderGenesisPraosBuilder","HeaderSetConsensusData","HeaderSetConsensusSignature","HeaderSetDate","HeaderSetParenting","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","get_authenticated_data","get_authenticated_data","header_builder","header_builder_raw","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_bft_builder","into_genesis_praos_builder","into_unsigned_header","new","new","new_raw","new_raw","set_consensus_data","set_consensus_data","set_date","set_genesis","set_parent","set_signature","set_signature","sign_using","sign_using","sign_using_keys","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BftSignature","HeaderAuth","KesSignature","VrfProof","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","init","init","init","init","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_vrf_proof","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","BftLeaderId","BftSignature","ContentHash","ContentSize","DateEpoch","DateSlotid","GpKesSignature","GpNodeId","GpVrfProof","HEADER_BFT_AUTHED_SIZE","HEADER_BFT_SIZE","HEADER_COMMON_SIZE","HEADER_GP_AUTHED_SIZE","HEADER_GP_SIZE","HEADER_MAX_KNOWN_SIZE","HEADER_MIN_KNOWN_SIZE","HEADER_OFFSET_BFT_LEADER_ID","HEADER_OFFSET_BFT_SIGNATURE","HEADER_OFFSET_CONTENT_HASH","HEADER_OFFSET_CONTENT_SIZE","HEADER_OFFSET_DATE_EPOCH","HEADER_OFFSET_DATE_SLOTID","HEADER_OFFSET_GP_ID","HEADER_OFFSET_GP_KES_SIG","HEADER_OFFSET_GP_VRF_PROOF","HEADER_OFFSET_HEIGHT","HEADER_OFFSET_PARENT_HASH","HEADER_OFFSET_VERSION","Header","HeaderBft","HeaderError","HeaderGp","HeaderSlice","HeaderUnsigned","Height","InvalidSize","ParentHash","SizeMismatch","UnknownVersion","VERSION_BFT","VERSION_GP","VERSION_UNSIGNED","Version","as_slice","as_slice","as_slice_mut","bft","bft_leader_id","bft_leader_id_ref","bft_signature","bft_signature_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","content_hash","content_hash_ref","content_size","date_epoch","date_slotid","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","fmt","fmt","from","from","from","from_slice","gp","gp_kes_signature","gp_kes_signature_ref","gp_node_id","gp_node_id_ref","gp_vrf_proof","gp_vrf_proof_ref","height","init","init","init","into","into","into","new","parent_hash","parent_hash_ref","provide","set_bft_leader_id","set_bft_leader_id_slice","set_bft_signature","set_bft_signature_slice","set_content_hash","set_content_size","set_date_epoch","set_date_slotid","set_gp_kes_signature","set_gp_kes_signature_slice","set_gp_node_id","set_gp_node_id_slice","set_gp_vrf_proof","set_gp_vrf_proof_slice","set_height","set_parent_hash","set_version","slice_bft_auth","slice_gp_auth","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unsigned","version","version","vzip","vzip","vzip","expected","got","Bft","BftProof","Common","GenesisPraos","GenesisPraosProof","None","Proof","arbitrary","arbitrary","arbitrary","block_content_hash","block_content_size","block_date","block_parent_hash","block_version","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_length","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","kes_proof","leader_id","node_id","signature","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vrf_proof","vzip","vzip","vzip","vzip","Bft","GenesisPraos","Header","HeaderBft","HeaderDesc","HeaderError","HeaderGenesisPraos","HeaderUnsigned","Unsigned","arbitrary","as_auth_slice","as_slice","block_content_hash","block_content_size","block_date","block_parent_hash","block_version","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_length","chain_length","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","common","date","date","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize_from_slice","drop","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from_slice","generalize","generalize","generalize","get_bft_leader_id","get_consensus_eval_context","get_content_eval_context","get_cstruct","get_stakepool_id","hash","height","id","id","id","id","id","id","init","init","init","init","init","into","into","into","into","into","parent_id","proof","serialize","serialized_size","size","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","LAZY","SK_FIRST","__private_field","__stability","__static_ref_initialize","borrow","borrow_mut","deref","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","AnyBlockVersion","BlockVersion","Ed25519Signed","Genesis","KesVrfproof","SIZE","SIZE","Supported","Unsupported","arbitrary","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","eq","fmt","fmt","from","from","from","from","from_u8","get_auth_size","get_size","init","init","into","into","to_consensus_type","to_owned","to_owned","to_u8","try_from","try_from","try_into","try_into","try_into_block_version","type_id","type_id","vzip","vzip","","","","","AccountPublicKey","AccountSignature","BftLeaderId","BftVerificationAlg","Ed25519Signature","EitherEd25519SecretKey","Extended","GenesisPraosLeader","Hash","Normal","Signed","SpendingPublicKey","SpendingSignature","_strategy_of_0","_strategy_of_hash","_strategy_of_kes_public_key","_strategy_of_vrf_public_key","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","arbitrary_with","as_bytes","as_public_key","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_crypto_pub_err","chain_crypto_sig_err","check_base32","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","data","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_public_key","deserialize_signature","digest","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_payload","from_str","from_str","generate","get_hash","hash","hash","hash","hash","hash_bytes","init","init","init","init","init","into","into","into","into","into","kes_public_key","make_signature","new","partial_cmp","serialize","serialize","serialize","serialize_public_key","serialize_signature","serialized_size","serialized_size","serialized_size","sig","sign","sign_slice","signed_new","tests","to_owned","to_owned","to_owned","to_owned","to_owned","to_payload","to_public","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify_multi_signature","verify_signature","vrf_public_key","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","zero","zero_hash","LAZY","PK_KES","__private_field","__stability","__static_ref_initialize","borrow","borrow_mut","deref","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","Bft","Bft","BftLeader","Error","ErrorKind","Failure","Failure","GenesisLeader","GenesisPraos","GenesisPraos","IncompatibleBlockVersion","IncompatibleLeadershipMode","InvalidBlockMessage","InvalidLeader","InvalidLeaderProof","InvalidLeaderSignature","InvalidStateUpdate","Leader","LeaderOutput","Leadership","LeadershipConsensus","NoLeaderForThisSlot","None","Success","Verification","VrfNonceIsEmptyButNotSupposedTo","bft","bft_leader","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","cause","clone","clone_into","consensus","date_at_slot","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch","eq","era","era","failure","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","genesis","genesis_leader","hash","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into_error","is_leader","is_leader_for_date","kind","new","new","new_","node_id","provide","sig_key","sig_key","stake_distribution","success","to_owned","to_string","to_string","try_check","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify_leader","verify_version","vrf_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BftRoundRobinIndex","LeadershipData","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","from","from","get_leader_at","init","init","into","into","leaders","leaders","new","number_of_leaders","offset","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","GenesisError","InvalidEpoch","InvalidProofStructure","InvalidProofValue","LeadershipData","ProofVerificationFailed","Threshold","ThresholdInvalid","ThresholdNotMet","TotalStakeIsZero","VrfError","VrfEvalFailure","Witness","WitnessOutput","active_slots_coeff","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","distribution","distribution","drop","drop","drop","epoch","epoch_nonce","fmt","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","leader","new","nodes","nodes","provide","provide","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","vrfeval","vzip","vzip","vzip","actual","expected","bdesc","bdesc","bdesc","pool_stake","poolid","poolid","poolid","threshold","total_stake","vrf_value","stake_threshold","vrf_value","DOMAIN_NONCE","DOMAIN_THRESHOLD","Input","ProofVerificationFailed","Threshold","ThresholdNotMet","VrfEvalFailure","VrfEvaluator","Witness","WitnessOutput","above_stake_threshold","active_slots_coeff","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","evaluate","fmt","from","from","from","from","from_u256","get_nonce","get_threshold","init","init","init","init","into","into","into","into","nonce","partial_cmp","phi","slot_id","stake","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","witness_to_nonce","stake_threshold","vrf_value","EpochRewardsInfo","LeadersParticipationRecord","Pots","RewardsInfoParameters","accounts","check","drawn","fees","fees","governance","info","iter","leaderlog","ledger","log","params","pots","recovery","report_accounts","report_stake_pools","reward_info","rewards","stake_pools","token_distribution","total","treasury","treasury","CHECK_POOL_REG_MAXIMUM_OPERATORS","CHECK_POOL_REG_MAXIMUM_OWNERS","CHECK_TX_MAXIMUM_INPUTS","CHECK_TX_MAXIMUM_OUTPUTS","LedgerCheck","TooManyOutputs","TxVerifyError","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","if_cond_fail_with","init","into","provide","to_owned","to_string","try_from","try_into","type_id","valid_block0_cert_transaction","valid_block0_transaction_no_inputs","valid_output_value","valid_pool_owner_signature","valid_pool_registration_certificate","valid_pool_signature","valid_pool_update_certificate","valid_stake_owner_delegation_transaction","valid_transaction_ios_number","valid_vote_cast_tx_slice","vzip","actual","expected","CENT","Governance","GovernanceAcceptanceCriteria","NoOp","NoOp","NoOp","NoOp","ParametersGovernance","ParametersGovernanceAction","ParametersGovernanceActionType","RewardAdd","RewardAdd","TransferToRewards","TransferToRewards","TreasuryGovernance","TreasuryGovernanceAction","TreasuryGovernanceActionType","acceptance_criteria_per_action","acceptance_criteria_per_action","blank","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","default_acceptance_criteria","default_acceptance_criteria","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","favorable","fmt","from","from","init","init","into","into","logs","minimum_approval","minimum_stake_participation","options","parameters","parameters","rejection","to_owned","to_owned","treasury","treasury","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","value","value","","NoOp","NoOp","ParametersGovernance","ParametersGovernanceAction","ParametersGovernanceActionType","RewardAdd","RewardAdd","acceptance_criteria_for","acceptance_criteria_per_action","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default_acceptance_criteria","default_acceptance_criteria","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","eq","eq","eq","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","logs","logs","logs_clear","logs_register","new","partial_cmp","serialize_in","set_acceptance_criteria","set_default_acceptance_criteria","to_owned","to_owned","to_owned","to_type","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","value","NoOp","NoOp","TransferToRewards","TransferToRewards","TreasuryGovernance","TreasuryGovernanceAction","TreasuryGovernanceActionType","acceptance_criteria_for","acceptance_criteria_per_action","arbitrary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","default_acceptance_criteria","default_acceptance_criteria","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","eq","eq","eq","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","partial_cmp","serialize_in","set_acceptance_criteria","set_default_acceptance_criteria","to_owned","to_owned","to_owned","to_type","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","value","Account","Account","Accounts","ConfigParam","ConfigParam","ConfigParams","Done","Entry","EntryOwned","Globals","Globals","Globals","Initial","IterState","LeaderParticipation","LeaderParticipation","LeaderParticipations","LedgerIterator","MultisigAccount","MultisigAccount","MultisigAccounts","MultisigDeclaration","MultisigDeclaration","MultisigDeclarations","OldUtxo","OldUtxo","OldUtxo","Pot","Pot","Pots","StakePool","StakePool","StakePools","StopEntry","UpdateProposal","UpdateProposal","UpdateProposals","Utxo","Utxo","Utxo","VotePlan","VotePlan","VotePlan","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_length","clone","clone","clone_into","clone_into","date","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","era","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into_iter","ledger","next","state","static_params","to_entry","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","LeadersParticipationRecord","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","from","increase_for","init","into","iter","log","nb_participants","new","set_for","to_owned","total","total","try_from","try_into","type_id","vzip","Account","AccountIdentifierInvalid","AccountInvalidSignature","ApplyBlockLedger","Block0","Block0Error","Block0OnlyFragmentReceived","CertTransactionHasInput","CertTransactionHasOutput","CertificateInvalidSignature","Config","Default","Delegation","DisabledEvmTransactions","Error","ExpectingAccountWitness","ExpectingInitialMessage","ExpectingUtxoWitness","FeeCalculationError","FeeDeductionMode","HasEvmMapping","HasOwnerStakeDelegation","HasPoolManagement","HasUpdateProposal","HasUpdateVote","HasVoteCast","HasVoteTally","IncompleteLedger","InitialMessageDuplicateBlock0Date","InitialMessageDuplicateConsensusVersion","InitialMessageDuplicateDiscrimination","InitialMessageDuplicateEpochStabilityDepth","InitialMessageDuplicatePraosActiveSlotsCoeff","InitialMessageDuplicateSlotDuration","InitialMessageMany","InitialMessageMissing","InitialMessageNoConsensusLeaderId","InitialMessageNoConsensusVersion","InitialMessageNoDate","InitialMessageNoDiscrimination","InitialMessageNoKesUpdateSpeed","InitialMessageNoPraosActiveSlotsCoeff","InitialMessageNoSlotDuration","InitialMessageNoSlotsPerEpoch","InvalidContentHash","InvalidContentSize","InvalidDiscrimination","Ledger","LedgerStaticParameters","MatchingIdentifierWitness","MintingPolicyViolation","Multi","Multisig","MultisigInvalidSignature","NoSpendingCounterCheck","NonMonotonicDate","NotBalanced","OldUtxoInvalidPublicKey","OldUtxoInvalidSignature","OutputAddress","OutputGroupInvalid","OutputOldAddress","OwnerStakeDelegationInvalidTransaction","PoolRegistrationHasNoOwner","PoolRegistrationHasTooManyOperators","PoolRegistrationHasTooManyOwners","PoolRegistrationManagementThresholdAbove","PoolRegistrationManagementThresholdZero","PoolRetirementSignatureFailed","PoolUpdateFeesNotAllowedYet","PoolUpdateLastHashDoesntMatch","PoolUpdateNotAllowedYet","PoolUpdateSignatureFailed","PotValueInvalid","PraosActiveSlotsCoeffInvalid","ScriptsAddressNotAllowedYet","Single","StakeDelegationSignatureFailed","TransactionBalanceInvalid","TransactionHasInput","TransactionHasWitnesses","TransactionMalformed","Update","UpdateNotAllowedYet","UpdateProposalSignatureFailed","UpdateVoteSignatureFailed","UtxoError","UtxoInvalidSignature","UtxoTotalValueTooBig","UtxoValueNotMatching","VoteCastInvalidTransaction","VotePlan","VotePlanInvalidGovernanceParameters","VotePlanProofInvalidCommittee","VotePlanProofInvalidSignature","VoteTallyDecryptionFailed","VoteTallyProofFailed","WrongChainLength","ZeroOutput","accounts","accounts","active_vote_plans","add_value_or_create_account","apply_block","apply_fragment","apply_fragment","apply_input_to_utxo","apply_old_declaration","apply_owner_stake_delegation","apply_pool_registration","apply_pool_registration_signcheck","apply_pool_retirement","apply_pool_update","apply_protocol_changes","apply_stake_delegation","apply_transaction","apply_transaction_for_vote_cast","apply_tx_fee","apply_tx_inputs","apply_tx_outputs","apply_update","apply_update_proposal","apply_update_vote","apply_vote_cast","apply_vote_plan","apply_vote_tally","arbitrary","begin_block","block0_initial_hash","block0_start_time","block_date","block_date","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_fee","can_distribute_reward","chain_length","chain_length","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_version","date","date","delegation","delegation","delegation_mut","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","discrimination","distribute_poolid_rewards","distribute_rewards","drop","drop","drop","drop","drop","drop","drop","empty","eq","eq","eq","eq","era","era","execute_apply_transaction","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_stake_distribution","get_static_parameters","get_total_value","governance","info_eq","init","init","init","init","init","init","init","input_multi_account_verify","input_multi_account_witness_verify_with_no_spending_counter_check","input_single_account_verify","input_single_account_witness_verify_with_no_spending_counter_check","into","into","into","into","into","into","into","iter","kes_update_speed","leaders_log","ledger","match_identifier_witness","mint_token","mint_token_unchecked","multi_account_witness_verify","multisig","new","oldutxos","pots","provide","provide","remaining_rewards","serialize","settings","settings","settings","single_account_witness_verify","source","static_params","stats","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","token_distribution","token_totals","token_totals","treasury_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updates","updates","utxo_out","utxos","utxos","validate_utxo_total_value","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","account","actual","actual","actual","block_date","chain_date","error","error","expected","expected","expected","inputs","max","multisig","output","output","output","output","output","outputs","utxo","utxo","utxo","value","witness","witness","witness","witness","witness","Done","Entries","Entry","EntryType","Fees","Fees","Fees","IterState","Pots","Rewards","Rewards","Rewards","Treasury","Treasury","Treasury","Values","append_fees","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","draw_reward","draw_treasury","drop","drop","drop","drop","drop","drop","entries","entry_type","eq","eq","fees","fees_value","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","into_iter","it","next","next","pots","rewards","rewards_add","set_from_entry","siphon_fees","to_owned","to_owned","to_owned","total_value","treasury","treasury_add","treasury_value","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","values","vzip","vzip","vzip","vzip","vzip","vzip","zero","Account","ConfigParam","EntrySerializeCode","Globals","LeaderParticipation","MultisigAccount","MultisigDeclaration","OldUtxo","Pot","SerializationEnd","StakePool","UpdateProposal","Utxo","VotePlan","borrow","borrow_mut","deref","deref_mut","drop","eq","fmt","from","from_u8","init","into","pack_account_identifier","pack_account_state","pack_address","pack_block_date","pack_committee_public_keys","pack_config_param","pack_decl_element","pack_declaration","pack_delegation_ratio","pack_delegation_type","pack_digestof","pack_discrimination","pack_entry","pack_globals","pack_header_id","pack_last_rewards","pack_ledger_static_parameters","pack_multisig_identifier","pack_old_addr","pack_output","pack_payload_type","pack_pool_id","pack_pool_last_rewards","pack_pool_registration","pack_pool_state","pack_pot_entry","pack_spending_strategy","pack_update_proposal","pack_update_proposal_id","pack_update_proposal_state","pack_utxo_entry","pack_vote_plan","pack_vote_proposal","pack_vote_proposals","pack_voting_token","try_from","try_into","type_id","unpack_account_identifier","unpack_account_state","unpack_address","unpack_block_date","unpack_committee_public_keys","unpack_config_param","unpack_decl_element","unpack_declaration","unpack_delegation_ratio","unpack_delegation_type","unpack_digestof","unpack_discrimination","unpack_entries","unpack_entry_owned","unpack_globals","unpack_header_id","unpack_last_rewards","unpack_ledger_static_parameters","unpack_multisig_identifier","unpack_old_addr","unpack_output","unpack_payload_type","unpack_pool_id","unpack_pool_last_rewards","unpack_pool_registration","unpack_pool_state","unpack_pot_entry","unpack_proposal","unpack_proposals","unpack_spending_strategy","unpack_update_proposal","unpack_update_proposal_id","unpack_update_proposal_state","unpack_utxo_entry_owned","unpack_vote_action","unpack_vote_plan","unpack_voting_token","vzip","EpochRewardsInfo","RewardsInfoParameters","accounts","add_to_account","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drawn","drop","drop","fees","fmt","fmt","from","from","init","init","into","into","new","params","report_accounts","report_all","report_stake_pools","set_stake_pool","set_treasury","stake_pools","to_owned","to_owned","total","treasury","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TokenDistribution","TokenTotals","account_ledger","add","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","from","from","get_account","get_total","get_total","init","init","into","into","new","to_owned","to_owned","token","token","token_totals","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","No","OldAddress","OldAddressMatchXPub","UtxoDeclaration","Yes","addrs","arbitrary","as_ref","base32_len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deconstruct","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_str","from_str","hash","identical_with_pubkey_raw","identical_with_xpub","identical_with_xpub_raw","init","init","init","into","into","into","new","oldaddress_from_xpub","partial_cmp","serialize","serialize","serialized_size","tests","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_base32","HALF","MILLI_MULTIPLIER","Milli","ONE","ZERO","arbitrary","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deref_mut","drop","eq","fmt","fmt","from","from","from_millis","from_payload","from_str","init","into","partial_cmp","tests","to_float","to_millis","to_owned","to_payload","to_string","try_from","try_into","type_id","vzip","AccountError","AlreadyExist","D1","D2","DeclElement","Declaration","DeclarationError","DeclarationError","DoesntExist","HasNotEnoughOwners","HasTooManyOwners","Identifier","IdentifierMismatch","Index","Ledger","LedgerError","Owner","ParticipantOutOfBound","Sub","SubNotImplemented","ThresholdInvalid","ThresholdNotMet","TreeIndex","Witness","WitnessBuilder","WitnessMultisigData","accounts","as_ref","base32_len","borrow","borrow_mut","check_base32","declaration","declarations","deref","deref_mut","drop","encode_hex","encode_hex_upper","from","index","init","into","ledger","new","owners","test","threshold","try_from","try_into","type_id","vzip","witness","write_base32","","DeclElement","Declaration","DeclarationError","HasNotEnoughOwners","HasTooManyOwners","Identifier","Owner","Pk","Sig","Sub","SubNotImplemented","ThresholdInvalid","WitnessMultisigData","_strategy_of_0","_to_fn_ptr","arbitrary","arbitrary_with","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_publickey","get_path","hash","init","init","init","init","into","into","into","into","is_valid","owners","owners_to_identifier","partial_cmp","provide","threshold","threshold","to_hash","to_identifier","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","D1","D2","Index","LEVEL_MAXLIMIT","TREEINDEX_TAG_DEPTH1","TREEINDEX_TAG_DEPTH2","TreeIndex","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","depth","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","from_u8","indices","init","init","into","into","pack","partial_cmp","partial_cmp","to_owned","to_owned","to_usize","try_from","try_from","try_into","try_into","type_id","type_id","unpack","vzip","vzip","AccountError","AlreadyExist","DeclarationError","DoesntExist","IdentifierMismatch","Ledger","LedgerError","ParticipantOutOfBound","ThresholdNotMet","accounts","add_account","add_value","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","declarations","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","from","from","from","from","get_declaration_by_id","get_total_value","init","init","into","into","iter_accounts","iter_declarations","new","provide","remove_account","restore","set_delegation","source","spend","spend_with_no_counter_check","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Witness","WitnessBuilder","append","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize_from_slice","deserialize_index","drop","drop","eq","finalize","fmt","fmt","from","from","init","init","into","into","new","serialize","serialized_size","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify_identifier_threshold","vzip","vzip","Collectable","GcEntry","Multiverse","Ref","Retained","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","collect","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","gc","get","get","get_ref","hash","id","init","init","init","insert","into","into","into","new","new","nr_states","state","state","state_arc","states_by_chain_length","states_by_hash","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","","","","","","ByStakeAbsolute","CompoundingType","Halvening","Limit","Linear","None","Parameters","Ratio","SCALE","SCALE","SystemInformation","TaxDistribution","TaxType","_strategy_of_denominator","_strategy_of_fixed","_strategy_of_max_limit","_strategy_of_numerator","_strategy_of_ratio","_to_fn_ptr","_to_fn_ptr","after_tax","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compounding_ratio","compounding_type","declared_stake","denominator","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","epoch_rate","epoch_start","eq","eq","eq","eq","eq","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_payload","from_payload","init","init","init","init","init","init","init","initial_value","into","into","into","into","into","into","into","max_limit","numerator","partial_cmp","pool_participation_capping","ratio","read_frombuf","reward_drawing_limit_max","rewards_contribution_calculation","serialize_in","tax_cut","taxed","tests","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_payload","to_payload","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","zero","zero","ActiveSlotsCoeff","ActiveSlotsCoeffError","FeesGoesTo","InvalidValue","Rewards","SLOTS_PERCENTAGE_RANGE","Settings","Treasury","active_slots_coeff","bft_leaders","block_content_max_size","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","committees","config_params","consensus_nonce","consensus_version","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","epoch_stability_depth","eq","eq","eq","eq","fees_goes_to","fmt","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","linear_fees","new","pool_participation_capping","proposal_expiration","provide","reward_params","reward_params","rewards_limit","slot_duration","slots_per_epoch","to_owned","to_owned","to_owned","to_owned","to_string","transaction_max_expiry_epochs","treasury_params","treasury_params","try_apply","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AlreadyExists","NotFound","PercentStake","PoolError","PoolLastRewards","PoolStakeDistribution","PoolStakeInformation","PoolState","PoolsState","SplitValueIn","Stake","StakeControl","StakeDistribution","StakeUnit","accounts","assigned","control","controlled","dangling","delegation","distribution","epoch","get_distribution","last_rewards","parts","registration","registration","remaining","stake","stake","stake","stake_pools","to_pools","total","total","unassigned","unassigned","value_for_stakers","value_taxed","StakeControl","add_to","add_unassigned","assigned","assigned","borrow","borrow_mut","by","clone","clone_into","control","default","deref","deref_mut","drop","eq","fmt","from","init","into","new","new_with","ratio_by","remove_from","remove_unassigned","to_owned","total","try_from","try_into","type_id","unassigned","unassigned","update_accounts","update_utxos","vzip","","AlreadyExists","NotFound","PoolError","PoolLastRewards","PoolState","PoolsState","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","current_pool_registration_hash","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deregister_stake_pool","drop","drop","drop","drop","epoch","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","last_rewards","lookup","lookup_reg","new","new","provide","register_stake_pool","registration","stake_pool_exists","stake_pool_get","stake_pool_get_state","stake_pool_ids","stake_pool_set_rewards","stake_pool_set_state","stake_pools","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value_for_stakers","value_taxed","vzip","vzip","vzip","vzip","PoolStakeDistribution","PoolStakeInformation","StakeDistribution","accounts","add","add_value","assign_account_value","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","dangling","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eligible_stake_pools","empty","eq","eq","eq","fmt","fmt","fmt","from","from","from","get_distribution","get_distribution","get_stake_for","get_total_stake","init","init","init","into","into","into","iter","new","registration","stake","test_new_with_total_value","to_owned","to_owned","to_owned","to_pools","to_total","total","total_stake","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unassigned","vzip","vzip","vzip","PercentStake","SCALE","SplitValueIn","Stake","StakeUnit","add","add_assign","as_float","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_sub","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_value","hash","init","init","init","init","into","into","into","into","new","partial_cmp","partial_cmp","parts","remaining","scale","scale_value","split_in","stake","sum","to_owned","to_owned","to_owned","to_owned","to_string","total","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wrapping_add","wrapping_sub","zero","ConfigBuilder","KeysDb","LedgerBuilder","TestGen","TestLedger","UtxoDb","VoteTestGen","arbitrary","builders","data","gen","ledger","scenario","serialization","verifiers","AverageValue","NonZeroValue","WalletCollection","address","arbitrary","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config_builder","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","kind_type","ledger_builder","output","random","to_owned","to_owned","transaction","try_from","try_from","try_into","try_into","type_id","type_id","update_proposal","utils","utxo","vzip","vzip","wallet","ArbitraryAddressDataValueVec","ArbitraryAddressDataVec","accounts","arbitrary","arbitrary","as_addresses","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","delegations","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","is_empty","iter","make_inputs","make_outputs","to_owned","to_owned","total_value","try_from","try_from","try_into","try_into","type_id","type_id","utxos","values","vzip","vzip","KindTypeWithoutMultisig","KindWithoutMultisig","arbitrary","arbitrary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","kind_type","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OutputsWithoutMultisig","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","set_discrimination","to_owned","try_from","try_into","type_id","vzip","Random1to10","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","AccountNotFound","AccountStatesVerifier","ArbitraryValidTransactionData","Error","UtxoNotFound","UtxoVerifier","WrongValue","addresses","arbitrary","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_current_account_states","calculate_current_utxo","choose_random_output_subset","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","distribute_values_for_outputs","drop","drop","drop","drop","eq","fee","filter_accounts","filter_utxo","find_equal_and_add","find_equal_and_sub","fmt","fmt","fmt","from","from","from","from","init","init","init","init","input_addresses","input_addresses","into","into","into","into","make_inputs","make_outputs","make_outputs_from_all_addresses","make_single_input","new","new","new","output_addresses","provide","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","verify","vzip","vzip","vzip","vzip","zip_addresses_and_values","actual","element","element","expected","output","value","UpdateProposalData","arbitrary","block_signing_key","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","gen_votes","init","into","leaders","leaders_ids","leaders_pairs","proposal","proposal_settings","to_owned","try_from","try_into","type_id","voters","vzip","Verify","borrow","borrow_mut","choose_random_indexes","choose_random_item","choose_random_map_subset","choose_random_set_subset","choose_random_vec_subset","default","deref","deref_mut","drop","factorize","from","get_result","init","into","new","split_vec","try_from","try_into","type_id","verify","verify_eq","vzip","ArbitaryLedgerUtxo","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","WalletCollection","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","Account","Default","FaultTolerantTxCertBuilder","InitialFaultTolerantTxBuilder","InitialFaultTolerantTxCertBuilder","None","TestTxCertBuilder","WitnessMode","block0_hash","block_builder","builder","cert","cert","cert_builder","create_initial_mint_token","create_initial_stake_pool_delegation","create_initial_stake_pool_owner_delegation","create_initial_stake_pool_registration","create_initial_stake_pool_update","create_initial_transaction","create_initial_update_proposal","create_initial_update_vote","create_initial_vote_cast","create_initial_vote_plan","create_initial_vote_tally","decrypt_tally","evm_mapping_sign","fee","funder","funder","initial_builder","old_address_builder","plan_sign","pool_owner_sign","pool_owner_signed","reciever","sender","stake_pool_builder","tally_sign","tx_builder","tx_cert_builder","update_proposal_sign","update_vote_sign","valid_until","vote","witness_builder","lane","BftBlockBuilder","GenesisPraosBlockBuilder","borrow","borrow","borrow_mut","borrow_mut","build","build","chain_length","chain_length","contents_builder","contents_builder","date","date","default","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","new","new","parent_id","parent_id","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_chain_length","with_chain_length","with_date","with_date","with_fragment","with_fragment","with_fragments","with_fragments","with_parent","with_parent","with_parent_id","with_parent_id","build_no_stake_delegation","build_owner_stake_delegation","build_owner_stake_full_delegation","build_stake_delegation_cert","build_stake_pool_registration_cert","build_stake_pool_retirement_cert","build_stake_pool_update_cert","build_update_proposal_cert","build_update_vote_cert","build_vote_tally_cert","InitialFaultTolerantTxBuilder","InitialFaultTolerantTxCertBuilder","borrow","borrow","borrow_mut","borrow_mut","cert","create_initial_mint_token","create_initial_stake_pool_delegation","create_initial_stake_pool_owner_delegation","create_initial_stake_pool_registration","create_initial_stake_pool_update","create_initial_transaction","create_initial_update_proposal","create_initial_update_vote","create_initial_vote_cast","create_initial_vote_plan","create_initial_vote_tally","deref","deref","deref_mut","deref_mut","drop","drop","fragment","from","from","funder","init","init","into","into","new","new","reciever","sender","set_initial_ios","transaction_with_input_only","transaction_with_input_only","transaction_with_input_output","transaction_with_input_output","transaction_with_output_only","transaction_with_witness_only","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OldAddressBuilder","borrow","borrow_mut","build_old_address","build_utxo_declaration","default","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","StakePoolBuilder","alias","borrow","borrow_mut","build","default","deref","deref_mut","drop","from","init","into","new","operators","owners","pool_permissions","reward_account","tax_type","try_from","try_into","type_id","vzip","with_alias","with_operators","with_owners","with_pool_permissions","with_ratio_tax_type","with_reward_account","with_tax_type","TestTx","TestTxBuilder","as_slice","block0_hash","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","from","from","get_fragment","get_fragment_id","get_tx","get_tx_outputs","hash","init","init","into","into","move_all_funds","move_from_faucet","move_funds","move_funds_multiple","move_to_outputs_from_faucet","move_to_outputs_from_faucet_with_validity","new","new","to_owned","try_from","try_from","try_into","try_into","tx","type_id","type_id","vzip","vzip","witness_mode","witness_mode","witnesses","Account","Default","FaultTolerantTxCertBuilder","None","TestTxCertBuilder","WitnessMode","block0_hash","block0_hash","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","cert","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","evm_mapping_sign","fee","fee","fmt","fragment","from","from","from","funder","init","init","init","into","into","into","make_transaction","make_transaction_different_signers","new","new","plan_sign","pool_owner_sign","pool_owner_signed","set_initial_ios","tally_sign","to_owned","transaction_input_to_low","transaction_no_witness","transaction_with_input_only","transaction_with_input_output","transaction_with_output_only","transaction_with_witness","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_proposal_sign","update_vote_sign","valid_until","vzip","vzip","vzip","lane","decrypt_tally","Account","Multisig","OldUtxo","Utxo","Witness","make_witness","make_witness_with_lane","make_witnesses","AccountLedger","AddressData","AddressDataValue","CannotFindSpendingCounter","CommitteeMember","CommitteeMembersManager","Error","KeysDb","LeaderPair","StakePool","Wallet","WrongLaneForSpendingCounter","account","address","address","address_data","alias","alias","crs","ed25519","id","kes","keys","leader","leader_key","members","pool_info","private_key","reward_account","rng","spending_counter","stake_pool","state","tcg","tokens","value","vote","vrf","wallet","AccountLedger","AddressData","AddressDataValue","CannotFindSpendingCounter","Error","WrongLaneForSpendingCounter","account","account","account_with_spending_counter","account_with_spending_counter","account_with_tokens","address","address","address","address_data","address_data","arbitrary","arbitrary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","confirm_transaction","confirm_transaction","confirm_transaction_at_lane","confirm_transaction_at_lane","delegation","delegation","delegation_for","delegation_for_account","delegation_from","delegation_id","delegation_key","deref","deref","deref","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_discrimination_and_kind_type","from_discrimination_and_kind_type","from_leader_pair","generate_key_pair","init","init","init","into","into","into","is_utxo","kind","kind","make_input","make_input","make_input_with_value","make_output","make_output","make_output_with_value","make_witness","make_witness","make_witness_with_lane","make_witness_with_lane","new","new","new_with_tokens","private_key","private_key","private_key","provide","public_key","public_key","source","spending_counter","spending_counter","spending_counter_at_lane","spending_counter_mut","to_bech32_str","to_id","to_id","to_owned","to_owned","to_string","tokens","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","utxo","utxo","value","vzip","vzip","vzip","KeysDb","add_key","borrow","borrow_mut","deref","deref_mut","drop","ed25519","empty","find_by_address","find_ed25519_secret_key","from","init","into","new","new_account_address","new_ed25519_public_key","new_ed25519_secret_key","rng","tcg","try_from","try_into","type_id","vzip","LeaderPair","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","id","init","into","key","leader_key","new","to_owned","try_from","try_into","type_id","vzip","StakePool","alias","alias","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","id","id","info","info_mut","init","into","kes","kes","new","pool_info","reward_account","reward_account","to_owned","try_from","try_into","type_id","vrf","vrf","vzip","CommitteeMember","CommitteeMembersManager","borrow","borrow","borrow_mut","borrow_mut","crs","crs","deref","deref","deref_mut","deref_mut","drop","drop","election_pk","from","from","init","init","into","into","members","members","members_keys","new","produce_decrypt_shares","public_key","secret_key","state","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Wallet","account","alias","alias","arbitrary","as_account","as_account_data","as_address","borrow","borrow_mut","clone","clone_into","confirm_transaction","confirm_transaction_at_lane","deref","deref_mut","drop","fmt","from","from","from_address_data_value","from_address_data_value_and_alias","from_value","init","into","make_input_with_value","make_output","make_output_with_value","make_witness","make_witness_at_lane","new","new_with_tokens","private_key","public_key","to_owned","try_from","try_into","type_id","value","vzip","","","TestGen","VoteTestGen","bft_header","borrow","borrow_mut","bytes","chain_length","deref","deref_mut","drop","from","genesis_praos_header","hash","identifier","init","into","leader_pair","leaders_pairs","ledger","mint_token_for_wallet","parent_id","public_key","rand","secret_key","secret_keys","settings","stake_pool","static_parameters","time_era","token_id","token_name","try_from","try_into","type_id","vote","vrf_proof","vzip","VoteTestGen","borrow","borrow_mut","committee_members_manager","deref","deref_mut","drop","external_proposal_id","from","init","into","parameters_governance","private_vote_cast_payload_for","private_vote_plan","private_vote_plan_with_committees_manager","proposal","proposal_with_action","proposals","proposals_with_action","treasury_governance","try_from","try_into","type_id","vote_cast","vote_cast_for","vote_cast_payload","vote_cast_payload_for","vote_plan","vote_plan_with_proposals","vote_tally","vzip","ConfigBuilder","LedgerBuilder","TestLedger","UtxoDb","UtxoDeclaration","accounts","active_slots_coeff","apply_block","apply_empty_bft_block","apply_empty_bft_block_with_date","apply_empty_praos_block","apply_fragment","apply_praos_block","apply_protocol_changes","apply_transaction","arbitrary","arbitrary","arbitrary","block0_date","block0_hash","block0_hash","block_content_max_size","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","can_distribute_reward","certs","certs","cfg","cfg_builder","cfg_params","chain_length","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","committees_ids","consensus_version","create_single_bft_leader","date","db","default","delegation","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","distribute_rewards","drop","drop","drop","drop","era","fast_forward_to","faucet","faucet_value","faucets","faucets","faucets","faucets","faucets_wallets","fee","fees_in_treasury","find_fragments","find_utxo_for_address","fire_leadership_event","fmt","fmt","forge_bft_block_with_fragments","forge_empty_block","forge_praos_block_with_fragments","forward_date","fragment","fragments","fragments","from","from","from","from","from_config","get","increase_leader_log","init","init","init","init","initial_fund","initial_funds","into","into","into","into","kes_update_speed","leaders","leaders_log","leaders_log_for","ledger","linear_fee","mint_tokens","new","normalize","per_certificate_fee","per_vote_certificate_fee","pool_capping_ratio","pots","prefill_address","prefill_output","prefill_outputs","reward_params","rewards","set_date","settings","slot_duration","slots_per_epoch","to_owned","to_owned","to_owned","to_owned","total_funds","transaction_max_expiry_epochs","treasury","treasury_params","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","utxo_declaration","utxodb","utxos","utxos","vzip","vzip","vzip","vzip","with_active_slots_coeff","with_block0_date","with_block_content_max_size","with_committee_id","with_consensus_version","with_discrimination","with_fee","with_fees_in_treasury","with_kes_update_speed","with_leaders","with_per_certificate_fee","with_per_vote_certificate_fee","with_pool_reward_participation_caping","with_rewards","with_rewards_params","with_slot_duration","with_slots_per_epoch","with_transaction_max_expiry_epochs","with_treasury","with_treasury_params","Controller","FragmentFactory","block0_hash","block0_hash","controller","declared_stake_pools","declared_vote_plans","declared_wallets","fee","fragment_factory","fragment_factory","prepare_scenario","proposal","scenario_builder","stake_pool","template","vote_plan","wallet","witness_mode","Controller","ControllerError","UnknownStakePool","UnknownVotePlan","UnknownVoteProposal","UnknownWallet","block0_hash","borrow","borrow","borrow_mut","borrow_mut","cast_vote","cast_vote_private","cast_vote_public","clone","clone_into","declared_stake_pools","declared_vote_plans","declared_wallets","delegates","delegates_different_funder","delegates_to_many","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","fragment_factory","fragment_factory","from","from","init","init","initial_stake_pools","into","into","mint_token","new","owner_delegates","provide","register","removes_delegation","retire","stake_pool","tally_vote_private","tally_vote_public","to_owned","to_string","transfer_funds","try_from","try_from","try_into","try_into","type_id","type_id","update","update_proposal","update_vote","vote_plan","vzip","vzip","wallet","wallets","alias","alias","alias","id","FragmentFactory","block0_hash","borrow","borrow_mut","clone","clone_into","delegation","delegation_different_funder","delegation_remove","delegation_to_many","deref","deref_mut","drop","fee","fmt","from","from_ledger","init","into","mint_token","new","owner_delegation","stake_pool_registration","stake_pool_retire","stake_pool_update","to_owned","transaction","transaction_with_cert","try_from","try_into","type_id","update_proposal","update_vote","vote_cast","vote_plan","vote_tally","vzip","witness_mode","witness_mode","NoOwnersForStakePool","ScenarioBuilder","ScenarioBuilderError","UndefinedConfig","UndefinedInitials","UndefinedValueForWallet","borrow","borrow","borrow_mut","borrow_mut","build","build_delegation_fragments","build_stake_pool","build_stake_pools","build_stake_pools_fragments","clone","clone_into","config","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","from","from","init","init","initials","into","into","prepare_scenario","proposal","provide","stake_pool","stake_pools","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vote_plan","vote_plans","vzip","vzip","wallet","with_config","with_initials","with_stake_pools","with_vote_plans","alias","alias","ProposalDef","ProposalDefBuilder","StakePoolDef","StakePoolDefBuilder","StakePoolTemplate","StakePoolTemplateBuilder","VotePlanDef","VotePlanDefBuilder","WalletTemplate","WalletTemplateBuilder","action_type","action_type","alias","alias","alias","alias","alias","alias","alias","alias","alias","alias","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builders","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","committee_keys","committee_keys","committee_keys","committee_keys_mut","committee_member","committee_member","delagate_alias","delegates_stake_pool","delegation_map","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","end_tally_date","end_tally_date","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_vote_plan","has_reward_account","hash","id","id","id","id","init","init","init","init","init","initial_tokens","initial_tokens","initial_value","initial_value","into","into","into","into","into","is_committee_member","new","options","options","owner","owner_alias","owner_alias","owners","owners","ownership_alias","ownership_map","owns_stake_pool","payload_type","payload_type","permissions_threshold","permissions_threshold","pool_permission","proposal","proposals","proposals","proposals","reward_account","secret_key","secret_key","secret_key","stake_pool_delegate_alias","stake_pool_owner_alias","tally_date","tally_date","tax_type","tax_type","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vote_date","vote_date","voting_token","voting_token","vzip","vzip","vzip","vzip","vzip","ProposalDefBuilder","StakePoolDefBuilder","StakePoolTemplateBuilder","VotePlanDefBuilder","WalletTemplateBuilder","action_off_chain","action_parameters_no_op","action_rewards_add","action_transfer_to_rewards","action_type","alias","alias","alias","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build_delegation_map","build_ownersip_map","build_stake_pool_templates","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","committee_keys","committee_keys","committee_member","committee_member","consecutive_epoch_dates","defined_stake_pools_aliases","delagate_alias","delegates_to","delegation_map","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","end_tally_date","fixed_tax","fmt","fmt","fmt","from","from","from","from","from","id","init","init","init","init","init","initial_tokens","initial_value","into","into","into","into","into","key","new","new","new","new","new","no_tax","options","options","owner","owner_alias","ownership_alias","ownership_map","owns","owns_and_delegates_to","payload_type","payload_type","permissions_threshold","proposals","reward_account","secret_key","tally_date","tax_limit","tax_ratio","tax_type","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vote_date","vote_phases","voting_token","voting_token","vzip","vzip","vzip","vzip","vzip","with","with_permissions_threshold","with_proposal","with_reward_account","with_token","serialization_bijection","LedgerStateVerifier","info","ledger","ledger_verifier","AccountVerifier","DelegationVerifier","DistributionVerifier","Info","LedgerStateVerifier","PotsVerifier","StakePoolVerifier","StakePoolsVerifier","VotesVerifier","account","account_has_expected_balance","accounts","accounts_contains","accounts_count_is","address","address_has_expected_balance","and","and","and","and","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","dangling_is","delegation","delegation","delegation_type","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distribution","does_not_exist","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","fmt","for_vote_plan","from","from","from","from","from","from","from","from","from","from_str","gvien_wallet","has_fee_equals_to","has_last_reward","has_remaining_rewards_equals_to","has_treasury_equals_to","has_value","identifier","info","info","info","info","info","info","info","info","info","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","is_fully_delegated_to","is_not_retired","is_retired","ledger","multisigs_count_is_zero","new","new","new","new","new","new","new","new","owners_eq","pools_distribution_is","pools_total_stake_is","pots","pots","serial_eq","stake_distribution","stake_pool","stake_pool_id","stake_pool_reg","stake_pools","to_owned","to_string","total_value_is","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unassigned_is","utxo_contains","utxo_has_expected_balance","utxos_count_is","vote_plan_id","vote_plans","votes","votes_were_casted_on_proposals","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","identifier","minting_policy","name","policy_hash","","","EmptyStr","ExpectedTokenName","Hex","ParseError","PolicyHash","TokenIdentifier","TokenName","UnexpectedData","_strategy_of_policy_hash","_strategy_of_token_name","_to_fn_ptr","arbitrary","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","hash","init","init","into","into","partial_cmp","policy_hash","provide","source","tests","to_owned","to_string","to_string","token_name","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","","AdditionalMintingNotAllowed","MintingPolicy","MintingPolicyEntry","MintingPolicyViolation","_strategy_of_0","_to_fn_ptr","arbitrary","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","check_minting_tx","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","entries","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","provide","serialize","serialized_size","tests","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","","TOKEN_NAME_MAX_SIZE","TokenName","TokenNameTooLong","_strategy_of_0","_to_fn_ptr","actual","arbitrary","arbitrary_with","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","bytes","check_base32","clone","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","encode_hex","encode_hex_upper","eq","fmt","fmt","fmt","from","from","hash","init","init","into","into","partial_cmp","provide","serialize","serialized_size","tests","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","","POLICY_HASH_SIZE","PolicyHash","_strategy_of_0","_to_fn_ptr","arbitrary","arbitrary_with","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","cmp","deref","deref_mut","deserialize","deserialize_from_slice","drop","encode_hex","encode_hex_upper","eq","fmt","from","from","hash","init","into","partial_cmp","tests","to_owned","try_from","try_from","try_into","type_id","vzip","write_base32","Account","Account","AccountBindingSignature","AccountIdentifier","AccountInput","Auth","AuthenticatedTransaction","Balance","BalanceError","CannotReadExpiryDate","CannotReadNbInputs","CannotReadNbOutputs","Error","Forget","HAS_AUTH","HAS_DATA","INPUT_PTR_SIZE","INPUT_SIZE","Input","InputEnum","InputOutput","InputOutputBuilder","InputType","InputsInvalid","InputsIter","InputsSlice","InputsTotalFailed","InputsWitnessesIter","InputsWitnessesSlice","Legacy","MathErr","Multi","Multi","Multisig","Negative","NoExtra","Normal","NotBalanced","OldUtxo","One","Output","OutputPolicy","OutputsInvalid","OutputsIter","OutputsSlice","OutputsTotalFailed","Payload","PayloadAuthData","PayloadAuthInvalid","PayloadAuthMissing","PayloadAuthSlice","PayloadData","PayloadInvalid","PayloadSlice","Positive","SetAuthData","SetIOs","SetPayload","SetTtl","SetWitnesses","Single","Single","SingleAccountBindingSignature","SpuriousTrailingData","Transaction","TransactionAuthData","TransactionBindingAuthData","TransactionBindingAuthDataPhantom","TransactionIndex","TransactionSignData","TransactionSignDataHash","TransactionSlice","TransactionStructError","TxBuilder","TxBuilderState","TxInvalidNoInput","TxInvalidNoOutput","TxNotEnoughTotalInput","TxTooManyInputs","TxTooManyOutputs","TxTooMuchTotalInput","UnspecifiedAccountIdentifier","UnverifiedTransactionSlice","Utxo","Utxo","UtxoInput","UtxoPointer","Witness","WitnessAccountData","WitnessMultisigData","WitnessUtxoData","WitnessUtxoVersion","WitnessesInvalid","WitnessesIter","WitnessesSlice","Zero","address","builder","data","data","data","data","element","iiter","index","index","index","index_or_account","input","input_ptr","inputs","inputs","io","output_index","outputs","outputs","payload","payload_auth_data","payload_data","payload_to_certificate_slice","phantom","phantom","phantom","phantom","slice","slice","slice","test","transaction","transaction_id","transfer","tstruct","tstruct","tstruct","utxo","value","value","value","witer","witness","inputs","outputs","FRAGMENT_OVERHEAD","SetAuthData","SetIOs","SetPayload","SetTtl","SetWitnesses","TxBuilder","TxBuilderState","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current_pos","data","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","get_auth_data","get_auth_data_for_witness","init","init","init","init","init","init","into","into","into","into","into","into","new","new","phantom","set_expiry_date","set_ios","set_nopayload","set_payload","set_payload_auth","set_witnesses","set_witnesses_unchecked","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tstruct","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write_date","AccountBindingSignature","Balance","BalanceError","InputsTotalFailed","Multi","Negative","NotBalanced","OutputsTotalFailed","Positive","Single","SingleAccountBindingSignature","TransactionBindingAuthDataPhantom","TransactionSignData","TransactionSignDataHash","Zero","arbitrary","arbitrary","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","deserialize_from_slice","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","new","new_single","provide","serialize_in","serialize_in","source","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify_slice","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","inputs","outputs","","","","Account","AccountIdentifier","AccountInput","INPUT_PTR_SIZE","INPUT_SIZE","Input","InputEnum","InputType","Multi","Single","UnspecifiedAccountIdentifier","Utxo","UtxoInput","_strategy_of_0","_strategy_of_0","_strategy_of_0","_to_fn_ptr","_to_fn_ptr","_to_weight","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","check_base32","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from_account","from_account_public_key","from_account_single","from_enum","from_multi_account","from_multisig_account","from_single_account","from_utxo","from_utxo_entry","get_type","hash","hash","hash","index_or_account","init","init","init","init","init","input_ptr","into","into","into","into","into","new","partial_cmp","serialize","serialized_size","to_enum","to_multi_account","to_owned","to_owned","to_owned","to_single_account","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","write_base32","Error","Forget","InputOutput","InputOutputBuilder","MathErr","One","OutputPolicy","TxInvalidNoInput","TxInvalidNoOutput","TxNotEnoughTotalInput","TxTooManyInputs","TxTooManyOutputs","TxTooMuchTotalInput","add_input","add_output","balance","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","empty","estimate_fee","fmt","fmt","fmt","from","from","from","from","get_balance","get_balance_with_placeholders","get_balance_without_fee","init","init","init","init","inputs","inputs","into","into","into","into","new","outputs","outputs","provide","remove_input","remove_output","seal","seal_with_output_policy","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Auth","HAS_AUTH","HAS_DATA","NoExtra","Payload","PayloadAuthData","PayloadAuthSlice","PayloadData","PayloadSlice","arbitrary","as_bytes","as_bytes","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into_certificate_slice","into_payload","into_payload_auth","payload_auth_data","payload_auth_data","payload_data","payload_data","payload_to_certificate_slice","payload_to_certificate_slice","serialize","serialized_size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","TransactionSigningKey","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","CannotReadExpiryDate","CannotReadNbInputs","CannotReadNbOutputs","InputsInvalid","InputsIter","InputsSlice","InputsWitnessesIter","InputsWitnessesSlice","OutputsInvalid","OutputsIter","OutputsSlice","PayloadAuthInvalid","PayloadAuthMissing","PayloadInvalid","SpuriousTrailingData","Transaction","TransactionAuthData","TransactionBindingAuthData","TransactionSlice","TransactionStruct","TransactionStructError","UnverifiedTransactionSlice","WitnessesInvalid","WitnessesIter","WitnessesSlice","arbitrary","as_ref","as_slice","balance","base32_len","block0_payload","block0_payload_builder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","data","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_spine","hash","hash","iiter","index","index","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","inputs","inputs_and_witnesses","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","iter","iter","iter","iter","nb_elements","nb_inputs","nb_inputs","nb_inputs","nb_inputs","nb_outputs","nb_outputs","nb_outputs","nb_outputs","nb_witnesses","nb_witnesses","nb_witnesses","next","next","next","next","outputs","outputs","payload","payload_auth","payload_auth","phantom","phantom","phantom","provide","serialize","serialized_size","slice","slice","slice","sz","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total_input","total_input","total_output","total_output","transaction_auth_data","transaction_binding_auth_data","transaction_sign_data_hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tstruct","tstruct","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_until","valid_until","verify_possibly_balanced","verify_strictly_balanced","verify_strictly_balanced","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witer","witnesses","witnesses","write_base32","Output","address","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","deserialize_from_slice","drop","eq","fmt","fmt","fmt","from","from_address","hash","init","into","to_owned","to_string","try_from","try_into","type_id","value","vzip","TransactionIndex","UtxoPointer","arbitrary","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","new","output_index","partial_cmp","to_owned","to_string","transaction_id","try_from","try_into","type_id","value","vzip","Account","Legacy","Multisig","Normal","OldUtxo","Utxo","WITNESS_TAG_ACCOUNT","WITNESS_TAG_MULTISIG","WITNESS_TAG_OLDUTXO","WITNESS_TAG_UTXO","Witness","WitnessAccountData","WitnessMultisigData","WitnessUtxoData","WitnessUtxoVersion","arbitrary","as_ref","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_from_slice","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","new","new","new_account","new_account_data","new_old_utxo","new_old_utxo_data","new_utxo","new_utxo_data","serialize","serialized_size","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","witness_data_common","write_base32","write_base32","Treasury","add","borrow","borrow_mut","clone","clone_into","deref","deref_mut","draw","drop","eq","fmt","from","init","initial","into","sub","to_owned","try_from","try_into","type_id","value","vzip","BadBftSlotsRatio","BadConsensusGenesisPraosActiveSlotsCoeff","BadProposalSignature","BadProposer","BadVoteSignature","BadVoter","DuplicateProposal","DuplicateVote","Error","ReadOnlySetting","UpdateProposalState","UpdateState","VoteForMissingProposal","apply_proposal","apply_vote","arbitrary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","new","process_proposals","proposal","proposal_date","proposals","proposals","provide","tests","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","votes","vzip","vzip","vzip","AlreadyExists","Entry","EntryOwned","Error","IndexNotFound","Iter","Ledger","TransactionNotFound","TransactionUnspents","Values","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fragment_id","fragment_id","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_outputs","get","hamt_iter","hamt_iter","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","into_iter","is_empty","iter","new","next","next","output","output","output_index","output_index","provide","remove","remove_input","remove_multiple","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unspents_iter","unspents_iter","values","vzip","vzip","vzip","vzip","vzip","vzip","vzip","","FromSliceTooBig","FromSliceTooSmall","NegativeAmount","Overflow","SplitValueIn","VALUE_SERIALIZED_SIZE","Value","ValueError","_strategy_of_0","_to_fn_ptr","add","arbitrary","arbitrary_with","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","checked_add","checked_sub","clone","clone","clone","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_payload","hash","init","init","init","into","into","into","partial_cmp","parts","provide","remaining","saturating_add","scale","serialize","serialized_size","split_in","sub","sum","sum","to_owned","to_owned","to_owned","to_payload","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","zero","AlreadyVoted","BadDecryptShares","CannotTallyVotes","Choice","CommitteeId","Decrypted","Encrypted","EncryptedVote","InvalidChoice","InvalidChoice","InvalidDecryption","InvalidPayloadType","InvalidPrivacy","InvalidTallyCommittee","InvalidValue","InvalidVotePlan","InvalidVoteProposal","NoEncryptedTally","NotCommitteeTime","NotVoteTime","Options","Payload","PayloadType","Private","Private","Private","Private","PrivateTallyError","PrivateTallyState","PrivateVoteInvalidSize","ProofOfCorrectVote","Public","Public","Public","Public","Tally","TallyAlreadyDecrypted","TallyError","TallyResult","TryFromIntError","ValidatedPayload","VoteError","VoteError","VotePlanInsertionError","VotePlanLedger","VotePlanLedgerError","VotePlanManager","VotePlanMissingCommitteeMemberKey","VotePlanStatus","VotePlanVoteEndPassed","VotePlanVoteStartStartedAlready","VoteProposalStatus","VoteVerificationError","Weight","Zero","ZeroVotingPower","choice","committee","committee","committee_end","committee_public_keys","encrypt_vote","id","id","index","ledger","manager","options","options","options_range","payload","payload","plan","plans","privacy","proposal_id","proposal_managers","proposals","results","status","tally","tally","vote_end","vote_start","votes","voting_token","choice","encrypted_vote","proof","encrypted_tally","result","result","state","choice","options","value","actual","choice","end","end","expected","expected","expected","num_proposals","options","received","source","start","start","vote","vote","vote","current_date","current_date","id","id","reason","reason","vote_end","vote_start","Choice","InvalidOptionsLength","NUM_CHOICES_MAX","Options","arbitrary","arbitrary","as_byte","as_byte","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","choice_range","clone","clone","clone_into","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","new_length","num_choices","options_range","partial_cmp","property","provide","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate","vzip","vzip","vzip","COMMITTEE_ID_SIZE","CommitteeId","TryFromCommitteeIdError","arbitrary","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize_from_slice","drop","drop","encode_hex","encode_hex_upper","eq","expected","fmt","fmt","fmt","fmt","from","from","from","from","from_hex","from_payload","from_str","from_str","hash","init","init","into","into","provide","public_key","received","serialize","serialized_size","tests","to_hex","to_owned","to_payload","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","VoteError","VotePlanInsertionError","VotePlanLedger","VotePlanLedgerError","VotePlanMissingCommitteeMemberKey","VotePlanVoteEndPassed","VotePlanVoteStartStartedAlready","add_vote_plan","apply_committee_result","apply_vote","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","init","init","into","into","new","plans","provide","source","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","current_date","current_date","id","id","reason","reason","vote_end","vote_start","AlreadyVoted","CannotTallyVotes","Decrypted","IncrementalTally","InvalidChoice","InvalidPayloadType","InvalidTallyCommittee","InvalidVotePlan","InvalidVoteProposal","NotCommitteeTime","NotVoteTime","Private","Private","Private","PrivateTallyError","PrivateVoteInvalidSize","ProposalManager","ProposalManagers","Public","Public","Public","ValidatedPayload","ValidatedVoteCast","VoteError","VotePlanManager","VoteVerificationError","ZeroVotingPower","action","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_committee","can_vote","check","check_already_voted","check_governance_criteria","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committee","committee_set","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","finalize_private_tally","finalize_private_tally","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","id","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","managers","managers_mut","new","new","new_private","new_public","options","payload","plan","plan","private_tally","proposal_index","proposal_managers","provide","public_tally","public_tally","public_tally","source","statuses","tally","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_committee","validate_private_vote","validate_public_vote","validate_vote","vote","vote","vote","vote_plan_elapsed","votes_by_voters","vzip","vzip","vzip","vzip","vzip","vzip","vzip","crs","election_pk","managers","managers","actual","choice","end","end","expected","expected","expected","num_proposals","options","received","source","start","start","vote","vote","vote","EncryptedVote","InvalidValue","Payload","PayloadType","Private","Private","ProofOfCorrectVote","Public","Public","TryFromIntError","Zero","arbitrary","arbitrary","as_inner","as_inner","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_inner","from_inner","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","partial_cmp","payload_type","private","provide","public","read","read","read","serialize","serialize","serialize_in","serialize_in","serialize_in","tests","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","choice","encrypted_vote","proof","value","encrypt_vote","VotePlanStatus","VoteProposalStatus","borrow","borrow","borrow_mut","borrow_mut","committee_end","committee_public_keys","deref","deref","deref_mut","deref_mut","drop","drop","from","from","id","index","init","init","into","into","options","payload","proposal_id","proposals","tally","try_from","try_from","try_into","try_into","type_id","type_id","vote_end","vote_start","votes","voting_token","vzip","vzip","BadDecryptShares","Decrypted","Encrypted","InvalidChoice","InvalidDecryption","InvalidPrivacy","NoEncryptedTally","Private","PrivateTallyState","Public","Tally","TallyAlreadyDecrypted","TallyError","TallyResult","Weight","add_vote","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","init","init","init","init","init","into","into","into","into","into","is_private","is_public","is_zero","new","new_private","new_public","options","options","partial_cmp","participation","private_encrypted","private_set_result","provide","result","results","results","saturating_add","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","encrypted_tally","result","result","state","choice","options"],"q":[[0,"chain_impl_mockchain"],[31,"chain_impl_mockchain::account"],[73,"chain_impl_mockchain::accounting"],[74,"chain_impl_mockchain::accounting::account"],[146,"chain_impl_mockchain::accounting::account::account_state"],[257,"chain_impl_mockchain::accounting::account::last_rewards"],[285,"chain_impl_mockchain::accounting::account::spending"],[377,"chain_impl_mockchain::accounting::account::spending::Error"],[379,"chain_impl_mockchain::block"],[494,"chain_impl_mockchain::block::builder"],[495,"chain_impl_mockchain::certificate"],[736,"chain_impl_mockchain::certificate::PushProposal"],[737,"chain_impl_mockchain::certificate::TallyProof"],[741,"chain_impl_mockchain::certificate::VoteAction"],[743,"chain_impl_mockchain::certificate::VoteTallyPayload"],[744,"chain_impl_mockchain::certificate::delegation"],[807,"chain_impl_mockchain::certificate::evm_mapping"],[856,"chain_impl_mockchain::certificate::mint_token"],[898,"chain_impl_mockchain::certificate::pool"],[1092,"chain_impl_mockchain::certificate::test"],[1093,"chain_impl_mockchain::certificate::update_proposal"],[1127,"chain_impl_mockchain::certificate::update_vote"],[1168,"chain_impl_mockchain::certificate::vote_cast"],[1204,"chain_impl_mockchain::certificate::vote_plan"],[1397,"chain_impl_mockchain::certificate::vote_plan::PushProposal"],[1398,"chain_impl_mockchain::certificate::vote_plan::VoteAction"],[1400,"chain_impl_mockchain::certificate::vote_tally"],[1542,"chain_impl_mockchain::certificate::vote_tally::TallyProof"],[1546,"chain_impl_mockchain::certificate::vote_tally::VoteTallyPayload"],[1547,"chain_impl_mockchain::chaineval"],[1615,"chain_impl_mockchain::chaineval::ConsensusEvalContext"],[1617,"chain_impl_mockchain::chaintypes"],[1680,"chain_impl_mockchain::config"],[1908,"chain_impl_mockchain::config::RewardParams"],[1916,"chain_impl_mockchain::date"],[1927,"chain_impl_mockchain::error"],[1955,"chain_impl_mockchain::evm"],[1994,"chain_impl_mockchain::fee"],[2089,"chain_impl_mockchain::fragment"],[2175,"chain_impl_mockchain::fragment::config"],[2201,"chain_impl_mockchain::fragment::content"],[2252,"chain_impl_mockchain::header"],[2292,"chain_impl_mockchain::header::builder"],[2418,"chain_impl_mockchain::header::components"],[2493,"chain_impl_mockchain::header::cstruct"],[2632,"chain_impl_mockchain::header::cstruct::HeaderError"],[2634,"chain_impl_mockchain::header::deconstruct"],[2720,"chain_impl_mockchain::header::header"],[2852,"chain_impl_mockchain::header::test"],[2870,"chain_impl_mockchain::header::version"],[2924,"chain_impl_mockchain::key"],[3105,"chain_impl_mockchain::key::tests"],[3123,"chain_impl_mockchain::leadership"],[3302,"chain_impl_mockchain::leadership::bft"],[3341,"chain_impl_mockchain::leadership::genesis"],[3410,"chain_impl_mockchain::leadership::genesis::GenesisError"],[3412,"chain_impl_mockchain::leadership::genesis::VrfError"],[3422,"chain_impl_mockchain::leadership::genesis::VrfEvalFailure"],[3424,"chain_impl_mockchain::leadership::genesis::vrfeval"],[3504,"chain_impl_mockchain::leadership::genesis::vrfeval::VrfEvalFailure"],[3506,"chain_impl_mockchain::ledger"],[3533,"chain_impl_mockchain::ledger::check"],[3571,"chain_impl_mockchain::ledger::check::TxVerifyError"],[3573,"chain_impl_mockchain::ledger::governance"],[3640,"chain_impl_mockchain::ledger::governance::ParametersGovernanceAction"],[3641,"chain_impl_mockchain::ledger::governance::TreasuryGovernanceAction"],[3642,"chain_impl_mockchain::ledger::governance::parameters"],[3719,"chain_impl_mockchain::ledger::governance::parameters::ParametersGovernanceAction"],[3720,"chain_impl_mockchain::ledger::governance::treasury"],[3793,"chain_impl_mockchain::ledger::governance::treasury::TreasuryGovernanceAction"],[3794,"chain_impl_mockchain::ledger::iter"],[3914,"chain_impl_mockchain::ledger::leaderlog"],[3940,"chain_impl_mockchain::ledger::ledger"],[4259,"chain_impl_mockchain::ledger::ledger::Error"],[4288,"chain_impl_mockchain::ledger::pots"],[4414,"chain_impl_mockchain::ledger::recovery"],[4515,"chain_impl_mockchain::ledger::reward_info"],[4564,"chain_impl_mockchain::ledger::token_distribution"],[4608,"chain_impl_mockchain::legacy"],[4693,"chain_impl_mockchain::milli"],[4729,"chain_impl_mockchain::multisig"],[4783,"chain_impl_mockchain::multisig::declaration"],[4894,"chain_impl_mockchain::multisig::index"],[4945,"chain_impl_mockchain::multisig::ledger"],[5010,"chain_impl_mockchain::multisig::witness"],[5053,"chain_impl_mockchain::multiverse"],[5115,"chain_impl_mockchain::rewards"],[5293,"chain_impl_mockchain::setting"],[5397,"chain_impl_mockchain::stake"],[5436,"chain_impl_mockchain::stake::controlled"],[5471,"chain_impl_mockchain::stake::delegation"],[5570,"chain_impl_mockchain::stake::distribution"],[5646,"chain_impl_mockchain::stake::stake"],[5747,"chain_impl_mockchain::testing"],[5762,"chain_impl_mockchain::testing::arbitrary"],[5810,"chain_impl_mockchain::testing::arbitrary::address"],[5856,"chain_impl_mockchain::testing::arbitrary::kind_type"],[5893,"chain_impl_mockchain::testing::arbitrary::output"],[5912,"chain_impl_mockchain::testing::arbitrary::random"],[5930,"chain_impl_mockchain::testing::arbitrary::transaction"],[6021,"chain_impl_mockchain::testing::arbitrary::transaction::Error"],[6027,"chain_impl_mockchain::testing::arbitrary::update_proposal"],[6053,"chain_impl_mockchain::testing::arbitrary::utils"],[6078,"chain_impl_mockchain::testing::arbitrary::utxo"],[6096,"chain_impl_mockchain::testing::arbitrary::wallet"],[6114,"chain_impl_mockchain::testing::builders"],[6160,"chain_impl_mockchain::testing::builders::WitnessMode"],[6161,"chain_impl_mockchain::testing::builders::block_builder"],[6213,"chain_impl_mockchain::testing::builders::cert_builder"],[6223,"chain_impl_mockchain::testing::builders::initial_builder"],[6274,"chain_impl_mockchain::testing::builders::old_address_builder"],[6290,"chain_impl_mockchain::testing::builders::stake_pool_builder"],[6319,"chain_impl_mockchain::testing::builders::tx_builder"],[6369,"chain_impl_mockchain::testing::builders::tx_cert_builder"],[6443,"chain_impl_mockchain::testing::builders::tx_cert_builder::WitnessMode"],[6444,"chain_impl_mockchain::testing::builders::vote"],[6445,"chain_impl_mockchain::testing::builders::witness_builder"],[6453,"chain_impl_mockchain::testing::data"],[6492,"chain_impl_mockchain::testing::data::address"],[6611,"chain_impl_mockchain::testing::data::keys"],[6635,"chain_impl_mockchain::testing::data::leader"],[6657,"chain_impl_mockchain::testing::data::stake_pool"],[6689,"chain_impl_mockchain::testing::data::vote"],[6726,"chain_impl_mockchain::testing::data::wallet"],[6766,"chain_impl_mockchain::testing::gen"],[6805,"chain_impl_mockchain::testing::gen::vote"],[6836,"chain_impl_mockchain::testing::ledger"],[7014,"chain_impl_mockchain::testing::scenario"],[7033,"chain_impl_mockchain::testing::scenario::controller"],[7100,"chain_impl_mockchain::testing::scenario::controller::ControllerError"],[7104,"chain_impl_mockchain::testing::scenario::fragment_factory"],[7143,"chain_impl_mockchain::testing::scenario::scenario_builder"],[7199,"chain_impl_mockchain::testing::scenario::scenario_builder::ScenarioBuilderError"],[7201,"chain_impl_mockchain::testing::scenario::template"],[7361,"chain_impl_mockchain::testing::scenario::template::builders"],[7504,"chain_impl_mockchain::testing::serialization"],[7505,"chain_impl_mockchain::testing::verifiers"],[7509,"chain_impl_mockchain::testing::verifiers::ledger_verifier"],[7700,"chain_impl_mockchain::tokens"],[7704,"chain_impl_mockchain::tokens::identifier"],[7769,"chain_impl_mockchain::tokens::minting_policy"],[7843,"chain_impl_mockchain::tokens::name"],[7901,"chain_impl_mockchain::tokens::policy_hash"],[7939,"chain_impl_mockchain::transaction"],[8079,"chain_impl_mockchain::transaction::BalanceError"],[8081,"chain_impl_mockchain::transaction::builder"],[8181,"chain_impl_mockchain::transaction::element"],[8311,"chain_impl_mockchain::transaction::element::BalanceError"],[8313,"chain_impl_mockchain::transaction::input"],[8451,"chain_impl_mockchain::transaction::io"],[8542,"chain_impl_mockchain::transaction::payload"],[8659,"chain_impl_mockchain::transaction::test"],[8677,"chain_impl_mockchain::transaction::transaction"],[8999,"chain_impl_mockchain::transaction::transfer"],[9027,"chain_impl_mockchain::transaction::utxo"],[9056,"chain_impl_mockchain::transaction::witness"],[9156,"chain_impl_mockchain::treasury"],[9179,"chain_impl_mockchain::update"],[9259,"chain_impl_mockchain::utxo"],[9411,"chain_impl_mockchain::value"],[9507,"chain_impl_mockchain::vote"],[9593,"chain_impl_mockchain::vote::Payload"],[9596,"chain_impl_mockchain::vote::PrivateTallyState"],[9598,"chain_impl_mockchain::vote::Tally"],[9600,"chain_impl_mockchain::vote::TallyError"],[9602,"chain_impl_mockchain::vote::TryFromIntError"],[9603,"chain_impl_mockchain::vote::VoteError"],[9619,"chain_impl_mockchain::vote::VotePlanLedgerError"],[9627,"chain_impl_mockchain::vote::choice"],[9695,"chain_impl_mockchain::vote::committee"],[9757,"chain_impl_mockchain::vote::ledger"],[9807,"chain_impl_mockchain::vote::ledger::VotePlanLedgerError"],[9815,"chain_impl_mockchain::vote::manager"],[10003,"chain_impl_mockchain::vote::manager::ProposalManagers"],[10007,"chain_impl_mockchain::vote::manager::VoteError"],[10023,"chain_impl_mockchain::vote::payload"],[10144,"chain_impl_mockchain::vote::payload::Payload"],[10147,"chain_impl_mockchain::vote::payload::TryFromIntError"],[10148,"chain_impl_mockchain::vote::privacy"],[10149,"chain_impl_mockchain::vote::status"],[10188,"chain_impl_mockchain::vote::tally"],[10316,"chain_impl_mockchain::vote::tally::PrivateTallyState"],[10318,"chain_impl_mockchain::vote::tally::Tally"],[10320,"chain_impl_mockchain::vote::tally::TallyError"]],"d":["","","Representation of the block in the mockchain.","","","Shared Types between ledger and chain","","","Errors taht may happen in the ledger and mockchain.","EVM transactions","","","","Module provides cryptographic utilities and types related …","","","","","","Multiverse","","define the Blockchain settings","","","","","","","Unspend Transaction Output (UTXO) ledger","","cover all that relate to the voting part of things (except …","","","","","Account Identifier (also used as Public Key)","The public ledger of all accounts associated with their …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Generic account like accounting","","","The public ledger of all accounts associated with their …","","","","","","","","","Add a new account into this ledger.","Add rewards to an existing account.","Add value to an existing account.","Add value to an existing account.","","","","","","","","","","","","","","","","","","check if an account already exist","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Get account state","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new empty account ledger","","Remove an account from this ledger","Set the delegation of an account in this ledger","","Spend value from an existing account.","Spend value from an existing account without spending …","Spending strategies","","","","","","","","","","","","","","","","","","","The maximum number of pools","Delegation Ratio type express a number of parts and a list …","Set the choice of delegation:","","","","","","","","","","","","Add a value to an account state","Add Rewards to the account value but also as the …","Same as add() except use a ValueError","","","","","","","","","","","","","","","","","","","Get referencet to delegation setting","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new account state with a specific start value","","","","","","","Set delegation","Spends value from an account state, and returns the new …","Spends value from an account state, and returns the new …","","","","","Add a value to a token in an account state","","","","","","","","","","","","","","","","","","","","","","Last rewards associated with a state","","","","Add some value to the last reward, if the epoch is the …","","","","","","Create an initial value of epoch=0 reward=0","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","number of parallel lanes of increasing counters, equals to …","","","Spending counter associated to an account.","Simple strategy to spend from multiple increasing counters","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Increment the counter within it own lane. the lane of …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Increases the spending counter on the given lane.","try to match the lane of the counter in argument, if it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Block</code> is an element of the blockchain it contains multiple …","","","Non unique identifier of the transaction position in the …","","","","","","","","","","","","","","","","","","","","","","","","Create a block from a block version, content and a header …","","","","","","","","","","","Date of the block.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Identifier of the block, currently the hash of the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Does not validate that the block is consistent","Get the slot following this one.","","Id of the parent block.","","","","","","","","","","","","","","","","","","","","","","","","","","Create a block from a block version, content and a header …","","","","","","","","","","","","","abstract tag type to represent an external document, …","the identifier of the external proposal is the Blake2b 256 …","","Hash of keys used for pool","signatures with indices","","","","","","the action if off chain or not relevant to the blockchain","","A self delegation to a specific StakePoolId.","","","","","","control the parameters","Pool ID","","Permission system related to the pool","Pool information","","","","","Pool Registration Cryptographic Hash","Retirement info for a pool","","","","","","Updating info for a pool","","","","","","","a proposal with the associated external proposal identifier","a collection of proposals","","","","","","","","","","","","control the treasury","","","","","","","","","","","","","","this is the action that will result of the vote","","","","","a vote plan for the voting system","","","","","the vote plan identifier on the blockchain","","","","","","","","","","","","","","","","","","","","","","","","","","","the committee duration is the time allocated to the …","encrypting votes public keys","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Genesis Praos keys","","","","","","Operators of this pool","","Owners of this pool","","","vote payload type","Permission system for this pool","","","","","","","the proposals to vote for","","","","Reward account","Rewarding","A random value, for user purpose similar to a UUID. it may …","","Beginning of validity for this pool, this is used to keep …","","","","","","","","","","","","","","","","","","","","","","","the duration within which it is possible to vote for one …","","","the vote start validity","","","voting token used for weigthing the votes for any proposal …","","","","","","","","","","","","","A self delegation to a specific StakePoolId.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of keys used for pool","signatures with indices","","","","","Pool ID","Representant of a structure signed by a pool’s owners","","Permission system related to the pool","Pool information","Pool Registration Cryptographic Hash","Retirement info for a pool","","Updating info for a pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Genesis Praos keys","","","","","","Operators of this pool","Owners of this pool","","","","","","","","","","Permission system for this pool","","","","Reward account","Rewarding","A random value, for user purpose similar to a UUID. it may …","","","","","","","","","","","","","","","","Beginning of validity for this pool, this is used to keep …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","abstract tag type to represent an external document, …","the identifier of the external proposal is the Blake2b 256 …","","the maximum number of proposals to push in <code>Proposals</code>","the action if off chain or not relevant to the blockchain","control the parameters","a proposal with the associated external proposal identifier","a collection of proposals","","","control the treasury","this is the action that will result of the vote","a vote plan for the voting system","the vote plan identifier on the blockchain","","","","","","","","","","","","","","","","","","","","","","","tells if it is possible to vote at the given date","","","","","","","","","","","","","","","","the committee duration is the time allocated to the …","","","encrypting votes public keys","","","tells if it is possible to do the committee operations at …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","vote payload type","access the proposals associated to this voting plan","","the proposals to vote for","","","attempt to add a new proposal in the proposal collection","","","","","","","","","build the identifier of the vote plan","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the duration within which it is possible to vote for one …","","","the vote start validity","","","voting token used for weigthing the votes for any proposal …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Consensus related data extract from the header","","This is the data extracted from a header related to …","","PraosNonce gathered per block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Change the nonce to be the result of the hash of the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Seconds elapsed since 1-Jan-1970 (unix time)","","","","","","","","","","","","","","","","Possible errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Non unique identifier of the transaction position in the …","","","","","","","","","if the Ledger finds that the input has already been used …","","If the Ledger could not find the given input in the UTxO …","This error will happen if the input was already set and is …","error occurs if the signature is invalid: either does not …","error occurs when one of the witness does not sing entire …","Transaction does not have enough signatures. First value …","Transaction sum is not equal to zero, this means that we …","Transaction output has a value of zero.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Variants of supported EVM action types","Variants of supported EVM transactions","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Linear fee using the basic affine formula …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All possible messages recordable in the content","","Tag enumeration of all known fragment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Return the tag associated with the Message","The ID of a message is a hash of its serialization <em>without</em> …","The ID of a fragment is a hash of its serialization <em>without</em>…","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Block Contents","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","set multiple messages in the block to build","","","","","","","","","","","","","","Non unique identifier of the transaction position in the …","","","","","","","Finalized BFT Header","Header Builder (finalize BFT part)","Finalized BFT Header","","Header description","Finalized Genesis-Praos Header","Header Builder (finalize Genesis-Praos part)","","","","Finalized Unsigned Header","","","","","","","","","","","","","","","","","","","","Header Builder (finalize BFT part)","Finalized BFT Header","","","Header Builder (finalize Genesis-Praos part)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the authenticated data of a BFT header being built","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tentatively transition to a BFT Header builder","Tentatively transition to a Genesis-Praos Header builder","Finalized to an unsigned header","Create a new Header builder starting from the full content.","Create a new Header builder starting from the full content.","recommended to use new(), this is only for test","recommended to use new(), this is only for test","","","Set the date of this block","Set the header as a genesis header:","Set the header as a general block, with a specific depth …","Set the signature in the BFT header and return the …","Set the signature in the Genesis-Praos header and return a …","","Just a helper to set the signature directly from what the …","Method introduced for negative testing. It does not derive …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In case there is no need for consensus layer and no need …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finalized BFT Header","Header description","","Finalized Genesis-Praos Header","Finalized Unsigned Header","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Praos Leader consisting of the KES public key and VRF …","Hash that is used as an address of the various components.","","A serializable type T with a signature.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All 0 hash used as a special hash","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Leadership represent a given epoch and their associated …","","","","","Verification type for when validating a block","","","","","","","","","","","","","","","","","","","","","","","","","","get the consensus associated with the <code>Leadership</code>","Create a Block date given a leadership and a relative …","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the epoch associated to the <code>Leadership</code>","","","get the TimeEra associated to the <code>Leadership</code>","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Test that the given leader object is able to create a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify whether this header has been produced by a leader …","","","","","","","","","","","","","","The BFT Leader selection is based on a round robin of the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new BFT leadership","","","","","","","","","","","","","","","","","Genesis Praos leadership data for a specific epoch","","Threshold between 0.0 and 1.0","","","","","","Witness","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","previous epoch nonce and the slotid encoded in big endian","","Threshold between 0.0 and 1.0","","","","Witness","","","","","","","","","","","","","","","","Create an Input from previous epoch nonce and the current …","","","","","","","","","","","","","","Evaluate if the threshold is above for a given input for …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","verify that the witness pass the threshold for this …","","","","","","","","The epoch reward information.","Count how many blocks have been created by a specific Pool","Special pots of money","Control what information will be extracted from the …","Amount added to each account. structure can be empty.","","Total Drawn from reward escrow pot for this epoch","","Fees contributed into the pot this epoch","define how to rule over the blockchain","","","","Mockchain ledger. Ledger exists in order to update the …","","Params used","","This module holds all the necessary methods to be able to …","","","","","Amount added to each pool id. structure can be empty.","","","","Value added to the treasury","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Check that the output value is valid","","check that the pool registration certificate is valid","","","check that the transaction input/outputs/witnesses is …","","check that the transaction input/outputs/witnesses is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the default acceptance criteria","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","register a new action","","","","","set the new default acceptance criteria","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the default acceptance criteria","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","set the new default acceptance criteria","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Count how many blocks have been created by a specific Pool","","","","","","","","","","Returns the argument unchanged.","Add one count to a pool. if the pool doesn’t exist, then …","","Calls <code>U::from(self)</code>.","Iterate over all known pool record","","","new empty leader log","Set a pool id to a specific value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Overall ledger structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to apply messages to a State, and return the new State …","Try to apply a message to the State, and return the new …","","","","","","","","","","","Applies transaction to the account ledger by validating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This need to be called before the <em>first</em> block of a new …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","access the ledger static parameters","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Special pots of money","","","","","","","","Append some fees in the pots","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw rewards from the pot","Draw rewards from the pot","","","","","","","","","","","","Get the value in the treasury","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Add to treasury","","Siphon all the fees","","","","Sum the total values in the pots","","Add to treasury","Get the value in the treasury","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new empty set of pots","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The epoch reward information.","Control what information will be extracted from the …","Amount added to each account. structure can be empty.","","","","","","","","","","","","","","","Total Drawn from reward escrow pot for this epoch","","","Fees contributed into the pot this epoch","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Params used","","","","","","Amount added to each pool id. structure can be empty.","","","","Value added to the treasury","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A valid cardano Address that is displayed in base58","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","mostly helper of the previous function, so not to have to …","Check if the Addr can be reconstructed with a specific xpub","mostly helper of the previous function, so not to have to …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Declaration of a multisig account parameters which is:","","","","","","Account Identifier (also used as Public Key)","","The Index is really just 3 bits and has a hardbound linked …","","","","","","","","","","Witness for multisig","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Declaration of a multisig account parameters which is:","","","","Account Identifier (also used as Public Key)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Get the identifier associated with a declaration","","","","","","","","","","","","","","","","","","","","","","","","","","","The Index is really just 3 bits and has a hardbound linked …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Add a new multisig declaration into the ledger.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Gets the <code>&amp;Declaration</code> for the given <code>&amp;Identifier</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new empty account ledger","","Remove a declaration from this ledger","","Set the delegation of an account in this ledger","","Spend value from an existing account.","Spend value from an existing account without spending …","","","","","","","","","","","","Witness for multisig","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Verify that the declaration and the witnesses in …","","","","","","A RAII wrapper around a block identifier and the state …","","Add a state to the multiverse. Return a <code>Ref</code> object that …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Once the state are old in the timeline, they are less and …","","","","","","","","","Add a state to the multiverse. Return a Ref object that …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return the number of states stored in memory.","","","","","","","","","","","","","","","","","","","","","","","","The drawn value will be limited by the absoluted stake in …","","","","","the drawn value will not be limited","Parameters for rewards calculation. This controls:","","","","","A value distributed between tax and remaining","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is the ratio used by either the linear or the …","The type of compounding","","","","","","","","","","","","","","","","","","","","","","","","Number of epoch between reduction phase, cannot be 0","When to start","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","This is an initial_value for the linear or halvening …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Pool Capping This doesn’t really make sense","","","Max Drawing limit","Calculate the reward contribution from the parameters","","Tax some value into the tax value and what is remaining","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Active slots coefficient used for calculating minimum …","","Fees nSettings","","Move the fees to the rewards; this is the common mode of …","","","Move the fees directly to treasury. this is not a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The number of epochs that a proposal remains valid. To be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A structure that keeps track of stake keys and stake pools.","","","","Stake distribution at a given time.","","","","","","","","","","Calculate the Stake Distribution where the source of stake …","","","","","","","","","","For each stake pool, the total stake value, and the value …","","","","","","","","add the given amount of stake to the given identifier","","","","","","get the total stake controlled by the given account","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","get the ratio controlled by the given account","add the given amount of stake to the given identifier","","","","","","","","","","","","","","","","","","A structure that keeps track of stake keys and stake pools.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stake distribution at a given time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of stake pools with non-zero stake.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calculate the Stake Distribution where the source of stake …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","For each stake pool, the total stake value, and the value …","","","Return the total stake held by the eligible stake pools.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Apply this ratio to a value","Divide a value by n equals parts, with a potential …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TestGen is a clone of abritrary architecture. There is a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Struct helps gather all verifications and then decide if …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","this struct can create any transaction including not valid …","","","","","","","","","","","","","","","","Below method should be used only for negative testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Below method should be used only for negative testing","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","this struct can create any transaction including not valid …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Structure that proofs that certain user agrees with some …","","","","","Struct is responsible for adding some code which makes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Struct is responsible for adding some code which makes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to get the associated secret key for a given public key","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create a new keys DB","","same as new_ed25519_secret_key but instead return the …","Create a new Ed25519 and record it","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","TestGen is a clone of abritrary architecture. There is a …","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","test that any arbitrary given object can serialize and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error during parsing the identifier string.","","The unique identifier of a token.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A minting policy consists of multiple entries defining …","An entry of a minting policy. Currently there are no …","Error while checking a minting transaction against the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","A sequence of bytes serving as a token name. Tokens that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","blake2b_224 hash of a serialized minting policy","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Amount of the balance in the transaction.","","","","","Possible error for the builder.","Forget everything, do not try to return money.","","","","","Generalized input which have a specific input value, and …","","Inputs &amp; Outputs for a built transaction","Inputs &amp; Outputs for a transaction being built","","","","","","","","","","","","","Balance is negative, such transaction can’t be valid.","","","","","Send all extra balance to the given address.","Information how tokens are spent. A value of tokens is …","Output policy to be used in transaction. This policy is …","","","","","","Owned binary representation of a payload auth","","","Borrowed binary representation of a payload auth","Owned binary representation of a payload","","Borrowed binary representation of a payload","Balance is positive.","","","","","","","","","","","","","","","","","","","","A Transaction builder with an associated state machine","","","","","","","This is either an single account or a multisig account …","","","","","Unspent transaction pointer.","Structure that proofs that certain user agrees with some …","","","","","","","","Balance is zero.","","","","","","","","","","","","","","","","","","the output index within the pointed transaction’s outputs","","","","","","","","","","","","","","","","the transaction identifier where the unspent output is","","","","","","","","the value we expect to read from this output","","","","","","","","","","","","A Transaction builder with an associated state machine","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the authenticated data related to possible overall …","Get the authenticated data consisting of the payload and …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new Tx builder","Create a new Tx builder","","","Set the inputs and outputs of this transaction","","Set the payload of this transaction","Set the authenticated data","Set the witnesses of the transaction. There’s need to be …","Set the witnesses of the transaction.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of the balance in the transaction.","","","","Balance is negative, such transaction can’t be valid.","","","Balance is positive.","","","","","","Balance is zero.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generalized input which have a specific input value, and …","","","","","This is either an single account or a multisig account …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Possible error for the builder.","Forget everything, do not try to return money.","Inputs &amp; Outputs for a built transaction","Inputs &amp; Outputs for a transaction being built","","Send all extra balance to the given address.","Output policy to be used in transaction. This policy is …","","","","","","","Add additional input.","Add additional output.","","","","","","","","","","Build the InputOutput from the Builder","","","","","","","","","","","","","","","","","Create a new empty builder","Calculate the fees on a given fee algorithm for the …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get balance including current fee.","Get balance including current fee.","Get transaction balance without fee included.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a builder from a given sequence of inputs and …","","","","Remove input at the index specified starting from the …","Remove output at the index specified starting from the …","Seal the transaction checking that the transaction fits …","Seal the transaction by passing fee rule and the output …","","","","","","","","","","","","","","","","","","","","","","","","","","Owned binary representation of a payload auth","Borrowed binary representation of a payload auth","Owned binary representation of a payload","Borrowed binary representation of a payload","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a specific block0 payload transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Verify the structure of the transaction and return all the …","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Information how tokens are spent. A value of tokens is …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Unspent transaction pointer.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","the output index within the pointed transaction’s outputs","","","","the transaction identifier where the unspent output is","","","","the value we expect to read from this output","","","","","","","","","","","","Structure that proofs that certain user agrees with some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Creates new <code>Witness</code> value.","","","","","","","","","","","","","","","","","","","","","","","","","","An amount of value owned by the treasury.","Add some value in the treasury","","","","","","","","","","","Returns the argument unchanged.","","Create a treasury with an initial value","Calls <code>U::from(self)</code>.","remove some values from the treasury","","","","","Get value in the treasury","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","structure used by the iterator or the getter of the UTxO …","structure used by the iterator or the getter of the UTxO …","","","","Ledger of UTXO","","Hold all the individual outputs that remain unspent","","Add new outputs associated with a specific transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new empty UTXO Ledger","","","","","","","","Spend a specific index from the transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unspent transaction value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Divide a value by n equals parts, with a potential …","","","","","","","","","","","","","","","","","","","","","","","","","","","a choice","committee identifier","","","","","","","","","","","","","","","","options for the vote","","the <code>PayloadType</code> to use for a vote plan","","","","","","","","","","","","","","","","the tally results","","","","","","","","Manage the vote plan and the associated votes in the ledger","","","","","","","weight of a vote","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a choice","error that may occur when creating a new <code>Options</code> using the …","","options for the vote","","","get the byte representation of the <code>Options</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","create a new <code>Options</code> with the given number of available …","","","","","","","","","","","","","","","","","","validate the given <code>Choice</code> against the available <code>Options</code>","","","","","committee identifier","error that can be received when converting a slice into a …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","read the identifier from the hexadecimal string","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","returns the identifier encoded in hexadecimal string","","","","","","","","","","","","","","","","","","","","","","add the vote plan in a new <code>VotePlanLedger</code>","apply the committee result for the associated vote plan","attempt to apply the vote to the appropriate Vote Proposal","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manage the vote plan and the associated votes in the ledger","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","construct a <code>ProposalManager</code> to track down the votes …","construct a <code>ProposalManager</code> to track down the votes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","validate the vote against the proposal: verify that the …","attempt to apply the vote to one of the proposals","Attempt to apply the vote to one of the proposals.","apply the given vote cast to the proposal","return true if the vote plan has elapsed i.e. the vote is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the <code>PayloadType</code> to use for a vote plan","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the tally results","weight of a vote","add a vote and its weight on the tally","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[[]],[[],2],[[]],[2,3],[[]],[[]],[2,2],[[]],[[2,2],4],[5],[5],[6,[[8,[2,7]]]],[5],[[2,2],9],[[2,10],11],[[2,10],11],[[[3,[12]]],2],[[]],[2],[[],5],[[]],[[2,2],[[13,[4]]]],[[2,6],[[8,[14]]]],[2,5],0,[[]],[[],15],[[],8],[[],8],[[],16],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[20,[[0,[17,18,19]],17]],[0,[17,18,19]],21,17],[[8,[[20,[[0,[17,18,19]],17]],22]]]],[[[20,[[0,[17,18,19]],17]],23,21,17],[[8,[[20,[[0,[17,18,19]],17]],24]]]],[[[20,[[0,[17,18,19]],17]],21],[[8,[[20,[[0,[17,18,19]],17]],22]]]],[[[20,[[0,[17,18,19]],17]],21,17],[[8,[[20,[[0,[17,18,19]],17]],24]]]],[[]],[[]],[[]],[[]],[22,22],[[[20,[[0,[17,19,18]],17]]],[[20,[[0,[17,19,18]],17]]]],[[]],[[]],[[],[[20,[[0,[17,18,19]],17]]]],[5],[5],[5],[5],[5],[5],[[22,22],9],[[[20,[[0,[25,19,18]],25]],20],9],[[[20,[[0,[17,18,19]],17]]],9],[[22,10],11],[[22,10],11],[[[20,[[0,[17,18,19,26]],[0,[17,26]]]],10],11],[27,22],[[]],[[[28,[22]]],22],[24,22],[29,22],[[]],[30,[[20,[[0,[17,18,19]],17]]]],[[[20,[[0,[17,18,19]],17]]],[[8,[31,22]]]],[[[20,[[0,[17,18,19]],17]]],[[8,[21,24]]]],[[],5],[[],5],[[]],[[]],[[[20,[[0,[17,18,19]],17]]],[[32,[[0,[17,18,19]],17]]]],0,[[],[[20,[[0,[17,18,19]],17]]]],[33],[[[20,[[0,[17,18,19]],17]]],[[8,[[20,[[0,[17,18,19]],17]],22]]]],[[[20,[[0,[17,18,19]],17]],34],[[8,[[20,[[0,[17,18,19]],17]],22]]]],[22,[[13,[35]]]],[[[20,[[0,[17,18,19]],17]],36,21],[[8,[[20,[[0,[17,18,19]],17]],22]]]],[[[20,[[0,[17,18,19]],17]],36,21],[[8,[[20,[[0,[17,18,19]],17]],22]]]],0,0,[[]],[[]],[[],15],[[[20,[[0,[17,18,19]],17]],37,21],[[8,[[20,[[0,[17,18,19]],17]],22]]]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[38,38],[[[31,[17]],21],[[8,[[31,[17]],22]]]],[[[31,[17]],23,21],[[8,[[31,[17]],24]]]],[[[31,[17]],21],[[8,[[31,[17]],24]]]],[[],34],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,34],[39,39],[[[31,[17]]],[[31,[17]]]],[[]],[[]],[[]],[31,34],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[34,34],9],[[39,39],9],[[[31,[25]],31],9],0,[[34,10],11],[[39,10],11],[[[31,[26]],10],11],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[39,9],0,[[40,41],[[13,[39]]]],[21,31],[[23,21],31],[32,13],[39,40],0,[39],0,[[[31,[17]],34],[[31,[17]]]],[[[31,[17]],36,21],[[8,[[13,[[31,[17]]]],22]]]],[[[31,[17]],36,21],[[8,[[13,[[31,[17]]]],22]]]],0,[[]],[[]],[[]],[[[31,[17]],37,21],[[8,[[31,[17]],22]]]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[31,21],0,[[]],[[]],[[]],[[]],0,0,0,[1,1],[1,1],[[]],[[42,23,21]],[[]],[[]],[[]],[42,42],[[]],[[],42],[5],[5],[5],0,[[42,42],9],[[42,10],11],[[]],[[],5],[[]],0,[[]],[[],8],[[],8],[[],16],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[[]],[[],43],[[],36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[43,43],[36,36],[[]],[[]],[[]],[[],43],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[27,27],9],[[43,43],9],[[36,36],9],[[27,10],11],[[27,10],11],[[43,10],11],[[43,10],11],[[36,10],11],[[]],[[]],[38,36],[[]],[[],36],[43,36],[43],[36,36],[[36,38],36],[[],5],[[],5],[[],5],[[]],[[]],[[]],[36,5],[[5,38],[[8,[36,27]]]],[36,43],[[],[[8,[43,27]]]],[[43,36]],[[43,36],[[8,[27]]]],0,[33],[36],[[]],[[]],[[]],[[],15],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[36,38],[[]],[[]],[[]],[[],36],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],44],[[],45],[[]],[[]],[[]],[[]],[[]],[[]],0,[[46,47,48],[[8,[44]]]],[44],[44,44],[45,45],[49,49],[[]],[[]],[[]],[[45,45],4],[44,47],0,[44],[5],[5],[5],[5],[5],[5],[6,[[8,[44,7]]]],[6,[[8,[7]]]],[5],[5],[5],0,[[44,44],9],[[45,45],9],[[49,49],9],[[],45],[[44,10],11],[[45,10],11],[[45,10],11],[[49,10],11],[[49,10],11],[44,50],[44],[[]],[51,45],[[]],[[]],[[23,52],45],[53,8],[53,[[8,[45,49]]]],[45],0,[44,54],[44],0,[44],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[54,47],44],[[45,55],45],[45,45],[44],[[45,45],[[13,[4]]]],[33],[[44,6],[[8,[14]]]],[44,5],0,[49,[[13,[35]]]],0,[[]],[[]],[[]],[[],15],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[44],[[]],[[]],[[]],[[46,47,48],[[8,[44]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],56],[57,58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[57,57],[56,56],[59,59],[[]],[[]],[[]],0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[[56,10],11],[[59,10],11],[[[61,[60]]],58],[[[61,[62]]],58],[[[61,[63]]],58],[[[61,[64]]],58],[[[61,[65]]],58],[[[61,[66]]],58],[[]],[[[61,[67]]],58],[[[61,[68]]],58],[[[61,[69]]],58],[[[61,[70]]],58],[[[61,[71]]],58],[[[61,[72]]],58],[56,57],[[]],[70,56],[68,56],[62,56],[69,56],[66,56],[63,56],[60,56],[64,56],[65,56],[72,56],[67,56],[71,56],[[]],[[]],0,0,[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[58,56],0,0,0,0,[56,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],63],[[],67],[[]],[[]],[[]],[[]],[63,63],[67,67],[[]],[[]],0,0,[5],[5],[5],[5],[6,[[8,[63,7]]]],[6,[[8,[67,7]]]],[6,[[8,[34,7]]]],[6,[[8,[7]]]],[6,[[8,[7]]]],[5],[5],[[63,63],9],[[67,67],9],[[63,10],11],[[67,10],11],[[]],[[]],[63,34],[67,34],[[],5],[[],5],[[]],[[]],[[],[[73,[63]]]],[[],[[73,[67]]]],[63,[[74,[63]]]],[67,[[74,[67]]]],[[[61,[63]]],[[13,[58]]]],[[[61,[67]]],[[13,[58]]]],[[63,6],[[8,[14]]]],[63,[[75,[63]]]],[[67,6],[[8,[14]]]],[67,[[75,[67]]]],[[34,[76,[34]]],[[76,[34]]]],[[63,[76,[63]]],[[76,[63]]]],[[67,[76,[67]]],[[76,[67]]]],[63,5],[67,5],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[66,66],[77,77],[[]],[[]],[5],[5],[5],[5],[6,[[8,[66,7]]]],[5],[5],[[66,66],9],[[77,77],9],0,[[66,10],11],[[77,10],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],[[73,[66]]]],[66,[[74,[66]]]],[[[61,[66]]],[[13,[58]]]],0,0,[[66,6],[[8,[14]]]],[66,[[75,[66]]]],[[66,[76,[66]]],[[76,[66]]]],[66,5],0,[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[],69],[[]],[[]],[[]],[69,69],[[]],[5],[5],[6,[[8,[69,7]]]],[5],[[69,69],9],[[69,10],11],[[]],[[],5],[[]],0,[[],[[73,[69]]]],[69,[[74,[69]]]],[[[61,[69]]],[[13,[58]]]],0,[[69,6],[[8,[14]]]],[69,[[75,[69]]]],[[69,[76,[69]]],[[76,[69]]]],[69,5],0,0,[[]],[[],8],[[],8],[[],16],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[],78],[[],72],[[],79],[[],60],[[],62],[[],80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,72],[79,79],[60,60],[62,62],[80,80],[81,81],[[]],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[62,7]]]],[6,[[8,[78,7]]]],[6,[[8,[72,7]]]],[6,[[8,[60,7]]]],[6,[[8,[7]]]],[6,[[8,[80,7]]]],[5],[5],[5],[5],[5],[5],[[72,72],9],[[79,79],9],[[60,60],9],[[62,62],9],[[72,10],11],[[79,10],11],[[60,10],11],[[62,10],11],[[80,10],11],[[81,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[82,[[13,[79]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[72,40],[79,83],[40,79],0,0,0,[[],[[73,[72]]]],[[],[[73,[60]]]],[[],[[73,[62]]]],[72,[[74,[72]]]],[60,[[74,[60]]]],[62,[[74,[62]]]],[[[61,[72]]],[[13,[58]]]],[[[61,[60]]],[[13,[58]]]],[[[61,[62]]],[[13,[58]]]],0,0,0,0,0,0,0,[[72,6],[[8,[14]]]],[72,[[75,[72]]]],[[60,6],[[8,[14]]]],[60,[[75,[60]]]],[62,[[75,[62]]]],[[62,6],[[8,[14]]]],[[72,[76,[72]]],[[76,[72]]]],[[60,[76,[60]]],[[76,[60]]]],[[62,[76,[62]]],[[76,[62]]]],[[80,[76,[80]]],[[76,[80]]]],[[81,[76,[81]]],[[76,[81]]]],[72,5],[60,5],[62,5],0,0,[72,84],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[80,72,85],86],[[81,72,85],86],[[]],[[]],[[]],[[]],[[]],[[]],[[],87],0,0,0,[[],68],[[]],[[]],[68,88],0,[68,68],[[]],[5],[5],[6,[[8,[68,7]]]],[5],[[68,68],9],[[68,10],11],[[]],[[],5],[[]],[[88,89],68],[[],[[73,[68]]]],[68,[[74,[68]]]],[[[61,[68]]],[[13,[58]]]],[68,89],0,[[68,6],[[8,[14]]]],[68,[[75,[68]]]],[[68,[76,[68]]],[[76,[68]]]],[68,5],[[]],[[],8],[[],8],[[],16],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[],71],[[]],[[]],[[]],[71,71],[[]],[5],[5],[6,[[8,[71,7]]]],[5],[[71,71],9],[[71,10],11],[[]],[71],[[],5],[[]],[[90,91],71],[[],[[73,[71]]]],[71,[[74,[71]]]],[[[61,[71]]],[[13,[58]]]],[71,90],0,[[71,6],[[8,[14]]]],[71,[[75,[71]]]],[[71,[76,[71]]],[[76,[71]]]],[71,5],[[]],[[],8],[[],8],[[],16],[71,91],0,[[]],0,[[],70],[[]],[[]],[70,70],[[]],[5],[5],[6,[[8,[70,7]]]],[5],[[70,70],9],[[70,10],11],[[]],[70],[[],5],[[]],[70,92],[[93,40,92],70],[70,92],0,[[],[[73,[70]]]],[70,[[74,[70]]]],[[[61,[70]]],[[13,[58]]]],[70,40],0,[[70,6],[[8,[14]]]],[70,[[75,[70]]]],[[70,[76,[70]]],[[76,[70]]]],[70,5],[[]],[[],8],[[],8],[[],16],[70,93],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[94,95],0,[[],64],[[],96],[[],95],[[],97],[[],94],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[64,45],9],[[64,98],9],[[94,98],9],[64,64],[96,96],[95,95],[97,97],[94,94],[99,99],[[]],[[]],[[]],[[]],[[]],[[]],[64,45],0,[[64,45],9],[64],0,[64,45],[[64,45],9],[[64,45],9],[[],97],[5],[5],[5],[5],[5],[97],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[95,7]]]],[6,[[8,[64,7]]]],[6,[[8,[96,7]]]],[6,[[8,[7]]]],[5],[5],[5],[5],[5],[5],[5],[[64,64],9],[[95,95],9],[[97,97],9],[[94,94],9],[[99,99],9],[94,100],0,[[64,10],11],[[96,10],11],[[95,10],11],[[97,10],11],[[94,10],11],[[99,10],11],[[]],[[]],[101,64],[[]],[[]],[[]],[[]],[102,94],[[]],[97,9],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,9],[[45,45,45,97,103,[41,[104]],37],64],[[],97],[[100,105,95],94],[94,105],0,[[],[[73,[64]]]],[64,[[74,[64]]]],[[[61,[64]]],[[13,[58]]]],[64,103],0,[64,97],[97,41],0,0,[64,97],[[97,94],99],[[64,6],[[8,[14]]]],[64,[[75,[64]]]],[[64,[76,[64]]],[[76,[64]]]],[[96,[76,[96]]],[[76,[96]]]],[[95,[76,[64]]],[[76,[64]]]],[[94,[76,[64]]],[[76,[64]]]],[64,5],0,[64,93],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[96,85],86],[64,45],0,[[64,45],9],[64,45],0,[[64,45],9],[64,37],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],65],[[],106],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[107,107],[106,106],[87,87],[108,108],[[]],[[]],[[]],[[]],[[]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[65,7]]]],[6,[[8,[106,7]]]],[5],[5],[5],[5],[5],[5],[[65,65],9],[[107,107],9],[[87,87],9],[[108,108],9],[[65,10],11],[[107,10],11],[[106,10],11],[[109,10],11],[[109,10],11],[[87,10],11],[[108,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[65],[107],[87],[108],[65,93],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[87,50],[[[41,[108]]],[[8,[87,109]]]],[[93,87],65],[93,65],0,[[],[[73,[65]]]],[65,[[74,[65]]]],[107,[[13,[87]]]],[[[61,[65]]],[[13,[58]]]],[107,103],[33],[65,[[75,[65]]]],[[65,6],[[8,[14]]]],[[65,[76,[65]]],[[76,[65]]]],[[106,[76,[106]]],[[76,[106]]]],[65,5],[65,[[13,[87]]]],0,[65,103],[[]],[[]],[[]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[106,103,85],86],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[110],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[8,[[41,[111,112]]]]]],[110,110],[113,113],[114,114],[[]],[[]],[[]],0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[110,110],9],[[110,10],11],[[113,10],11],[[114,10],11],[[]],[[]],[[]],[[],110],[[110,110]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[],8],[[],110],0,0,0,0,0,0,0,0,[[],117],[[],118],[[]],[[]],[[]],[[]],[117,117],[118,118],[[]],[[]],[[117,117],4],[[118,118],4],[5],[5],[5],[5],[5],[5],[[117,117],9],[[118,118],9],[[117,10],[[8,[119]]]],[[117,10],11],[[118,10],11],[[118,10],11],[[]],[38,118],[[]],[[],[[8,[117,120]]]],[53,[[8,[117]]]],[53,8],[121,[[13,[117]]]],[117],[118],[118,118],[[],5],[[],5],[[]],[[]],[118,118],[[118,38],[[13,[118]]]],[[117,117],[[13,[4]]]],[[118,118],[[13,[4]]]],0,[[]],[[]],[117,[[41,[40]]]],[[],15],[[],15],[53,[[8,[117]]]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],122],[[],123],[[],124],[[],125],[124,53],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[120,120],[122,122],[123,123],[124,124],[126,126],[125,125],[127,127],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[127,127],4],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[122,7]]]],[5],[5],[5],[5],[5],[5],[5],[[120,120],9],[[122,122],9],[[123,123],9],[[124,124],9],[[125,125],9],[[127,127],9],[[120,10],11],[[120,10],11],[[122,10],11],[[123,10],11],[[124,10],11],[[125,10],11],[[127,10],11],[7,120],[[]],[[]],[[]],[122,124],[[]],[[]],[[]],[[]],[[],[[8,[120]]]],[[],[[8,[123,120]]]],[[],[[8,[125,120]]]],[53,8],[53,[[8,[124]]]],[121,[[13,[124]]]],[[126,5],[[13,[124]]]],[127,5],[127,[[8,[124,120]]]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],126],[126,5],0,[[124,5],[[13,[127]]]],[126,13],[126,13],[[126,5],13],[[],128],[[127,127],[[13,[4]]]],[33],[[122,6],[[8,[14]]]],[122,5],[126],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[41,[40]]]],[123,[[41,[40]]]],[125,[[41,[40]]]],[[],15],[[],8],[[],8],[[],8],[53,[[8,[124]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[129,129],[[]],[5],[5],[5],[[129,10],11],[[129,10],11],[[]],[[],5],[[]],[33],[[]],[[],15],[[],8],[[],8],[[],16],[[]],0,0,[[]],[[]],[[]],[[]],[130,130],[131,131],[[]],[[]],[5],[5],[5],[5],[6,[[8,[131,7]]]],[6,[[8,[7]]]],[5],[5],[[130,130],9],[[131,131],9],[[130,10],11],[[131,10],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[[131,6],[[8,[14]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,0,0,[[],132],[[],133],[[],134],[[],21],[132,21],[[]],[[]],[[]],[[]],[[]],[[]],[[[13,[58]],40,40],21],[135,21],0,0,0,0,0,0,[132,132],[133,133],[134,134],[[]],[[]],[[]],0,0,[[],133],[[],134],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[132,132],9],[[133,133],9],[[134,134],9],[58,21],[[132,58],21],[[133,58],[[13,[21]]]],[[134,58],[[13,[21]]]],[[40,40],21],[[132,40,40],21],[[132,10],11],[[133,10],11],[[134,10],11],[[]],[[]],[[]],[[],[[8,[132,120]]]],[[],[[8,[133,120]]]],[[],[[8,[134,120]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[82,82,82],132],[[[13,[136]],[13,[136]],[13,[136]]],133],[[[13,[136]],[13,[136]]],134],[[132,132],[[13,[4]]]],[[133,133],[[13,[4]]]],[[134,134],[[13,[4]]]],[[132,133]],0,[[132,134]],0,0,[[]],[[]],[[]],[132,[[41,[40]]]],[133,[[41,[40]]]],[134,[[41,[40]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],137],[[]],[[]],[[]],[[]],[137,137],[138,138],[[]],[[]],0,0,[5],[5],[5],[5],[6,[[8,[137,7]]]],[6,[[8,[7]]]],[5],[5],[[137,137],9],[[138,138],9],[[137,10],11],[[138,10],11],[[]],[[]],[40,[[13,[138]]]],[137,138],[137,139],[137],[[],5],[[],5],[[]],[[]],[[137,6],[[8,[14]]]],[137,5],0,[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,[[],88],[[]],[[]],[88,88],[[]],[[],88],[5],[5],[6,[[8,[88,7]]]],[5],[[88,88],9],[[88,10],11],[[]],[[],5],[[]],[88,[[140,[122]]]],[[],88],[[88,122]],[[88,6],[[8,[14]]]],[88,5],[[]],[[],8],[[],8],[[],16],[[]],0,0,0,0,0,[[],47],[[]],[[]],[[]],[[]],[47,47],[141,141],[[]],[[]],[47,142],[47],[[],141],[5],[5],[5],[5],[5],[5],[[],47],[[47,47],9],[[47,10],11],0,[[]],[141,47],[[]],[[],5],[[],5],[[]],[[]],[47,9],[47,50],[47,[[140,[137]]]],[47,5],[[],141],[[141,137]],[[141,30],141],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[46,47],[[144,[143]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[146,[145]]]],[[[147,[145]]]],[[46,47],[[144,[143]]]],[[46,142,148],[[144,[143]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[144,[149]]],[[13,[[146,[150]]]]]],[[[144,[149]]],[[13,[[147,[150]]]]]],[[[144,[149]]],[[13,[151]]]],[[46,47],[[144,[143]]]],[[46,47],152],[[46,142,148],[[144,[143]]]],[[46,142,148],152],[[[146,[150]],153],[[146,[145]]]],[[[147,[150]],84,154],[[147,[145]]]],[[[144,[155]],45],[[144,[149]]]],[[[144,[143]]],[[144,[155]]]],[[[144,[143]],156,118],[[144,[155]]]],[[[146,[145]],157],158],[[[147,[145]],159],160],[[[146,[150]],161],158],[[[147,[145]],161],160],[[[146,[150]],161,[3,[162]]],158],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[163,163],[159,159],[157,157],[154,154],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[163,10],11],[[159,10],11],[[157,10],11],[[154,10],11],[[]],[[]],[[[165,[163,164]]],159],[[],159],[[],157],[[[165,[163,162]]],157],[[]],[[]],[166,154],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[154,[[13,[166]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[159,3],86],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[167,168],[168],[167],0,[168],[168],[168],[168],[[]],[[]],[[]],[[]],[[]],[[]],[167,167],[169,169],[[]],[[]],[168],[168],[168,38],[168,38],[168,38],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[167,167],9],[[169,169],9],[[169,10],11],[[169,10],11],[[]],[[]],[[]],[[],[[8,[168,169]]]],0,[168],[168],[168],[168],[168],[168],[168,38],[[],5],[[],5],[[],5],[[]],[[]],[[]],[40,167],[168],[168],[33],[167],[167],[167],[167],[167],[[167,38]],[[167,38]],[[167,38]],[167],[167],[167],[167],[167],[167],[[167,38]],[167],[[167,40]],[168],[168],[[]],[168,167],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],0,[167,40],[168,40],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],170],[[],171],[[],172],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[170,170],[173,173],[171,171],[172,172],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[170,170],9],[[170,10],11],[[173,10],11],[[171,10],11],[[172,10],11],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],54],[54],[54],[54,142],[54,148],[54,45],[54,156],[54,46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[54],[54,118],[151,151],[160,160],[158,158],[54,54],[174,174],[[]],[[]],[[]],[[]],[[]],[54,170],[54],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[54,174],[6,[[8,[54,7]]]],[6,[[8,[7]]]],[5],[5],[5],[5],[5],[[151,151],9],[[160,160],9],[[158,158],9],[[54,54],9],[[54,10],11],[[174,10],11],[[174,10],11],[[]],[[]],[[]],[[]],[[]],[[],[[8,[54,169]]]],[151,54],[160,54],[158,54],[54,[[13,[153]]]],[54,113],[54,114],[54,168],[54,[[13,[84]]]],[54,156],0,[151,156],[160,156],[158,156],[54],[54,156],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[54],[54,173],[[54,6],[[8,[14]]]],[54,5],[54,175],[[]],[[]],[[]],[[]],[[]],[54,176],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[54],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],161],[[],[[161,[164]]]],[[]],[[]],[177,161],[5],[5],[5],[[]],[[],5],[[]],[[],8],[[],8],[[],16],[[]],0,0,0,0,0,0,0,0,0,[[],178],[[],46],[[]],[[]],[[]],[[]],[178,178],[46,46],[[]],[[]],[5],[5],[5],[5],[5],[5],[[178,178],9],[[178,46],9],[[46,46],9],[[178,10],11],[[46,10],11],[[]],[46,178],[40,178],[[]],[40,[[13,[46]]]],[46,175],[46,175],[[],5],[[],5],[[]],[[]],[46,[[13,[117]]]],[[]],[[]],[46,40],[[],8],[[],8],[[],8],[[],8],[178,[[13,[46]]]],[[],16],[[],16],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[],179],[[],180],[[],153],[[],181],[[]],[[]],[[]],[180],[153,3],[180],[153],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[182,7],[183,7],[[],[[8,[[41,[111,112]]]]]],[[],[[8,[[41,[111,112]]]]]],[[[185,[17,184]]],[[185,[17,184]]]],[179,179],[180,180],[153,153],[181,181],[[]],[[]],[[]],[[]],[[]],[[180,180],4],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[180,7]]]],[6,[[8,[[185,[186,184]],7]]]],[6,[[8,[7]]]],[6,[[8,[153,7]]]],[6,[[8,[181,7]]]],[6,[[8,[[3,[187]],7]]]],[6,[[8,[[165,[184]],7]]]],[181,[[189,[188,181]]]],[5],[5],[5],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[],[[116,[115]]]],[[],[[116,[115]]]],[[[185,[25,184]],[185,[25,184]]],9],[[180,180],9],[[153,153],9],[[181,181],9],[[[185,[26,184]],10],11],[[180,10],11],[[180,10],11],[[153,10],11],[[181,10],11],[[]],[[]],[[],180],[188,180],[[]],[[],153],[[]],[[[3,[190]]],153],[[]],[[],180],[[],[[8,[153,120]]]],[53,[[8,[180]]]],[53,8],[[[0,[191,192]]],179],[180,188],[180],[153],[181],0,[[],180],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],0,[161,[[165,[193]]]],[188,180],[[180,180],[[13,[4]]]],[[[185,[193,184]],6],[[8,[14]]]],[[180,6],[[8,[14]]]],[[153,6],[[8,[14]]]],[[3,6],[[8,[14]]]],[[165,6],[[8,[14]]]],[[[185,[193,184]]],5],[180,5],[153,5],0,[179,[[165,[194,162]]]],[179,[[165,[195,162]]]],[[161,193],[[185,[193]]]],0,[[]],[[]],[[]],[[]],[[]],[153,[[41,[40]]]],[179,[[3,[162]]]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[165,86],[[165,3],86],0,[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],180],[[],180],0,0,0,[[],3],[[],[[3,[164]]]],[[]],[[]],[196,3],[5],[5],[5],[[]],[[],5],[[]],[[],8],[[],8],[[],16],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[197,[[13,[35]]]],0,[198,198],[[]],[199,200],[[199,38],45],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[199,23],0,[[198,198],9],[199,55],0,[201,9],[[198,10],11],[[198,10],11],[[197,10],11],[[197,10],11],[[201,10],11],[[]],[[]],[[]],[[[161,[162]]],202],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[198],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[201,[[8,[197]]]],[[200,202,45],203],[[199,202,45],203],0,[[23,204],199],[198,197],[[198,[0,[35,205,206]]],197],0,[33],0,0,[199,[[13,[207]]]],[201,9],[[]],[[],15],[[],15],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[199,54],201],[[200,54],201],[[200,46],201],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[208,208],[[]],[5],[5],[5],[5],[5],[5],[[208,208],9],[[208,10],11],[[209,10],11],[[]],[[]],[[209,45],153],[[],5],[[],5],[[]],[[]],[209],0,[210,[[13,[209]]]],[209,5],[[209,82],208],[[]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[209,54],201],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[211,207],0,[5],[5],[5],0,0,[[212,10],11],[[212,10],11],[[213,10],11],[[213,10],11],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[211,84,161,45],[[8,[[13,[214]],197]]]],[[23,207,215,110,216],211],[211,215],0,[33],[33],[[],15],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[211,54],201],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[217,218,216],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[217,217],[219,219],[[]],[[]],[[110,52],220],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[217,217],9],[[221,161],[[13,[214]]]],[[219,10],11],[[]],[[]],[[]],[[]],[[],217],[222,110],[[220,222],217],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],0,[[217,217],[[13,[4]]]],[[216,218],217],0,0,[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[221,3,214],[[8,[110,219]]]],[[]],[[]],[[]],[[]],[214,110],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[223,223],[[]],[5],[5],[5],[[223,223],9],[[223,10],11],[[223,10],11],[[]],0,[[],5],[[]],[33],[[]],[[],15],[[],8],[[],8],[[],16],[135,[[8,[224]]]],[135,[[8,[224]]]],[225,[[8,[224]]]],[78,[[8,[224]]]],[72,[[8,[224]]]],[80,[[8,[224]]]],[60,[[8,[224]]]],[135,[[8,[224]]]],[135,[[8,[223]]]],[135,[[8,[224]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[98,98],[226,226],[[]],[[]],[[],98],[[],226],0,0,[5],[5],[5],[5],[5],[5],[[98,98],9],[[226,226],9],0,[[226,10],11],[[]],[[]],[[],5],[[],5],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],0,0,[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[227,228],226],0,[[]],[[]],[[]],[[]],[[]],[[]],[229,229],[228,228],[227,227],[[]],[[]],[[]],[[228,228],4],[[],227],[227,226],0,[5],[5],[5],[5],[5],[5],[6,[[8,[229,7]]]],[6,[[8,[7]]]],[5],[5],[5],[[229,229],9],[[228,228],9],[[227,227],9],[[229,10],11],[[228,10],11],[[]],[[]],[[]],[228],[[],5],[[],5],[[],5],[[]],[[]],[[]],[227,50],0,[227],[[227,229]],[[],227],[[228,228],[[13,[4]]]],[[229,[76,[229]]],[[76,[229]]]],[[227,228,226]],[[227,226],226],[[]],[[]],[[]],[229,228],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[230,231],226],0,[[],232],[[]],[[]],[[]],[[]],[[]],[[]],[232,232],[231,231],[230,230],[[]],[[]],[[]],[[231,231],4],[[],230],[230,226],0,[5],[5],[5],[5],[5],[5],[6,[[8,[232,7]]]],[6,[[8,[7]]]],[5],[5],[5],[[232,232],9],[[231,231],9],[[230,230],9],[[232,10],11],[[231,10],11],[[]],[[]],[[]],[231],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],230],[[231,231],[[13,[4]]]],[[232,[76,[232]]],[[76,[232]]]],[[230,231,226]],[[230,226],226],[[]],[[]],[[]],[232,231],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[233,233],[234,234],[[]],[[]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[234,234],9],0,[[234,10],11],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],0,[235,13],0,0,[233,[[13,[236]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[237,237],[[]],[[],237],[5],[5],[5],[[237,237],9],[[]],[[237,84]],[[],5],[[]],[237,[[238,[84,38]]]],0,[237,5],[[],237],[[237,84,38],[[8,[29]]]],[[]],[237,38],0,[[],8],[[],8],[[],16],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[204,239],0,[204,[[41,[240]]]],[[204,2,21],[[8,[224]]]],[[204,47,114],[[8,[204,224]]]],[[204,137,45],[[8,[204,224]]]],[[241,137],[[8,[241,224]]]],[[204,242,243,244],[[8,[204,224]]]],[[139,[246,[245]],247],[[8,[[246,[245]],224]]]],[[204,248,244,63],[[8,[204,224]]]],[[204,72],[[8,[204,224]]]],[[204,72,85,80],[[8,[204,224]]]],[[204,62,85,80],[[8,[204,224]]]],[[204,60,85,80],[[8,[204,224]]]],[204,[[8,[204,224]]]],[[204,67],[[8,[204,224]]]],[[204,139,135],[[8,[224]]]],[[204,139,135],[[8,[224]]]],[[204,21],[[8,[204,224]]]],[[204,135,249],[[8,[204,224]]]],[[204,139,250],[[8,[204,224]]]],[[204,68],[[8,[204,224]]]],[[204,90,68,85,251,45],[[8,[204,224]]]],[[204,71,85,251],[[8,[204,224]]]],[[204,2,70],[[8,[204,224]]]],[[204,135,45,64,96],[[8,[204,224]]]],[[204,65,85,106],[[8,[204,224]]]],[[],204],[[204,118,45],[[8,[241,224]]]],0,0,[241,45],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[135,132],21],[204,9],[204,118],0,[252,252],[204,204],[241,241],[253,253],[224,224],[[]],[[]],[[]],[[]],[[]],[204,117],[204,45],0,[204,215],0,[204,215],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[204,7]]]],0,[[204,254,23,84,21,255],[[8,[224]]]],[[204,207,256],[[8,[224]]]],[5],[5],[5],[5],[5],[5],[5],[[257,252,55,258],204],[[252,252],9],[[204,204],9],[[253,253],9],[[224,224],9],[204,55],0,[[204,139,135,249],[[8,[224]]]],[[241,113],204],[[252,10],11],[[204,10],11],[[241,10],11],[[253,10],11],[[253,10],11],[[224,10],11],[[224,10],11],[[]],[[]],[[]],[[]],[259,204],[[]],[[]],[223,224],[[]],[22,224],[260,224],[261,224],[262,224],[263,224],[264,224],[120,224],[24,224],[265,224],[253,224],[266,224],[204,207],[204,252],[204,[[8,[21,224]]]],0,[[204,204],[[41,[15]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[267,156,242,268,269,36,21],[[8,[267,224]]]],[[267,156,242,268,269,36,21],[[8,[267,224]]]],[[239,156,242,2,270,36,21],[[8,[239,224]]]],[[239,156,242,2,270,36,21],[[8,[239,224]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[204,235],0,0,0,[[248,244],[[8,[271,224]]]],[[204,69],[[8,[204,224]]]],[[204,69],[[8,[204,224]]]],[[267,156,242,268,269,36],[[8,[267,224]]]],0,[[156,30],[[8,[204,224]]]],0,0,[33],[33],[204,21],[[204,6],[[8,[14]]]],[204,257],[241,257],0,[[239,156,242,2,270,36],[[8,[239,224]]]],[224,[[13,[35]]]],0,[204,[[41,[15]]]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[204,272],[204,273],0,[204,21],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[204,274],0,[[204,139,275],[[13,[225]]]],[204,[[277,[276]]]],0,[204,[[8,[224]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[258,21],[[8,[224]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[258,258],[278,278],[279,279],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[258,21],21],[[258,21],21],[5],[5],[5],[5],[5],[5],[258,280],[278,279],[[258,258],9],[[278,278],9],0,[258,21],[[258,10],11],[[278,10],11],[[279,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[280,13],[281,13],0,0,[[258,21],[[8,[224]]]],[[258,278]],[258,21],[[]],[[]],[[]],[258,[[8,[21,24]]]],0,[[258,21],[[8,[224]]]],[258,21],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[278,21],[258,281],[[]],[[]],[[]],[[]],[[]],[[]],[[],258],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[5],[5],[5],[[282,282],9],[[282,10],11],[[]],[40,[[13,[282]]]],[[],5],[[]],[[2,6],[[8,[14]]]],[[31,6],[[8,[14]]]],[[276,6],[[8,[14]]]],[[45,6],[[8,[14]]]],[6,[[8,[14]]]],[[122,6],[[8,[14]]]],[[283,6],[[8,[14]]]],[[284,6],[[8,[14]]]],[[39,6],[[8,[14]]]],[[34,6],[[8,[14]]]],[[189,6],[[8,[14]]]],[[285,6],[[8,[14]]]],[[236,6],[[8,[14]]]],[[234,6],[[8,[14]]]],[[156,6],[[8,[14]]]],[[42,6],[[8,[14]]]],[[252,6],[[8,[14]]]],[[268,6],[[8,[14]]]],[[245,6],[[8,[14]]]],[[225,6],[[8,[14]]]],[[103,6],[[8,[14]]]],[[84,6],[[8,[14]]]],[[286,6],[[8,[14]]]],[[72,6],[[8,[14]]]],[[287,6],[[8,[14]]]],[[278,6],[[8,[14]]]],[[43,6],[[8,[14]]]],[[68,6],[[8,[14]]]],[[90,6],[[8,[14]]]],[[288,6],[[8,[14]]]],[[289,6],[[8,[14]]]],[[64,6],[[8,[14]]]],[[94,6],[[8,[14]]]],[[97,6],[[8,[14]]]],[[37,6],[[8,[14]]]],[[],8],[[],8],[[],16],[6,[[8,[2,7]]]],[6,[[8,[31,7]]]],[6,[[8,[276,7]]]],[6,[[8,[45,7]]]],[6,[[8,[[41,[104]],7]]]],[6,[[8,[122,7]]]],[6,[[8,[283,7]]]],[6,[[8,[284,7]]]],[6,[[8,[39,7]]]],[6,[[8,[34,7]]]],[6,[[8,[[189,[290]],7]]]],[6,[[8,[285,7]]]],[6,[[8,[[41,[233]],7]]]],[6,[[8,[233,7]]]],[6,[[8,[234,7]]]],[6,[[8,[156,7]]]],[6,[[8,[42,7]]]],[6,[[8,[252,7]]]],[6,[[8,[268,7]]]],[6,[[8,[245,7]]]],[6,[[8,[225,7]]]],[6,[[8,[103,7]]]],[6,[[8,[84,7]]]],[6,[[8,[286,7]]]],[6,[[8,[72,7]]]],[6,[[8,[287,7]]]],[6,[[8,[278,7]]]],[6,[[8,[94,7]]]],[6,[[8,[97,7]]]],[6,[[8,[43,7]]]],[6,[[8,[68,7]]]],[6,[[8,[90,7]]]],[6,[[8,[288,7]]]],[6,[[8,[291,7]]]],[6,[[8,[95,7]]]],[6,[[8,[64,7]]]],[6,[[8,[37,7]]]],[[]],0,0,0,[[254,2,21]],[[]],[[]],[[]],[[]],[256,256],[254,254],[[]],[[]],[[],256],[5],[5],[5],[5],0,[5],[5],0,[[256,10],11],[[254,10],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[256,254],0,0,[[],256],0,[[254,84,21,21]],[[254,21]],0,[[]],[[]],[254,21],0,[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,0,[[273,37,21],[[8,[273,224]]]],[[]],[[]],[[]],[[]],[272,272],[273,273],[[]],[[]],[[],273],[5],[5],[5],[5],[5],[5],[[[272,[[0,[25,17,25,18]]]],272],9],[[273,273],9],[[]],[[]],[[[272,[37]],2],[[8,[[13,[21]],22]]]],[[[272,[37]]],21],[[273,37],[[13,[21]]]],[[],5],[[],5],[[]],[[]],[[273,239],272],[[]],[[]],[[272,37],[[272,[37]]]],0,0,[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,0,0,0,0,[[],247],[245],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[[41,[111,112]]]]]],[245,245],[292,292],[247,247],[[]],[[]],[[]],[[245,245],4],[245,293],[5],[5],[5],[5],[5],[5],[294,[[8,[245,295]]]],[6,[[8,[247,7]]]],[5],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[245,245],9],[[292,292],9],[[247,247],9],[[245,10],[[8,[119]]]],[[245,10],[[8,[119]]]],[[292,10],[[8,[119]]]],[[247,10],11],[293,245],[[]],[[]],[[]],[53,8],[53,[[8,[245]]]],[245],[245,292],[[245,296],292],[245,292],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[[41,[40,112]]],245],[[245,3],292],[[245,245],[[13,[4]]]],[[245,297],[[8,[297,295]]]],[[247,6],[[8,[14]]]],[247,5],0,[[]],[[]],[[]],[[],15],[[],[[8,[245]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[],8],0,0,0,0,0,[[],298],[[]],[[]],[298,298],[[]],[[298,298],4],[[],298],[5],[5],[5],[[298,298],9],[[298,10],11],[[298,10],[[8,[119]]]],[216,298],[[]],[82,298],[[],[[8,[298,120]]]],[53,[[8,[298]]]],[[],5],[[]],[[298,298],[[13,[4]]]],0,[298,299],[298,82],[[]],[298,[[41,[40]]]],[[],15],[[],8],[[],8],[[],16],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[300],[[],5],[[]],[[]],[[],[[8,[[41,[111,112]]]]]],0,0,[5],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[]],0,[[],5],[[]],0,[[156,242,36],300],0,0,0,[[],8],[[],8],[[],16],[[]],0,[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[[]],[[],268],[[]],[268],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[[41,[111,112]]]]]],[268,268],[301,301],[284,284],[283,283],[[]],[[]],[[]],[[]],[[268,268],4],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[268,268],9],[[301,301],9],[[284,284],9],[[283,283],9],[[268,10],11],[[268,10],11],[[301,10],11],[[301,10],11],[[284,10],11],[[283,10],11],[[]],[[],268],[[]],[[]],[[]],[3,283],[[284,302],13],[268],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[284,[[8,[301]]]],0,[40,268],[[268,268],[[13,[4]]]],[33],[284,5],0,[283,180],[284,268],[[]],[[]],[[]],[[]],[[],15],[[],15],[284,5],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[],8],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[303,303],[302,302],[[]],[[]],[[303,303],4],[[302,302],4],[302,5],[5],[5],[5],[5],[5],[5],[[303,303],9],[[302,302],9],[[303,10],11],[[302,10],11],[[]],[[]],[40,[[13,[303]]]],[302,[[41,[303]]]],[[],5],[[],5],[[]],[[]],[302,121],[[303,303],[[13,[4]]]],[[302,302],[[13,[4]]]],[[]],[[]],[303,5],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[121,[[13,[302]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[267,284],[[8,[267,261]]]],[[267,268,21],[[8,[267,261]]]],[[]],[[]],[[]],[[]],[267,267],[261,261],[[]],[[]],0,[[],267],[5],[5],[5],[5],[5],[5],[[267,267],9],[[261,261],9],[[261,10],11],[[261,10],11],[[]],[29,261],[301,261],[[]],[304,261],[22,261],[[267,268],[[8,[284,261]]]],[267,[[8,[21,24]]]],[[],5],[[],5],[[]],[[]],[267,[[32,[268]]]],[267,[[238,[268,284]]]],[[],267],[33],[[267,268],[[8,[267,261]]]],[[41,41],267],[[267,268,34],[[8,[267,261]]]],[261,[[13,[35]]]],[[267,268,36,21],[[8,[267,261]]]],[[267,268,36,21],[[8,[267,261]]]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,[[305,302,[3,[12]],[165,[300,12]]]],[[]],[[]],[[]],[[]],[269,269],[[]],[[],305],[5],[5],[5],[5],[6,[[8,[269,7]]]],[6,[[8,[302,7]]]],[5],[5],[[269,269],9],[305,269],[[269,10],11],[[269,10],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],305],[[269,6],[[8,[14]]]],[269,5],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[269,284,300],9],[284,[[8,[261]]]],[[]],[[]],0,0,0,0,0,[[[306,[204]],156,204],[[307,[204]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[307,[17]]],[[307,[17]]]],[[]],[308,9],[[],306],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[]],[[]],[[]],[[306,38]],[[306,156],[[13,[210]]]],[308,[[13,[210]]]],[[306,156],[[13,[307]]]],0,[307,156],[[],5],[[],5],[[],5],[[306,118,156],307],[[]],[[]],[[]],[[],306],[[156,210],307],[306,5],[307],0,[307,210],0,0,[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],0,[[],309],[[],310],[[],311],[[],312],[[],313],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[309,309],[310,310],[311,311],[312,312],[313,313],[314,314],[315,315],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[310,310],4],0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[[309,309],9],[[310,310],9],[[311,311],9],[[312,312],9],[[313,313],9],0,[[309,10],11],[[310,10],11],[[311,10],11],[[312,10],11],[[313,10],11],[[314,10],11],[[315,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[310,120]]]],[[],[[8,[311,120]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[310,310],[[13,[4]]]],0,0,[6,[[8,[311,7]]]],0,[[23,313,315],21],[[311,[76,[311]]],[[76,[311]]]],[[21,311],[[8,[314,24]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[310,[[41,[40]]]],[311,[[41,[40]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],310],[[],311],[[],313],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[257,257],[316,316],[216,216],[317,317],[[]],[[]],[[]],[[]],0,[257,88],0,0,[[],257],[[],317],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,[[257,257],9],[[316,316],9],[[216,216],9],[[317,317],9],0,[[257,10],11],[[316,10],11],[[316,10],11],[[216,10],11],[[317,10],11],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],0,[[],257],0,0,[33],[257,313],0,0,0,0,[[]],[[]],[[]],[[]],[[],15],0,[257,311],0,[[257,88],[[8,[257,262]]]],[[],8],[[],8],[298,[[8,[216]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[239,215,246],207],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[318,2,319],318],[[318,319],318],[318,319],0,[[]],[[]],[[318,2],[[13,[319]]]],[318,318],[[]],0,[[],318],[5],[5],[5],[[318,318],9],[[318,10],11],[[]],[[],5],[[]],[[],318],[[239,246],318],[[318,2],310],[[318,2,319],318],[[318,319],318],[[]],[318,319],[[],8],[[],8],[[],16],[318,319],0,[[318,239],318],[[318,246],318],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[215,215],[264,264],[286,286],[287,287],[[]],[[]],[[]],[[]],[287,320],[[],215],[[],286],[5],[5],[5],[5],[5],[5],[5],[5],[[215,84],[[8,[215,264]]]],[5],[5],[5],[5],0,[[215,215],9],[[264,264],9],[[286,286],9],[[287,287],9],[[215,10],11],[[264,10],11],[[264,10],11],[[286,10],11],[[287,10],11],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],0,[[215,84],[[13,[287]]]],[[215,84],[[13,[72]]]],[[],215],[72,287],[33],[[215,72],[[8,[215,264]]]],0,[[215,84],9],[[215,84],[[8,[72,264]]]],[[215,84],[[8,[287,264]]]],[215,50],[[215,84,23,21,21],[[8,[264]]]],[[215,84,287],[[8,[264]]]],0,[[]],[[]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[321,2,319]],[[255,2,319]],[[207,2,34,319]],[[]],[[]],[[]],[[]],[[]],[[]],[207,207],[255,255],[321,321],[[]],[[]],[[]],0,[[],321],[5],[5],[5],[5],[5],[5],[5],[5],[5],[207,5],[[],207],[[207,207],9],[[255,255],9],[[321,321],9],[[207,10],11],[[255,10],11],[[321,10],11],[[]],[[]],[[]],[[239,215,246],207],[[207,84],[[13,[255]]]],[[207,84],[[13,[319]]]],[207,319],[[],5],[[],5],[[],5],[[]],[[]],[[]],[321,[[322,[2,319]]]],[[],321],0,0,[319,321],[[]],[[]],[[]],0,[321,319],0,[207,319],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],0,0,0,0,0,[[319,319],319],[[319,319]],[218,299],[319,82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[319,319],[[13,[319]]]],[[319,319],[[13,[319]]]],[319,319],[323,323],[218,218],[324,324],[[]],[[]],[[]],[[]],[[319,319],4],[[323,323],4],[[],319],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[319,319],9],[[323,323],9],[[218,218],9],[[324,324],9],[[319,10],11],[[319,10],11],[[323,10],11],[[218,10],11],[[324,10],11],[[]],[21,319],[[]],[[]],[[]],[21,319],[319],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[319,319],218],[[319,319],[[13,[4]]]],[[323,323],[[13,[4]]]],0,0,[[323,38],319],[[218,21],21],[[319,38],324],0,[50,319],[[]],[[]],[[]],[[]],[[],15],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[319,319],319],[[319,319],319],[[],319],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],325],[[],326],[[]],[[]],[[]],[[]],[325,325],[326,326],[[]],[[]],0,[5],[5],[5],[5],[5],[5],[[325,10],11],[[326,10],11],[[]],[[]],[[],5],[[],5],[[]],[[]],0,0,0,0,[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],0,0,0,[[]],[[]],0,0,0,[327,[[41,[328]]]],[[],329],[[],327],[327,[[41,[330]]]],[[]],[[]],[[]],[[]],[329,329],[327,327],[[]],[[]],[327,[[41,[328]]]],[5],[5],[5],[5],[5],[5],[[329,10],11],[[327,10],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[327,9],[327,[[140,[328]]]],[[327,259],[[41,[331]]]],[327,[[41,[[225,[276]]]]]],[[]],[[]],[327,21],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[327,[[41,[328]]]],[327,[[41,[328]]]],[[]],[[]],0,0,[[],332],[[],333],[[]],[[]],[[]],[[]],[332,332],[333,333],[[]],[[]],[5],[5],[5],[5],[5],[5],[[332,10],11],[[333,10],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[332,334],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,[[],335],[[]],[[]],[335,335],[[]],[5],[5],[5],[[335,10],11],[[]],[[],5],[[]],[[335,285]],[[]],[[],8],[[],8],[[],16],[[]],0,[[],336],[[]],[[]],[336,336],[[]],[5],[5],[5],[[336,10],11],[[]],[[],5],[[]],[[]],[[],8],[[],8],[[],16],[[]],0,0,0,0,0,0,0,0,[[],337],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[338,[[41,[328]]]],[339,[[41,[328]]]],[82],[337,337],[340,340],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[[[41,[330]],82],[[41,[328]]]],[5],[5],[5],[5],[[340,340],9],0,[328,9],[328,9],[328,328],[328,328],[[337,10],11],[[340,10],11],[[340,10],11],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[337,[[41,[330]]]],0,[[]],[[]],[[]],[[]],[[337,259],[[41,[331]]]],[337,[[41,[[225,[276]]]]]],[337,[[41,[[225,[276]]]]]],[[337,328,259],331],[337,338],[337,339],[[[41,[328]],[41,[328]],[41,[328]],132],337],0,[33],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[338,239],[[8,[340]]]],[[339,259],[[8,[340]]]],[[]],[[]],[[]],[[]],[[[41,[21]]],[[41,[328]]]],0,0,0,0,0,0,0,[[],341],0,[[]],[[]],[341,341],[[]],[5],[5],[5],[[341,10],11],[[]],[[341,90],[[41,[71]]]],[[],5],[[]],0,[341,[[41,[153]]]],[341,[[41,[342]]]],0,[341,88],[[]],[[],8],[[],8],[[],16],0,[[]],0,[[]],[[]],[5,[[343,[5]]]],[[],17],[344,[[344,[[0,[17,25,18,19]],17]]]],[343,[[343,[[0,[17,18,19]]]]]],[[],[[41,[17]]]],[[],345],[5],[5],[5],[38,[[41,[38]]]],[[]],[345,346],[[],5],[[]],[[],345],[5,[[41,[[41,[17]]]]]],[[],8],[[],8],[[],16],[[345,9,53]],[[345,[0,[25,26]],[0,[25,26]],53]],[[]],0,[[],347],[[]],[[]],[347,347],[[]],[5],[5],[5],[[347,10],11],[[]],[[],5],[[]],[[]],[[],8],[[],8],[[],16],[[]],0,[[],348],[[]],[[]],[348,348],[[]],[5],[5],[5],[[348,10],11],[[]],[[],5],[[]],[[]],[[],8],[[],8],[[],16],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[69,137],[[349,350],137],[34,137],[349,137],[60,137],[350,137],[[342,[41,[122]]],137],[[342,90],137],[70,137],[64,137],[65,137],[[240,351],[[8,[87,109]]]],[352,353],0,0,0,0,0,[352,96],[352,80],[352,78],0,0,0,[[65,352],106],0,0,[352,251],[352,251],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[354,349,55],44],[[355,342,55],44],0,0,0,0,0,0,[[],354],[[],355],[5],[5],[5],[5],[5],[5],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],354],[[],355],0,0,[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],[[354,118],354],[[355,118],355],[[354,45],354],[[355,45],355],[[354,137],354],[[355,137],355],[[354,[41,[137]]],354],[[355,[41,[137]]],355],[[354,54],354],[[355,54],355],[[354,180],354],[[355,180],355],[[],56],[34,56],[84,56],[[72,330],56],[72,56],[[84,82],56],[60,56],[[89,[41,[122]]],56],[[90,91],56],[93,56],0,0,[[]],[[]],[[]],[[]],0,[69,137],[[349,350],137],[34,137],[349,137],[60,137],[350,137],[[342,[41,[122]]],137],[[342,90],137],[70,137],[64,137],[65,137],[5],[5],[5],[5],[5],[5],[[56,[41,[179]]],137],[[]],[[]],0,[[],5],[[],5],[[]],[[]],[[56,350],356],[[350,350],357],0,0,[[[352,[[359,[358]]]]],[[352,[[360,[358]]]]]],[356,137],[357,137],[356,137],[357,137],[356,137],[357,137],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,[[]],[[]],[[]],[[[13,[5]]],247],[[],361],[5],[5],[5],[[]],[[],5],[[]],[[],8],[[],8],[[],16],[[]],0,0,[[]],[[]],[362,349],[[],362],[5],[5],[5],[[]],[[],5],[[]],[[],362],0,0,0,0,0,[[],8],[[],8],[[],16],[[]],[[362,53],362],[[362,[41,[[3,[162]]]]],362],[[362,[41,[[3,[162]]]]],362],[[362,79],362],[[362,82,82,[13,[82]]],362],[[362,9],362],[[362,311],362],0,0,[363,[[135,[364]]]],0,[[]],[[]],[[]],[[]],[363,363],[[]],[5],[5],[5],[5],[5],[5],[[363,363],9],[[363,10],11],[[]],[[]],[363,137],[363,139],[363,[[365,[364]]]],[363,250],[363,242],[[],5],[[],5],[[]],[[]],[[366,259,328,328],363],[[366,259,276,21],363],[[366,259,328,328,21],363],[[366,259],363],[[366,259],363],[[366,259,[13,[45]]],363],[156,366],[[[365,[364]]],363],[[]],[[],8],[[],8],[[],8],[[],8],0,[[],16],[[],16],[[]],[[]],[[366,367],366],0,[363,368],0,0,0,0,0,0,[369,156],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[367,367],[[]],[[],367],[5],[5],[5],[5],[5],[5],[5],[5],[5],[352,353],[[369,56],21],0,[[367,10],11],[[369,45,56,[41,[179]],367,350],137],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[]],[[]],[[]],[[369,45,30,56,367],137],[[369,45,350,30,56,367],137],[[156,132],369],[[156,132,56,45,350],370],[352,96],[352,80],[352,78],[[369,45,[352,[[359,[358]]]],350,367],[[352,[[360,[358]]]]]],[[65,352],106],[[]],[370,137],[370,137],[370,137],[370,137],[370,137],[370,137],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[352,251],[352,251],0,[[]],[[]],[[]],0,[[240,351],[[8,[87,109]]]],0,0,0,0,0,[[156,330,242],244],[[156,330,5,242],244],[[156,[41,[330]],242],[[41,[244]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[285,330],[[285,21],328],[[285,38],330],[[285,38,21],328],[[285,21,[344,[371,21]]],328],[330,276],[328,276],0,[328,330],0,[[],330],[[],328],[[]],[[]],[[]],[[]],[[]],[[]],[330,330],[328,328],[[]],[[]],[330,[[8,[372]]]],[328,[[8,[372]]]],[[330,5],[[8,[372]]]],[[328,5],[[8,[372]]]],[285,330],[[285,21],328],[330,330],[[330,[3,[162]]],330],[[330,330],330],[330,2],[330,[[3,[162]]]],[5],[5],[5],[5],[5],[5],[330,285],[5],[5],[5],[[330,330],9],[[328,328],9],[[330,10],11],[[328,10],11],[[372,10],11],[[372,10],11],[[]],[328,330],[[]],[[]],[22,372],[[285,334],330],[[285,334,21],328],[[342,285],330],[[],[[374,[373]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[328,9],[330,375],[328,375],[[330,21,[13,[[289,[276]]]]],331],[[328,[13,[[289,[276]]]]],331],[[328,[13,[[289,[276]]]],21],331],[[330,21],[[225,[276]]]],[328,[[225,[276]]]],[[328,21],[[225,[276]]]],[[330,156,376],244],[[328,156,376],244],[[330,156,5,376],244],[[328,156,5,376],244],[[179,43,276],330],[[330,21],328],[[330,21,[344,[371,21]]],328],[330,179],[328,179],0,[33],[330,[[3,[162]]]],[328,[[3,[162]]]],[372,[[13,[35]]]],[330,43],0,[[330,5],[[8,[36,372]]]],[330,43],[330,15],[330,2],[328,2],[[]],[[]],[[],15],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[285,330],[[285,21],328],0,[[]],[[]],[[]],0,[[377,179]],[[]],[[]],[5],[5],[5],0,[[],377],[[377,276],[[13,[179]]]],[[377,3],[[13,[179]]]],[[]],[[],5],[[]],[378,377],[377,276],[377,[[3,[162]]]],[377,[[161,[162]]]],0,0,[[],8],[[],8],[[],16],[[]],0,[[],342],[[]],[[]],[342,342],[[]],[5],[5],[5],[[342,10],11],[[]],[342,153],[[],5],[[]],[342,[[161,[162]]]],0,[[[161,[162]]],342],[[]],[[],8],[[],8],[[],16],[[]],0,[349,15],0,[[],349],[[]],[[]],[349,349],[[]],[5],[5],[5],[[349,10],11],[[]],[349,84],0,[349,72],[349,72],[[],5],[[]],[349,[[374,[164]]]],0,[[53,84,[374,[379]],[374,[164]],72,[13,[330]]],349],0,[349,[[13,[330]]]],0,[[]],[[],8],[[],8],[[],16],[349,[[374,[379]]]],0,[[]],0,0,[[]],[[]],[[]],[[]],[351,380],0,[5],[5],[5],[5],[5],[5],[351,381],[[]],[[]],[[],5],[[],5],[[]],[[]],[351],0,[351,[[41,[104]]]],[[5,5],351],[[382,240],[[41,[383]]]],[382,104],[382,384],0,[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,[350,53],0,[[],350],[350,328],[350,330],[350,276],[[]],[[]],[350,350],[[]],[350],[[350,5]],[5],[5],[5],[[350,10],11],[[]],[385,350],[328,350],[[[386,[15]],328],350],[21,350],[[],5],[[]],[[350,21],331],[350,[[225,[276]]]],[[350,21],[[225,[276]]]],[[350,156,376],244],[[350,156,5,376],244],[[53,21],350],[[53,21,[344,[371,21]]],350],[350,179],[350,[[3,[162]]]],[[]],[[],8],[[],8],[[],16],[350,21],[[]],0,0,0,0,[[],54],[[]],[[]],[[]],[[],118],[5],[5],[5],[[]],[[],54],[[],180],[[],2],[[],5],[[]],[[],342],[[],50],[[],204],[2,69],[[],156],[[],[[3,[162]]]],[[],387],[[],[[161,[162]]]],[[],50],[[[41,[342]]],257],[[],349],[[],252],[[],55],[[],37],[[],371],[[],8],[[],8],[[],16],0,[349,154],[[]],0,[[]],[[]],[[5,5],351],[5],[5],[5],[[],100],[[]],[[],5],[[]],[[],227],[[64,94,388],92],[[],64],[351,64],[[],94],[95,94],[5,97],[[95,5],97],[[],230],[[],8],[[],8],[[],16],[[],70],[64,70],[[],92],[388,92],[[],64],[5,64],[[],65],[[]],0,0,0,0,0,[259,239],0,[[259,44],[[8,[224]]]],[[259,342],[[8,[224]]]],[[259,342,45],[[8,[224]]]],[[259,349],[[8,[224]]]],[[259,137,45],[[8,[224]]]],[[259,349,[41,[137]]],[[8,[224]]]],[259,[[8,[224]]]],[[259,137],[[8,[224]]]],[[],389],[[],390],[[],259],0,[259,156],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[389,88],[390,[[8,[259,224]]]],[259,9],[390,390],0,0,0,0,[259,118],[389,389],[390,390],[391,391],[259,259],[[]],[[]],[[]],[[]],0,0,[[],153],[259,45],0,[[],389],[259,215],[5],[5],[5],[5],[5],[5],[5],[5],0,[259,[[8,[224]]]],[5],[5],[5],[5],[259,55],[[259,45]],[[390,328],390],[[390,21],390],[390,390],[259,[[41,[328]]]],0,0,[[390,[41,[350]]],390],[259,132],0,[[391,392],41],[[259,330],[[13,[[289,[276]]]]]],[[259,[41,[349]],[41,[137]]],[[8,[9,224]]]],[[391,10],11],[[259,10],11],[[259,342,45,[41,[137]]],44],[[259,349],44],[[259,349,[41,[137]]],44],[259],[[390,137],390],[390,390],0,[[]],[[]],[[]],[[]],[389,390],[391,[[13,[392]]]],[[259,84]],[[],5],[[],5],[[],5],[[],5],[[390,328],390],[390,390],[[]],[[]],[[]],[[]],0,0,[259,237],[[259,84],38],0,0,[390,390],[[],389],[389],0,0,0,[259,258],[[390,276,21],390],[[390,[225,[276]]],390],[390,390],0,0,[[259,45]],[259,257],0,0,[[]],[[]],[[]],[[]],[259,21],0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],0,0,[390,390],[259,[[277,[276]]]],[[]],[[]],[[]],[[]],[[389,298],389],[[389,125],389],[[389,38],389],[[389,393],389],[[389,117],389],[[389,285],389],[[389,132],389],[389,389],[[389,38],389],[389,389],[[389,133],389],[[389,134],389],[[389,82,82],389],[[389,21],389],[[389,123],389],[[389,40],389],[[389,38],389],[[389,40],389],[[389,21],389],[[389,311],389],0,0,0,0,0,0,0,0,0,0,0,[[],394],[100,395],0,[53,396],0,[53,397],[53,398],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[399,350,101,100,259,400],[[8,[224]]]],[[399,350,101,100,388,259],[[8,[224]]]],[[399,350,101,100,388,259],[[8,[224]]]],[401,401],[[]],0,0,0,[[399,350,349,259],[[8,[224]]]],[[399,350,350,349,259],[[8,[224]]]],[[399,350,259],[[8,[224]]]],[5],[5],[5],[5],[5],[5],[[401,401],9],[[401,10],11],[[401,10],11],[399,402],0,[[]],[[]],[[],5],[[],5],[399,[[41,[349]]]],[[]],[[]],[[399,350,69,259],[[8,[224]]]],[[180,132,[41,[350]],[41,[349]],[41,[101]]],399],[[399,350,349,259],[[8,[224]]]],[33],[[399,350,349,259],[[8,[224]]]],[[399,350,259],[[8,[224]]]],[[399,30,349,259],[[8,[224]]]],[[399,53],[[8,[349,401]]]],[[399,350,101,87,259],[[8,[224]]]],[[399,350,101,259],[[8,[224]]]],[[]],[[],15],[[399,350,350,259,82],[[8,[224]]]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[399,349,349,30,259],[[8,[224]]]],[[399,350,68,259],[[8,[139,224]]]],[[399,350,71,259],[[8,[224]]]],[[399,53],[[8,[101,401]]]],[[]],[[]],[[399,53],[[8,[350,401]]]],[399,[[41,[350]]]],0,0,0,0,0,0,[[]],[[]],[402,402],[[]],[[402,45,350,349],137],[[402,45,350,350,349],137],[[402,45,350],137],[[402,45,350],137],[5],[5],[5],0,[[402,10],11],[[]],[259,402],[[],5],[[]],[[402,45,350,69],137],[[180,132],402],[[402,45,350,349],137],[[402,45,350,349],137],[[402,45,30,349],137],[[402,45,30,349,349],137],[[]],[[402,350,350,259,82],137],[[402,45,30,56],137],[[],8],[[],8],[[],16],[[402,45,350,350,68],137],[[402,45,350,350,71],137],[[402,45,350,70],137],[[402,45,350,64],137],[[402,45,350,65],137],[[]],[[402,367],402],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[394,[[8,[403]]]],[394,[[41,[137]]]],[[394,404],349],[[394,[41,[404]]],[[41,[349]]]],[394,[[41,[137]]]],[403,403],[[]],0,[5],[5],[5],[5],[5],[5],[[403,403],9],[[403,10],11],[[403,10],11],[[]],[[]],[[],5],[[],5],0,[[]],[[]],[[],394],[100,395],[33],[53,396],0,[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[53,397],0,[[]],[[]],[53,398],[[394,389],394],[[394,[41,[398]]],394],[[394,[41,[396]]],394],[[394,[41,[397]]],394],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[385,15],[404,15],[101,15],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[385,385],[404,404],[405,405],[101,101],[102,102],[[]],[[]],[[]],[[]],[[]],[101,[[41,[104]]]],0,0,[101,41],0,0,0,[385,[[13,[15]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[[385,385],9],[[404,10],11],[[405,10],11],[[101,10],11],[[102,10],11],[[]],[[]],[[]],[[]],[[]],[[[386,[15]],[13,[[386,[15]]]],64],101],0,[385],[101,15],[102,100],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[385,9],[[53,21,[344,[371,21]]],385],0,0,[101,15],0,0,[404,[[41,[[3,[162]]]]]],0,0,0,[385,[[13,[15]]]],0,0,0,0,[405,[[13,[79]]]],[[101,5],102],[101,[[41,[102]]]],0,0,0,[385,[[13,[179]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[395,395],[395,395],[[395,82],395],[[395,82],395],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[398,[[8,[385,403]]]],[396,405],[397,101],[395,102],[[],[[344,[15,[343,[385]]]]]],[[],[[344,[15,[343,[385]]]]]],[[406,[41,[350]]],[[8,[[41,[404]],403]]]],[398,398],[396,396],[397,397],[395,395],[[]],[[]],[[]],[[]],[[397,[41,[104]]],397],0,[398,398],0,[397,397],[406,[[343,[15]]]],0,[[398,53],398],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,[[396,82],396],[[396,10],11],[[397,10],11],[[395,10],11],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[398,179],398],[[],406],[53,398],[53,396],[53,397],[100,395],[396,396],[[395,40],395],0,[[397,53],397],0,0,0,[[398,53],398],[[398,53],398],[[397,103],397],0,0,0,0,0,0,[[396,82],396],[[396,82,82],396],0,[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[397,38,38,38],397],[[397,37],397],0,[[]],[[]],[[]],[[]],[[]],[[398,82],398],[[396,40],396],[[397,395],397],[[396,9],396],[[398,371,82],398],[[[0,[407,193,408,18]]],346],0,0,0,0,0,0,0,0,0,0,0,0,0,[[409,330],410],[[409,330,21],409],0,[[409,2,31],409],[[409,5],409],0,[[409,330,21],409],[409,409],[410,410],[411,411],[412,412],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[413,413],[[]],[[412,319],412],[410,414],0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[409,412],[410,410],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],413],[[413,10],11],[[415,101],415],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[386,[15]]],413],[[415,350],415],[[411,21],411],[[410,21],410],[[411,21],411],[[411,21],411],[[410,21],410],0,[[409,[386,[15]]],409],0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[414,84],414],[[416,349]],[[416,349]],0,[409,409],[204,409],[[[41,[240]]],415],[[239,330,413],410],[[34,413],414],[[258,413],411],[[215,413],416],[[84,72,413],417],[[207,413],412],[[417,[41,[[3,[162]]]]],417],[[412,41],412],[[412,319],412],[409,411],0,[[417,418],417],0,[[409,84],417],0,0,[409,416],[[]],[[],15],[[409,21],409],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[412,319],412],[[409,289],409],[[409,330,21],409],[[409,5],409],0,0,[409,415],[[415,[41,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[],37],[[]],[[]],[[]],[[]],[[]],[37,[[41,[40]]]],[37,37],[[]],[[37,37],4],[5],[5],[5],[5],[6,[[8,[37,7]]]],[6,[[8,[7]]]],[5],[5],[[37,37],9],[[37,10],11],[[37,10],11],[[419,10],11],[[419,10],11],[[]],[420,419],[421,419],[[]],[7,419],[53,8],[53,[[8,[37]]]],[37],[[],5],[[],5],[[]],[[]],[[37,37],[[13,[4]]]],0,[33],[419,[[13,[35]]]],0,[[]],[[],15],[[],15],0,[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,0,0,0,[1,1],[[]],[[],422],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[422,[[41,[40]]]],[422,[[8,[263]]]],[422,422],[423,423],[263,263],[[]],[[]],[[]],[[],422],[5],[5],[5],[5],[5],[5],[6,[[8,[422,7]]]],[6,[[8,[7]]]],[5],[5],[5],[422],[[422,422],9],[[423,423],9],[[263,263],9],[[422,10],11],[[423,10],11],[[263,10],11],[[263,10],11],[[]],[[]],[[]],[422,424],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],422],[33],[[422,6],[[8,[14]]]],[422,5],0,[[]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[]],[[]],[[]],0,0,0,0,[1,1],[[]],0,[[],371],[[]],[371],[[],5],[[]],[[]],[[]],[[]],[371,[[41,[40]]]],[[],[[8,[[41,[111,112]]]]]],[371,371],[[]],[[371,371],4],[5],[5],[5],[5],[6,[[8,[371,7]]]],[6,[[8,[7]]]],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[371,371],9],[[371,10],11],[[420,10],11],[[420,10],11],[[]],[[]],[371],[[],5],[[],5],[[]],[[]],[[371,371],[[13,[4]]]],[33],[[371,6],[[8,[14]]]],[371,5],0,[[]],[[],15],[[],8],[[[41,[40]]],[[8,[371]]]],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],[[],8],0,0,0,[1,1],[[]],[[],424],[[]],[424],[[],5],[[]],[[]],[[],[[8,[[41,[111,112]]]]]],[424,424],[[]],[[424,424],4],[5],[5],[6,[[8,[424,7]]]],[6,[[8,[7]]]],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[424,424],9],[[424,10],11],[[]],[[],424],[424],[[],5],[[]],[[424,424],[[13,[4]]]],0,[[]],[[],[[8,[424]]]],[[],8],[[],8],[[],16],[[]],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],73],[[],74],[61,[[13,[58]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[352,352],[[]],[352,5],0,[[],425],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[]],[[]],[[]],[[]],[[]],[[]],[[[352,[[360,[358]]]]],85],[[[352,[426]]],376],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[352,[427]]]],[[],425],0,[[[352,[359]],45],[[352,[428]]]],[[[352,[428]]],[[352,[426]]]],[[[352,[427]]],[[352,[[359,[364]]]]]],[[[352,[427]]],[[352,[[359,[358]]]]]],[[[352,[[360,[358]]]]],[[365,[358]]]],[[[352,[[426,[358]]]]],[[352,[[360,[358]]]]]],[[[352,[[426,[358]]]]],[[352,[[360,[358]]]]]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[41,45]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],353],[[],429],[430],[353],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[[41,[111,112]]]]]],[[],[[8,[[41,[111,112]]]]]],[431,431],[353,353],[429,429],[265,265],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[353,7]]]],[6,[[8,[429,7]]]],[5],[5],[5],[5],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[],[[116,[115]]]],[[],[[116,[115]]]],[[265,265],9],[[431,10],11],[[353,10],11],[[429,10],11],[[265,10],11],[[265,10],11],[[[41,[40]]],430],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[85,48],353],[[85,48],429],[33],[[353,[76,[353]]],[[76,[353]]]],[[429,[76,[429]]],[[76,[429]]]],[265,[[13,[35]]]],[[]],[[]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[353,3,85],86],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[[]],[[]],[38,38],[[],248],[[],432],[[],331],[[]],[[]],[248],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[331],[[],[[8,[[41,[111,112]]]]]],[248,248],[432,432],[331,331],[[]],[[]],[[]],[[331,331],4],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[331,7]]]],[6,[[8,[7]]]],[5],[5],[5],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[248,248],9],[[432,432],9],[[331,331],9],[[248,10],11],[[432,10],11],[[331,10],11],[[]],[[]],[[],248],[[]],[[]],[[]],[[],331],[[248,21],331],[[433,21],331],[[2,21],331],[434,331],[268,248],[[268,21],331],[2,248],[243,331],[[[289,[276]]],331],[331,435],[248],[432],[331],0,[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[40,21],331],[[331,331],[[13,[4]]]],[[331,6],[[8,[14]]]],[331,5],[331,434],[248,268],[[]],[[]],[[]],[248,[[13,[2]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[331,21],0,[[]],[[]],[[]],[[]],[[]],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,[[436,331],[[8,[437]]]],[[436,276,21],[[8,[437]]]],[[436,21],[[8,[438,24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[436,439],[437,437],[440,440],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],436],[[436,[61,[358]]],21],[[437,10],11],[[437,10],11],[[440,10],11],[[]],[[]],[[]],[[]],[[436,[61,[358]]],[[8,[438,24]]]],[[436,[61,[358]],40,40],[[8,[438,437]]]],[436,[[8,[438,24]]]],[[],5],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[50,50],[[8,[436,437]]]],0,0,[33],[[436,5]],[[436,5]],[[436,[61,[358]]],[[8,[439,437]]]],[[436,[61,[358]],440],[[8,[437]]]],[437,[[13,[35]]]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],364],[[[61,[195]]]],[[[441,[195]]]],[[[74,[195]]]],[[[73,[195]]]],[[],5],[[],5],[[]],[[[74,[195]]],[[61,[195]]]],[[]],[[[73,[195]]],[[441,[195]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[[41,[111,112]]]]]],[[],[[8,[[41,[111,112]]]]]],[[[74,[195]]],[[74,[195]]]],[[[73,[195]]],[[73,[195]]]],[[[61,[195]]],[[61,[195]]]],[[[441,[195]]],[[441,[195]]]],[364,364],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[364,7]]]],[5],[5],[5],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[],[[116,[115]]]],[[],[[116,[115]]]],[[364,364],9],[[364,10],11],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[[61,[358]]],[[13,[58]]]],[[[61,[358]]],358],[[[441,[358]]]],[[],73],[[],[[73,[364]]]],[[],74],[364,[[74,[364]]]],[61,[[13,[58]]]],[[[61,[364]]],[[13,[58]]]],[[364,6],[[8,[14]]]],[364,5],[[]],[[]],[[]],[[[61,[358]]],[[74,[358]]]],[[[441,[358]]],[[73,[358]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],0,[[],442],[[]],[[]],[442,442],[[]],[5],[5],[5],[[442,10],11],[[]],[[],5],[[]],[[]],[[],8],[[],8],[[],16],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[365,[[0,[407,358]]]]]],[365],[365,135],[[365,21],[[8,[438,24]]]],[[],5],[[],[[365,[358]]]],[[],[[352,[[360,[358]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[443,[358]]],[[8,[[135,[358]],444]]]],[[],[[8,[[41,[111,112]]]]]],[365,365],[376,376],[85,85],[445,445],[250,250],[368,368],[446,446],[444,444],[447,447],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[[365,[358]],7]]]],[6,[[8,[7]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[365,365],9],[[365,10],11],[[444,10],11],[[444,10],11],[[]],[[]],[[],[[443,[358]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[447,444]]]],[365,242],[376,242],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[135,445],0,[135,446],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[445,448],[250,449],[368,450],[446,451],[446,40],[365,40],[135,40],[445,40],0,[365,40],[135,40],[250,40],0,[365,40],[135,40],[368,40],[448,13],[449,13],[450,13],[451,13],[135,250],0,[135,61],[[[135,[358]]],[[441,[358]]]],0,0,0,0,[33],[[[365,[358]],6],[[8,[14]]]],[[[365,[358]]],5],0,0,0,0,[[]],[135,365],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[365,[[8,[21,24]]]],[135,[[8,[21,24]]]],[365,[[8,[21,24]]]],[135,[[8,[21,24]]]],[135,376],[135,85],[135,242],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[135,45],0,[365,[[8,[265]]]],[[365,21],[[8,[265]]]],[[135,21],[[8,[265]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[135,368],0,[[],8],0,0,[[],[[225,[276]]]],[[]],[[]],[[[225,[17]]],[[225,[17]]]],[[]],[5],[5],[6,[[8,[[225,[186]],7]]]],[6,[[8,[7]]]],[5],[[[225,[25]],225],9],[[[225,[276]],10],11],[[[225,[245]],10],11],[[[225,[26]],10],11],[[]],[21,225],[[[225,[19]]]],[[],5],[[]],[[]],[[],15],[[],8],[[],8],[[],16],0,[[]],0,0,[[],243],[[]],[[]],[243,243],[[]],[[243,243],4],[5],[5],[5],[[243,243],9],[[243,10],11],[[243,10],11],[[]],[243],[[],5],[[]],[[139,275,21],243],0,[[243,243],[[13,[4]]]],[[]],[[],15],0,[[],8],[[],8],[[],16],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],244],[452],[453],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[[41,[111,112]]]]]],[[],[[8,[[41,[111,112]]]]]],[244,244],[454,454],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[6,[[8,[244,7]]]],[5],[5],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[],[[116,[115]]]],[[],[[116,[115]]]],[[244,244],9],[[244,10],11],[[244,10],11],[[454,10],11],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[156,242,454],452],[[156,242,36],453],[[156,242,36,48],244],[[156,242,36],453],[[156,242,48],244],[[156,242],452],[[156,242,48],244],[[156,242],452],[[244,6],[[8,[14]]]],[244,5],[244,[[41,[40]]]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[41,40,156,242]],[[],8],[[],8],0,[[455,21],[[8,[224]]]],[[]],[[]],[455,455],[[]],[5],[5],[[455,21],21],[5],[[455,455],9],[[455,10],11],[[]],[[],5],[21,455],[[]],[[455,21],[[8,[224]]]],[[]],[[],8],[[],8],[[],16],[455,21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[274,90,68,257,45],[[8,[274,262]]]],[[274,71,257],[[8,[274,262]]]],[[],288],[[]],[[]],[[]],[[]],[[]],[[]],[274,274],[288,288],[262,262],[[]],[[]],[[]],[[],274],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[274,274],9],[[288,288],9],[[262,262],9],[[274,10],11],[[288,10],11],[[262,10],11],[[262,10],11],[[]],[[]],[[]],[316,262],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],274],[[274,257,45,45]],0,0,[274,[[344,[90,288]]]],0,[33],0,[[]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[[246,[17]],139],[[8,[[246,[17]],260]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[260,260],[[[456,[17]]],[[456,[17]]]],[[[246,[17]]],[[246,[17]]]],[[[289,[17]]],[[289,[17]]]],[[[291,[17]]],[[291,[17]]]],[[]],[[]],[[]],[[]],[[]],[[],[[246,[17]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[260,260],9],[[[456,[25]],456],9],[[[246,[25]],246],9],[[[289,[25]],289],9],[[[291,[25]],291],9],[[260,10],11],[[260,10],11],[[[456,[26]],10],11],[[[246,[276]],10],11],[[[289,[26]],10],11],[[[291,[26]],10],11],0,0,[[]],[[]],[[]],[457,260],[29,260],[[[28,[458]]],260],[304,260],[[]],[[]],[[]],[[]],[30,[[246,[17]]]],[[],[[456,[17]]]],[[246,139,275],[[13,[289]]]],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[246,9],[246,277],[[],[[246,[17]]]],[277,13],[459,13],0,0,0,0,[33],[[[246,[17]],139,275],[[8,[260]]]],[[[456,[17]],275],[[8,[260]]]],[[[246,[17]],139],[[8,[260]]]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,[246,459],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1,1],[[]],[[21,21]],[[],21],[[]],[21,82],[[]],[[]],[[]],[[]],[[]],[[]],[21],[[21,21],[[8,[21,24]]]],[[21,21],[[8,[21,24]]]],[21,21],[460,460],[24,24],[[]],[[]],[[]],[[21,21],4],[[],21],[5],[5],[5],[5],[5],[5],[6,[[8,[21,7]]]],[6,[[8,[7]]]],[5],[5],[5],[[21,21],9],[[460,460],9],[[24,24],9],[[21,10],11],[[21,10],11],[[460,10],11],[[24,10],11],[[24,10],11],[325,21],[[]],[326,21],[[]],[[]],[[],[[8,[21,120]]]],[21],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[21,21],[[13,[4]]]],0,[33],0,[[21,21],21],[[21,38],[[8,[21,24]]]],[[21,6],[[8,[14]]]],[21,5],[[21,38],460],[[21,21]],[50,[[8,[21,24]]]],[50,21],[[]],[[]],[[]],[21,[[41,[40]]]],[[],15],[[],15],[[],8],[[],[[8,[21,24]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[380,381,461]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],105],[[],388],[105,40],[388,40],[[]],[[]],[[]],[[]],[[]],[[]],[105,462],[105,105],[388,388],[[]],[[]],[[388,388],4],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[105,105],9],[[388,388],9],[[463,10],11],[[463,10],11],[[105,10],11],[[388,10],11],[[]],[[]],[[]],[388],[[],5],[[],5],[[],5],[[]],[[]],[[]],[40,388],[40,[[8,[105,463]]]],0,0,[[388,388],[[13,[4]]]],0,[33],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[105,388],9],[[]],[[]],[[]],0,0,0,[[],393],[393],[[],5],[[]],[[]],[[]],[[]],[[],[[8,[[41,[111,112]]]]]],[393,393],[[]],[5],[5],[5],[5],[6,[[8,[393,7]]]],[5],[5],[[],[[116,[115]]]],[[],[[116,[115]]]],[[393,393],9],0,[[393,10],11],[[393,10],11],[[464,10],11],[[464,10],11],[[]],[[],393],[[[3,[162]]],393],[[]],[53,[[8,[393,421]]]],[[],[[8,[393,120]]]],[53,8],[53,[[8,[393]]]],[393],[[],5],[[],5],[[]],[[]],[33],[393,[[3,[162]]]],0,[[393,6],[[8,[14]]]],[393,5],0,[393,15],[[]],[393,[[41,[40]]]],[[],15],[[],15],[[],[[8,[393]]]],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],[[],8],0,0,0,0,0,0,0,[[465,45,64,[343,[393]]],[[8,[465,266]]]],[[465,45,98,65,106,272,400],[[8,[465,266]]]],[[465,45,2,70,272],[[8,[465,266]]]],[[]],[[]],[[]],[[]],[465,465],[266,266],[[]],[[]],[[],465],[5],[5],[5],[5],[5],[5],[[465,465],9],[[266,266],9],[[266,10],11],[[266,10],11],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],465],0,[33],[266,[[13,[35]]]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[466,45],9],[[466,45],9],[[467,319,98,468],9],[[467,2],[[8,[469]]]],[[467,319,226,468],9],[466,466],[470,470],[471,471],[472,472],[467,467],[473,473],[469,469],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[466,343],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[466,466],9],[[470,470],9],[[471,471],9],[[472,472],9],[[467,467],9],[[473,473],9],[[469,469],9],[[472,87,98,272,400],[[8,[472,469]]]],[[467,108,98,272,400],[[8,[467,474]]]],[[470,10],11],[[471,10],11],[[473,10],11],[[469,10],11],[[469,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[475,469],[[]],[474,469],[466,93],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[472],[472],[[64,[343,[393]]],466],[64,472],[[94,381,380],467],[94,467],0,0,[466,64],0,[[466,45,87,98,393,272,400],[[8,[466,469]]]],0,0,[33],[[466,45,98,393,272,400],[[8,[466,469]]]],[[472,272,98,400],[[8,[472,474]]]],[[467,272,98,400],[[8,[467,474]]]],[469,[[13,[35]]]],[466,240],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[466,393],9],[[467,2,70,380,381],[[8,[470,469]]]],[[467,2,70],[[8,[470,469]]]],[[472,2,70],[[8,[471,469]]]],[[466,45,2,70,272],[[8,[466,469]]]],[[472,2,471,272],[[8,[472,469]]]],[[467,2,470,272],[[8,[467,469]]]],[[466,45],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],103],[[],92],[476,477],[478,479],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103,103],[92,92],[476,476],[478,478],[[]],[[]],[[]],[[]],[[103,103],4],[[],103],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[103,103],9],[[92,92],9],[[476,476],9],[[478,478],9],[[103,10],11],[[92,10],11],[[476,10],11],[[478,10],11],[[480,10],11],[[480,10],11],[[]],[[]],[[]],[[]],[[]],[477,476],[479,478],[103],[92],[476],[478],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[103,103],[[13,[4]]]],[92,103],[[478,476],92],[33],[388,92],[6,[[8,[92,7]]]],[6,[[8,[476,7]]]],[6,[[8,[478,7]]]],[476,[[75,[476]]]],[478,[[75,[478]]]],[[92,76],76],[[476,[76,[476]]],[[76,[476]]]],[[478,[76,[478]]],[[76,[478]]]],0,[[]],[[]],[[]],[[]],[[],15],[[],8],[40,[[8,[103]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[380,381,461]],0,0,[[]],[[]],[[]],[[]],0,0,[5],[5],[5],[5],[5],[5],[[]],[[]],0,0,[[],5],[[],5],[[]],[[]],0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[468,388,[386,[481]]],[[8,[469]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[481,481],[468,468],[482,482],[483,483],[474,474],[[]],[[]],[[]],[[]],[[]],[[481,481],4],[[],481],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[481,481],9],[[468,468],9],[[482,482],9],[[483,483],9],[[474,474],9],[[481,10],11],[[481,10],11],[[468,10],11],[[482,10],11],[[483,10],11],[[474,10],11],[[474,10],11],[[]],[82,481],[21,481],[319,481],[[]],[[]],[[]],[[]],[481],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[482,9],[482,9],[481,9],[105,468],[484,482],[468,482],[468,105],0,[[481,481],[[13,[4]]]],[468,319],[482,[[8,[484,474]]]],[[482,468],[[8,[482,474]]]],[33],[482,[[13,[468]]]],[468],0,[[481,481],481],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0],"c":[],"p":[[8,"Strategy"],[3,"Identifier"],[3,"PublicKey"],[4,"Ordering"],[15,"usize"],[3,"Codec"],[4,"ReadError"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[6,"AccountAlg"],[4,"Option"],[4,"WriteError"],[3,"String"],[3,"TypeId"],[8,"Clone"],[8,"Eq"],[8,"Hash"],[3,"Ledger"],[3,"Value"],[4,"LedgerError"],[6,"Epoch"],[4,"ValueError"],[8,"PartialEq"],[8,"Debug"],[4,"Error"],[4,"UpdateError"],[4,"InsertError"],[8,"IntoIterator"],[3,"AccountState"],[3,"Iter"],[3,"Demand"],[4,"DelegationType"],[8,"Error"],[3,"SpendingCounter"],[3,"TokenIdentifier"],[15,"u32"],[3,"DelegationRatio"],[15,"u8"],[3,"Vec"],[3,"LastRewards"],[3,"SpendingCounterIncreasing"],[3,"Block"],[3,"BlockDate"],[4,"BlockVersion"],[3,"Contents"],[8,"FnOnce"],[4,"BlockDateParseError"],[8,"Iterator"],[3,"EpochPosition"],[6,"SlotId"],[15,"str"],[4,"Header"],[3,"TimeEra"],[4,"Certificate"],[4,"CertificatePayload"],[4,"CertificateSlice"],[4,"SignedCertificate"],[3,"PoolUpdate"],[3,"PayloadSlice"],[3,"PoolRetirement"],[3,"OwnerStakeDelegation"],[3,"VotePlan"],[3,"VoteTally"],[3,"EvmMapping"],[3,"StakeDelegation"],[3,"UpdateProposal"],[3,"MintToken"],[3,"VoteCast"],[3,"UpdateVote"],[3,"PoolRegistration"],[3,"PayloadAuthData"],[3,"PayloadData"],[3,"ByteArray"],[3,"ByteBuilder"],[3,"EvmMappingSigned"],[6,"PoolOwnersSigned"],[3,"PoolPermissions"],[4,"PoolSignature"],[3,"PoolOwnersSignature"],[15,"u64"],[6,"ManagementThreshold"],[6,"PoolId"],[3,"TransactionBindingAuthData"],[4,"Verification"],[3,"DecryptedPrivateTally"],[3,"ConfigParams"],[6,"UpdateProposerId"],[6,"UpdateProposalId"],[6,"UpdateVoterId"],[4,"Payload"],[6,"VotePlanId"],[3,"Proposal"],[4,"VoteAction"],[3,"VotePlanProof"],[3,"Proposals"],[3,"Governance"],[4,"PushProposal"],[6,"ExternalProposalId"],[3,"VotePlanDef"],[3,"ProposalDef"],[4,"PayloadType"],[3,"MemberPublicKey"],[3,"Options"],[4,"TallyProof"],[4,"VoteTallyPayload"],[3,"DecryptedPrivateTallyProposal"],[3,"DecryptedPrivateTallyError"],[3,"PraosNonce"],[3,"u5"],[3,"Global"],[4,"ConsensusEvalContext"],[3,"HeaderContentEvalContext"],[15,"char"],[8,"FromIterator"],[4,"ConsensusType"],[3,"ChainLength"],[3,"Error"],[4,"Error"],[15,"u16"],[4,"ConfigParam"],[4,"RewardParams"],[4,"Tag"],[3,"Block0Date"],[3,"TagIter"],[3,"TagLen"],[3,"IterBridge"],[4,"Error"],[4,"EvmActionType"],[3,"EvmTransaction"],[3,"LinearFee"],[3,"PerCertificateFee"],[3,"PerVoteCertificateFee"],[3,"TransactionSlice"],[3,"NonZeroU64"],[4,"Fragment"],[4,"FragmentTag"],[6,"FragmentId"],[3,"Iter"],[3,"ContentsBuilder"],[6,"BlockContentHash"],[4,"HeaderSetParenting"],[3,"HeaderBuilder"],[4,"HeaderSetConsensusSignature"],[3,"HeaderBftBuilder"],[3,"HeaderGenesisPraosBuilder"],[6,"BlockContentSize"],[4,"HeaderCommonDone"],[4,"HeaderSetConsensusData"],[3,"HeaderUnsigned"],[6,"HeaderBuilderNew"],[3,"BftLeaderId"],[3,"VrfProof"],[4,"HeaderSetDate"],[6,"HeaderId"],[3,"BftSignature"],[3,"HeaderBft"],[3,"KesSignature"],[3,"HeaderGenesisPraos"],[3,"SecretKey"],[3,"Ed25519"],[3,"HeaderAuth"],[3,"SumEd25519_12"],[3,"Signature"],[3,"ProvenOutputSeed"],[19,"Header"],[3,"HeaderSlice"],[4,"HeaderError"],[3,"Common"],[3,"BftProof"],[3,"GenesisPraosProof"],[4,"Proof"],[3,"HeaderDesc"],[3,"NonZeroUsize"],[3,"Box"],[3,"SK_FIRST"],[4,"AnyBlockVersion"],[4,"EitherEd25519SecretKey"],[3,"Hash"],[3,"GenesisPraosLeader"],[4,"PublicKeyError"],[4,"SignatureError"],[8,"VerificationAlgorithm"],[3,"Signed"],[8,"Deserialize"],[8,"AsymmetricPublicKey"],[3,"Blake2b256"],[3,"DigestOf"],[6,"BftVerificationAlg"],[8,"RngCore"],[8,"CryptoRng"],[8,"Serialize"],[8,"AsRef"],[8,"Sized"],[3,"PK_KES"],[3,"Error"],[4,"ErrorKind"],[3,"Leadership"],[4,"LeadershipConsensus"],[4,"Verification"],[3,"Leader"],[4,"LeaderOutput"],[3,"Ledger"],[8,"Send"],[8,"Sync"],[3,"StakeDistribution"],[3,"BftRoundRobinIndex"],[3,"LeadershipData"],[3,"Arc"],[3,"LeadershipData"],[4,"GenesisError"],[4,"VrfError"],[6,"Witness"],[3,"PoolsState"],[3,"ActiveSlotsCoeff"],[3,"Threshold"],[3,"PercentStake"],[4,"VrfEvalFailure"],[3,"Input"],[3,"VrfEvaluator"],[6,"WitnessOutput"],[4,"TxVerifyError"],[4,"Error"],[3,"Output"],[3,"GovernanceAcceptanceCriteria"],[3,"ParametersGovernance"],[4,"ParametersGovernanceActionType"],[4,"ParametersGovernanceAction"],[3,"TreasuryGovernance"],[4,"TreasuryGovernanceActionType"],[4,"TreasuryGovernanceAction"],[4,"EntryOwned"],[3,"Globals"],[3,"LedgerIterator"],[4,"Entry"],[3,"LeadersParticipationRecord"],[3,"HamtIter"],[6,"Ledger"],[3,"VotePlanStatus"],[3,"ApplyBlockLedger"],[6,"TransactionSignDataHash"],[3,"UtxoPointer"],[4,"Witness"],[3,"OldAddress"],[3,"Ledger"],[3,"UtxoDeclaration"],[3,"UnspecifiedAccountIdentifier"],[4,"FeeDeductionMode"],[3,"OutputsSlice"],[6,"BftLeaderBindingSignature"],[3,"LedgerStaticParameters"],[4,"Block0Error"],[3,"EpochRewardsInfo"],[3,"PoolStakeInformation"],[3,"RewardsInfoParameters"],[3,"Settings"],[3,"Pots"],[3,"TestLedger"],[4,"Error"],[4,"LedgerError"],[4,"Error"],[4,"MintingPolicyViolation"],[4,"PoolError"],[4,"BalanceError"],[4,"VotePlanLedgerError"],[3,"Ledger"],[3,"Identifier"],[3,"Witness"],[6,"Witness"],[4,"MatchingIdentifierWitness"],[3,"TokenDistribution"],[3,"TokenTotals"],[3,"UpdateState"],[6,"TransactionIndex"],[3,"Address"],[3,"Iter"],[4,"Entry"],[4,"EntryType"],[3,"Entries"],[3,"Values"],[4,"EntrySerializeCode"],[4,"DeclElement"],[3,"Declaration"],[4,"Discrimination"],[3,"PoolLastRewards"],[3,"PoolState"],[3,"UpdateProposalState"],[3,"Entry"],[8,"DigestAlg"],[3,"EntryOwned"],[4,"OldAddressMatchXPub"],[3,"ExtendedAddr"],[3,"Deserializer"],[4,"Error"],[3,"XPub"],[3,"Serializer"],[3,"Milli"],[15,"f64"],[3,"WitnessMultisigData"],[4,"DeclarationError"],[4,"TreeIndex"],[3,"Index"],[4,"RemoveError"],[3,"WitnessBuilder"],[3,"Multiverse"],[3,"Ref"],[4,"GcEntry"],[4,"CompoundingType"],[3,"Ratio"],[3,"TaxType"],[4,"Limit"],[3,"Parameters"],[3,"TaxDistribution"],[3,"SystemInformation"],[4,"ActiveSlotsCoeffError"],[4,"FeesGoesTo"],[3,"StakeControl"],[3,"Stake"],[6,"PoolRegistrationHash"],[3,"PoolStakeDistribution"],[3,"Iter"],[3,"StakeUnit"],[3,"SplitValueIn"],[3,"NonZeroValue"],[3,"AverageValue"],[3,"ArbitraryAddressDataValueVec"],[3,"AddressDataValue"],[3,"ArbitraryAddressDataVec"],[3,"AddressData"],[3,"Input"],[3,"KindTypeWithoutMultisig"],[3,"KindWithoutMultisig"],[4,"KindType"],[3,"OutputsWithoutMultisig"],[3,"Random1to10"],[3,"ArbitraryValidTransactionData"],[3,"AccountStatesVerifier"],[3,"UtxoVerifier"],[4,"Error"],[3,"UpdateProposalData"],[3,"LeaderPair"],[3,"HashSet"],[3,"HashMap"],[3,"Verify"],[3,"TestResult"],[3,"ArbitaryLedgerUtxo"],[3,"WalletCollection"],[3,"StakePool"],[3,"Wallet"],[3,"CommitteeMembersManager"],[3,"TxBuilderState"],[3,"SingleAccountBindingSignature"],[3,"GenesisPraosBlockBuilder"],[3,"BftBlockBuilder"],[3,"InitialFaultTolerantTxCertBuilder"],[3,"InitialFaultTolerantTxBuilder"],[8,"Payload"],[3,"SetTtl"],[3,"SetAuthData"],[3,"OldAddressBuilder"],[3,"StakePoolBuilder"],[3,"TestTx"],[3,"NoExtra"],[3,"Transaction"],[3,"TestTxBuilder"],[4,"WitnessMode"],[3,"WitnessesSlice"],[3,"TestTxCertBuilder"],[3,"FaultTolerantTxCertBuilder"],[3,"TokenName"],[4,"Error"],[8,"AsymmetricKey"],[3,"KeyPair"],[4,"Kind"],[3,"TransactionAuthData"],[3,"KeysDb"],[3,"TestCryptoGen"],[3,"RistrettoGroup2HashDh"],[6,"Crs"],[3,"ElectionPublicKey"],[3,"CommitteeMember"],[3,"TallyDecryptShare"],[3,"MemberSecretKey"],[3,"WalletTemplate"],[8,"Into"],[3,"ChaCha20Rng"],[3,"Choice"],[3,"ConfigBuilder"],[3,"LedgerBuilder"],[3,"UtxoDb"],[6,"UtxoDeclaration"],[3,"CommitteeId"],[3,"ScenarioBuilder"],[3,"ProposalDefBuilder"],[3,"StakePoolDefBuilder"],[3,"VotePlanDefBuilder"],[3,"WalletTemplateBuilder"],[3,"Controller"],[8,"FnMut"],[4,"ControllerError"],[3,"FragmentFactory"],[4,"ScenarioBuilderError"],[3,"StakePoolTemplate"],[3,"StakePoolDef"],[3,"StakePoolTemplateBuilder"],[8,"Arbitrary"],[8,"DeserializeFromSlice"],[3,"LedgerStateVerifier"],[3,"AccountVerifier"],[3,"PotsVerifier"],[3,"DistributionVerifier"],[3,"Info"],[3,"DelegationVerifier"],[3,"VotesVerifier"],[3,"StakePoolsVerifier"],[3,"StakePoolVerifier"],[15,"u128"],[4,"ParseError"],[3,"TokenNameTooLong"],[4,"FromHexError"],[3,"MintingPolicy"],[4,"MintingPolicyEntry"],[3,"PolicyHash"],[6,"TxBuilder"],[3,"SetWitnesses"],[4,"SetPayload"],[3,"SetIOs"],[4,"AccountBindingSignature"],[3,"TransactionSignData"],[3,"TransactionBindingAuthDataPhantom"],[4,"AccountIdentifier"],[6,"SpendingPublicKey"],[4,"InputEnum"],[4,"InputType"],[3,"InputOutputBuilder"],[4,"Error"],[4,"Balance"],[3,"InputOutput"],[4,"OutputPolicy"],[3,"PayloadAuthSlice"],[3,"TransactionSigningKey"],[3,"UnverifiedTransactionSlice"],[4,"TransactionStructError"],[3,"InputsSlice"],[3,"InputsWitnessesSlice"],[3,"TransactionStruct"],[3,"InputsIter"],[3,"OutputsIter"],[3,"WitnessesIter"],[3,"InputsWitnessesIter"],[3,"WitnessUtxoData"],[3,"WitnessAccountData"],[4,"WitnessUtxoVersion"],[3,"Treasury"],[3,"TransactionUnspents"],[4,"ReplaceError"],[4,"Infallible"],[3,"Values"],[3,"SplitValueIn"],[6,"Vote"],[3,"Range"],[3,"InvalidOptionsLength"],[3,"TryFromCommitteeIdError"],[3,"VotePlanLedger"],[3,"VotePlanManager"],[3,"ProposalManager"],[3,"TallyResult"],[4,"VoteError"],[4,"ValidatedPayload"],[3,"ValidatedVoteCast"],[4,"ProposalManagers"],[4,"IncrementalTally"],[4,"TallyError"],[3,"BallotVerificationError"],[3,"ProofOfCorrectVote"],[6,"ProofOfCorrectVote"],[3,"EncryptedVote"],[6,"EncryptedVote"],[4,"TryFromIntError"],[3,"Weight"],[4,"Tally"],[4,"PrivateTallyState"],[3,"EncryptedTally"],[13,"SpendingCredentialInvalid"],[13,"Full"],[13,"Public"],[13,"Private"],[13,"Treasury"],[13,"Parameters"],[13,"Private"],[3,"ExternalProposalDocument"],[13,"Praos"],[8,"ConfigParamVariant"],[13,"Linear"],[13,"Halving"],[8,"FeeAlgorithm"],[13,"SizeMismatch"],[3,"BftLeader"],[3,"GenesisLeader"],[13,"InvalidEpoch"],[13,"InvalidProofStructure"],[13,"InvalidProofValue"],[13,"ThresholdInvalid"],[13,"ThresholdNotMet"],[13,"TooManyOutputs"],[13,"RewardAdd"],[13,"TransferToRewards"],[4,"IterState"],[13,"AccountInvalidSignature"],[13,"WrongChainLength"],[13,"InvalidContentSize"],[13,"InvalidContentHash"],[13,"NonMonotonicDate"],[13,"PraosActiveSlotsCoeffInvalid"],[13,"PotValueInvalid"],[13,"UtxoValueNotMatching"],[13,"NotBalanced"],[13,"MultisigInvalidSignature"],[13,"UtxoInvalidSignature"],[13,"OldUtxoInvalidSignature"],[13,"OldUtxoInvalidPublicKey"],[13,"ZeroOutput"],[13,"OutputGroupInvalid"],[4,"IterState"],[13,"WrongValue"],[13,"AccountNotFound"],[13,"UtxoNotFound"],[13,"Account"],[3,"TestGen"],[3,"VoteTestGen"],[13,"UnknownWallet"],[13,"UnknownStakePool"],[13,"UnknownVotePlan"],[13,"UnknownVoteProposal"],[13,"NoOwnersForStakePool"],[13,"UndefinedValueForWallet"],[13,"NotBalanced"],[3,"VoteProposalStatus"],[13,"Public"],[13,"Private"],[13,"Encrypted"],[13,"Decrypted"],[13,"Public"],[13,"Private"],[13,"InvalidChoice"],[13,"InvalidValue"],[13,"PrivateVoteInvalidSize"],[13,"InvalidChoice"],[13,"NotVoteTime"],[13,"NotCommitteeTime"],[13,"InvalidVotePlan"],[13,"InvalidPayloadType"],[13,"InvalidVoteProposal"],[13,"CannotTallyVotes"],[13,"VotePlanVoteEndPassed"],[13,"VotePlanVoteStartStartedAlready"],[13,"VotePlanInsertionError"],[13,"VoteError"],[13,"Private"],[13,"Public"]]},\
"chain_network":{"doc":"","t":"RAAAAAAIQIQQQQIQIQQQGQQQAKKKAKKKKKAKKKAKKKKAKKKIQQQQQQKKKKKKKKKIQQKKIQKKQQQIKKKKKGAQQQIKKKCCCCCCCCCDCCCCMAMAAAMANDEDGDDNNAMAAAMFDLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLRDGLLLLLLLLLLLLLLLLLLLLLFFLLLLNEDNNLLLLLLLLMLLLLLLMLLLLLLLLDDGAAFDLLLLLLLLLLLLLLLLLLLLLLLRDGLLLLLLLLLLLLLLLLLLLLLFFLLLLDDGAMDDGLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLDMMLLLLLMLLLLDDDDLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLNNEDNENNNNNNNNNNNLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLCCCAAAAAAAWWWWWWWWWWWWWWWWWGDDGGLLLLLLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLLLLLLLLLLLLLIIQFFKFKDRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAADDDDDDFFFFFDDDDDDRRRRRRRRRRRDDDDDFFFFFFFFFFFFDDDMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMAMMAMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLNENNLLLLLLLLLLLLLLLLLWWWWWWWWWWWWWWWWDLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLQDDQDQDQDQDQDDIDDQDQDQDDDDDMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLKLLLLLLLLLLLLLLLLLKKKKKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKKKKMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLDDDDDFFRRRRRDDFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDFDRDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAWWWWDLLLLLLLLLMLLLLLLLLLLLLQDQDQDIDDMKLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMKKLLLLLLLLLLLLLLLLLLLLLLLDDGLLLLLLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLFLLLLLLLLLLLCAADIDDDFMMMMMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIDIDDDDDDFFMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCAAWWWWGDGGLLLLLMLLLLLLLLGDLLLLLMLLLLLLLLL","n":["PROTOCOL_VERSION","core","data","error","grpc","server","watch","BlockService","BlockService","FragmentService","FragmentService","GetBlocksStream","GetFragmentsStream","GetHeadersStream","GossipService","GossipService","Node","PullBlocksStream","PullBlocksToTipStream","PullHeadersStream","PushStream","SubscriptionStream","SubscriptionStream","SubscriptionStream","block","block_service","block_subscription","client_auth","fragment","fragment_service","fragment_subscription","get_blocks","get_fragments","get_headers","gossip","gossip_service","gossip_subscription","handshake","node","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push","push_headers","tip","upload_blocks","BlockService","GetBlocksStream","GetHeadersStream","PullBlocksStream","PullBlocksToTipStream","PullHeadersStream","SubscriptionStream","block_subscription","get_blocks","get_headers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","tip","upload_blocks","FragmentService","GetFragmentsStream","SubscriptionStream","fragment_subscription","get_fragments","GossipService","SubscriptionStream","gossip_subscription","peers","BlockService","FragmentService","GossipService","Node","block_service","client_auth","fragment_service","gossip_service","handshake","PushStream","server","BlockSubscriptionStream","SyncMultiverseStream","TipSubscriptionStream","Watch","block_subscription","sync_multiverse","tip_subscription","AuthenticatedNodeId","Block","BlockEvent","BlockId","BlockIds","Fragment","FragmentId","FragmentIds","Gossip","HandshakeResponse","Header","NodeId","NodeKeyPair","Peer","auth","block","block0_id","fragment","gossip","handshake","nonce","p2p","Announce","Block","BlockEvent","BlockId","BlockIds","ChainPullRequest","Header","Missing","Solicit","block","from","header","id","subscription","to","try_ids_from_iter","Block","as_bytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","from","from_bytes","from_message","into","into_bytes","into_message","into_request","to_owned","try_from","try_into","type_id","vzip","write_base32","Header","as_bytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","fmt","from","from_bytes","from_message","into","into_bytes","into_message","into_request","to_owned","try_from","try_into","type_id","vzip","write_base32","BLOCK_ID_LEN","BlockId","BlockIds","as_bytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","eq","equivalent","fmt","from","get_hash","hash","into","into_request","to_owned","try_from","try_from","try_ids_from_iter","try_ids_from_iter_desugared","try_into","type_id","vzip","write_base32","Announce","BlockEvent","ChainPullRequest","Missing","Solicit","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from_message","into","into","into_message","into_request","into_request","to","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Fragment","FragmentId","FragmentIds","fragment","id","try_ids_from_iter","Fragment","as_bytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","from","from_bytes","from_message","into","into_bytes","into_message","into_request","to_owned","try_from","try_into","type_id","vzip","write_base32","FRAGMENT_ID_LEN","FragmentId","FragmentIds","as_bytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","eq","equivalent","fmt","from","get_hash","hash","into","into_request","to_owned","try_from","try_from","try_ids_from_iter","try_ids_from_iter_desugared","try_into","type_id","vzip","write_base32","Gossip","Node","Nodes","node","nodes","Gossip","Node","Nodes","as_bytes","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","encode_hex","encode_hex_upper","from","from","from_bytes","from_message","from_message","into","into","into_bytes","into_message","into_request","into_request","nodes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","HandshakeResponse","auth","block0_id","borrow","borrow_mut","from","into","into_request","nonce","try_from","try_into","type_id","vzip","AuthenticatedNodeId","NodeId","NodeKeyPair","Peer","addr","addr","as_bytes","authenticated","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","generate","get_hash","get_hash","hash","hash","id","id","into","into","into","into","into_request","into_request","into_request","into_request","sign","signature","signature","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","Aborted","Canceled","Code","Error","FailedPrecondition","HandshakeError","Internal","InvalidArgument","InvalidBlock0","InvalidNodeId","MalformedSignature","NotFound","Rpc","Unavailable","Unimplemented","Unknown","UnsupportedVersion","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","code","code","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into_request","into_request","into_request","new","provide","provide","source","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unimplemented","vzip","vzip","vzip","Client","NodeService","Server","client","convert","legacy","proto","server","streaming","watch","","","","","","","","","","","","","","","","","","BlockSubscription","Builder","Client","FragmentSubscription","GossipSubscription","block_subscription","borrow","borrow","borrow_mut","borrow_mut","build","client_auth","clone","clone_into","connect","connect","default","fragment_subscription","from","from","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","inner","into","into","into_request","into_request","legacy_node_id","legacy_node_id","legacy_node_id","new","new","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","subscription_request","tip","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upload_blocks","vzip","vzip","FromProtobuf","IntoProtobuf","Message","error_from_grpc","error_into_grpc","from_message","ids_into_repeated_bytes","into_message","HexWrap","NODE_ID_LEN","NodeId","TryFromBytesError","as_bytes","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","encode","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","generate","get_hash","hash","into","into","into","into_request","into_request","into_request","provide","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","node","types","watch","BlockEvent","ClientAuthRequest","ClientAuthResponse","Gossip","HandshakeRequest","HandshakeResponse","Inner","Inner","Inner","Inner","Inner","PeersRequest","PeersResponse","PullBlocksRequest","PullBlocksToTipRequest","PullHeadersRequest","PushHeadersResponse","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","TipRequest","TipResponse","UploadBlocksResponse","block0","block_event","block_header","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","item","limit","node_client","node_id","node_id","node_server","nodes","nonce","nonce","peers","signature","signature","to","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Announce","Item","Missing","Solicit","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","","","","","","","","","","","","","","","","","NodeClient","accept_gzip","block_subscription","borrow","borrow_mut","client_auth","clone","clone_into","connect","fmt","fragment_subscription","from","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","inner","into","into_request","new","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","send_gzip","tip","to_owned","try_from","try_into","type_id","upload_blocks","vzip","with_interceptor","BlockSubscriptionStream","BlockSubscriptionSvc","ClientAuthSvc","FragmentSubscriptionStream","FragmentSubscriptionSvc","GetBlocksStream","GetBlocksSvc","GetFragmentsStream","GetFragmentsSvc","GetHeadersStream","GetHeadersSvc","GossipSubscriptionStream","GossipSubscriptionSvc","HandshakeSvc","Node","NodeServer","PeersSvc","PullBlocksStream","PullBlocksSvc","PullBlocksToTipStream","PullBlocksToTipSvc","PullHeadersStream","PullHeadersSvc","PushHeadersSvc","TipSvc","UploadBlocksSvc","_Inner","accept_compression_encodings","block_subscription","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","client_auth","clone","clone","clone_into","clone_into","fmt","fmt","fragment_subscription","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","peers","poll_ready","poll_ready","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","send_compression_encodings","tip","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upload_blocks","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_interceptor","Block","BlockIds","Fragment","FragmentIds","Header","Inner","Inner","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","content","content","content","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","ids","ids","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockSubscriptionRequest","Inner","MempoolSubscriptionRequest","STRUCT_NAME","ScalarWrapper","SyncMultiverseRequest","TipSubscriptionRequest","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","watch_client","watch_server","","","","","WatchClient","accept_gzip","block_subscription","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","new","send_gzip","sync_multiverse","tip_subscription","to_owned","try_from","try_into","type_id","vzip","with_interceptor","BlockSubscriptionStream","BlockSubscriptionSvc","SyncMultiverseStream","SyncMultiverseSvc","TipSubscriptionStream","TipSubscriptionSvc","Watch","WatchServer","_Inner","accept_compression_encodings","block_subscription","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","from","from","inner","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","sync_multiverse","tip_subscription","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_interceptor","Builder","NodeService","Server","block_service","block_subscription","borrow","borrow","borrow_mut","borrow_mut","build","client_auth","default","fmt","fragment_service","fragment_subscription","from","from","get_blocks","get_fragments","get_headers","gossip_service","gossip_subscription","handshake","inner","into","into","into_request","into_request","legacy_node_id","legacy_node_id","legacy_node_id","new","new","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","remote_addr_to_peer","subscription_response","tip","try_from","try_from","try_into","try_into","type_id","type_id","upload_blocks","vzip","vzip","InboundStream","inbound","outbound","InboundStream","InboundStreamMustNotImplDrop","__InboundStream","__InboundStreamProjection","__InboundStreamProjectionRef","__assert_not_repr_packed","__field0","__pin_project_use_generics","_phantom","_phantom","_phantom","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","inner","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","into_streaming_request","new","poll_next","project","project_ref","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","OutboundStream","OutboundStreamMustNotImplDrop","OutboundTryStream","OutboundTryStreamMustNotImplDrop","__OutboundStream","__OutboundStreamProjection","__OutboundStreamProjectionRef","__OutboundTryStream","__OutboundTryStreamProjection","__OutboundTryStreamProjectionRef","__assert_not_repr_packed","__assert_not_repr_packed","__field0","__field0","__pin_project_use_generics","__pin_project_use_generics","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","inner","inner","inner","inner","inner","inner","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","new","new","poll_discover","poll_discover","poll_next","poll_next","project","project","project_ref","project_ref","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Client","Server","client","server","","","","","BlockSubscription","Client","SyncMultiverseStream","TipSubscription","block_subscription","borrow","borrow_mut","connect","from","inner","into","into_request","sync_multiverse","tip_subscription","try_from","try_into","type_id","vzip","Server","WatchService","block_subscription","borrow","borrow_mut","fmt","from","inner","into","into_request","new","sync_multiverse","tip_subscription","try_from","try_into","type_id","vzip"],"q":[[0,"chain_network"],[5,"chain_network::core"],[7,"chain_network::core::server"],[47,"chain_network::core::server::block"],[63,"chain_network::core::server::fragment"],[68,"chain_network::core::server::gossip"],[72,"chain_network::core::server::node"],[81,"chain_network::core::server::push"],[82,"chain_network::core::watch"],[83,"chain_network::core::watch::server"],[90,"chain_network::data"],[112,"chain_network::data::block"],[128,"chain_network::data::block::block"],[152,"chain_network::data::block::header"],[177,"chain_network::data::block::id"],[207,"chain_network::data::block::subscription"],[236,"chain_network::data::fragment"],[242,"chain_network::data::fragment::fragment"],[266,"chain_network::data::fragment::id"],[296,"chain_network::data::gossip"],[301,"chain_network::data::gossip::node"],[338,"chain_network::data::handshake"],[351,"chain_network::data::p2p"],[428,"chain_network::error"],[494,"chain_network::grpc"],[504,"chain_network::grpc::client"],[573,"chain_network::grpc::convert"],[581,"chain_network::grpc::legacy"],[630,"chain_network::grpc::proto"],[633,"chain_network::grpc::proto::node"],[1007,"chain_network::grpc::proto::node::block_event"],[1028,"chain_network::grpc::proto::node::node_client"],[1079,"chain_network::grpc::proto::node::node_server"],[1306,"chain_network::grpc::proto::types"],[1433,"chain_network::grpc::proto::watch"],[1521,"chain_network::grpc::proto::watch::watch_client"],[1548,"chain_network::grpc::proto::watch::watch_server"],[1625,"chain_network::grpc::server"],[1675,"chain_network::grpc::streaming"],[1678,"chain_network::grpc::streaming::inbound"],[1734,"chain_network::grpc::streaming::outbound"],[1842,"chain_network::grpc::watch"],[1846,"chain_network::grpc::watch::client"],[1868,"chain_network::grpc::watch::server"]],"d":["Version of the protocol implemented by this crate.","","","","","","","Interface for the blockchain node service implementation …","The implementation of the block service.","Interface for the blockchain node service implementation …","The implementation of the fragment service.","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides headers in","Interface for the blockchain node service implementation …","The implementation of the gossip service.","Interface to application logic of the blockchain node …","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides headers in","Type alias for inbound stream objects passed to the …","The type of outbound asynchronous streams returned by the …","The type of outbound asynchronous streams returned by the …","The type of outbound asynchronous streams returned by the …","","Instantiates the block service, if supported by this node.","Called by the protocol implementation to establish a …","Handles client ID authentication.","","Instantiates the fragment service, if supported by this …","Called by the protocol implementation to establish a …","Serves a request to retrieve blocks identified by the list …","Serves a request to retrieve blocks identified by the list …","Serves a request to retrieve block headers identified by …","","Instantiates the gossip service, if supported by this node.","Called by the protocol implementation to establish a …","Implements node handshake. The server returns the ID of …","","","Stream all blocks from the given range.","Stream blocks from the first of the given starting points …","Get blocks, walking forward in a range between either of …","","Called by the protocol implementation to handle a stream …","Serves a request for the current blockchain tip. Resolves …","Called by the protocol implementation to handle a stream …","Interface for the blockchain node service implementation …","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides headers in","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides blocks in …","The type of an asynchronous stream that provides headers in","The type of outbound asynchronous streams returned by the …","Called by the protocol implementation to establish a …","Serves a request to retrieve blocks identified by the list …","Serves a request to retrieve block headers identified by …","Stream all blocks from the given range.","Stream blocks from the first of the given starting points …","Get blocks, walking forward in a range between either of …","Called by the protocol implementation to handle a stream …","Serves a request for the current blockchain tip. Resolves …","Called by the protocol implementation to handle a stream …","Interface for the blockchain node service implementation …","The type of an asynchronous stream that provides blocks in …","The type of outbound asynchronous streams returned by the …","Called by the protocol implementation to establish a …","Serves a request to retrieve blocks identified by the list …","Interface for the blockchain node service implementation …","The type of outbound asynchronous streams returned by the …","Called by the protocol implementation to establish a …","","The implementation of the block service.","The implementation of the fragment service.","The implementation of the gossip service.","Interface to application logic of the blockchain node …","Instantiates the block service, if supported by this node.","Handles client ID authentication.","Instantiates the fragment service, if supported by this …","Instantiates the gossip service, if supported by this node.","Implements node handshake. The server returns the ID of …","Type alias for inbound stream objects passed to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Announcement of a new block in the chain.","A block in the byte array representation.","An event sent from client to server over the block …","Network representation of a block ID.","","A request to send headers in the block chain sequence.","A block header in the byte array representation.","Request to push a chain of headers.","Request to upload the identified blocks.","","A list of starting points known by the requester. The …","","","","The identifier of the last block to send the header for.","","A block in the byte array representation.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","A block header in the byte array representation.","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Network representation of a block ID.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Announcement of a new block in the chain.","An event sent from client to server over the block …","A request to send headers in the block chain sequence.","Request to push a chain of headers.","Request to upload the identified blocks.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","A list of starting points known by the requester. The …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The identifier of the last block to send the header for.","","","","","","","","","A block fragment in the byte array representation.","Network representation of a fragment ID.","","","","","A block fragment in the byte array representation.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Network representation of a fragment ID.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A gossip node in an opaque byte array representation.","","","","","A gossip node in an opaque byte array representation.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","A node ID accompanied with a signature.","Identifier of a network peer.","The key pair used to authenticate a network node, …","","","","","Adds a signature given as a byte slice to produce an …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Generates a key pair using the provided random number …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Produces the node ID (i.e. the public key), authenticated …","","","","","","","","","","","","","","","","","","","","Verifies that the signature is correct for this node ID and","","","","","","","Common error codes for network protocol requests.","Represents errors that can be returned by the node …","","An error that the future returned by the <code>handshake</code> method …","","","","","","","Error occurred with the protocol request.","","","","The protocol version reported by the server is not …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Support for legacy features.","","","","","","","","","","","","","","","","","","","","","","The inbound subscription stream of block events.","Builder to customize the gRPC client.","","The inbound subscription stream of fragments.","The inbound subscription stream of P2P gossip.","Establishes a bidirectional stream of notifications for …","","","","","","","","","","","","Establishes a bidirectional stream for exchanging fragments","Returns the argument unchanged.","Returns the argument unchanged.","Requests the identified blocks in a streamed response.","Requests the identified fragments in a streamed response.","Requests the headers of the identified blocks in a …","Establishes a bidirectional stream for exchanging network …","Requests the identifier of the genesis block from the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Make the client add “node-id-bin” metadata with the …","","","","","One-off request for a list of peers known to the remote …","Stream blocks from the provided range.","Stream blocks from the first of the given starting points …","Requests headers of blocks in the blockchain’s …","The outbound counterpart of <code>pull_headers</code>, called in …","","Requests the header of the tip block in the node’s chain.","","","","","","","","Uploads blocks to the service in response to …","","","","","","","","","","","","","Represents a randomly generated node ID such as was …","","Get the node ID as a byte slice.","","","","","","","","","Get the wire format representation that was used (sigh) by …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Element of the subscription stream returned by …","Request message for method ClientAuth.","Response message for method ClientAuth.","Gossip message with information on nodes in the network.","Request message for method Handshake.","Response message for method Handshake.","","","","","","Request for peers","Responses as a bunch of peers, similar to Gossip","Request message for method PullBlocks","Request message for method PullBlocksToTip.","Request message for method PullHeaders. This message can …","Response message for method PushHeaders.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Request message for method Tip.","Response message for method Tip.","Response message for method UploadBlocks.","The identifier of the genesis block. This can be used by …","Nested message and enum types in <code>BlockEvent</code>.","Serialized content of the tip block header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The identifiers of blocks to consider as the starting …","The identifiers of blocks to consider as the starting …","The identifiers of blocks to consider as the starting …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Node ID of the server, the public key of a key pair.","Node ID of the client, the public key of a key pair.","Generated server implementations.","Serialized descriptions of nodes.","Nonce for the server to authenticate its node ID with.","Nonce for the client to authenticate its node ID with.","","Signature of the client’s nonce using the private key in …","Signature of the server’s nonce sent in …","The identifier of the end block.","The identifier of the end block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of the protocol implemented by the server.","","","","","","","","","","","","","","","","","","","","","Announcement of a new block, carrying the block’s header.","","Solicitation to push the chain of block headers with a …","Solicitation to upload identified blocks with an …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","Establishes a bidirectional stream to exchange information …","","","Optional authentication of the client node. Called after …","","","Attempt to create a new client by connecting to a given …","","Establishes a bidirectional stream to exchange information …","Returns the argument unchanged.","","","","Establishes a bidirectional stream to exchange information …","Initial handshake and authentication of the server node.","","Calls <code>U::from(self)</code>.","","","Requests for some peers","Requests blocks in the chain in the chronological order, …","","Requests headers of blocks in the chain in the …","Sends headers of blocks to the service in response to a …","Compress requests with <code>gzip</code>.","","","","","","Uploads blocks to the service in response to a <code>solicit</code> item","","","Server streaming response type for the BlockSubscription …","","","Server streaming response type for the …","","Server streaming response type for the GetBlocks method.","","Server streaming response type for the GetFragments method.","","Server streaming response type for the GetHeaders method.","","Server streaming response type for the GossipSubscription …","","","Generated trait containing gRPC methods that should be …","","","Server streaming response type for the PullBlocks method.","","Server streaming response type for the PullBlocksToTip …","","Server streaming response type for the PullHeaders method.","","","","","","","Establishes a bidirectional stream to exchange information …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional authentication of the client node. Called after …","","","","","","","Establishes a bidirectional stream to exchange information …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Establishes a bidirectional stream to exchange information …","Initial handshake and authentication of the server node.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Requests for some peers","","","Requests blocks in the chain in the chronological order, …","","Requests headers of blocks in the chain in the …","Sends headers of blocks to the service in response to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uploads blocks to the service in response to a <code>solicit</code> item","","","","","","","","","","","","","","","","","","","Representation of a block.","A sequence of block identifiers used in fetch requests and …","Representation of a block fragment, that is, a transaction …","A sequence of fragment identifiers used in fetch requests.","Representation of a block header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The serialized content of the block.","The serialized content of the block header.","The serialized content of the fragment.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The identifiers of blocks for loading.","The identifiers of fragments.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Block IDs to start synchronization from.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","Enable decompressing responses with <code>gzip</code>.","get a stream of blocks succesfully processed by the node, …","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Fetch all blocks from the blockchain storage that are …","get tip updates","","","","","","","Server streaming response type for the BlockSubscription …","","Server streaming response type for the SyncMultiverse …","","Server streaming response type for the TipSubscription …","","Generated trait containing gRPC methods that should be …","","","","get a stream of blocks succesfully processed by the node, …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Fetch all blocks from the blockchain storage that are …","get tip updates","","","","","","","","","","","","","","","","","","","","","","","","Builder to customize the gRPC server.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Make the server add “node-id-bin” metadata with the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The inbound subscription stream of block events.","","The inbound stream of blocks sent in response to a …","The inbound subscription stream of blockchain tip headers.","Establishes a subscription for blocks that have been …","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Establishes a subscription for tip change announcements by …","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,147,0,147,167,168,167,0,147,0,167,167,167,0,167,168,169,0,147,167,147,0,147,168,167,168,167,0,147,169,147,0,169,167,167,167,0,167,167,167,0,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,168,168,168,168,0,169,169,169,147,147,147,0,147,147,147,147,147,0,0,165,165,165,0,165,165,165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,0,73,0,0,0,73,0,36,0,0,0,0,0,0,36,36,0,37,0,0,0,37,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,14,14,14,14,36,0,0,36,36,36,37,36,37,36,37,36,37,37,36,36,37,36,36,37,37,36,37,36,37,36,37,36,37,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,40,40,40,40,0,0,0,0,12,0,0,0,41,41,41,12,41,12,41,41,41,41,41,41,12,41,41,12,12,12,41,41,12,12,41,12,41,12,41,12,41,12,41,12,41,41,0,73,73,73,73,73,73,73,73,73,73,73,73,0,0,0,0,2,2,45,45,8,2,46,45,8,2,46,45,2,46,45,2,46,45,2,45,2,45,2,2,46,45,8,2,2,46,46,45,45,46,2,45,2,45,8,8,8,2,46,45,8,2,46,45,46,8,8,2,46,45,2,8,2,46,45,45,8,2,46,45,8,2,46,45,8,8,2,46,45,52,52,0,0,52,0,52,52,53,53,53,52,53,52,52,52,53,52,17,53,52,17,53,52,52,17,17,52,52,52,17,17,53,53,52,17,17,53,52,17,53,52,17,53,17,17,53,17,53,17,52,17,53,52,17,53,52,17,53,52,17,53,17,52,17,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,64,59,64,59,64,59,59,59,64,59,64,59,64,59,59,59,59,59,59,59,64,59,64,59,64,64,59,64,59,59,59,59,59,59,59,59,59,64,59,64,59,64,59,59,64,59,0,0,170,0,0,152,0,170,0,0,0,0,74,75,74,76,75,74,76,74,74,74,74,74,75,74,76,76,75,74,76,76,74,74,74,75,74,76,75,74,76,76,74,76,75,74,74,76,75,74,76,75,74,76,75,74,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,0,84,79,80,81,82,83,84,85,43,91,86,92,87,93,88,94,89,90,42,95,38,79,80,81,82,83,84,85,43,91,86,92,87,93,88,94,89,90,42,95,38,79,80,81,82,83,84,85,43,86,87,88,89,90,42,38,79,80,81,82,83,84,85,43,86,87,88,89,90,42,38,79,80,81,82,83,84,85,43,86,87,88,89,90,42,38,79,80,81,82,83,84,85,43,86,87,88,89,90,42,38,79,80,81,82,83,84,85,43,86,87,88,89,90,42,38,79,80,81,82,83,84,85,43,86,87,88,89,90,42,38,79,80,81,82,83,84,85,43,91,86,92,87,93,88,94,89,90,42,95,38,79,80,81,82,83,84,85,43,91,86,92,87,93,88,94,89,90,42,95,38,86,87,88,79,80,81,82,83,84,85,43,91,86,92,87,93,88,94,89,90,42,95,38,79,80,81,82,83,84,85,43,91,86,92,87,93,88,94,89,90,42,95,38,38,85,0,80,81,0,42,79,80,43,80,81,86,88,79,80,81,82,83,84,85,43,86,87,88,89,90,42,38,79,80,81,82,83,84,85,43,91,86,92,87,93,88,94,89,90,42,95,38,79,80,81,82,83,84,85,43,91,86,92,87,93,88,94,89,90,42,95,38,79,80,81,82,83,84,85,43,91,86,92,87,93,88,94,89,90,42,95,38,80,79,80,81,82,83,84,85,43,91,86,92,87,93,88,94,89,90,42,95,38,96,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,112,0,0,112,0,112,0,112,0,112,0,112,0,0,0,0,0,112,0,112,0,112,0,0,0,0,0,128,112,130,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,128,112,130,128,130,128,130,128,112,130,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,112,112,112,112,112,128,130,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,128,112,128,128,112,112,112,112,128,112,130,128,130,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,112,130,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,32,39,106,133,107,134,26,32,39,106,133,107,134,26,32,39,106,107,26,32,39,106,107,26,32,39,106,107,26,32,39,26,32,39,106,107,26,32,39,106,107,26,32,39,106,107,26,32,39,106,133,107,134,26,32,39,106,133,107,134,106,107,26,32,39,106,133,107,134,26,32,39,106,133,107,134,26,32,39,106,107,26,32,39,106,133,107,134,26,32,39,106,133,107,134,26,32,39,106,133,107,134,26,32,39,106,133,107,134,0,0,0,0,0,0,0,135,136,137,138,139,135,136,137,138,139,135,136,137,138,135,136,137,138,135,136,137,138,135,136,137,138,135,136,137,138,135,136,137,138,135,136,137,138,139,135,136,137,138,139,138,135,136,137,138,139,135,136,137,138,139,135,136,137,138,135,136,137,138,139,135,136,137,138,139,135,136,137,138,139,135,136,137,138,139,0,0,0,0,0,0,0,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,141,0,141,0,141,0,0,0,0,145,141,146,142,143,144,145,146,142,143,144,145,142,143,144,145,145,146,145,146,145,146,145,146,142,143,144,145,145,146,142,143,144,145,146,142,143,144,145,145,145,145,145,141,141,146,145,146,142,143,144,145,146,142,143,144,145,146,142,143,144,145,146,142,143,144,145,145,0,0,0,148,148,149,148,149,148,149,148,149,148,148,148,149,148,148,148,148,148,148,148,148,149,148,149,148,149,149,148,149,148,148,148,148,148,148,0,148,148,149,148,149,148,149,148,148,149,148,0,0,0,0,0,0,0,0,0,171,171,153,154,71,153,154,171,71,153,154,171,71,153,154,171,71,153,154,71,153,154,171,71,153,154,171,71,71,71,71,71,71,153,154,171,71,153,154,171,71,71,153,154,171,71,153,154,171,71,0,0,0,0,0,0,0,0,0,0,0,0,172,173,172,173,157,159,172,155,158,160,173,151,157,159,172,155,158,160,173,151,157,159,172,155,158,160,173,151,157,159,155,158,160,151,157,159,172,155,158,160,173,151,157,159,172,155,158,160,173,151,155,151,155,151,155,151,155,151,155,151,155,151,157,159,172,155,158,160,173,151,157,159,172,155,158,160,173,151,155,151,157,159,172,155,158,160,173,151,157,159,172,155,158,160,173,151,0,0,0,0,0,0,0,0,0,0,0,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,0,0,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[2,[4,[3]]],[[7,[[6,[5]]]]]],[[2,8],[[7,[[6,[5]]]]]],0,[[],1],[[2,[4,[9]]],[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[11,[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],0,[[],1],[[2,[4,[12]]],[[7,[[6,[5]]]]]],[2,[[7,[[6,[5]]]]]],0,[13,[[7,[[6,[5]]]]]],[[10,14],[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[[10,14],[[7,[[6,[5]]]]]],0,[[[4,[3]]],[[7,[[6,[5]]]]]],[[],[[7,[[6,[5]]]]]],[[[4,[15]]],[[7,[[6,[5]]]]]],0,0,0,0,0,0,0,[[2,[4,[3]]],[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[[10,14],[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[[10,14],[[7,[[6,[5]]]]]],[[[4,[3]]],[[7,[[6,[5]]]]]],[[],[[7,[[6,[5]]]]]],[[[4,[15]]],[[7,[[6,[5]]]]]],0,0,0,[[2,[4,[9]]],[[7,[[6,[5]]]]]],[11,[[7,[[6,[5]]]]]],0,0,[[2,[4,[12]]],[[7,[[6,[5]]]]]],[13,[[7,[[6,[5]]]]]],0,0,0,0,[[],1],[[2,8],[[7,[[6,[5]]]]]],[[],1],[[],1],[2,[[7,[[6,[5]]]]]],0,0,0,0,0,0,[[],[[7,[[6,[5]]]]]],[10,[[7,[[6,[5]]]]]],[[],[[7,[[6,[5]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,[[18,[10,17]]]],0,[15],[15],[[],19],[[]],[[]],[[],[[18,[[22,[20,21]]]]]],[15,15],[[]],[[],[[24,[23]]]],[[],[[24,[23]]]],[[]],[[[25,[6]]],15],[26,[[18,[15,17]]]],[[]],[15,[[22,[27]]]],[15,26],[[],28],[[]],[[],18],[[],18],[[],29],[[]],[[],18],0,[3],[3],[[],19],[[]],[[]],[[],[[18,[[22,[20,21]]]]]],[3,3],[[]],[[],[[24,[23]]]],[[],[[24,[23]]]],[[3,30],31],[[]],[[[25,[6]]],3],[32,[[18,[3,17]]]],[[]],[3,[[22,[27]]]],[3,32],[[],28],[[]],[[],18],[[],18],[[],29],[[]],[[],18],0,0,0,[14],[14],[[],19],[[]],[[]],[[],[[18,[[22,[20,21]]]]]],[14,14],[[]],[[],[[24,[23]]]],[[],[[24,[23]]]],[[14,14],33],[[],33],[[14,30],31],[[]],[[],34],[14],[[]],[[],28],[[]],[[],18],[[],[[18,[14,17]]]],[16,[[18,[10,17]]]],[35,[[18,[10,17]]]],[[],18],[[],29],[[]],[[],18],0,0,0,0,0,[[]],[[]],[[]],[[]],[[36,30],31],[[37,30],31],[[]],[[]],0,[38,[[18,[36,17]]]],[[]],[[]],[36,38],[[],28],[[],28],0,[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[]],[[]],0,0,0,0,0,[16,[[18,[6,17]]]],0,[9],[9],[[],19],[[]],[[]],[[],[[18,[[22,[20,21]]]]]],[9,9],[[]],[[],[[24,[23]]]],[[],[[24,[23]]]],[[]],[[[25,[6]]],9],[39,[[18,[9,17]]]],[[]],[9,[[22,[27]]]],[9,39],[[],28],[[]],[[],18],[[],18],[[],29],[[]],[[],18],0,0,0,[40],[40],[[],19],[[]],[[]],[[],[[18,[[22,[20,21]]]]]],[40,40],[[]],[[],[[24,[23]]]],[[],[[24,[23]]]],[[40,40],33],[[],33],[[40,30],31],[[]],[[],34],[40],[[]],[[],28],[[]],[[],[[18,[40,17]]]],[[],18],[16,[[18,[6,17]]]],[35,[[18,[11,17]]]],[[],18],[[],29],[[]],[[],18],0,0,0,0,0,0,0,0,[41],[41],[[],19],[[]],[[]],[[]],[[]],[[],[[18,[[22,[20,21]]]]]],[41,41],[[]],[[],[[24,[23]]]],[[],[[24,[23]]]],[[]],[[]],[[[25,[6]]],41],[42,[[18,[12,17]]]],[43,[[18,[12,17]]]],[[]],[[]],[41,[[22,[27]]]],[12,42],[[],28],[[],28],0,[[]],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[]],[[]],[[],18],0,0,0,[[]],[[]],[[]],[[]],[[],28],0,[[],18],[[],18],[[],29],[[]],0,0,0,0,[2,44],0,[45],[45,[[18,[8,17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[46,46],[45,45],[[]],[[]],[[]],[[2,2],33],[[45,45],33],[[],33],[[],33],[[2,30],31],[[2,30],31],[[46,30],31],[[45,30],31],[[]],[[]],[44,2],[[]],[[[48,[47]]],46],[8,45],[[]],[[[0,[49,50]]],46],[[],34],[[],34],[2],[45],[8,45],0,[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[46,8],[8],0,[[]],[[]],[[]],[[],51],[[],18],[[],18],[[],18],[[],18],[[],[[18,[45,17]]]],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[],29],[[],29],[8,[[18,[17]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[52,52],[[]],[17,52],0,[[52,52],33],[[],33],[[52,30],31],[[17,30],31],[[17,30],31],[[53,30],31],[[53,30],31],[[]],[54,17],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[52,[25,[[6,[55]]]]],17],[56],[56],[17,[[1,[55]]]],[53,[[1,[55]]]],0,[[]],[[],51],[[],51],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[],29],[[],17],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[59,[[58,[57]]]],[0,[60,61,62]]],[[18,[63,17]]]],[[]],[[]],[[]],[[]],[[64,[58,[57]]],[[59,[[58,[57]]]]]],[[[59,[[58,[57]]]],8],[[18,[17]]]],[[[59,[65]]],[[59,[65]]]],[[]],[[64,[67,[66]]],[[18,[[59,[68]],69]]]],[[[67,[66]]],[[18,[[59,[68]],69]]]],[[],64],[[[59,[[58,[57]]]],[0,[60,61,62]]],[[18,[70,17]]]],[[]],[[]],[[[59,[[58,[57]]]],10],[[18,[[71,[26,15]],17]]]],[[[59,[[58,[57]]]],11],[[18,[[71,[39,9]],17]]]],[[[59,[[58,[57]]]],10],[[18,[[71,[32,3]],17]]]],[[[59,[[58,[57]]]],[0,[60,61,62]]],[[18,[72,17]]]],[[[59,[[58,[57]]]]],[[18,[73,53]]]],0,[[]],[[]],[[],28],[[],28],[[64,74],64],0,0,[[],64],[[[58,[57]]],[[59,[[58,[57]]]]]],[[[59,[[58,[57]]]],13],[[18,[12,17]]]],[[[59,[[58,[57]]]],10,14],[[18,[[71,[26,15]],17]]]],[[[59,[[58,[57]]]],10],[[18,[[71,[26,15]],17]]]],[[[59,[[58,[57]]]],10,14],[[18,[[71,[32,3]],17]]]],[[[59,[[58,[57]]]],[0,[60,61,62]]],[[18,[17]]]],[[[59,[[58,[57]]]]],28],[[[59,[[58,[57]]]]],[[18,[3,17]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[[59,[[58,[57]]]],[0,[60,61,62]]],[[18,[17]]]],[[]],[[]],0,0,0,[54,17],[17,54],[[],[[18,[17]]]],[16,[[22,[[22,[27]]]]]],[[]],0,0,0,0,[74],[[]],[[]],[[]],[[]],[[]],[[]],[74,74],[[]],[74,[[22,[27]]]],[[74,74],33],[[],33],[[75,30],31],[[74,30],31],[[76,30],31],[[76,30],31],[[]],[[]],[[]],[77,76],[[],[[18,[74,78]]]],[[],34],[74],[[]],[[]],[[]],[[],28],[[],28],[[],28],[56],[[]],[[],51],[[],18],[[],18],[[],[[18,[74,76]]]],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[],29],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79],[80],[81],[82],[83],[84],[85],[43],[86],[87],[88],[89],[90],[42],[38],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[43,43],[86,86],[87,87],[88,88],[89,89],[90,90],[42,42],[38,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],79],[[],80],[[],81],[[],82],[[],83],[[],84],[[],85],[[],43],[[],86],[[],87],[[],88],[[],89],[[],90],[[],42],[[],38],[79,19],[80,19],[81,19],[82,19],[83,19],[84,19],[85,19],[43,19],[86,19],[87,19],[88,19],[89,19],[90,19],[42,19],[38,19],[[79,79],33],[[80,80],33],[[81,81],33],[[82,82],33],[[83,83],33],[[84,84],33],[[85,85],33],[[43,43],33],[[86,86],33],[[87,87],33],[[88,88],33],[[89,89],33],[[90,90],33],[[42,42],33],[[38,38],33],[[79,30],31],[[80,30],31],[[81,30],31],[[82,30],31],[[83,30],31],[[84,30],31],[[85,30],31],[[43,30],31],[[91,30],31],[[86,30],31],[[92,30],31],[[87,30],31],[[93,30],31],[[88,30],31],[[94,30],31],[[89,30],31],[[90,30],31],[[42,30],31],[[95,30],31],[[38,30],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[96,96],[[]],[96],[96,19],[[96,96],33],[[96,30],31],[[]],[[]],[[],28],[[1,13,97,98],[[18,[99]]]],[[]],[[],18],[[],18],[[],29],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[100,[[58,[57]]]]],[[100,[[58,[57]]]]]],[[[100,[[58,[57]]]],101],[[18,[[103,[[102,[38]]]],54]]]],[[]],[[]],[[[100,[[58,[57]]]],[104,[81]]],[[18,[[103,[82]],54]]]],[[[100,[65]]],[[100,[65]]]],[[]],[[[67,[66]]],[[18,[[100,[68]],69]]]],[[[100,[105]],30],31],[[[100,[[58,[57]]]],101],[[18,[[103,[[102,[39]]]],54]]]],[[]],[[[100,[[58,[57]]]],[104,[106]]],[[18,[[103,[[102,[26]]]],54]]]],[[[100,[[58,[57]]]],[104,[107]]],[[18,[[103,[[102,[39]]]],54]]]],[[[100,[[58,[57]]]],[104,[106]]],[[18,[[103,[[102,[32]]]],54]]]],[[[100,[[58,[57]]]],101],[[18,[[103,[[102,[42]]]],54]]]],[[[100,[[58,[57]]]],[104,[79]]],[[18,[[103,[80]],54]]]],0,[[]],[[],28],[[[58,[57]]],[[100,[[58,[57]]]]]],[[[100,[[58,[57]]]],[104,[85]]],[[18,[[103,[43]],54]]]],[[[100,[[58,[57]]]],[104,[88]]],[[18,[[103,[[102,[26]]]],54]]]],[[[100,[[58,[57]]]],[104,[87]]],[[18,[[103,[[102,[26]]]],54]]]],[[[100,[[58,[57]]]],[104,[86]]],[[18,[[103,[[102,[32]]]],54]]]],[[[100,[[58,[57]]]],101],[[18,[[103,[89]],54]]]],[[[100,[[58,[57]]]]],[[100,[[58,[57]]]]]],[[[100,[[58,[57]]]],[104,[83]]],[[18,[[103,[84]],54]]]],[[]],[[],18],[[],18],[[],29],[[[100,[[58,[57]]]],101],[[18,[[103,[90]],54]]]],[[]],[[[109,[[108,[57]]]],110],[[100,[[111,[[109,[[108,[57]]]],110]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[28,[[102,[32]]]]],[[7,[[6,[5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[113,[112]],[28,[79]]]],[[[114,[112]],[28,[81]]]],[[[115,[112]],[28,[83]]]],[[[116,[112]],[28,[85]]]],[[[117,[112]],[28,[106]]]],[[[118,[112]],[28,[106]]]],[[[119,[112]],[28,[107]]]],[[[120,[112]],[28,[86]]]],[[[121,[112]],[28,[88]]]],[[[122,[112]],[28,[87]]]],[[[123,[112]],[28,[[102,[32]]]]]],[[[124,[112]],[28,[[102,[26]]]]]],[[[125,[112]],[28,[[102,[32]]]]]],[[[126,[112]],[28,[[102,[39]]]]]],[[[127,[112]],[28,[[102,[42]]]]]],[108],[[[128,[112]],[108,[[0,[129,61]]]]]],[[[28,[81]]],[[7,[[6,[5]]]]]],[[[130,[112]]],[[130,[112]]]],[[[128,[112]]],[[128,[112]]]],[[]],[[]],[[[130,[105]],30],31],[[[128,[[0,[105,112]]]],30],31],[[[28,[[102,[39]]]]],[[7,[[6,[5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[28,[106]]],[[7,[[6,[5]]]]]],[[[28,[107]]],[[7,[[6,[5]]]]]],[[[28,[106]]],[[7,[[6,[5]]]]]],[[[28,[[102,[42]]]]],[[7,[[6,[5]]]]]],[[[28,[79]]],[[7,[[6,[5]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[112,[[128,[112]]]],[[[28,[85]]],[[7,[[6,[5]]]]]],[[[128,[112]],131],[[132,[18]]]],[131,[[132,[18]]]],[[[28,[88]]],[[7,[[6,[5]]]]]],[[[28,[87]]],[[7,[[6,[5]]]]]],[[[28,[86]]],[[7,[[6,[5]]]]]],[[[28,[[102,[32]]]]],[[7,[[6,[5]]]]]],0,[[[28,[83]]],[[7,[[6,[5]]]]]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[[28,[[102,[26]]]]],[[7,[[6,[5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[112,110],[[111,[[128,[112]],110]]]],0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26],[32],[39],[106],[107],[26,26],[32,32],[39,39],[106,106],[107,107],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],26],[[],32],[[],39],[[],106],[[],107],[26,19],[32,19],[39,19],[106,19],[107,19],[[26,26],33],[[32,32],33],[[39,39],33],[[106,106],33],[[107,107],33],[[26,30],31],[[32,30],31],[[39,30],31],[[106,30],31],[[133,30],31],[[107,30],31],[[134,30],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[135],[136],[137],[138],[135,135],[136,136],[137,137],[138,138],[[]],[[]],[[]],[[]],[[],135],[[],136],[[],137],[[],138],[135,19],[136,19],[137,19],[138,19],[[135,135],33],[[136,136],33],[[137,137],33],[[138,138],33],[[135,30],31],[[136,30],31],[[137,30],31],[[138,30],31],[[139,30],31],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[[140,[[58,[57]]]]],[[140,[[58,[57]]]]]],[[[140,[[58,[57]]]],[104,[135]]],[[18,[[103,[[102,[26]]]],54]]]],[[]],[[]],[[[140,[65]]],[[140,[65]]]],[[]],[[[67,[66]]],[[18,[[140,[68]],69]]]],[[[140,[105]],30],31],[[]],0,[[]],[[],28],[[[58,[57]]],[[140,[[58,[57]]]]]],[[[140,[[58,[57]]]]],[[140,[[58,[57]]]]]],[[[140,[[58,[57]]]],[104,[138]]],[[18,[[103,[[102,[26]]]],54]]]],[[[140,[[58,[57]]]],[104,[136]]],[[18,[[103,[[102,[32]]]],54]]]],[[]],[[],18],[[],18],[[],29],[[]],[[[109,[[108,[57]]]],110],[[140,[[111,[[109,[[108,[57]]]],110]]]]]],0,0,0,0,0,0,0,0,0,0,[[[28,[135]]],[[7,[[6,[5]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[142,[141]],[28,[135]]]],[[[143,[141]],[28,[136]]]],[[[144,[141]],[28,[138]]]],[108],[[[145,[141]],[108,[[0,[129,61]]]]]],[[[146,[141]]],[[146,[141]]]],[[[145,[141]]],[[145,[141]]]],[[]],[[]],[[[146,[105]],30],31],[[[145,[[0,[105,141]]]],30],31],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[141,[[145,[141]]]],[[[145,[141]],131],[[132,[18]]]],[131,[[132,[18]]]],0,[[[28,[138]]],[[7,[[6,[5]]]]]],[[[28,[136]]],[[7,[[6,[5]]]]]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[141,110],[[111,[[145,[141]],110]]]],0,0,0,[[[148,[147]]],[[18,[54]]]],[[[148,[147]],[28,[[102,[32]]]]],[[7,[[6,[5]]]]]],[[]],[[]],[[]],[[]],[[149,147],[[150,[147]]]],[[[148,[147]],[28,[81]]],[[7,[[6,[5]]]]]],[[],149],[[[148,[105]],30],31],[[[148,[147]]],[[18,[54]]]],[[[148,[147]],[28,[[102,[39]]]]],[[7,[[6,[5]]]]]],[[]],[[]],[[[148,[147]],[28,[106]]],[[7,[[6,[5]]]]]],[[[148,[147]],[28,[107]]],[[7,[[6,[5]]]]]],[[[148,[147]],[28,[106]]],[[7,[[6,[5]]]]]],[[[148,[147]]],[[18,[54]]]],[[[148,[147]],[28,[[102,[42]]]]],[[7,[[6,[5]]]]]],[[[148,[147]],[28,[79]]],[[7,[[6,[5]]]]]],0,[[]],[[]],[[],28],[[],28],[[149,74],149],0,0,[[],149],[147,[[148,[147]]]],[[[148,[147]],[28,[85]]],[[7,[[6,[5]]]]]],[[[148,[147]],[28,[88]]],[[7,[[6,[5]]]]]],[[[148,[147]],[28,[87]]],[[7,[[6,[5]]]]]],[[[148,[147]],[28,[86]]],[[7,[[6,[5]]]]]],[[[148,[147]],[28,[[102,[32]]]]],[[7,[[6,[5]]]]]],[[[1,[44]]],[[18,[2,54]]]],[[[148,[147]]],[[103,[151]]]],[[[148,[147]],[28,[83]]],[[7,[[6,[5]]]]]],[[],18],[[],18],[[],18],[[],18],[[],29],[[],29],[[[148,[147]],[28,[[102,[26]]]]],[[7,[[6,[5]]]]]],[[]],[[]],0,0,0,0,0,0,0,0,[71],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[102,71],[[[7,[[71,[152]]]],131],[[132,[1]]]],[[[7,[71]]],153],[[[7,[71]]],154],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[7,131],[[132,[[1,[18]]]]]],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[155],[151],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],155],[[],151],[[7,131],[[132,[[1,[18]]]]]],[[7,131],[[132,[[1,[18]]]]]],[[[7,[[155,[60]]]],131],[[132,[1]]]],[[[7,[[151,[156]]]],131],[[132,[1]]]],[[[7,[155]]],157],[[[7,[151]]],158],[[[7,[155]]],159],[[[7,[151]]],160],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[7,131],[[132,[[1,[18]]]]]],[[7,131],[[132,[[1,[18]]]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[[161,[[58,[57]]]]],[[18,[162,17]]]],[[]],[[]],[[[67,[66]]],[[18,[[161,[68]],69]]]],[[]],0,[[]],[[],28],[[[161,[[58,[57]]]],16],[[18,[163,17]]]],[[[161,[[58,[57]]]]],[[18,[164,17]]]],[[],18],[[],18],[[],29],[[]],0,0,[[[166,[165]],[28,[135]]],[[7,[[6,[5]]]]]],[[]],[[]],[[[166,[105]],30],31],[[]],0,[[]],[[],28],[[],166],[[[166,[165]],[28,[138]]],[[7,[[6,[5]]]]]],[[[166,[165]],[28,[136]]],[[7,[[6,[5]]]]]],[[],18],[[],18],[[],29],[[]]],"c":[],"p":[[4,"Option"],[3,"Peer"],[3,"Header"],[6,"PushStream"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"AuthenticatedNodeId"],[3,"Fragment"],[6,"BlockIds"],[6,"FragmentIds"],[3,"Gossip"],[15,"u32"],[3,"BlockId"],[3,"Block"],[8,"IntoIterator"],[3,"Error"],[4,"Result"],[15,"usize"],[3,"u5"],[3,"Global"],[3,"Vec"],[15,"char"],[8,"FromIterator"],[8,"Into"],[3,"Block"],[15,"u8"],[3,"Request"],[3,"TypeId"],[3,"Formatter"],[6,"Result"],[3,"Header"],[15,"bool"],[15,"u64"],[8,"Iterator"],[4,"BlockEvent"],[3,"ChainPullRequest"],[3,"BlockEvent"],[3,"Fragment"],[3,"FragmentId"],[3,"Node"],[3,"Gossip"],[3,"PeersResponse"],[4,"SocketAddr"],[3,"NodeId"],[3,"NodeKeyPair"],[3,"Ed25519"],[3,"SecretKey"],[8,"RngCore"],[8,"CryptoRng"],[3,"String"],[4,"Code"],[4,"HandshakeError"],[3,"Status"],[8,"Error"],[3,"Demand"],[6,"BoxBody"],[8,"GrpcService"],[3,"Client"],[8,"Stream"],[8,"Send"],[8,"Sync"],[6,"BlockSubscription"],[3,"Builder"],[8,"Clone"],[3,"Endpoint"],[8,"TryInto"],[3,"Channel"],[3,"Error"],[6,"FragmentSubscription"],[3,"InboundStream"],[6,"GossipSubscription"],[3,"HandshakeResponse"],[3,"NodeId"],[3,"HexWrap"],[3,"TryFromBytesError"],[3,"TryFromSliceError"],[3,"Error"],[3,"HandshakeRequest"],[3,"HandshakeResponse"],[3,"ClientAuthRequest"],[3,"ClientAuthResponse"],[3,"TipRequest"],[3,"TipResponse"],[3,"PeersRequest"],[3,"PullHeadersRequest"],[3,"PullBlocksToTipRequest"],[3,"PullBlocksRequest"],[3,"PushHeadersResponse"],[3,"UploadBlocksResponse"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[4,"Item"],[4,"WireType"],[3,"DecodeContext"],[3,"DecodeError"],[3,"NodeClient"],[8,"IntoStreamingRequest"],[3,"Streaming"],[3,"Response"],[8,"IntoRequest"],[8,"Debug"],[3,"BlockIds"],[3,"FragmentIds"],[3,"Request"],[8,"Service"],[8,"Interceptor"],[3,"InterceptedService"],[8,"Node"],[3,"HandshakeSvc"],[3,"ClientAuthSvc"],[3,"TipSvc"],[3,"PeersSvc"],[3,"GetBlocksSvc"],[3,"GetHeadersSvc"],[3,"GetFragmentsSvc"],[3,"PullHeadersSvc"],[3,"PullBlocksSvc"],[3,"PullBlocksToTipSvc"],[3,"PushHeadersSvc"],[3,"UploadBlocksSvc"],[3,"BlockSubscriptionSvc"],[3,"FragmentSubscriptionSvc"],[3,"GossipSubscriptionSvc"],[3,"NodeServer"],[8,"Body"],[3,"_Inner"],[3,"Context"],[4,"Poll"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"BlockSubscriptionRequest"],[3,"TipSubscriptionRequest"],[3,"MempoolSubscriptionRequest"],[3,"SyncMultiverseRequest"],[3,"ScalarWrapper"],[3,"WatchClient"],[8,"Watch"],[3,"BlockSubscriptionSvc"],[3,"TipSubscriptionSvc"],[3,"SyncMultiverseSvc"],[3,"WatchServer"],[3,"_Inner"],[8,"Node"],[3,"NodeService"],[3,"Builder"],[6,"Server"],[3,"OutboundTryStream"],[8,"FromProtobuf"],[3,"__InboundStreamProjection"],[3,"__InboundStreamProjectionRef"],[3,"OutboundStream"],[8,"TryStream"],[3,"__OutboundStreamProjection"],[3,"__OutboundTryStreamProjection"],[3,"__OutboundStreamProjectionRef"],[3,"__OutboundTryStreamProjectionRef"],[3,"Client"],[6,"BlockSubscription"],[6,"SyncMultiverseStream"],[6,"TipSubscription"],[8,"Watch"],[3,"WatchService"],[8,"BlockService"],[8,"FragmentService"],[8,"GossipService"],[8,"IntoProtobuf"],[3,"__InboundStream"],[3,"__OutboundStream"],[3,"__OutboundTryStream"]]},\
"chain_path_derivation":{"doc":"BIP44 addressing","t":"DDEDDDDDNNNNNNNEEDDMAAAMMMMMAMMMMMDDDDDRRRRRRRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDEDDDNNNNERDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSDDDSSNNNEMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLMLLLLLLLLLLLLLLLLLLLMMMMDDRRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOFLLLLLLLLLLLLLLLLLLLL","n":["AnyScheme","Derivation","DerivationError","DerivationPath","DerivationPathRange","DerivationRange","HardDerivation","HardDerivationRange","InvalidDerivation","InvalidHardDerivation","InvalidNumberOfDerivations","InvalidSoftDerivation","NaN","NotValidDerivation","NotValidRoot","ParseDerivationError","ParseDerivationPathError","SoftDerivation","SoftDerivationRange","_marker","bip44","derivation","derivation_path","path","range","range","range","range","rindex","root","actual","expected","index","source","Account","Address","Bip44","Change","CoinType","INDEX_ACCOUNT","INDEX_ADDRESS","INDEX_CHANGE","INDEX_COIN_TYPE","INDEX_PURPOSE","PURPOSE_BIP44","PURPOSE_CHIMERIC","Purpose","Root","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","mk_from_str_dp_bip44","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Derivation","DerivationError","DerivationRange","HardDerivation","HardDerivationRange","InvalidDerivation","InvalidHardDerivation","InvalidSoftDerivation","NaN","ParseDerivationError","SOFT_DERIVATION_UPPER_BOUND","SoftDerivation","SoftDerivationRange","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_add","checked_add","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","default","deref","deref","deref","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","hash","hash","hash","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_hard_derivation","is_soft_derivation","len","len","len","max_value","max_value","max_value","min_value","min_value","min_value","new","new","new","new","new","new","new_unchecked","new_unchecked","next","next","next","next_back","next_back","next_back","overflowing_add","overflowing_add","overflowing_add","partial_cmp","partial_cmp","partial_cmp","provide","provide","range","range","range","saturating_add","saturating_add","saturating_add","saturating_sub","saturating_sub","saturating_sub","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wrapping_add","wrapping_add","wrapping_add","ACCOUNT","AnyScheme","DerivationPath","DerivationPathRange","EXTERNAL","INTERNAL","InvalidNumberOfDerivations","NotValidDerivation","NotValidRoot","ParseDerivationPathError","_marker","account","account","account","account","account","account","address","address","address","address","addresses","append_unchecked","bip44","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change","change","change","chimeric","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","coerce_unchecked","coin_type","coin_type","coin_type","coin_type","coin_type","default","default","deref","eq","eq","eq","external","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_iter","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","get_unchecked","hash","hash","hash","internal","into","into","into","into","into_iter","into_iter","into_iter","iter","len","new","new_empty","next","next_back","partial_cmp","partial_cmp","partial_cmp","path","provide","purpose","purpose","purpose","purpose","purpose","push","range","reward_account","root","source","sub_range","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","actual","expected","index","source","Account","Address","INDEX_ACCOUNT","INDEX_ADDRESS","Rindex","Root","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","hash","hash","hash","hash","into","into","into","into","mk_from_str_dp_rindex","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"chain_path_derivation"],[30,"chain_path_derivation::ParseDerivationPathError"],[34,"chain_path_derivation::bip44"],[155,"chain_path_derivation::derivation"],[336,"chain_path_derivation::derivation_path"],[466,"chain_path_derivation::derivation_path::ParseDerivationPathError"],[470,"chain_path_derivation::rindex"]],"d":["any derivation path scheme","a derivation value that can be used to derive keys","","a derivation path with a tagged scheme (for example <code>Bip44</code>).","","iterator to create derivation values","wrapper to guarantee the given derivation is a soft …","iterator to create derivation values","","","","","","","","","","wrapper to guarantee the given derivation is a soft …","iterator to create derivation values","","Bip44 derivation scheme","","","","","","","","Random Index scheme","","","","","","","","scheme for the Bip44 chain path derivation","","","","","","","","the BIP44 purpose (’44). This is the first item of the …","the Chimeric BIP44 purpose (’1852). This is the first …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","create a Bip44 chain path derivation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a derivation value that can be used to derive keys","","iterator to create derivation values","wrapper to guarantee the given derivation is a soft …","iterator to create derivation values","","","","","","the soft derivation is upper bounded, this is the value","wrapper to guarantee the given derivation is a soft …","iterator to create derivation values","","","","","","","","","","","","","","","","","checked integer addition. Computes <code>self + rhs</code>, returning …","checked integer addition. Computes <code>self + rhs</code>, returning …","checked integer addition. Computes <code>self + rhs</code>, returning …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","test if the given derivation is a hard derivation","test if the given derivation is a soft derivation","","","","returns the max derivation index value","returns the max derivation index value","returns the max derivation index value","returns the min derivation index value","returns the min derivation index value","returns the min derivation index value","create a new derivation with the given index","build a soft derivation from the given <code>Derivation</code>. If the …","build a hard derivation from the given <code>Derivation</code>. If the …","create a derivation range from the given range","create a SoftDerivation range from the given range","create a HardDerivation range from the given range","construct a soft derivation from the given derivation …","construct a hard derivation from the given derivation …","","","","","","","calculate <code>derivation + rhs</code>","calculate <code>self + rhs</code>","calculate <code>self + rhs</code>","","","","","","","","","saturating integer addition. Computes <code>self + rhs</code>, …","saturating integer addition. Computes <code>self + rhs</code>, …","saturating integer addition. Computes <code>self + rhs</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrapping (modular) addition. Computes <code>self + rhs</code>, wrapping …","Wrapping (modular) addition. Computes <code>self + rhs</code>, wrapping …","Wrapping (modular) addition. Computes <code>self + rhs</code>, wrapping …","","any derivation path scheme","a derivation path with a tagged scheme (for example <code>Bip44</code>).","","","","","","","","","","","","","See module documentation for more details","","See module documentation for more details","","","","build a range of addresses","create a new derivation path with appending the new …","","","","","","","","","","See module documentation for more details","","","use the same “model” of 5 derivation level but instead …","","","","","","","","","","","","","","add the next derivation level for the Bip44 chain path …","","","","","","","","See module documentation for more details","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","See module documentation for more details","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Iterate through every derivation indices of the given …","","","","","","","","","","","","","","","","","","See module documentation for more details","","","create a range of derivation path with the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,30,29,48,29,30,48,48,0,0,0,0,17,0,0,0,17,28,26,27,45,0,45,53,53,54,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,0,0,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,2,3,4,5,6,7,8,0,0,0,0,0,30,29,29,30,0,0,0,0,22,24,25,28,26,27,29,30,22,24,25,28,26,27,29,30,22,24,25,22,24,25,26,27,22,24,25,26,27,22,24,25,22,24,25,22,24,25,22,24,25,22,22,24,24,25,25,28,26,27,29,29,30,30,22,22,22,22,24,25,28,26,27,29,30,30,30,22,24,25,22,24,25,22,24,25,28,26,27,29,30,28,26,27,22,22,28,26,27,22,24,25,22,24,25,22,24,25,28,26,27,24,25,28,26,27,28,26,27,22,24,25,22,24,25,29,30,28,26,27,22,24,25,22,24,25,30,22,24,25,26,27,22,24,25,29,30,22,24,24,24,25,25,25,28,26,27,29,30,22,24,25,28,26,27,29,30,22,24,25,28,26,27,29,30,22,24,25,17,0,0,0,17,17,48,48,48,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,46,17,45,48,46,17,45,48,17,17,17,17,46,17,45,46,17,45,46,17,45,17,17,17,17,17,17,46,17,17,46,17,45,17,46,17,17,45,48,48,46,17,45,48,17,17,17,17,17,17,17,17,17,17,17,17,46,17,45,17,46,17,45,48,17,17,45,17,45,17,17,45,45,46,17,45,17,48,17,17,17,17,17,17,45,17,45,48,17,46,17,45,17,48,46,17,45,48,46,17,45,48,46,17,45,48,53,53,54,54,0,0,0,0,0,0,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,0,0,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41,42,43,44,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[9]],2],10],[[3,3],10],[[4,4],10],[[5,5],10],[[6,6],10],[[7,7],10],[[8,8],10],[[[2,[11]],2],12],[[3,3],12],[[4,4],12],[[5,5],12],[[6,6],12],[[7,7],12],[[8,8],12],[[[2,[13]],14],15],[[3,14],15],[[4,14],15],[[5,14],15],[[6,14],15],[[7,14],15],[[8,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[16]]]],[3],[4],[5],[6],[7],[8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[17,[[2,[3]]]]]],[[[2,[18]],2],[[19,[10]]]],[[3,3],[[19,[10]]]],[[4,4],[[19,[10]]]],[[5,5],[[19,[10]]]],[[6,6],[[19,[10]]]],[[7,7],[[19,[10]]]],[[8,8],[[19,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[22,23],[[19,[22]]]],[[24,23],[[19,[24]]]],[[25,23],[[19,[25]]]],[22,22],[24,24],[25,25],[26,26],[27,27],[[]],[[]],[[]],[[]],[[]],[[22,22],10],[[24,24],10],[[25,25],10],[[],22],[[],24],[[],25],[22],[24],[25],[[22,22],12],[[24,24],12],[[25,25],12],[[22,14],15],[[22,14],15],[[24,14],15],[[24,14],15],[[25,14],15],[[25,14],15],[[28,14],15],[[26,14],15],[[27,14],15],[[29,14],15],[[29,14],15],[[30,14],15],[[30,14],15],[25,22],[24,22],[[]],[23,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,30],[29,30],[32,[[20,[22]]]],[32,[[20,[24]]]],[32,[[20,[25]]]],[22],[24],[25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,12],[22,12],[28,33],[26,33],[27,33],[[],22],[[],24],[[],25],[[],22],[[],24],[[],25],[23,22],[22,[[20,[24,29]]]],[22,[[20,[25,29]]]],[[[36,[[0,[[34,[22]],35]]]]],28],[[[36,[[0,[[37,[24]],35]]]]],26],[[[36,[[0,[[37,[25]],35]]]]],27],[22,24],[22,25],[28,19],[26,19],[27,19],[28,19],[26,19],[27,19],[[22,23]],[[24,23]],[[25,23]],[[22,22],[[19,[10]]]],[[24,24],[[19,[10]]]],[[25,25],[[19,[10]]]],[38],[38],0,0,0,[[22,23],22],[[24,23],24],[[25,23],25],[[22,23],22],[[24,23],24],[[25,23],25],[30,[[19,[39]]]],[[]],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],20],[[],20],[22,[[20,[24]]]],[23,[[20,[24]]]],[23,[[20,[25]]]],[[],20],[22,[[20,[25]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[22,23],22],[[24,23],24],[[25,23],25],0,0,0,0,0,0,0,0,0,0,0,[[[17,[[2,[6]]]]],25],[[[17,[[42,[41]]]]],22],[[[17,[[42,[43]]]],22],[[17,[[42,[44]]]]]],[[[17,[[2,[7]]]]],25],[[[17,[[2,[5]]]],25],[[17,[[2,[6]]]]]],[[[17,[[2,[8]]]]],25],[[[17,[[2,[7]]]],24],[[17,[[2,[8]]]]]],[[[17,[[42,[41]]]]],22],[[[17,[[42,[44]]]],22],[[17,[[42,[41]]]]]],[[[17,[[2,[8]]]]],24],[[[17,[[2,[7]]]],[36,[[0,[[37,[24]],35]]]]],[[45,[[17,[[2,[8]]]],26,24]]]],[[17,22],17],[[[17,[[2,[3]]]]],[[17,[[2,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[17,[[2,[6]]]],24],[[17,[[2,[7]]]]]],[[[17,[[2,[8]]]]],24],[[[17,[[2,[7]]]]],24],[[[17,[[2,[3]]]]],[[17,[[2,[4]]]]]],[46,46],[17,17],[[[45,[1,[0,[47,1]],[0,[[34,[22]],1]]]]],[[45,[1,[0,[47,1]],[0,[[34,[22]],1]]]]]],[[]],[[]],[[]],[[46,46],10],[[17,17],10],[[[45,[9,[0,[47,9]],[0,[[34,[22]],9]]]],45],10],[17,17],[[[17,[[2,[5]]]]],25],[[[17,[[2,[7]]]]],25],[[[17,[[2,[8]]]]],25],[[[17,[[2,[4]]]],25],[[17,[[2,[5]]]]]],[[[17,[[2,[6]]]]],25],[[],46],[[],[[17,[46]]]],[17],[[46,46],12],[[17,17],12],[[[45,[11,[0,[47,11]],[0,[[34,[22]],11]]]],45],12],[[[17,[[2,[6]]]]],[[17,[[2,[7]]]]]],[[46,14],15],[[17,14],15],[[[17,[13]],14],15],[[[45,[13,[0,[47,13]],[0,[[34,[22]],13]]]],14],15],[[48,14],15],[[48,14],15],[[]],[[]],[[]],[[]],[49,[[17,[46]]]],[32,[[20,[[17,[[2,[3]]]]]]]],[32,[[20,[[17,[[2,[6]]]]]]]],[32,[[20,[[17,[[2,[7]]]]]]]],[32,[[20,[[17,[[2,[4]]]]]]]],[32,[[20,[[17,[[42,[43]]]]]]]],[32,[[20,[[17,[46]]]]]],[32,[[20,[[17,[[2,[5]]]]]]]],[32,[[20,[[17,[[2,[8]]]]]]]],[32,[[20,[[17,[[42,[41]]]]]]]],[32,[[20,[[17,[[42,[44]]]]]]]],[[17,33],22],[46],[17],[[[45,[16,[0,[47,16]],[0,[[34,[22]],16]]]]]],[[[17,[[2,[6]]]]],[[17,[[2,[7]]]]]],[[]],[[]],[[]],[[]],[17],[17],[[]],[17,[[50,[22]]]],[[[45,[[0,[47,51]],[34,[22]]]]],33],[[],[[17,[46]]]],[[],17],[[[45,[47,[34,[22]]]]],19],[[[45,[[0,[47,52]],[34,[22]]]]],19],[[46,46],[[19,[10]]]],[[17,17],[[19,[10]]]],[[[45,[18,[0,[47,18]],[0,[[34,[22]],18]]]],45],[[19,[10]]]],0,[38],[[[17,[[2,[6]]]]],25],[[[17,[[2,[7]]]]],25],[[[17,[[2,[5]]]]],25],[[[17,[[2,[4]]]]],25],[[[17,[[2,[8]]]]],25],[[17,22]],0,[[[17,[[2,[6]]]]],[[17,[[2,[7]]]]]],0,[48,[[19,[39]]]],[[17,47],[[45,[47,[34,[22]]]]]],[[]],[[]],[[]],[[],40],[[],40],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[42,[1]]],[[42,[1]]]],[43,43],[44,44],[41,41],[[]],[[]],[[]],[[]],[[[42,[9]],42],10],[[43,43],10],[[44,44],10],[[41,41],10],[[[42,[11]],42],12],[[43,43],12],[[44,44],12],[[41,41],12],[[[42,[13]],14],15],[[43,14],15],[[44,14],15],[[41,14],15],[[]],[[]],[[]],[[]],[[[42,[16]]]],[43],[44],[41],[[]],[[]],[[]],[[]],0,[[],[[17,[[42,[43]]]]]],[[[42,[18]],42],[[19,[10]]]],[[43,43],[[19,[10]]]],[[44,44],[[19,[10]]]],[[41,41],[[19,[10]]]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21]],"c":[],"p":[[8,"Clone"],[3,"Bip44"],[3,"Root"],[3,"Purpose"],[3,"CoinType"],[3,"Account"],[3,"Change"],[3,"Address"],[8,"Ord"],[4,"Ordering"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Hash"],[3,"DerivationPath"],[8,"PartialOrd"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"Derivation"],[15,"u32"],[3,"SoftDerivation"],[3,"HardDerivation"],[3,"SoftDerivationRange"],[3,"HardDerivationRange"],[3,"DerivationRange"],[4,"DerivationError"],[4,"ParseDerivationError"],[3,"ParseIntError"],[15,"str"],[15,"usize"],[8,"Into"],[8,"Copy"],[8,"RangeBounds"],[8,"TryInto"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"Address"],[3,"Rindex"],[3,"Root"],[3,"Account"],[3,"DerivationPathRange"],[3,"AnyScheme"],[8,"Iterator"],[4,"ParseDerivationPathError"],[8,"IntoIterator"],[3,"Iter"],[8,"ExactSizeIterator"],[8,"DoubleEndedIterator"],[13,"InvalidNumberOfDerivations"],[13,"NotValidDerivation"]]},\
"chain_ser":{"doc":"","t":"AAANNEDDNNNENNNNNNNLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMIINNNNEINNNNELLLLKKLLLLLLLLLLLLLLKLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLL","n":["abor","deser","packer","Array","Bytes","DecodeError","Decoder","Encoder","EndOfStream","StreamPending","StreamTooSmall","Tag","TypeMismatch","TypeUnknown","U128","U16","U32","U64","U8","array","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","clone","clone","clone_into","clone_into","current_element","data","default","end","eq","expect_size","expect_tag","expect_tag_size","finalize","fmt","fmt","from","from","from","from","from_u8","hole","incr","into","into","into","into","new","new","pop","push_byte","push_slice","push_tag","slice","struct_end","struct_start","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","u128","u128","u16","u16","u32","u32","u64","u64","u8","u8","expected","got","has","left","want","Deserialize","DeserializeFromSlice","InvalidData","IoError","IoError","NotEnoughBytes","ReadError","Serialize","SizeTooBig","StructureInvalid","UnconsumedData","UnknownTag","WriteError","borrow","borrow","borrow_mut","borrow_mut","deserialize","deserialize_from_slice","deserialize_validate","deserialize_validate_from_slice","fmt","fmt","fmt","fmt","from","from","from","from","into","into","provide","provide","serialize","serialize_as_vec","serialized_size","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Codec","borrow","borrow_mut","bytes_left","copy_to_slice","from","get_be_u128","get_be_u16","get_be_u32","get_be_u64","get_bytes","get_le_u128","get_le_u16","get_le_u32","get_le_u64","get_nz_u32","get_nz_u64","get_slice","get_u8","has_bytes_left","i128_size","i16_size","i32_size","i64_size","i8_size","inner","into","into_inner","new","position","put_be_u128","put_be_u16","put_be_u32","put_be_u64","put_bytes","put_le_u128","put_le_u16","put_le_u32","put_le_u64","put_u8","read_to_end","set_position","skip_bytes","try_from","try_into","type_id","u128_size","u16_size","u32_size","u64_size","u8_size"],"q":[[0,"chain_ser"],[3,"chain_ser::abor"],[89,"chain_ser::abor::DecodeError"],[94,"chain_ser::deser"],[140,"chain_ser::packer"]],"d":["","","Tooling for packing and unpacking from streams","","","","Create a decoder on some data","ABOR Encoder","","","","ABOR Types","","","","","","","","","","","","","","","","","","cannot serialize more than 256 bytes of contiguous data","","","","","","","","","","","","","Finalize the encoder into an immutable array of data","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Terminate an array","Array cannot contain more than 256 elements","","","","","","","","","","","","","","","","Add a 128-bit unsigned value in little endian format","","Add a 16-bit unsigned value in little endian format","","Add a 32-bit unsigned value in little endian format","","Add a 64-bit unsigned value in little endian format","","Add an unsigned byte","","","","","","Define that an object that can be read from an …","Define that an object can be read from a byte slice. This …","","","","","","Define that an object can be written to an <code>std::io::Write</code> …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Convenience method to serialize into a byte vector.","Default implementation, not efficient, not recommended to …","","","","","","","","","","","The structure to support (de)serialization of binary data …","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,7,7,0,0,0,3,3,3,0,3,3,7,7,7,7,7,1,1,6,7,3,1,6,7,3,1,6,7,3,7,3,6,6,6,1,7,1,1,1,6,7,3,1,6,7,3,7,6,6,1,6,7,3,1,6,1,6,6,6,1,6,6,7,3,1,6,7,3,1,6,7,3,1,6,7,3,1,6,1,6,1,6,1,6,1,6,31,31,32,33,32,0,0,19,19,20,19,0,0,19,19,19,19,0,19,20,19,20,34,35,34,35,19,19,20,20,19,19,20,20,19,20,19,20,36,36,36,19,20,19,20,19,20,19,20,19,20,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[4,[5,3]]]],[6,6],[7,7],[3,3],[[]],[[]],0,0,[[],6],[1,[[4,[3]]]],[[7,7],8],[[1,2],[[4,[3]]]],[[1,7],[[4,[3]]]],[[1,7,2],[[4,[3]]]],[6,5],[[7,9],10],[[3,9],10],[[]],[[]],[[]],[[]],[11,[[12,[7]]]],0,[6,6],[[]],[[]],[[]],[[]],[[],1],[[],6],[1,[[4,[11,3]]]],[[6,11],6],[6,6],[[6,7],6],0,[6,6],[6,6],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],13],[[],13],[[],13],[[],13],[1,[[4,[14,3]]]],[[6,14],6],[1,[[4,[15,3]]]],[[6,15],6],[1,[[4,[16,3]]]],[[6,16],6],[1,[[4,[17,3]]]],[[6,17],6],[1,[[4,[11,3]]]],[[6,11],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[18,[[4,[19]]]],[18,[[4,[19]]]],[18,[[4,[19]]]],[18,[[4,[19]]]],[[19,9],10],[[19,9],10],[[20,9],10],[[20,9],10],[21,19],[[]],[21,20],[[]],[[]],[[]],[22],[22],[18,[[4,[20]]]],[[],[[4,[[23,[11]],20]]]],[[],2],[19,[[12,[24]]]],[20,[[12,[24]]]],[[],25],[[],25],[[],4],[[],4],[[],4],[[],4],[[],13],[[],13],0,[[]],[[]],[18,2],[[[18,[26]]],[[4,[19]]]],[[]],[[[18,[26]]],[[4,[14,19]]]],[[[18,[26]]],[[4,[15,19]]]],[[[18,[26]]],[[4,[16,19]]]],[[[18,[26]]],[[4,[17,19]]]],[[[18,[26]],2],[[4,[[23,[11]],19]]]],[[[18,[26]]],[[4,[14,19]]]],[[[18,[26]]],[[4,[15,19]]]],[[[18,[26]]],[[4,[16,19]]]],[[[18,[26]]],[[4,[17,19]]]],[[[18,[26]]],[[4,[27,19]]]],[[[18,[26]]],[[4,[28,19]]]],[[18,2],[[4,[19]]]],[[[18,[26]]],[[4,[11,19]]]],[18,8],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[18],[[],18],[[[18,[29]]],2],[[[18,[30]],14],[[4,[20]]]],[[[18,[30]],15],[[4,[20]]]],[[[18,[30]],16],[[4,[20]]]],[[[18,[30]],17],[[4,[20]]]],[[[18,[30]]],[[4,[20]]]],[[[18,[30]],14],[[4,[20]]]],[[[18,[30]],15],[[4,[20]]]],[[[18,[30]],16],[[4,[20]]]],[[[18,[30]],17],[[4,[20]]]],[[[18,[30]],11],[[4,[20]]]],[[[18,[26]],23],[[4,[2,19]]]],[[[18,[29]],2]],[[18,2]],[[],4],[[],4],[[],13],[[],2],[[],2],[[],2],[[],2],[[],2]],"c":[],"p":[[3,"Decoder"],[15,"usize"],[4,"DecodeError"],[4,"Result"],[3,"Box"],[3,"Encoder"],[4,"Tag"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u8"],[4,"Option"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"Codec"],[4,"ReadError"],[4,"WriteError"],[3,"Error"],[3,"Demand"],[3,"Vec"],[8,"Error"],[3,"String"],[8,"Read"],[3,"NonZeroU32"],[3,"NonZeroU64"],[3,"Cursor"],[8,"Write"],[13,"TypeMismatch"],[13,"StreamTooSmall"],[13,"StreamPending"],[8,"Deserialize"],[8,"DeserializeFromSlice"],[8,"Serialize"]]},\
"chain_storage":{"doc":"Block storage crate.","t":"NDNNNNDNNNEENNNNNNDNDNMAMAMMMMMAMMMMAMMMAMMMMAMADLLLLLMLLLLLLLLMLLLLMLMLLLLMLLLLDNNNEMLLFMLLLLMFFMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLMLLFLFFMMLALLLLLLMMRRRRRRNNNNNNNNEENNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENDNMMLLLLLLLLLLLLFLLLLLLLMMLLLLLLMMMMDLMMLLMLLLLLLLLLLLLLLLLLLMLLLLDDHLLLLMLLLLLMLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLNNDENLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLL","n":["BlockAlreadyPresent","BlockInfo","BlockInfo","BlockInfoDeserialize","BlockInfoSerialize","BlockNotFound","BlockStore","BranchNotFound","CannotIterate","ChainLength","ConsistencyFailure","Error","Inconsistent","MissingParent","MissingParentBlock","MissingPermanentBlock","Open","PermanentBackendError","StorageIterator","TaggedBlock","Value","VolatileBackendError","_db","block_info","block_info","block_store","blocks","blocks_tree","branches_tips_tree","chain_length","chain_length_index_tree","error","id","id_length","info_tree","inner","iterator","parent_id","parent_ref_count","permanent","permanent_store","root_id","state","tags_ref_count","tags_tree","test_utils","to","value","BlockInfo","add_parent_ref","add_tag_ref","borrow","borrow_mut","chain_length","chain_length","clone","clone_into","deref","deref_mut","deserialize","drop","from","id","id","init","into","new","parent_id","parent_id","parent_ref_count","parent_ref_count","ref_count","remove_parent_ref","remove_tag_ref","serialize","tags_ref_count","to_owned","try_from","try_into","type_id","BlockStore","Done","HitPermanentStore","NextTip","RemoveTipResult","_db","block_exists","block_exists_volatile","block_id_from_chain_length_index","blocks_tree","borrow","borrow","borrow_mut","borrow_mut","branches_tips_tree","build_chain_length_index","build_chain_length_index_prefix","chain_length_index_tree","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","file","find_lowest_common_ancestor","flush_to_permanent_store","from","from","get_block","get_block_info","get_block_info_volatile","get_blocks_by_chain_length","get_nth_ancestor","get_tag","get_tips_ids","id_length","info_tree","init","init","into","into","is_ancestor","iter","memory","new","permanent","prune_branch","put_block","put_block_impl","put_tag","put_tag_impl","remove_tip_impl","root_id","tags_tree","to_owned","tree","try_from","try_from","try_into","try_into","type_id","type_id","id","id","BLOCKS","BRANCHES_TIPS","CHAIN_LENGTH_INDEX","INFO","PERMANENT_STORE_BLOCKS","TAGS","BlockAlreadyPresent","BlockInfo","BlockInfoDeserialize","BlockInfoSerialize","BlockNotFound","BranchNotFound","CannotIterate","ChainLength","ConsistencyFailure","Error","Inconsistent","MissingParent","MissingParentBlock","MissingPermanentBlock","Open","PermanentBackendError","TaggedBlock","VolatileBackendError","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","into","into","provide","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","IteratorState","Permanent","StorageIterator","Volatile","block_info","blocks","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","gather_blocks_ids","init","init","into","into","into_iter","new","next","state","to","try_from","try_from","try_into","try_into","type_id","type_id","current_length","ids","iter","stop_at_length","PermanentStore","block_id_index","block_id_index","blocks","borrow","borrow_mut","chain_length_index","clone","clone_into","contains_key","deref","deref_mut","drop","file","from","get_block","get_block_by_chain_length","get_block_info","get_block_info_by_chain_length","get_chain_length","init","into","iter","memory","put_blocks","root_id","to_owned","try_from","try_into","type_id","Block","BlockId","GLOBAL_ID_COUNTER","borrow","borrow","borrow_mut","borrow_mut","chain_length","clone","clone","clone_into","clone_into","cmp","data","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fmt","fmt","from","from","generate","genesis","hash","id","init","init","into","into","make_child","parent","partial_cmp","serialize","serialize","serialize_as_value","serialize_as_value","serialize_as_vec","serialize_as_vec","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Owned","Permanent","Value","ValueImpl","Volatile","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","fmt","fmt","from","from","from","from","hash","init","init","inner","into","into","owned","permanent","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","volatile"],"q":[[0,"chain_storage"],[48,"chain_storage::block_info"],[80,"chain_storage::block_store"],[145,"chain_storage::block_store::RemoveTipResult"],[147,"chain_storage::block_store::tree"],[153,"chain_storage::error"],[206,"chain_storage::iterator"],[240,"chain_storage::iterator::IteratorState"],[244,"chain_storage::permanent_store"],[274,"chain_storage::test_utils"],[325,"chain_storage::value"]],"d":["","A structure that holds the information about a blocks, …","","","","","","","","","","","","","","","","","Iterator over blocks. Starts from n-th ancestor of the …","","Wrapper for data held by the database. This wrapper holds …","","","","","","","","","","","","","","","","","","","","","","","","","Utilities for testing the storage.","","","A structure that holds the information about a blocks, …","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Check if the block with the given id exists.","","","","","","","","","","","","","","","","","","","","Create a new storage handle. The path must not exist or …","Find the lowest common ancestor block (commonly referred …","Move all blocks up to the provided block ID to the …","Returns the argument unchanged.","Returns the argument unchanged.","Get a block from the storage.","Get the <code>BlockInfo</code> instance for the requested block.","","Get multiple serialized blocks from the given chain …","Get n-th (n = <code>distance</code>) ancestor of the block, identified …","Get the block ID for the given tag.","Get identifier of all branches tips.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determine whether block identified by <code>ancestor_id</code> is an …","Iterate to the given block starting from the block at the …","Open a temporary in-memory database.","","","Prune a branch with the given tip id from the storage.","Write a block to the store. The parent of the block must …","","Add a tag for a given block. The block id can be later …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Iterator over blocks. Starts from n-th ancestor of the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Used to generate block ids","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Wrapper for data held by the database. This wrapper holds …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[7,0,27,7,7,7,0,7,7,27,0,0,7,7,27,27,7,7,0,27,0,7,12,0,35,0,35,12,12,1,12,0,1,12,12,5,0,1,1,12,0,12,35,1,12,0,35,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,24,24,24,0,12,12,12,0,12,24,12,24,12,12,0,0,12,12,12,24,12,24,12,24,12,12,12,12,24,12,12,12,12,12,12,12,12,12,12,24,12,24,12,12,12,12,12,12,12,12,0,12,0,0,12,12,12,0,24,12,24,12,24,12,46,47,0,0,0,0,0,0,7,27,7,7,7,7,7,27,0,0,7,7,27,27,7,7,27,7,7,27,7,27,7,27,7,27,7,27,7,7,27,27,7,7,7,7,7,27,7,27,7,27,7,27,7,7,27,7,27,7,27,7,27,0,48,0,48,35,35,35,48,35,48,35,48,35,48,35,48,35,48,0,35,48,35,48,35,35,35,35,35,35,48,35,48,35,48,49,50,49,49,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,37,38,37,38,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,38,38,37,37,38,37,38,37,38,37,38,37,38,37,38,37,38,43,43,0,0,43,5,43,5,43,5,43,5,43,5,43,5,43,5,43,5,5,43,5,43,5,5,5,5,43,5,5,43,5,5,5,43,5,43,5,43,5,43,5,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[[]],[[]],[1,2],0,[1,1],[[]],[3],[3],[[4,3,[6,[5]]],[[8,[1,7]]]],[3],[[]],[1,5],0,[[],3],[[]],[[[6,[5]],[6,[5]],2],1],[1,5],0,[1,2],0,[1,2],[1],[1],[1,[[8,[[10,[9]],7]]]],0,[[]],[[],8],[[],8],[[],11],0,0,0,0,0,0,[12,[[8,[13,7]]]],[12,[[8,[13,7]]]],[[]],0,[[]],[[]],[[]],[[]],0,[2,[[10,[9]]]],[2,[[10,[9]]]],0,[12,12],[[]],[3],[3],[3],[3],[3],[3],[[[15,[14]],[0,[[6,[5]],16]]],[[8,[12,7]]]],[12,[[8,[[17,[1]],7]]]],[[12,3],[[8,[3,7]]]],[[]],[[]],[12,[[8,[5,7]]]],[12,[[8,[1,7]]]],[12,[[8,[1,7]]]],[[12,2],[[8,[[10,[5]],7]]]],[[12,2],[[8,[1,7]]]],[[12,18],[[8,[[17,[5]],7]]]],[12,[[8,[[10,[5]],7]]]],0,0,[[],3],[[],3],[[]],[[]],[12,[[8,[[17,[2]],7]]]],[[12,2],[[8,[19,7]]]],[[[0,[[6,[5]],16]]],[[8,[12,7]]]],[[[6,[5]],20,21],[[8,[12,7]]]],0,[12,[[8,[7]]]],[[12,1],[[8,[7]]]],[[22,22,22,22,1,3,13],[[8,[[23,[7]]]]]],[[12,18],[[8,[7]]]],[[22,22,22,18,3],[[8,[[23,[7]]]]]],[[22,22,22,22,22,3],[[8,[24,[23,[7]]]]]],0,0,[[]],0,[[],8],[[],8],[[],8],[[],8],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[3],[3],[3],[3],[3],[3],[[7,25],26],[[7,25],26],[[27,25],26],[[27,25],26],[28,7],[27,7],[[[29,[7]]],7],[30,7],[[]],[[]],[[],3],[[],3],[[]],[[]],[31],[31],[7,[[17,[32]]]],[[],33],[[],33],[[],8],[[],8],[[],8],[[],8],[[],11],[[],11],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[3],[3],[3],[3],[3],[3],[[]],[[]],[[5,34,2],[[8,[[10,[5]],7]]]],[[],3],[[],3],[[]],[[]],[[]],[[5,2,21,34,34],[[8,[35,7]]]],[35,17],0,0,[[],8],[[],8],[[],8],[[],8],[[],11],[[],11],0,0,0,0,0,[21,34],0,0,[[]],[[]],0,[21,21],[[]],[21,[[8,[13,7]]]],[3],[3],[3],[[[15,[14]],34,[6,[5]]],[[8,[21,7]]]],[[]],[21,[[8,[[17,[5]],7]]]],[[21,2],[[17,[5]]]],[21,[[8,[[17,[1]],7]]]],[[21,2],[[8,[[17,[1]],7]]]],[21,[[8,[[17,[2]],7]]]],[[],3],[[]],[[21,2],[[8,[36,7]]]],[[34,[6,[5]]],[[8,[21,7]]]],[[21,2],[[8,[7]]]],0,[[]],[[],8],[[],8],[[],11],0,0,0,[[]],[[]],[[]],[[]],0,[37,37],[38,38],[[]],[[]],[[37,37],39],0,[3],[3],[3],[3],[3],[3],[[37,37],13],[[38,38],13],[[37,25],26],[[38,25],26],[[]],[[]],[[],37],[[[17,[40]]],38],[37],0,[[],3],[[],3],[[]],[[]],[[38,[17,[40]]],38],0,[[37,37],[[17,[39]]]],[[37,41],[[8,[42]]]],[[38,41],[[8,[42]]]],[37,5],[38,5],[37,[[10,[9]]]],[38,[[10,[9]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],11],[[],11],0,0,0,0,0,[5],[[]],[[]],[[]],[[]],[43,43],[5,5],[[]],[[]],[3],[3],[3],[3],[3],[3],[[5,5],13],[[43,25],26],[[5,25],26],[[]],[[]],[[[10,[9]]],5],[40,5],[5],[[],3],[[],3],0,[[]],[[]],[40,5],[44,5],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],11],[[],11],[45,5]],"c":[],"p":[[3,"BlockInfo"],[15,"u32"],[15,"usize"],[8,"Read"],[3,"Value"],[8,"Into"],[4,"Error"],[4,"Result"],[15,"u8"],[3,"Vec"],[3,"TypeId"],[3,"BlockStore"],[15,"bool"],[3,"Path"],[8,"AsRef"],[8,"Clone"],[4,"Option"],[15,"str"],[8,"Iterator"],[3,"Db"],[3,"PermanentStore"],[3,"TransactionalTree"],[4,"ConflictableTransactionError"],[4,"RemoveTipResult"],[3,"Formatter"],[6,"Result"],[4,"ConsistencyFailure"],[4,"Error"],[4,"TransactionError"],[4,"Error"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"Tree"],[3,"StorageIterator"],[3,"SeqNoIter"],[3,"BlockId"],[3,"Block"],[4,"Ordering"],[3,"Box"],[8,"Write"],[3,"Error"],[4,"ValueImpl"],[3,"SharedMmap"],[3,"IVec"],[13,"NextTip"],[13,"HitPermanentStore"],[4,"IteratorState"],[13,"Permanent"],[13,"Volatile"]]},\
"chain_time":{"doc":"Chain-time","t":"CCCCCCCCCCAAAAWWWWWWWDDDDFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLFLLLMLMLMLLLLLLLLLLLLLLLLLFLLLLWDDDDFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLMMLMLLLLLLLLLLLLLLLLLLLLWDDDFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWDFFLLLLLLLLLLLLLLLLLL","n":["DurationSeconds","Epoch","EpochPosition","EpochSlotOffset","Slot","SlotDuration","TimeEra","TimeFrame","TimeOffsetSeconds","Timeline","era","timeframe","timeline","units","","","","","","","","Epoch","EpochPosition","EpochSlotOffset","TimeEra","_strategy_of_0","_strategy_of_0","_strategy_of_epoch","_strategy_of_epoch_start","_strategy_of_slot","_strategy_of_slot_start","_strategy_of_slots_per_epoch","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","epoch","epoch_start","epoch_start","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_era_to_slot","from_slot_to_era","into","into","into","into","new","pack_time_era","partial_cmp","partial_cmp","partial_cmp","slot","slot_start","slot_start","slots_per_epoch","slots_per_epoch","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unpack_time_era","vzip","vzip","vzip","vzip","","Slot","SlotAndDuration","SlotDuration","TimeFrame","_strategy_of_0","_to_fn_ptr","arbitrary","arbitrary_with","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change_frame","clone","clone","clone","clone_into","clone_into","clone_into","cmp","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_secs","into","into","into","into","new","offset","partial_cmp","slot","slot0","slot_at","slot_at_precise","slot_duration","slot_duration","slot_offset","slot_to_systemtime","timeline","to_duration","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","","TimeOffset","TimeOffsetSeconds","Timeline","_strategy_of_0","_to_fn_ptr","advance","arbitrary_with","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","differential","eq","fmt","fmt","fmt","from","from","from","from","from","from","hash","into","into","into","new","partial_cmp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","","DurationSeconds","_strategy_of_0","_to_fn_ptr","arbitrary_with","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","from","from","hash","into","partial_cmp","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"chain_time"],[14,"chain_time::era"],[116,"chain_time::timeframe"],[189,"chain_time::timeline"],[242,"chain_time::units"]],"d":["","","","","","","","","","","Split timeframe in eras","Timeframes","Timeline","Units used for time calculations","","","","","","","","Epoch number","Epoch position: this is an epoch and a slot offset","Slot Offset <em>in</em> a given epoch","Describe a new era, which start at epoch_start and is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The base epoch","retrieve the epoch start during a given Era","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert an epoch position into a flat slot","Try to return the epoch/inner-epoch-slot associated.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set a new era to start on slot_start at epoch_start for a …","Write a <code>TimeEra</code> into a <code>Codec</code>","","","","The offset from <code>epoch</code>","retrieve the slot start of an epoch during a given Era","","retrieve the number of slots in an epoch during a given Era","","","","","","","","","","","","","","","","","","","Read a <code>TimeEra</code> from a <code>Codec</code>","","","","","","Identify a slot in a <em>specific</em> timeframe","Identify a slot in a specific timeframe and a leftover …","Duration of a slot","Time frame which is a timeline that is configured to be …","","","","","","","","","","","","","Change time frame at a specific slot","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>SlotDuration</code> from a number of seconds","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new time frame with a specific slot size","The offset of a specific time frame in","","The slot","The current slot offset","Get the slot associated with the given system time.","Given a system time get the slot and associated duration …","Returns slot duration value.","","","Get the system time associated with a slot on a specific …","","Convert this <code>SlotDuration</code> to a <code>core::time::Duration</code>","","","","","","","","","","","","","","","","","","","","","Represent an offset in time units in the timeline","Represent an offset in seconds in the timeline","Represent a timeline with a specific start point rooted on …","","","Advance a timeline, and create a new timeline starting at …","","","","","","","","","","","","","","","Return the duration since the creation of the timeline","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new timeline, which is a time starting point","","","","","","","","","","","","","","","","","","Represent a Duration where the maximum precision is in the …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,2,5,3,4,2,5,3,4,2,5,3,4,2,5,3,4,2,5,3,4,2,5,3,3,4,4,2,5,3,4,2,5,3,3,4,2,5,3,4,4,4,2,5,3,4,4,0,2,5,3,3,4,4,4,4,2,5,3,4,3,2,5,3,4,2,5,3,4,2,5,3,4,0,2,5,3,4,0,0,0,0,0,0,0,10,10,10,21,19,20,10,21,19,20,19,10,19,20,10,19,20,10,10,20,10,21,19,20,10,10,21,19,20,20,10,21,19,20,19,21,10,21,19,19,19,19,19,19,19,19,20,10,19,20,10,21,19,20,10,21,19,20,10,21,19,20,10,21,19,20,0,0,0,0,0,0,23,27,23,26,27,23,26,27,23,26,27,23,26,27,27,23,27,23,26,27,23,23,26,26,27,27,27,23,26,27,23,27,23,26,27,23,26,27,23,26,27,23,26,27,23,26,27,0,0,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],2],[[],3],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[5,5],[3,3],[4,4],[[]],[[]],[[]],[[]],[[2,2],6],[[5,5],6],[[3,3],6],0,[4,2],0,[[2,2],7],[[5,5],7],[[3,3],7],[[4,4],7],[[2,8],9],[[5,8],9],[[3,8],9],[[3,8],9],[[4,8],9],[[]],[[]],[[]],[[]],[[4,3],10],[[4,10],[[11,[3]]]],[[]],[[]],[[]],[[]],[[10,2,12],4],[[4,13],[[15,[14]]]],[[2,2],[[11,[6]]]],[[5,5],[[11,[6]]]],[[3,3],[[11,[6]]]],0,[4,10],0,[4,12],0,[[]],[[]],[[]],[[]],[[],16],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],17],[[],17],[[],17],[[],17],[13,[[15,[4,18]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1,1],[[]],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[19,10,20],19],[10,10],[19,19],[20,20],[[]],[[]],[[]],[[10,10],6],[[10,10],7],[[20,20],7],[[10,8],9],[[21,8],9],[[19,8],9],[[20,8],9],[[]],[22,10],[[]],[[]],[[]],[12,20],[[]],[[]],[[]],[[]],[[23,20],19],0,[[10,10],[[11,[6]]]],0,[19,10],[[19,24],[[11,[10]]]],[[19,24],[[11,[21]]]],[19,22],0,0,[[19,10],[[11,[24]]]],0,[20,25],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],17],[[],17],[[],17],[[],17],[[]],[[]],[[]],[[]],0,0,0,0,[1,1],[[]],[[23,25],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[26,26],[27,27],[[]],[[]],[[]],[[27,27],6],[[23,24],[[11,[26]]]],[[27,27],7],[[23,8],9],[[26,8],9],[[27,8],9],[24,23],[[]],[27,26],[[]],[28,27],[[]],[27],[[]],[[]],[[]],[24,23],[[27,27],[[11,[6]]]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],17],[[],17],[[],17],[[]],[[]],[[]],0,0,[1,1],[[]],[[]],[[]],[[]],[28,28],[[]],[[28,28],6],[[28,28],7],[[28,8],9],[22,28],[[]],[28],[[]],[[28,28],[[11,[6]]]],[[]],[[],15],[[],15],[[],17],[[]]],"c":[],"p":[[8,"Strategy"],[3,"Epoch"],[3,"EpochPosition"],[3,"TimeEra"],[3,"EpochSlotOffset"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Slot"],[4,"Option"],[15,"u32"],[3,"Codec"],[4,"WriteError"],[4,"Result"],[3,"String"],[3,"TypeId"],[4,"ReadError"],[3,"TimeFrame"],[3,"SlotDuration"],[3,"SlotAndDuration"],[15,"u64"],[3,"Timeline"],[3,"SystemTime"],[3,"Duration"],[3,"TimeOffset"],[3,"TimeOffsetSeconds"],[3,"DurationSeconds"]]},\
"chain_vote":{"doc":"","t":"DDRDCCCGCCCGCCDDGMAAMMAMMAAMAMRRRRRSRRRRRRRRRRRRRRRDDDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCAAADDLLLLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLSSSDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCAAAAACASDLLLLLLMLLLLLLLLLLLLLLLLLCASDLLLLLLLLLLLLLMLLLLLLLLLLCASDLLLLLLLLLLLLLLLLLLLLLMLLCAADLLLLLLLLLLLLLLSDLLMLLLLLLLLLLLLLMLLLLLLLLCAAADLLLLLLLLLLLLLLLDSSDDMMMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLFLLMLLLLLLLLLLLLLLLLLLLMLLLMMWWWDDMLLLLMLLLLLLLLLMLLLLLLLLLMMLLLLLLLLFFLMLLLLLLLLLLLLMLMDDGGDDDDGLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLOAADRDFMLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLDLLLLLLLLLLMLLLLLLLLLLLLLLLLLLSDGDDDDSGDSDDDDLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLLLMMMLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLL","n":["Ballot","BallotVerificationError","CURVE_HRP","Ciphertext","Crs","ElectionPublicKey","EncryptedTally","EncryptedVote","MemberCommunicationKey","MemberPublicKey","MemberState","ProofOfCorrectVote","Tally","TallyDecryptShare","TallyOptimizationTable","UnitVectorInitializationError","Vote","baby_step_size","committee","cryptography","e1","e2","encrypted_vote","fingerprint","giant_step","macros","math","table","tally","vote","ARR_LEN","ARR_LEN","ARR_LEN","ARR_LEN","ARR_LEN","BYTES_LEN","CONCATP_NHPMWYD3NJA","CONCATP_NHPMWYD3NJA","CONCATP_NHPMWYD3NJA","CONCATP_NHPMWYD3NJA","CONCATP_NHPMWYD3NJA","CONCAT_ARR","CONCAT_ARR","CONCAT_ARR","CONCAT_ARR","CONCAT_ARR","CONCAT_STR","CONCAT_STR","CONCAT_STR","CONCAT_STR","CONCAT_STR","ElectionPublicKey","MemberCommunicationKey","MemberCommunicationPublicKey","MemberPublicKey","MemberSecretKey","MemberState","apubs","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","encrypt_and_prove_vote","encrypted","eq","eq","es","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_participants","init","init","init","init","init","init","into","into","into","into","into","into","member_secret_key","new","new","owner_index","public_key","secret_key","sk","to_bech32_str","to_bech32_str","to_bech32_str","to_bech32_str","to_bech32_str","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public","to_public","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bech32_str","try_from_bech32_str","try_from_bech32_str","try_from_bech32_str","try_from_bech32_str","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Ciphertext","commitment","elgamal","zkps","CommitmentKey","Open","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commit","commit_bool","commit_with_open","commit_with_random","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from","h","init","init","into","into","m","r","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","BYTES_LEN","BYTES_LEN","BYTES_LEN","Ciphertext","HybridCiphertext","Keypair","PublicKey","SecretKey","SymmetricKey","add","add","add","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","decrypt_point","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","e1","e1","e2","e2","elements","encrypt","encrypt_point","encrypt_point_return_r","encrypt_point_with_r","encrypt_return_r","encrypt_with_r","eq","eq","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_secretkey","generate","generate","group_repr","hash","hybrid_decrypt","hybrid_encrypt","init","init","init","init","init","init","initialise_encryption","into","into","into","into","into","into","mul","mul","mul","mul","mul","new","pk","process","public_key","recover_symmetric_key","secret_key","sk","sub","sub","sub","sub","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","zero","CorrectElGamalDecrZkp","CorrectHybridDecrKeyZkp","CorrectShareGenerationZkp","UnitVectorZkp","correct_decryption","correct_hybrid_decryption_key","correct_share_generation","dl_equality","unit_vector","CorrectElGamalDecrZkp","zkp","PROOF_SIZE","Zkp","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dleq_proof","drop","eq","fmt","from","from_bytes","generate","hash","init","into","to_bytes","to_owned","try_from","try_into","type_id","verify","vzip","write_to_bytes","CorrectHybridDecrKeyZkp","zkp","PROOF_SIZE","Zkp","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","from_bytes","generate","hash","hybrid_dec_key_proof","init","into","to_bytes","to_owned","try_from","try_into","type_id","verify","vzip","write_to_bytes","CorrectShareGenerationZkp","zkp","PROOF_SIZE","Zkp","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","from_bytes","generate","hash","init","into","to_bytes","to_owned","try_from","try_into","type_id","verify","vshare_proof","vzip","write_to_bytes","DleqZkp","challenge_context","zkp","ChallengeContext","borrow","borrow_mut","deref","deref_mut","drop","first_challenge","from","init","into","new","try_from","try_into","type_id","vzip","BYTES_LEN","Zkp","borrow","borrow_mut","challenge","clone","clone_into","deref","deref_mut","drop","eq","fmt","from","from_bytes","generate","hash","init","into","response","to_bytes","to_owned","try_from","try_into","type_id","verify","vzip","write_to_bytes","UnitVectorZkp","challenge_context","messages","zkp","ChallengeContext","borrow","borrow_mut","deref","deref_mut","drop","first_challenge","from","init","into","new","second_challenge","try_from","try_into","type_id","vzip","Announcement","BYTES_LEN","BYTES_LEN","BlindingRandomness","ResponseRandomness","a","alpha","b","beta","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","delta","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","eq","fmt","fmt","from","from","from","from_bytes","from_bytes","gamma","gen_and_commit","gen_response","generate_polys","hash","hash","i","init","init","init","into","into","into","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","v","vzip","vzip","vzip","w","z","","","","ZPowExp","Zkp","bit_size","borrow","borrow","borrow_mut","borrow_mut","challenge_x","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","ds","ds","eq","fmt","from","from","from_buffer","from_parts","generate","hash","ibas","ibas","index","init","init","into","into","into_iter","len","next","par_bridge","powers_z_encs","powers_z_encs_iter","r","r","size_hint","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify_statements","vzip","vzip","z","zwvs","zwvs","Ballot","BallotVerificationError","EncryptedVote","ProofOfCorrectVote","Ptp","UnitVector","UnitVectorInitializationError","UnitVectorIter","Vote","as_ref","base32_len","binrep","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","elements","encode_hex","encode_hex_upper","eq","eq","eq","fingerprint","fingerprint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","into_iter","is_jth","iter","iter","ith","ith","jth","len","len","new","new","next","orig_len","par_bridge","provide","provide","size","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from_vote_and_proof","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vote","vote","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","std_ops_gen","babystep","polynomial","BabyStepsTable","DEFAULT_BALANCE","MaxLogExceeded","baby_step_giant_step","baby_step_size","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","generate","generate_with_balance","giant_step","init","init","into","into","table","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Polynomial","add","at_zero","borrow","borrow_mut","clone","clone_into","degree","deref","deref_mut","drop","elements","evaluate","fmt","from","from_vec","get_coefficient_at","get_coefficients","init","into","mul","new","random","set2","to_owned","to_string","try_from","try_into","type_id","vzip","BYTES_LEN","Base64DecodeError","Crs","DecryptionError","ElectionFingerprint","EncryptedTally","EncryptedTallyError","MAX_STAKE_BYTES_LEN","OpeningVoteKey","ProvenDecryptShare","SIZE","Tally","TallyDecryptShare","TallyError","ValidatedTally","add","add","batch_decrypt","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_len","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decrypt","decrypt_shares","decrypt_tally","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","elements","eq","eq","eq","eq","eq","eq","fingerprint","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_base_64","from_bytes","from_bytes","from_bytes","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","is_empty","len","max_stake","max_stake","new","options","partial_decrypt","pi","provide","provide","provide","provide","r","r","r1","to_base64","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","trivial_convert","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_partial_decryptions","verify","verify","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"chain_vote"],[30,"chain_vote::committee"],[187,"chain_vote::cryptography"],[191,"chain_vote::cryptography::commitment"],[233,"chain_vote::cryptography::elgamal"],[381,"chain_vote::cryptography::zkps"],[390,"chain_vote::cryptography::zkps::correct_decryption"],[392,"chain_vote::cryptography::zkps::correct_decryption::zkp"],[418,"chain_vote::cryptography::zkps::correct_hybrid_decryption_key"],[420,"chain_vote::cryptography::zkps::correct_hybrid_decryption_key::zkp"],[446,"chain_vote::cryptography::zkps::correct_share_generation"],[448,"chain_vote::cryptography::zkps::correct_share_generation::zkp"],[474,"chain_vote::cryptography::zkps::dl_equality"],[477,"chain_vote::cryptography::zkps::dl_equality::challenge_context"],[492,"chain_vote::cryptography::zkps::dl_equality::zkp"],[519,"chain_vote::cryptography::zkps::unit_vector"],[523,"chain_vote::cryptography::zkps::unit_vector::challenge_context"],[539,"chain_vote::cryptography::zkps::unit_vector::messages"],[609,"chain_vote::cryptography::zkps::unit_vector::zkp"],[668,"chain_vote::encrypted_vote"],[811,"chain_vote::macros"],[812,"chain_vote::math"],[814,"chain_vote::math::babystep"],[852,"chain_vote::math::polynomial"],[882,"chain_vote::tally"]],"d":["Submitted ballot, which contains an always verified vote. …","","","ElGamal ciphertext. Given a message M represented by a …","","","","Encrypted vote is a unit vector where each element is an …","","","","A proof of correct vote encryption consists of a unit …","","","Holds precomputed baby steps for the baby-stap giant-step …","","A vote is represented by a standard basis unit vector of …","","","","","","","","","Internal macros","","","","","","","","","","","","","","","","","","","","","","","","","","The overall committee public key used for everyone to …","","Committee Member communication public key (with other …","Committee member election public key","Committee member election secret key","Initial state generated by a Member, which include keys …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Take a vote and encrypt it + provide a proof of correct …","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Create an election public key from all the participants of …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Generate a new member state from random, where the number","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implementation of the different encryption/decryption …","","Pedersen Commitment key","","","","","","","","","","Return a commitment, and the used randomness, <code>r</code>, where the …","Return a commitment of a boolean value, and the used …","Return a commitment with the given opening, <code>o</code>","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Verify that a given <code>commitment</code> opens to <code>o</code> under commitment …","","","","","Size of the byte representation of <code>Ciphertext</code>.","ElGamal ciphertext. Given a message M represented by a …","Hybrid Ciphertext (which can be found in section 2.1.3 of …","ElGamal keypair","ElGamal public key. pk = sk * G, where sk is the <code>SecretKey</code> …","ElGamal secret key","The hybrid encryption scheme uses a group element as a …","","","","","","","","","","","","","","","","","","","","","","","","","","","Decrypt ElGamal <code>Ciphertext</code> = (<code>cipher</code>.e1, <code>cipher</code>.e2), by …","","","","","","","","","","","","","","","","","","","","","","","","Given a <code>message</code> represented as a <code>Scalar</code>, return a …","Given a <code>message</code> represented as a group element, return a …","","","Given a <code>message</code> represented as a <code>Scalar</code>, return a …","Given a <code>message</code> represented as a <code>Scalar</code>, and some value …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Generate a keypair for encryption","","","Decrypt a message using hybrid decryption","Given a <code>message</code> passed as bytes, encrypt it using hybrid …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Generate a new random symmetric key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the zero ciphertext","","","","","","","","","","","Non-interactive Zero Knowledge proof for correct ElGamal …","","Proof of correct decryption.","","","","","","","","","","","Returns the argument unchanged.","","Generate a decryption zero knowledge proof.","","","Calls <code>U::from(self)</code>.","","","","","","Verify a decryption zero knowledge proof","","","","Non-interactive Zero Knowledge proof for correct Hybrid …","","Proof of correct decryption.","","","","","","","","","","Returns the argument unchanged.","","Generate a decryption zero knowledge proof.","","","","Calls <code>U::from(self)</code>.","","","","","","Verify a decryption zero knowledge proof","","","","Non-interactive Zero Knowledge proof for correct decryption","","Proof of correct decryption.","","","","","","","","","","Returns the argument unchanged.","","Generate a valid share zero knowledge proof.","","","Calls <code>U::from(self)</code>.","","","","","","Verify a valid share zero knowledge proof","","","","","","Non-interactive Zero Knowledge proof of Discrete Logarithm …","Challenge context for Discrete Logarithm Equality proof. …","","","","","","Generation of the <code>first_challenge</code>. This challenge is …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Initialise the challenge context, by including the common …","","","","","","Proof of correct decryption. Note: if the goal is to …","","","","","","","","","","","Returns the argument unchanged.","","Generate a DLEQ proof","","","Calls <code>U::from(self)</code>.","","","","","","","Verify a DLEQ proof","","","","","Structures used by the prover of <code>unit_vector_zkp</code> during …","Implementation of the Unit Vector ZK argument presented by …","Challenge context for the Unit Vector Zero Knowledge …","","","","","","Generation of the <code>first_challenge</code>. This challenge is …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Initialise the challenge context, by including the common …","Generation of the <code>second_challenge</code>. This challenge is …","","","","","First announcement, formed by I, B, A group elements. …","","","Randomness generated in the proof, used for the hiding …","Response encoding the bits of the private vector, and the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Given a commitment key <code>ck</code> and an <code>index</code>, compute random <code>beta</code>…","Generate a <code>ResponseRandomness</code> from the <code>BlindingRandomness</code>, …","Generate the polynomials used in Step 5, of the proof …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Provides an iterator over the encryptions of the product …","","","","","","","","","","","","","","","","Return an iterator of the encryptions of the polynomial …","Encryption to the polynomial coefficients used in the proof","","","Returns the argument unchanged.","Returns the argument unchanged.","Try to generate a <code>Proof</code> from a buffer","Constructs the proof structure from constituent parts.","Generate a unit vector proof. In this proof, a prover …","","Return an iterator of the announcement commitments","Commitment to the proof randomness and bits of binary …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the length of the size of the witness vector","","","","","Return R","Final response","","","","","","","","","Verify a unit vector proof. The verifier checks that the …","Final verification of the proof, that we compute in a …","","","","Return an iterator of the response related to the …","Response related to the randomness committed in <code>ibas</code>","Submitted ballot, which contains an always verified vote. …","","Encrypted vote is a unit vector where each element is an …","A proof of correct vote encryption consists of a unit …","To achieve logarithmic communication complexity in the …","Represents a Unit vector which size is @size and the @ith …","","","A vote is represented by a standard basis unit vector of …","","","","Returns the bit size of the extended vector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Iterates over the elements","","","","","Returns the size of the extended vector","","Generates a new <code>Ptp</code> by extending the received <code>vec</code> to the …","Create a new <code>ith</code> unit vector, with <code>size</code> greater than zero, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implementation of baby steps giant step algorithm to solve …","","Holds precomputed baby steps for the baby-stap giant-step …","","","Solve the discrete log on ECC using baby step giant step …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Generate the table with asymmetrical steps, optimized for …","Generate the table with the given balance. Balance is used …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","A polynomial of specific degree d","","Evaluate the polynomial at x=0","","","","","Return the degree of the polynomial","","","","","get the value of a polynomial a0 + a1 * x^1 + a2 * x^2 + …","","Returns the argument unchanged.","Initialize from a vector, where each element represent the …","","","","Calls <code>U::from(self)</code>.","","Generate a new 0 polynomial of specific degree","generate a new polynomial of specific degree","","","","","","","","","Base64 decode error","Submitted vote, which constists of an <code>EncryptedVote</code> and a `","","An encrypted vote is only valid for specific values of the …","<code>EncryptedTally</code> is formed by one ciphertext per existing …","","","Secret key for opening vote","<code>ProvenDecryptShare</code> consists of a group element (the …","","<code>Tally</code> represents the decrypted tally, with one <code>u64</code> result …","<code>TallyDecryptShare</code> contains one decryption share per …","","<code>ValidatedTally</code> can only be constructed by valid …","","Add a submitted <code>ballot</code>, with a specific <code>weight</code> to the …","Decrypt a slice of <code>ValidatedTally</code>s, using a single …","","","","","","","","","","","","","","","","","","","","","Size of the byte representation for a tally decrypt share …","","","","","","","","","","","","","","","Given the <code>decrypt_shares</code> of all committee members, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate <code>EncryptedTally</code> type from base64 representation","Tries to generate an <code>EncryptedTally</code> out of an array of …","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Initialise a new tally with N different options. The …","Number of voting options this tally decrypt share …","Given a single committee member’s <code>secret_key</code>, returns a …","","","","","","","","","Returns base64 representation of <code>EncryptedTally</code>","Returns a byte array with every ciphertext in the …","","","","","","","","","","","","","Convert from <code>ValidatedTally</code> to a <code>Tally</code> when there are no …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Given the members <code>pks</code>, and their corresponding …","Given the member’s public key <code>MemberPublicKey</code>, and the …","Verifies that <code>TallyDecryptShare</code> are correct decryptions of …","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,0,0,26,26,0,55,67,0,0,67,0,55,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,5,6,2,5,6,2,5,1,2,2,3,4,4,5,6,1,2,3,4,5,5,1,2,3,4,5,6,1,2,3,4,5,6,6,3,6,6,6,6,6,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,6,1,3,1,2,3,4,5,6,1,2,3,4,5,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,0,0,0,0,0,0,22,23,22,23,22,23,22,23,22,22,22,22,22,23,22,23,22,23,22,22,23,22,22,23,22,23,23,23,22,22,23,22,23,22,23,22,23,22,22,23,13,27,26,0,0,0,0,0,0,26,26,26,26,30,13,27,28,26,29,30,13,27,28,26,29,13,27,28,26,29,13,27,28,26,29,27,30,13,27,28,26,29,30,13,27,28,26,29,30,13,27,28,26,29,26,29,26,29,26,13,13,13,13,13,13,13,26,13,26,30,13,27,28,26,29,13,27,26,29,28,27,28,30,26,27,13,30,13,27,28,26,29,30,30,13,27,28,26,29,26,26,26,26,26,30,13,30,28,27,28,27,26,26,26,26,13,26,29,13,27,28,26,29,30,13,27,28,26,29,30,13,27,28,26,29,30,13,27,28,26,29,30,13,27,28,26,29,26,0,0,0,0,0,0,0,0,0,0,0,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,35,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,37,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,0,39,40,0,0,39,41,39,41,41,39,40,41,39,40,39,40,39,40,41,41,39,40,41,39,40,41,39,40,39,40,39,40,41,39,40,39,40,41,41,41,0,39,40,39,41,39,40,41,39,40,39,40,39,40,41,39,40,41,39,40,41,39,40,40,41,39,40,40,40,0,0,0,0,0,48,48,43,48,43,48,43,43,48,43,48,43,48,43,43,43,43,43,48,43,43,43,43,43,43,43,48,48,43,48,43,48,43,48,48,0,0,43,43,48,43,48,43,48,43,48,43,43,43,48,43,48,43,43,0,0,0,0,0,0,0,0,0,51,51,0,51,55,56,51,57,47,58,55,56,51,57,47,58,51,55,56,51,57,47,58,55,56,51,57,47,58,55,56,51,57,47,58,55,56,51,57,47,58,55,56,51,57,47,58,51,51,51,55,56,57,55,55,55,56,56,57,57,47,47,55,56,51,57,47,58,55,56,51,57,47,58,55,56,51,57,47,58,58,47,51,47,47,47,47,51,47,51,47,58,51,58,56,57,47,55,56,51,57,47,58,56,57,47,55,56,51,57,47,58,55,55,56,51,57,47,58,55,56,51,57,47,58,55,55,55,56,51,57,47,58,51,0,0,0,0,0,0,0,67,67,68,67,68,67,67,67,68,67,68,67,68,67,68,67,68,67,67,67,67,68,67,68,67,67,67,68,67,68,67,68,67,68,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,61,0,0,0,0,0,0,70,0,0,76,0,0,0,0,70,70,0,61,70,74,75,76,72,73,77,78,79,61,70,74,75,76,72,73,77,78,79,74,61,70,74,75,76,72,61,70,74,75,76,72,75,75,75,61,70,74,75,76,72,73,77,78,79,61,70,74,75,76,72,73,77,78,79,61,70,74,75,76,72,73,77,78,79,74,61,70,74,75,76,72,70,61,70,74,75,76,72,73,73,77,77,78,78,79,79,61,61,70,74,75,76,72,73,77,78,79,70,70,74,76,74,75,76,61,70,74,75,76,72,73,77,78,79,61,70,74,75,76,72,73,77,78,79,75,75,70,75,70,74,70,76,73,77,78,79,70,75,76,70,70,74,76,61,70,74,75,76,72,73,77,78,79,0,61,70,74,75,76,72,73,77,78,79,61,70,74,75,76,72,73,77,78,79,61,70,74,75,76,72,73,77,78,79,70,74,72,72,61,70,74,75,76,72,73,77,78,79],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[5,8,9]],0,[[2,2],10],[[5,5],10],0,[[2,11],12],[[5,11],12],[[]],[13,2],[[]],[[]],[[]],[13,4],[[]],[[]],[[],[[14,[1]]]],[[],[[14,[2]]]],[[],[[14,[3]]]],[[],[[14,[4]]]],[[],[[14,[5]]]],[[],5],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[6,1],[[],3],[[7,8,7],6],0,[6,2],[6,1],0,[1,15],[2,15],[3,15],[4,15],[5,15],[1],[2,[[17,[16]]]],[3],[4,[[17,[16]]]],[5,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3,4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[19,[[18,[1,20]]]],[19,[[18,[2,20]]]],[19,[[18,[3,20]]]],[19,[[18,[4,20]]]],[19,[[18,[5,20]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[22,22],[23,23],[[]],[[]],[[22,24]],[[22,10]],[[22,23],25],[[22,24,24],25],[7],[7],[7],[7],[7],[7],[8,22],[[]],[[]],0,[[],7],[[],7],[[]],[[]],0,0,[22],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],21],[[],21],[[22,25,23],10],[[]],[[]],0,0,0,0,0,0,0,0,0,[[26,26]],[[26,26]],[[26,26],26],[[26,26]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,13],[27,27],[28,28],[26,26],[29,29],[[]],[[]],[[]],[[]],[[]],[[27,26],25],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,0,0,0,[26],[[13,24],26],[[13,25],26],[[13,25]],[[13,25,24],26],[[13,24]],[[13,24,24],26],[[13,13],10],[[26,26],10],[[13,11],12],[[26,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[14,[13]]]],[[],[[14,[27]]]],[[],[[14,[26]]]],[[],[[14,[29]]]],[27,28],[[],27],[[],28],0,[26],[[27,29],[[17,[16]]]],[13,29],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[30,31],[[]],[[]],[[]],[[]],[[]],[[]],[[26,24]],[[26,32]],[[26,24]],[[26,24]],[[26,24]],[[],30],0,[30,[[17,[16]]]],0,[[27,29],30],0,0,[[26,26]],[[26,26]],[[26,26]],[[26,26],26],[13,[[17,[16]]]],[26,[[17,[16]]]],[29,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[33,33],[[]],[7],[7],0,[7],[[33,33],10],[[33,11],12],[[]],[[],[[14,[33]]]],[[26,13,25,27],33],[33],[[],7],[[]],[33],[[]],[[],18],[[],18],[[],21],[[33,26,25,13],10],[[]],[33],0,0,0,0,[[]],[[]],[34,34],[[]],[7],[7],[7],[[34,34],10],[[34,11],12],[[]],[[],[[14,[34]]]],[[29,13,30,27],34],[34],0,[[],7],[[]],[34],[[]],[[],18],[[],18],[[],21],[[34,29,30,13],10],[[]],[34],0,0,0,0,[[]],[[]],[35,35],[[]],[7],[7],[7],[[35,35],10],[[35,11],12],[[]],[[],[[14,[35]]]],[[26,13,25,27],35],[35],[[],7],[[]],[35],[[]],[[],18],[[],18],[[],21],[[35,26,25,13],10],0,[[]],[35],0,0,0,0,[[]],[[]],[7],[7],[7],[[36,25,25],24],[[]],[[],7],[[]],[[25,25,25,25],36],[[],18],[[],18],[[],21],[[]],0,0,[[]],[[]],0,[37,37],[[]],[7],[7],[7],[[37,37],10],[[37,11],12],[[]],[[],[[14,[37]]]],[[25,25,25,25,24],37],[37],[[],7],[[]],0,[37],[[]],[[],18],[[],18],[[],21],[[37,25,25,25,25],10],[[]],[37],0,0,0,0,0,[[]],[[]],[7],[7],[7],[38,24],[[]],[[],7],[[]],[[22,13],38],[38,24],[[],18],[[],18],[[],21],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[39,39],[40,40],[[]],[[]],0,[7],[7],[7],[7],[7],[7],[7],[7],[7],[[39,39],10],[[40,40],10],[[39,11],12],[[40,11],12],[[]],[[]],[[]],[[],[[14,[39]]]],[[],[[14,[40]]]],0,[[22,10]],[[41,24,10],40],[[7,7],[[17,[42]]]],[39],[40],0,[[],7],[[],7],[[],7],[[]],[[]],[[]],[39,[[17,[16]]]],[40,[[17,[16]]]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[43,43],[[]],[7],[7],[7],[7],[7],[7],[43,44],0,[[43,43],10],[[43,11],12],[[]],[[]],[45,[[18,[43,46]]]],[[[17,[39]],[17,[26]],[17,[40]],24],43],[[8,13,47],43],[43],[43,44],0,0,[[],7],[[],7],[[]],[[]],[[]],[43,7],[48,[[14,[25]]]],[[],49],[[24,7,50],24],[[24,50],48],[43,24],0,[48],[[]],[[],18],[[],18],[[],18],[[],18],[[],21],[[],21],[[43,8,13],10],[[43,13,22,51,24,24],10],[[]],[[]],0,[43,44],0,0,0,0,0,0,0,0,0,0,[51],[[],7],[[7,50],[[17,[10]]]],[[[51,[52]]],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[18,[[17,[53,54]]]]]],[55,55],[56,56],[[[51,[52]]],[[51,[52]]]],[57,57],[47,47],[58,58],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[[],[[60,[59]]]],[[],[[60,[59]]]],[[55,55],10],[[56,56],10],[[57,57],10],[55,61],0,[[55,11],12],[[56,11],12],[[56,11],12],[[57,11],12],[[57,11],12],[[47,11],12],[[47,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,7],10],[[[51,[52]]],[[62,[52]]]],[47,58],[47,7],0,[[47,7],24],[[[51,[52]]],7],[47,7],[[[17,[52,52]],63],[[51,[52,52]]]],[[7,7],[[18,[47,57]]]],[58,14],0,[[],49],[64],[64],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[65,66,8,5],[[18,[55,56]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[55,65],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],18],0,0,0,0,0,0,[[[17,[25]],32,67],[[18,[[17,[32]],68]]]],0,[[]],[[]],[[]],[[]],[67,67],[[]],[7],[7],[7],[7],[7],[7],[[67,11],12],[[68,11],12],[[]],[[]],[69,67],[[69,69],67],0,[[],7],[[],7],[[]],[[]],0,[[]],[[],18],[[],18],[[],18],[[],18],[[],21],[[],21],[[]],[[]],0,[[42,42]],[42,24],[[]],[[]],[42,42],[[]],[42,7],[7],[7],[7],0,[[42,24],24],[[42,11],12],[[]],[[[17,[24]]],42],[[42,7],24],[42,[[62,[24]]]],[[],7],[[]],[[42,42]],[7,42],[7,42],[[42,24,24],42],[[]],[[],15],[[],18],[[],18],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[70,70]],[[70,55,32]],[71,[[18,[[17,[72]],73]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[61,61],[70,70],[74,74],[75,75],[76,76],[72,72],[[]],[[]],[[]],[[]],[[]],[[]],[75,[[17,[25]]]],0,[[75,67],[[18,[72,73]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[[61,61],10],[[70,70],10],[[74,74],10],[[75,75],10],[[76,76],10],[[72,72],10],0,[[61,11],12],[[70,11],12],[[74,11],12],[[75,11],12],[[76,11],12],[[72,11],12],[[73,11],12],[[73,11],12],[[77,11],12],[[77,11],12],[[78,11],12],[[78,11],12],[[79,11],12],[[79,11],12],[[]],[[],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[18,[70,[81,[80]]]]]],[[],[[14,[70]]]],[[],[[14,[74]]]],[[],[[14,[76]]]],[74],[75],[76],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,10],[75,7],0,0,[[7,5,8],70],[74,7],[[70,82],74],0,[64],[64],[64],[64],0,0,0,[70,15],[70,[[17,[16]]]],[74,[[17,[16]]]],[76],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[75,72],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[70,[[18,[75,77]]]],[[74,70,2],10],[[72,70],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"MemberSecretKey"],[3,"MemberPublicKey"],[3,"MemberCommunicationKey"],[3,"MemberCommunicationPublicKey"],[3,"ElectionPublicKey"],[3,"MemberState"],[15,"usize"],[6,"Crs"],[6,"Vote"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"PublicKey"],[4,"Option"],[3,"String"],[15,"u8"],[3,"Vec"],[4,"Result"],[15,"str"],[4,"Error"],[3,"TypeId"],[3,"CommitmentKey"],[3,"Open"],[3,"Scalar"],[3,"GroupElement"],[3,"Ciphertext"],[3,"SecretKey"],[3,"Keypair"],[3,"HybridCiphertext"],[3,"SymmetricKey"],[6,"ChaCha20"],[15,"u64"],[3,"Zkp"],[3,"Zkp"],[3,"Zkp"],[3,"ChallengeContext"],[3,"Zkp"],[3,"ChallengeContext"],[3,"Announcement"],[3,"ResponseRandomness"],[3,"BlindingRandomness"],[3,"Polynomial"],[3,"Zkp"],[8,"Iterator"],[3,"Codec"],[4,"ReadError"],[3,"UnitVector"],[3,"ZPowExp"],[3,"IterBridge"],[15,"u32"],[3,"Ptp"],[8,"Clone"],[3,"u5"],[3,"Global"],[3,"Ballot"],[3,"BallotVerificationError"],[3,"UnitVectorInitializationError"],[3,"UnitVectorIter"],[15,"char"],[8,"FromIterator"],[3,"ElectionFingerprint"],[3,"Iter"],[8,"Fn"],[3,"Demand"],[6,"EncryptedVote"],[6,"ProofOfCorrectVote"],[3,"BabyStepsTable"],[3,"MaxLogExceeded"],[3,"NonZeroU64"],[3,"EncryptedTally"],[8,"AsRef"],[3,"Tally"],[3,"TallyError"],[3,"TallyDecryptShare"],[3,"ValidatedTally"],[3,"ProvenDecryptShare"],[3,"DecryptionError"],[3,"EncryptedTallyError"],[3,"Base64DecodeError"],[8,"Error"],[3,"Box"],[6,"OpeningVoteKey"]]},\
"event_db":{"doc":"Catalyst Election Database crate","t":"WSSSSRRSSSSSSDSSSSSSSSSSSSSSSSSSSSSSLLLLALLAFLLLLLLLLLLLLLLLMAALLLLLALENNNNLLLLLLLLLLLLLLLLLMMIAAAAIAKKAAAIKKKIKIKKIKKIKKIKAIKIKAAAAAAAAADDDDDDDMMMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLDDDDDDDNEDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLMMMLLLLLMLLLLLLLLLLMMLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLMMLLLLLDDSDSDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLMLLLLLLMMMMLMLMMLMLLLLLLMLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLMDDDMLLLLLLLLLLLLMLLLLLLLLLMMLLLMMMMMMMMMLLLLLLLLLLLLLLLNNNNNNNNNEDDDDENNELLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAAADDLLLLMMLLLLMLLLLLLMMMMLLMMMMLLLLLLLLLLDDDDMLLLLLLLLMMLLLLLLLLLLLLMLLLLLLLLMMMMMMMMMMMLLLLMMMMMMMMMMMMMLLLLLLLLLLLLLLLLMMMLLLLDLLLLLLLMMMLLLLLLDLLLLLLLMMLLMLLLLDLLMMMMMMLLLLLMMLLMLLLLDLLLLLLLLMMMLLLLL","n":["","BALLOTS_VOTE_OPTIONS_PER_EVENT_QUERY","BALLOTS_VOTE_OPTIONS_PER_OBJECTIVE_QUERY","BALLOT_VOTE_OPTIONS_QUERY","BALLOT_VOTE_PLANS_QUERY","DATABASE_SCHEMA_VERSION","DATABASE_URL_ENVVAR","DELEGATIONS_BY_EVENT_QUERY","DELEGATOR_SNAPSHOT_INFO_BY_EVENT_QUERY","DELEGATOR_SNAPSHOT_INFO_BY_LAST_EVENT_QUERY","EVENTS_QUERY","EVENT_GOALS_QUERY","EVENT_QUERY","EventDB","FUND_CHALLENGES_QUERY","FUND_GOALS_QUERY","FUND_GROUPS_QUERY","FUND_QUERY","FUND_VOTE_PLANS_QUERY","OBJECTIVES_QUERY","PROPOSALS_QUERY","PROPOSAL_QUERY","RATINGS_PER_REVIEW_QUERY","REVIEWS_QUERY","REVIEW_TYPES_QUERY","SEARCH_EVENTS_QUERY","SEARCH_OBJECTIVES_QUERY","SEARCH_PROPOSALS_QUERY","TOTAL_BY_EVENT_VOTING_QUERY","TOTAL_BY_LAST_EVENT_VOTING_QUERY","TOTAL_POWER_BY_EVENT_QUERY","TOTAL_POWER_BY_LAST_EVENT_QUERY","VOTER_BY_EVENT_QUERY","VOTER_BY_LAST_EVENT_QUERY","VOTER_DELEGATORS_LIST_QUERY","VOTING_GROPUS_QEURY","borrow","borrow_mut","build_order_by_clause","build_where_clause","config_table","contruct_count_query","contruct_query","error","establish_connection","from","get_ballot","get_delegator","get_event","get_event_ballots","get_events","get_fund","get_objective_ballots","get_objectives","get_proposal","get_proposals","get_review_types","get_reviews","get_voter","into","pool","queries","schema_check","schema_version_check","search","try_from","try_into","type_id","types","vzip","Error","MismatchedSchema","NotFound","Unknown","VarError","borrow","borrow_mut","eq","fmt","fmt","from","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","expected","was","EventDbQueries","event","registration","search","vit_ss","EventQueries","ballot","get_event","get_events","objective","proposal","review","BallotQueries","get_ballot","get_event_ballots","get_objective_ballots","ObjectiveQueries","get_objectives","ProposalQueries","get_proposal","get_proposals","ReviewQueries","get_review_types","get_reviews","RegistrationQueries","get_delegator","get_voter","SearchQueries","search","fund","VitSSFundQueries","get_fund","SchemaVersion","schema_version_check","ballot","event","objective","proposal","registration","review","search","vit_ss","voting_status","Ballot","BallotType","GroupVotePlans","ObjectiveBallots","ObjectiveChoices","ProposalBallot","VotePlan","ballot","ballot_type","ballots","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_index","chain_voteplan_id","choices","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","encryption_key","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","group","into","into","into","into","into","into","into","objective_id","proposal_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voteplans","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Event","EventDetails","EventGoal","EventId","EventRegistration","EventSchedule","EventSummary","ThresholdStakedADA","VotingPowerAlgorithm","VotingPowerSettings","alg","assessment_qa_start","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deadline","details","ends","eq","eq","eq","eq","eq","eq","eq","eq","eq","finalize_proposals","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","goals","id","idx","insight_sharing","into","into","into","into","into","into","into","into","into","is_final","max_pct","min_ada","name","name","proposal_assessment","proposal_submission","purpose","refine_proposals","reg_checked","registration","schedule","starts","summary","taken","tallying","tallying_end","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voting","voting_power","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Objective","ObjectiveDetails","ObjectiveId","ObjectiveSummary","ObjectiveType","RewardDefintion","VoterGroup","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","currency","deleted","description","description","details","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","group","groups","hash","id","id","into","into","into","into","into","into","into","objective_type","reward","summary","supplemental","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","voting_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Proposal","ProposalDetails","ProposalId","ProposalSummary","ProposerDetails","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deleted","details","email","eq","eq","eq","eq","eq","files","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","funds","id","into","into","into","into","into","name","payment_key","proposer","summary","summary","supplemental","title","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","url","url","vzip","vzip","vzip","vzip","vzip","Delegation","Delegator","MAINNET_PREFIX","RewardAddress","TESTNET_PREFIX","Voter","VoterGroupId","VoterInfo","as_at","as_at","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cardano_address_check","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","delegations","delegations_count","delegations_power","delegator_addresses","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","group","into","into","into","into","into","into","is_final","is_final","last_updated","last_updated","new","raw_power","reward_address","reward_address","reward_address","reward_payable","reward_payable","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_power","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","voter_info","voting_group","voting_key","voting_power","voting_power_saturation","vzip","vzip","vzip","vzip","vzip","vzip","weight","AdvisorReview","Rating","ReviewType","assessor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","description","eq","eq","eq","fmt","fmt","fmt","from","from","from","group","id","into","into","into","map","max","min","name","note","note","ratings","review_type","score","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Author","Description","Events","Events","Funds","Objectives","Objectives","Proposals","Proposals","SearchColumn","SearchConstraint","SearchOrderBy","SearchQuery","SearchResult","SearchTable","Title","Type","ValueResults","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","column","column","descending","eq","eq","eq","eq","eq","eq","eq","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","order_by","results","search","table","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","challenge","fund","goal","group","vote_plan","Challenge","ChallengeHighlights","borrow","borrow","borrow_mut","borrow_mut","challenge_type","challenge_url","clone","clone","clone_into","clone_into","description","eq","eq","fmt","fmt","from","from","fund_id","highlights","id","internal_id","into","into","proposers_rewards","rewards_total","sponsor","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Fund","FundNextInfo","FundStageDates","FundWithNext","assessment_qa_start","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_vote_plans","challenges","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","finalize_proposals_start","fmt","fmt","fmt","fmt","from","from","from","from","fund","fund_end_time","fund_goal","fund_name","fund_name","fund_start_time","goals","groups","id","id","insight_sharing_start","into","into","into","into","next","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","results_url","snapshot_start","stage_dates","stage_dates","survey_url","tallying_end","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","voting_end","voting_power_threshold","voting_start","vzip","vzip","vzip","vzip","Goal","borrow","borrow_mut","clone","clone_into","eq","fmt","from","fund_id","goal_name","id","into","to_owned","try_from","try_into","type_id","vzip","Group","borrow","borrow_mut","clone","clone_into","eq","fmt","from","fund_id","group_id","into","to_owned","token_identifier","try_from","try_into","type_id","vzip","Voteplan","borrow","borrow_mut","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","clone","clone_into","eq","fmt","from","fund_id","id","into","to_owned","token_identifier","try_from","try_into","type_id","vzip","VotingStatus","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","objective_id","open","settings","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"event_db"],[70,"event_db::error"],[92,"event_db::error::Error"],[94,"event_db::queries"],[99,"event_db::queries::event"],[106,"event_db::queries::event::ballot"],[110,"event_db::queries::event::objective"],[112,"event_db::queries::event::proposal"],[115,"event_db::queries::event::review"],[118,"event_db::queries::registration"],[121,"event_db::queries::search"],[123,"event_db::queries::vit_ss"],[124,"event_db::queries::vit_ss::fund"],[126,"event_db::schema_check"],[128,"event_db::types"],[137,"event_db::types::ballot"],[246,"event_db::types::event"],[402,"event_db::types::objective"],[517,"event_db::types::proposal"],[602,"event_db::types::registration"],[715,"event_db::types::review"],[770,"event_db::types::search"],[889,"event_db::types::vit_ss"],[894,"event_db::types::vit_ss::challenge"],[933,"event_db::types::vit_ss::fund"],[1020,"event_db::types::vit_ss::goal"],[1037,"event_db::types::vit_ss::group"],[1054,"event_db::types::vit_ss::vote_plan"],[1077,"event_db::types::voting_status"]],"d":["","","","","","Database version this crate matches. Must equal the last …","Database URL Environment Variable name. eg: “…","","","","","","","Connection to the Election Database","","","","","","","","","","","","","","","","","","","","","","","","","","","Operations on the config table","","","","Establish a connection to the database, and check the …","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","Check if the schema is up-to-date.","","","","","","","","Event database errors","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait to check the schema version of a connection.","Check the schema version. return the current schema …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,5,5,5,5,0,0,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,0,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,74,74,0,0,0,0,0,0,0,75,75,0,0,0,0,76,76,76,0,77,0,78,78,0,79,79,0,80,80,0,81,0,0,82,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,26,30,24,25,26,27,28,29,30,24,25,26,27,28,29,30,26,26,28,24,25,26,27,28,29,30,24,25,26,27,28,29,30,26,24,25,26,27,28,29,30,24,25,26,27,28,29,30,24,25,26,27,28,29,30,26,24,25,26,27,28,29,30,30,29,24,25,26,27,28,29,30,24,25,26,27,28,29,30,24,25,26,27,28,29,30,24,25,26,27,28,29,30,28,24,25,26,27,28,29,30,0,0,0,0,0,0,0,32,0,0,33,36,8,31,32,33,34,35,36,37,38,8,31,32,33,34,35,36,37,38,8,31,32,33,34,35,36,37,38,8,31,32,33,34,35,36,37,38,34,38,31,8,31,32,33,34,35,36,37,38,36,8,31,32,33,34,35,36,37,38,8,31,32,33,34,35,36,37,38,37,31,35,36,8,31,32,33,34,35,36,37,38,31,33,33,31,35,36,36,34,36,31,37,37,31,38,34,36,36,8,31,32,33,34,35,36,37,38,8,31,32,33,34,35,36,37,38,8,31,32,33,34,35,36,37,38,8,31,32,33,34,35,36,37,38,36,37,8,31,32,33,34,35,36,37,38,0,0,0,0,0,0,0,9,39,40,41,42,43,44,9,39,40,41,42,43,44,9,39,40,41,42,43,44,9,39,40,41,42,43,44,41,40,39,40,44,9,39,40,41,42,43,44,9,39,40,41,42,43,44,9,39,40,41,42,43,44,42,43,9,39,40,9,39,40,41,42,43,44,40,43,44,43,40,9,39,40,41,42,43,44,9,39,40,41,42,43,44,9,39,40,41,42,43,44,9,39,40,41,42,43,44,41,42,9,39,40,41,42,43,44,0,0,0,0,0,10,45,46,47,48,10,45,46,47,48,10,45,46,47,48,10,45,46,47,48,47,48,45,10,45,46,47,48,46,10,45,46,47,48,10,45,46,47,48,46,47,10,45,46,47,48,45,45,46,47,48,46,47,10,45,46,47,48,10,45,46,47,48,10,45,46,47,48,10,45,46,47,48,45,46,10,45,46,47,48,0,0,53,0,53,0,0,0,51,54,49,50,51,52,53,54,49,50,51,52,53,54,53,49,50,51,52,53,54,49,50,51,52,53,54,54,50,50,50,49,50,51,52,53,54,49,50,51,52,53,54,49,50,51,52,53,54,52,49,50,51,52,53,54,51,54,51,54,53,54,53,53,54,53,53,49,50,51,52,53,54,54,49,50,51,52,53,54,49,50,51,52,53,54,49,50,51,52,53,54,52,51,50,52,50,50,49,50,51,52,53,54,52,0,0,0,57,55,56,57,55,56,57,55,56,57,55,56,57,55,55,56,57,55,56,57,55,56,57,55,55,55,56,57,55,55,55,55,55,56,57,56,56,55,56,57,55,56,57,55,56,57,55,56,57,55,56,57,59,59,58,62,59,58,62,58,62,0,0,0,0,0,0,59,59,0,58,59,60,61,3,62,63,58,59,60,61,3,62,63,58,59,60,61,3,62,63,58,59,60,61,3,62,63,60,61,61,58,59,60,61,3,62,63,3,58,59,60,61,3,62,63,58,59,60,61,3,62,63,58,59,60,61,3,62,63,3,63,60,3,58,59,60,61,3,62,63,59,63,58,59,60,61,3,62,63,58,59,60,61,3,62,63,58,59,60,61,3,62,63,58,59,60,61,3,62,63,0,0,0,0,0,0,0,64,65,64,65,65,65,64,65,64,65,65,64,65,64,65,64,65,65,65,65,65,64,65,65,65,64,65,64,65,64,65,64,65,64,65,64,65,0,0,0,0,66,66,67,68,69,66,67,68,69,67,67,66,67,68,69,66,67,68,69,66,67,68,69,66,66,67,68,69,66,67,68,69,69,67,67,67,68,67,67,67,67,68,66,66,67,68,69,69,67,67,66,66,66,67,67,66,67,68,67,66,66,67,68,69,66,67,68,69,66,67,68,69,66,67,68,69,66,67,66,66,67,68,69,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,2],[1,2],0,[3,2],[3,2],0,[[[4,[1]]],[[7,[5,6]]]],[[]],[[5,8,9,10],[[13,[[12,[11]]]]]],[[5,4,2],[[13,[[12,[11]]]]]],[[5,8],[[13,[[12,[11]]]]]],[[5,8],[[13,[[12,[11]]]]]],[[5,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],[5,[[13,[[12,[11]]]]]],[[5,8,9],[[13,[[12,[11]]]]]],[[5,8,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],[[5,8,9,10],[[13,[[12,[11]]]]]],[[5,8,9,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],[[5,8,9,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],[[5,8,9,10,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],[[5,4,2,15],[[13,[[12,[11]]]]]],[[]],0,0,0,[5,[[13,[[12,[11]]]]]],[[5,3,15,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],[[],7],[[],7],[[],16],0,[[]],0,0,0,0,0,[[]],[[]],[[6,6],15],[[6,17],18],[[6,17],18],[[]],[19,6],[[[20,[19]]],6],[21,6],[[]],[22],[6,[[4,[23]]]],[[],2],[[],7],[[],7],[[],16],[[]],0,0,0,0,0,0,0,0,0,[8,[[13,[[12,[11]]]]]],[[[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],0,0,0,0,[[8,9,10],[[13,[[12,[11]]]]]],[8,[[13,[[12,[11]]]]]],[[8,9],[[13,[[12,[11]]]]]],0,[[8,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],0,[[8,9,10],[[13,[[12,[11]]]]]],[[8,9,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],0,[[8,9,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],[[8,9,10,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],0,[[4,2],[[13,[[12,[11]]]]]],[[4,2,15],[[13,[[12,[11]]]]]],0,[[3,15,[4,[14]],[4,[14]]],[[13,[[12,[11]]]]]],0,0,[[],[[13,[[12,[11]]]]]],0,[[],[[13,[[12,[11]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[24,24],15],[[25,25],15],[[26,26],15],[[27,27],15],[[28,28],15],[[29,29],15],[[30,30],15],[[24,17],18],[[25,17],18],[[26,17],18],[[27,17],18],[[28,17],18],[[29,17],18],[[30,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[8,8],15],[[31,31],15],[[32,32],15],[[33,33],15],[[34,34],15],[[35,35],15],[[36,36],15],[[37,37],15],[[38,38],15],0,[[8,17],18],[[31,17],18],[[32,17],18],[[33,17],18],[[34,17],18],[[35,17],18],[[36,17],18],[[37,17],18],[[38,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[9,9],15],[[39,39],15],[[40,40],15],[[41,41],15],[[42,42],15],[[43,43],15],[[44,44],15],[[9,17],18],[[39,17],18],[[40,17],18],[[41,17],18],[[42,17],18],[[43,17],18],[[44,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[9],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[10,10],[45,45],[46,46],[47,47],[48,48],[[]],[[]],[[]],[[]],[[]],0,0,0,[[10,10],15],[[45,45],15],[[46,46],15],[[47,47],15],[[48,48],15],0,[[10,17],18],[[45,17],18],[[46,17],18],[[47,17],18],[[48,17],18],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,15],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[49,49],15],[[50,50],15],[[51,51],15],[[52,52],15],[[53,53],15],[[54,54],15],[[49,17],18],[[50,17],18],[[51,17],18],[[52,17],18],[[53,17],18],[[54,17],18],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[2,53],0,[53,1],0,0,[53,15],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[55,55],[56,56],[57,57],[[]],[[]],[[]],0,[[55,55],15],[[56,56],15],[[57,57],15],[[55,17],18],[[56,17],18],[[57,17],18],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],[[],16],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,58],[59,59],[60,60],[61,61],[3,3],[62,62],[63,63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[58,58],15],[[59,59],15],[[60,60],15],[[61,61],15],[[3,3],15],[[62,62],15],[[63,63],15],0,[[58,17],18],[[59,17],18],[[60,17],18],[[61,17],18],[[3,17],18],[[62,17],18],[[63,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,2],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[64,64],[65,65],[[]],[[]],0,[[64,64],15],[[65,65],15],[[64,17],18],[[65,17],18],[[]],[[]],0,0,0,0,[[]],[[]],0,0,0,0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[66,66],[67,67],[68,68],[69,69],[[]],[[]],[[]],[[]],[[66,66],15],[[67,67],15],[[68,68],15],[[69,69],15],0,[[66,17],18],[[67,17],18],[[68,17],18],[[69,17],18],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],16],[[],16],[[],16],[[],16],0,0,0,[[]],[[]],[[]],[[]],0,[[]],[[]],[70,70],[[]],[[70,70],15],[[70,17],18],[[]],0,0,0,[[]],[[]],[[],7],[[],7],[[],16],[[]],0,[[]],[[]],[71,71],[[]],[[71,71],15],[[71,17],18],[[]],0,0,[[]],[[]],0,[[],7],[[],7],[[],16],[[]],0,[[]],[[]],0,0,0,0,0,0,[72,72],[[]],[[72,72],15],[[72,17],18],[[]],0,0,[[]],[[]],0,[[],7],[[],7],[[],16],[[]],0,[[]],[[]],[73,73],[[]],[[73,73],15],[[73,17],18],[[]],[[]],0,0,0,[[]],[[],7],[[],7],[[],16],[[]]],"c":[],"p":[[15,"str"],[3,"String"],[3,"SearchQuery"],[4,"Option"],[3,"EventDB"],[4,"Error"],[4,"Result"],[3,"EventId"],[3,"ObjectiveId"],[3,"ProposalId"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"i64"],[15,"bool"],[3,"TypeId"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"RunError"],[4,"VarError"],[3,"Demand"],[8,"Error"],[3,"ObjectiveChoices"],[3,"BallotType"],[3,"VotePlan"],[3,"GroupVotePlans"],[3,"Ballot"],[3,"ProposalBallot"],[3,"ObjectiveBallots"],[3,"EventSummary"],[4,"VotingPowerAlgorithm"],[3,"VotingPowerSettings"],[3,"EventRegistration"],[3,"EventGoal"],[3,"EventSchedule"],[3,"EventDetails"],[3,"Event"],[3,"ObjectiveType"],[3,"ObjectiveSummary"],[3,"RewardDefintion"],[3,"VoterGroup"],[3,"ObjectiveDetails"],[3,"Objective"],[3,"ProposerDetails"],[3,"ProposalDetails"],[3,"ProposalSummary"],[3,"Proposal"],[3,"VoterGroupId"],[3,"VoterInfo"],[3,"Voter"],[3,"Delegation"],[3,"RewardAddress"],[3,"Delegator"],[3,"ReviewType"],[3,"Rating"],[3,"AdvisorReview"],[4,"SearchTable"],[4,"SearchColumn"],[3,"SearchConstraint"],[3,"SearchOrderBy"],[4,"ValueResults"],[3,"SearchResult"],[3,"ChallengeHighlights"],[3,"Challenge"],[3,"FundStageDates"],[3,"Fund"],[3,"FundNextInfo"],[3,"FundWithNext"],[3,"Goal"],[3,"Group"],[3,"Voteplan"],[3,"VotingStatus"],[13,"MismatchedSchema"],[8,"EventQueries"],[8,"BallotQueries"],[8,"ObjectiveQueries"],[8,"ProposalQueries"],[8,"ReviewQueries"],[8,"RegistrationQueries"],[8,"SearchQueries"],[8,"VitSSFundQueries"],[8,"SchemaVersion"]]},\
"explorer":{"doc":"","t":"WWWWWRRENNHHHHHHHHHHHHHHHHHHHHHHHHNNEENNHHHHHHHHHHHHHHHHHHHHHHHHNNNNNAFLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLFFALLLLLLLLLLLLAFFLLFALLLLLLLLLLLLLLLLLWWWWHHHHHHHDDDLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLAFLLLLLLLLLLLLFFLLLLLLLLLLLLLLLWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWDIIIIIIDNDDDDDDEDDNNDNNDDGDDNDDDEDDDDDDDDDDDDDEDDDLLLLMMMLLLLMMLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLMLMALLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMAALMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLALFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLMLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMLMLMLMLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMALMLMLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWWWWWWWWWWWWWWWWWWWWWWWWWWWWIIIIIIIIIIIIEDNDNDNDNDNDNDNDDDDDDDDDDDDDNDNDNDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWDNDNIIIIIIIIIIIIIIIIIIIIIIIIIIIINDNDNEDNDENDNEDNDNNNDDNNDNDDDNDNDNNDNDNDNDNDNDNEDNDNDNNDDDDDDDDDDDDDDDDDDDDDDDDDDDDDNDNDNLLLLLMLMLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLMLMLLLLLMLLLMLMLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLLLMLMLMLLMMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWDNNDDEDMMLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLLLLLLLLLLLLLLMMLLLMMLLLLLLLLLLLLLLLLMLLLLLENNNNNNLLLLLLLLLLLLLLLLLLWWGDDDDDEGDNNDDDGDDDDGDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWWWWWWWWWWWWWWWWDHHHHHHDDHHHHHHCDDDDMMLFFFFFFFFMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMLLLLLLLMMAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAMLAMMLMMMMAMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLNNDNNNNENNNNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLGNEGHHHHHHHHHHHHHHHHHGDGEDDDDDEDDEGHHHHHHHHHHHHHHHHHNNNNNNNGNGDGGMMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMLMMMMLMMLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLMMMMMMWWWWDDGLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLMLLLLLLLLLDLLLLLLLLLMLLLLLLLLLLMLLLLLLFFWWHHNNNNDEHHNLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLHHHHENNNNNNEDEDHHHHNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMDDDRRENNNHDDMFFMMMLLMMMLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLFLLLLLLLLALLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMFMLMMMMMMMLMMMMMMLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLFF","n":["","","","","","BRANCHES","BRANCHES","BootstrapError","BootstrapError","Bootstraping","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DbError","EmptyStream","Error","GlobalState","IndexerError","LoggingError","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","Other","Ready","SettingsError","ShuttingDown","UnrecoverableError","api","bootstrap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","db","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","handle_block","handle_tip","indexer","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","logging","main","process_subscriptions","provide","provide","rest_service","settings","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","","","","","CALLSITE","CALLSITE","META","META","S","S","S","__StaticPath","__StaticPath","__StaticPath","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","filter","from","from","from","from_ref","from_ref","from_ref","graphql","handler","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","serve","setup_cors","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Address","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","BftLeader","BftLeader","Block","BlockDate","Branch","EContext","Epoch","FeeSettings","Leader","Pool","PoolStakeDistribution","Private","Private","Proposal","Public","Public","Query","Ratio","Schema","Settings","StakeDistribution","StakePool","Subscription","TallyPrivateStatus","TallyPublicStatus","TallyStatus","TaxType","Token","Token","Token","Token","Token","Token","Transaction","TransactionInput","TransactionOutput","Treasury","VotePayloadPrivateStatus","VotePayloadPublicStatus","VotePayloadStatus","VotePlanStatus","VoteProposalStatus","VoteStatus","address","address","address","address","address","address","address","all_stake_pools","all_vote_plans","amount","amount","amount","amount","block","block","block_hashes","blocks","blocks","blocks","blocks","blocks_by_chain_length","blocks_by_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branches","branches","certificate","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","certificates","chain_length","choice","choice","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coefficient","coefficient","collect_all_fields","collect_all_fields","collect_all_fields","committee_end","committee_end","config_param","connections","constant","constant","contents","contents","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","data","date","db","delegated_stake","delegated_stake","delegation","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encrypted_vote","encrypted_vote","epoch","epoch","epoch","epoch_stability_depth","error","external_id","extract_context","fees","fetch_explorer_block","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","first_block","fixed","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bech32","from_contents","from_contents","from_epoch_number","from_id","from_id_and_state","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_string_hash","from_string_id","from_valid_hash","from_valid_id","from_valid_id","generic_tally_status","get_blocks","get_branches","get_contents","get_epoch_data","hash","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_configuration_params","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","introspection_type_name","introspection_type_name","introspection_type_name","is_confirmed","last_block","leader","max_limit","new_with_data","numerator","options","options","options","options","options","options","options","outputs","payload","payload","payload_type","payload_type","pool","pool","pools","pools","previous_block","proof","proof","proposal_id","proposal_id","proposals","proposals","ratio","registration","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","results","results","results","results","retirement","rewards","rewards","scalars","settings","settings","slot","slot","some_item","some_item","some_item","some_item","some_item","some_item","stake_distribution","stake_pool","state","tally","tally","tip","tip","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_blocks","total_input","total_output","transaction","transactions","transactions_by_address","treasury","treasury","treasury_tax","treasury_tax","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_id","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vote_end","vote_end","vote_plan","vote_plan_from_data","vote_plan_from_id","vote_start","vote_start","votes","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","Certificate","EvmMapping","EvmMapping","MintToken","MintToken","OwnerStakeDelegation","OwnerStakeDelegation","PoolRegistration","PoolRegistration","PoolRetirement","PoolRetirement","PoolUpdate","PoolUpdate","StakeDelegation","StakeDelegation","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","UpdateProposal","UpdateProposal","UpdateVote","UpdateVote","VoteCast","VoteCast","VotePlan","VotePlan","VoteTally","VoteTally","account","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changes","collect_all_fields","committee_end","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","find_entity","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","introspection_type_name","management_threshold","name","operators","owners","payload_type","pool","pool_id","pool_id","pools","pools","proposal_id","proposal_index","proposals","proposer_id","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","retirement_time","reward_account","rewards","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","start_validity","start_validity","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","AmbiguousIfMoreThanOne","Bft","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","ConfigParam","ConfigParams","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusType","ConsensusTypeEnum","ConsensusVersion","Discrimination","Discrimination","DiscriminationEnum","EpochStabilityDepth","EpochStabilityDepth","FeesInTreasury","FeesInTreasury","GenesisPraos","Halving","HalvingRewardParams","KesUpdateSpeed","KesUpdateSpeed","Linear","LinearFee","LinearFee","LinearRewardParams","Milli","PerCertificateFee","PerCertificateFee","PerVoteCertificateFee","PerVoteCertificateFees","PoolRewardParticipationCapping","PoolRewardParticipationCapping","Production","ProposalExpiration","ProposalExpiration","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardParamsUnion","RewardPot","RewardPot","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","Test","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","Token","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","__create_type_info","__create_type_info","__type_name","__type_name","add_bft_leader","add_bft_leader","add_committee_id","add_committee_id","as_raw_value","as_raw_value","block0_date","block0_date","block_content_max_size","block_content_max_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","clone","clone","clone_into","clone_into","coefficient","coefficient","collect_all_fields","collect_all_fields","config_params","config_params","consensus_type","consensus_type","constant","constant","constant","constant","constant","constant","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch_rate","epoch_rate","epoch_rate","epoch_rate","epoch_stability_depth","epoch_stability_depth","epoch_start","epoch_start","epoch_start","epoch_start","eq","eq","equivalent","equivalent","fees_in_treasury","fees_in_treasury","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","introspection_type_name","introspection_type_name","items","items","kes_update_speed","kes_update_speed","max","max","milli","milli","min","min","parse","parse","per_certificate_fees","per_certificate_fees","per_vote_certificate_fees","per_vote_certificate_fees","proposal_expiration","proposal_expiration","ratio","ratio","ratio","ratio","remove_bft_leader","remove_bft_leader","remove_committee_id","remove_committee_id","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","resolve_field","reward_limit_by_absolute_stake","reward_limit_by_absolute_stake","reward_limit_none","reward_limit_none","reward_params","reward_params","reward_pot","reward_pot","slot_duration","slot_duration","slots_per_epoch","slots_per_epoch","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","some_item","to_owned","to_owned","to_value","to_value","transaction_max_expiry_epochs","transaction_max_expiry_epochs","treasury_add","treasury_add","treasury_params","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","","ConnectionFields","Empty","Inclusive","InclusivePaginationInterval","PageMeta","PaginationInterval","ValidatedPaginationArguments","after","before","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds_into","bounds_try_into","compute_interval","compute_range_boundaries","create_type_info","cursors_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","first","from","from","from","from","from","has_next_page","has_previous_page","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last","lower_bound","resolve","resolve_field","total_count","total_count","total_count","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","upper_bound","vzip","vzip","vzip","vzip","vzip","ApiError","ArgumentError","InternalError","InvalidAddress","InvalidCursor","NotFound","Unimplemented","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","into_request","into_request","provide","to_string","try_from","try_into","type_id","vzip","","","BlockCount","ChainLength","EpochNumber","ExternalProposalId","IndexCursor","NonZero","PayloadType","PoolCount","PoolId","Private","Public","PublicKey","Slot","TimeOffsetSeconds","TransactionCount","Value","VoteOptionRange","VotePlanCount","VotePlanId","VotePlanStatusCount","VoteStatusCount","Weight","__create_type_info","__type_name","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","as_raw_value","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","create_type_info","decode_cursor","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_cursor","end","end","eq","equivalent","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_resettable","items","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve","resolve_field","start","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","to_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","type_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","","","","","","","","","","","","","","","","","BlockchainConfig","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Explorer","ExplorerDb","META","META","META","META","META","META","Ref","Settings","StableIndex","State","Tip","address_bech32_prefix","addresses","apply_block","apply_block_to_addresses","apply_block_to_blocks","apply_block_to_chain_lengths","apply_block_to_epochs","apply_block_to_stake_control","apply_block_to_stake_pools","apply_block_to_transactions","apply_block_to_vote_plans","blockchain_config","blocks","bootstrap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_lengths","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","confirmed_block_chain_length","consensus_version","db","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","drop","drop","drop","drop","epoch_stability_depth","epochs","error","fees","find_blocks_by_chain_length","find_blocks_by_transaction","from","from","from","from","from","from","from","from_config_params","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_block","get_block_hash_range","get_block_id","get_block_with_branches","get_branch","get_branches","get_epoch","get_stake_pool_blocks","get_stake_pool_data","get_stake_pools","get_tip","get_vote_plan_by_id","get_vote_plans","indexing","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_block_confirmed","longest_chain_tip","multiverse","multiverse","new","persistent_sequence","query_complexity_limit","query_depth_limit","set_tip","stable_store","stake_control","stake_pool_blocks","stake_pool_data","tally","tip_broadcast","tip_subscription","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transactions","transactions_by_address","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_plans","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AncestorNotFound","BlockAlreadyExists","BlockNotFound","BlockNotFound","BootstrapError","CannotApplyBlock","ChainLengthBlockAlreadyExists","ExplorerError","ExplorerTransmuteFail","TallyDecryptionFailure","TransactionAlreadyExists","TxCalculationFailure","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from_ref","from_ref","hash","init","init","into","into","into_request","into_request","into_request","into_request","provide","provide","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Addresses","BftLeader","BlockProducer","Blocks","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ChainLengths","EpochData","Epochs","ExplorerAddress","ExplorerBlock","ExplorerBlockBuildingContext","ExplorerInput","ExplorerOutput","ExplorerTransaction","ExplorerVote","ExplorerVotePlan","ExplorerVoteProposal","ExplorerVoteTally","Hamt","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","New","None","Old","Private","Private","Public","Public","StakePool","StakePool","StakePoolBlocks","StakePoolData","Transactions","VotePlans","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","chain_length","chain_length","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committee_end","config_params","date","date","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","first_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","hash","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_block","offset_in_block","options","outputs","outputs","parent_hash","payload_type","prev_blocks","prev_transactions","producer","producer","proposal_id","proposals","registration","resolve_from","retirement","tally","to_identifier","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_blocks","total_input","total_output","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vote_end","vote_start","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","encrypted_vote","proof","options","options","results","results","","","","","Inner","Multiverse","Ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","gc","get_ref","init","init","inner","insert","into","into","into_request","into_request","into_request","into_request","multiverse","new","tips","tips","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","PersistentSequence","append","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","elements","fmt","from","from_ref","get","init","into","into_request","into_request","is_empty","len","len","new","to_owned","try_from","try_into","type_id","vzip","compute_private_tally","compute_public_tally","","","CALLSITE","CALLSITE","CannotDeserialize","DbError","HashError","IOError","Indexer","IndexerError","META","META","UrlError","apply_block","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","db","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from_ref","init","init","into","into","into_request","into_request","into_request","into_request","new","provide","set_tip","source","tip_candidate","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Error","File","File","FormatNotSupported","InitSubscriber","InstallOpenTelemetryPipeLine","Json","LogFormat","LogGuard","LogOutput","LogSettings","META","META","META","META","Plain","Stderr","Stdout","_nonblocking_worker_guard","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from_ref","from_ref","from_ref","from_str","from_str","init","init","init","init","init","init_log","init_subscriber","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","level","output","provide","serialize","serialize","source","to_owned","to_owned","to_owned","to_string","to_string","trace_collector_endpoint","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","cause","path","specified","CommandLine","Config","ConfigLogSettings","DEFAULT_QUERY_COMPLEXITY_LIMIT","DEFAULT_QUERY_DEPTH_LIMIT","Error","Format","IO","InvalidHost","LAZY","LOG_FILTER_LEVEL_POSSIBLE_VALUES","Settings","__private_field","__stability","__static_ref_initialize","address_bech32_prefix","address_bech32_prefix","address_bech32_prefix","augment_args","augment_args_for_update","binding_address","binding_address","binding_address","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","config","cors","cors","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_uri_string","drop","drop","drop","drop","drop","drop","eq","equivalent","filter_level_opt_serde","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_ref","group_id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","level","load","log_format","log_level","log_level_parse","log_output","log_settings","log_settings","log_trace_collector_endpoint","logs","node","node","node","output","provide","query_complexity_limit","query_complexity_limit","query_complexity_limit","query_depth_limit","query_depth_limit","query_depth_limit","serialize","source","tls","tls","to_owned","to_string","trace_collector_endpoint","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","deserialize","serialize"],"q":[[0,"explorer"],[141,"explorer::api"],[217,"explorer::api::graphql"],[1282,"explorer::api::graphql::certificates"],[1838,"explorer::api::graphql::config_param"],[3187,"explorer::api::graphql::connections"],[3285,"explorer::api::graphql::error"],[3310,"explorer::api::graphql::scalars"],[3763,"explorer::db"],[3984,"explorer::db::error"],[4043,"explorer::db::indexing"],[4401,"explorer::db::indexing::ExplorerVote"],[4403,"explorer::db::indexing::ExplorerVoteTally"],[4407,"explorer::db::multiverse"],[4454,"explorer::db::persistent_sequence"],[4482,"explorer::db::tally"],[4484,"explorer::indexer"],[4544,"explorer::logging"],[4681,"explorer::logging::Error"],[4684,"explorer::settings"],[4848,"explorer::settings::filter_level_opt_serde"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block’s date, composed of an Epoch and a Slot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All the blocks this transaction is included in","","","","Get a paginated view of all the blocks in this epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get all current tips, sorted (descending) by their length","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date the Block was included in the blockchain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","what get subtracted as fixed value","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Block unique identifier","","The hash that identifies the transaction","The base32 representation of an address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initial bootstrap config params (initial fragments), only …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Max limit of tax","","","get the vote options range","","","","","","","","","","","","","","","","","","","","","","","Ratio of tax after fixed amout subtracted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Not yet implemented","","","","","get the block that the ledger currently considers as the …","","","","","","","","","","","","","","","","","","","","","The transactions contained in the blocketirement info for a pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the committee duration is the time allocated to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Management threshold for owners, this need to be &lt;= …","","","Owners of this pool","","","","","","","","","the proposals to vote for","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reward account","","","","","","","","","","","","","","Beginning of validity for this pool, this is used to keep …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the duration within which it is possible to vote for one …","","","the vote start validityeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Vote option range","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the exclusive upper bound of the option range. minimal …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the start of the vote option range, starting from 0 usually","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inmutable data structure used to represent the explorer’…","","This is the prefix that’s used for the Address bech32 …","","Try to add a new block to the indexes, this can fail if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Used to construct <code>Address</code> from <code>AccountIndentifier</code> when …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","This keeps track of the longest chain seen until now. All …","","Structure that keeps all the known states to allow easy …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block with unified inputs the metadata needed in the …","","Unified Input representation for utxo and account inputs …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Map the given AuthenticatedTransaction to the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map the given <code>Block</code> to the <code>ExplorerBlock</code>, transforming all …","","","","","","","","","","","","","","","","","","","The HashMap allows for easy search when querying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","run the garbage collection of the multiverse","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","get all the branches this block is in, None here means the …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the logger.","","Output of the logger.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Set format of the log emitted. Can be “json” or “…","Set log messages minimum severity. If not configured …","","Set format of the log emitted. Can be “stdout”, “…","","","Enable the OTLP trace data exporter and set the collector…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[[]],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[[3,7],8],[[3,7],8],[[9,7],8],[[9,7],8],[[5,7],8],[[]],[10,3],[11,3],[12,3],[9,3],[[]],[[]],[[]],[[13,14],[[4,[3]]]],[[15,14],[[4,[3]]]],0,[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],0,[[],[[4,[3]]]],[[[18,[5]],19,20],[[4,[3]]]],[21],[21],[[[18,[5]],22]],0,[3,[[24,[23]]]],[9,[[24,[23]]]],[[]],[[],25],[[],25],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[],26],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[27,28],[29,28],[30,28],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[29,29],[30,30],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[2,31],[[0,[32,33]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[37,[34,35,36]],38],[[4,[39,40]]]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[[0,[32,33,41,42]],43,[24,[44]],[0,[45,41]]]],[[[0,[32,33,41,42]],43,[24,[44]],[24,[46]],[0,[45,41]]]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[],26],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[34,47,25],[[49,[48]]]],[[50,47],[[51,[48]]]],[[52,47],[[51,[48]]]],[[53,47],[[51,[48]]]],0,0,0,[[54,47,[24,[55]],[24,[55]],[24,[25]],[24,[25]]],[[49,[[61,[56,57,[59,[58]],60]]]]]],[[54,47,[24,[55]],[24,[55]],[24,[25]],[24,[25]]],[[49,[[61,[56,62,[59,[58]],60]]]]]],[[50,47],[[51,[63]]]],[[52,47],[[51,[63]]]],0,0,[[54,47],[[51,[64]]]],[[34,47,25],[[49,[64]]]],0,[[54,47,[24,[55]],[24,[55]],[24,[25]],[24,[25]]],[[49,[[61,[56,64,[59,[58]],60]]]]]],[[65,47],[[49,[[66,[64]]]]]],[[57,47,[24,[55]],[24,[55]],[24,[25]],[24,[25]]],[[49,[[61,[56,64,[59,[58]]]]]]]],0,[[34,47,67],[[49,[[66,[64]]]]]],[[54,47,68,[24,[55]],[24,[55]],[24,[25]],[24,[25]]],[[49,[[24,[[61,[56,64,[59,[58]],60]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[34,47,25],[[49,[54]]]],[[64,47],[[49,[[66,[54]]]]]],[[34,47],[[51,[[66,[54]]]]]],[[65,47],[[49,[[24,[69]]]]]],[[70,47],[[51,[63]]]],0,[[70,47],[[51,[63]]]],0,[[70,47],[[51,[63]]]],0,[[70,47],[[51,[63]]]],0,[[70,47],[[51,[63]]]],0,[[70,47],[[51,[63]]]],0,0,[[64,47],[[49,[67]]]],[[71,47],[[51,[55]]]],0,[72,72],[73,73],[65,65],[48,48],[57,57],[74,74],[71,71],[75,75],[76,76],[77,77],[78,78],[79,79],[62,62],[53,53],[80,80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[70,47],[[51,[63]]]],0,[[81,82,83],84],[[76,82,83],84],[[79,82,83],84],[[62,47],[[51,[73]]]],0,0,0,[[70,47],[[51,[63]]]],0,0,0,[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],0,[[64,47],[[49,[73]]]],0,[[86,47],[[51,[63]]]],0,[[48,47],[[49,[57]]]],[[87,47],[[51,[88]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[75,47],[[51,[25]]]],0,[[34,47,68],[[51,[74]]]],[[73,47],[[51,[74]]]],0,[[89,47],[[51,[90]]]],0,[[91,47],[[51,[92]]]],[47,93],[[89,47],[[51,[94]]]],[[64,2],[[49,[[96,[95]]]]]],[[54,47,97],[[99,[[98,[45]]]]]],[[64,47,97],[[99,[[98,[45]]]]]],[[100,47,97],[[99,[[98,[45]]]]]],[[87,47,97],[[99,[[98,[45]]]]]],[[91,47,97],[[99,[[98,[45]]]]]],[[89,47,97],[[99,[[98,[45]]]]]],[[34,47,97],[[99,[[98,[45]]]]]],[[72,47,97],[[99,[[98,[45]]]]]],[[65,47,97],[[99,[[98,[45]]]]]],[[48,47,97],[[99,[[98,[45]]]]]],[[57,47,97],[[99,[[98,[45]]]]]],[[74,47,97],[[99,[[98,[45]]]]]],[[71,47,97],[[99,[[98,[45]]]]]],[[75,47,97],[[99,[[98,[45]]]]]],[[80,47,97],[[99,[[98,[45]]]]]],[[74,47],[[51,[[24,[64]]]]]],[[100,47],[[51,[63]]]],[[]],[[[96,[95]]],64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,72],[[]],[[]],[72,81],[57,81],[[]],[[]],[102,73],[[]],[[]],[[]],[[]],[[]],[103,48],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[71,76],[[]],[75,76],[[]],[[]],[[]],[[]],[104,79],[[]],[77,79],[78,79],[[]],[[]],[[]],[[]],[[]],[28,[[49,[48]]]],[[[96,[95]]],64],[105,65],[106,74],[[107,47],[[49,[65]]]],[[108,109],54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,2],[[49,[64]]]],[[28,2],[[49,[57]]]],[108,64],[107,65],[110,57],[[111,112],79],[[65,47],[[49,[[66,[[96,[95]]]]]]]],[[64,2],[[49,[[66,[54]]]]]],[[65,47],[[49,[105]]]],[[74,2],[[24,[113]]]],0,[[54,47],[[51,[25]]]],[[64,47],[[51,[25]]]],[[72,47],[[51,[114]]]],[[65,47],[[51,[25]]]],[[48,47],[[51,[25]]]],[[57,47],[[51,[115]]]],[[74,47],[[51,[68]]]],[[62,47],[[51,[116]]]],0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[65,47],[[49,[[24,[117]]]]]],[[65,47],[[49,[[66,[50]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[81,[[118,[28]]]],[76,[[118,[28]]]],[79,[[118,[28]]]],[[64,47],[[51,[119]]]],[[74,47],[[51,[[24,[64]]]]]],[[64,47],[[49,[[24,[81]]]]]],[[100,47],[[51,[[24,[88]]]]]],[[110,[96,[120]]],57],[[87,47],[[51,[63]]]],[[91,47],[[51,[121]]]],[[77,47],[[51,[121]]]],[[78,47],[[51,[121]]]],[[80,47],[[51,[121]]]],0,0,0,[[65,47],[[49,[[66,[52]]]]]],[[53,47],[[51,[76]]]],0,[[62,47],[[51,[122]]]],0,[[86,47],[[51,[57]]]],0,[[123,47],[[51,[66]]]],0,[[64,47],[[49,[64]]]],[[75,47],[[51,[25]]]],0,[[80,47],[[51,[92]]]],0,[[62,47],[[51,[66]]]],0,[[100,47],[[51,[87]]]],[[57,47],[[49,[124]]]],[[54,82,125],[[99,[[98,[45]]]]]],[[64,82,125],[[99,[[98,[45]]]]]],[[100,82,125],[[99,[[98,[45]]]]]],[[87,82,125],[[99,[[98,[45]]]]]],[[91,82,125],[[99,[[98,[45]]]]]],[[89,82,125],[[99,[[98,[45]]]]]],[[34,82,125],[[99,[[98,[45]]]]]],[[72,82,125],[[99,[[98,[45]]]]]],[[81,82,125],[[99,[[98,[45]]]]]],[[73,82,125],[[99,[[98,[45]]]]]],[[65,82,125],[[99,[[98,[45]]]]]],[[50,82,125],[[99,[[98,[45]]]]]],[[52,82,125],[[99,[[98,[45]]]]]],[[48,82,125],[[99,[[98,[45]]]]]],[[57,82,125],[[99,[[98,[45]]]]]],[[126,82,125],[[99,[[98,[45]]]]]],[[70,82,125],[[99,[[98,[45]]]]]],[[74,82,125],[[99,[[98,[45]]]]]],[[123,82,125],[[99,[[98,[45]]]]]],[[86,82,125],[[99,[[98,[45]]]]]],[[71,82,125],[[99,[[98,[45]]]]]],[[75,82,125],[[99,[[98,[45]]]]]],[[76,82,125],[[99,[[98,[45]]]]]],[[77,82,125],[[99,[[98,[45]]]]]],[[78,82,125],[[99,[[98,[45]]]]]],[[79,82,125],[[99,[[98,[45]]]]]],[[62,82,125],[[99,[[98,[45]]]]]],[[53,82,125],[[99,[[98,[45]]]]]],[[80,82,125],[[99,[[98,[45]]]]]],[[54,47],[[99,[[98,[45]]]]]],[[64,47],[[99,[[98,[45]]]]]],[[100,47],[[99,[[98,[45]]]]]],[[87,47],[[99,[[98,[45]]]]]],[[91,47],[[99,[[98,[45]]]]]],[[89,47],[[99,[[98,[45]]]]]],[[34,47],[[99,[[98,[45]]]]]],[[72,47],[[99,[[98,[45]]]]]],[[81,47],[[99,[[98,[45]]]]]],[[73,47],[[99,[[98,[45]]]]]],[[65,47],[[99,[[98,[45]]]]]],[[50,47],[[99,[[98,[45]]]]]],[[52,47],[[99,[[98,[45]]]]]],[[48,47],[[99,[[98,[45]]]]]],[[57,47],[[99,[[98,[45]]]]]],[[126,47],[[99,[[98,[45]]]]]],[[70,47],[[99,[[98,[45]]]]]],[[74,47],[[99,[[98,[45]]]]]],[[123,47],[[99,[[98,[45]]]]]],[[86,47],[[99,[[98,[45]]]]]],[[71,47],[[99,[[98,[45]]]]]],[[75,47],[[99,[[98,[45]]]]]],[[76,47],[[99,[[98,[45]]]]]],[[77,47],[[99,[[98,[45]]]]]],[[78,47],[[99,[[98,[45]]]]]],[[79,47],[[99,[[98,[45]]]]]],[[62,47],[[99,[[98,[45]]]]]],[[53,47],[[99,[[98,[45]]]]]],[[80,47],[[99,[[98,[45]]]]]],[[77,47],[[51,[66]]]],[[78,47],[[51,[24]]]],0,0,[[57,47],[[49,[[24,[127]]]]]],[[126,47],[[51,[63]]]],0,0,[[34,47],[[49,[89]]]],0,[[73,47],[[51,[128]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[74,47],[[49,[123]]]],[[34,47,115],[[49,[57]]]],0,[[80,47],[[51,[[24,[79]]]]]],0,[[34,47],[[51,[54]]]],[[36,47],[[51,[129]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[74,47],[[51,[58]]]],[[64,47],[[49,[63]]]],[[64,47],[[49,[63]]]],[[34,47,25],[[49,[65]]]],[[64,47,[24,[55]],[24,[55]],[24,[25]],[24,[25]]],[[49,[[61,[56,65,[59,[58]],60]]]]]],[[54,47,25,[24,[55]],[24,[55]],[24,[25]],[24,[25]]],[[49,[[61,[56,65,[59,[58]],60]]]]]],[[126,47],[[51,[63]]]],0,[[126,47],[[51,[100]]]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[108,93],[[49,[54]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[62,47],[[51,[73]]]],0,[[34,47,25],[[49,[62]]]],[[[96,[130]]],62],[[116,47],[[49,[62]]]],[[62,47],[[51,[73]]]],0,[[80,47,[24,[55]],[24,[55]],[24,[25]],[24,[25]]],[[49,[[61,[56,53,[59,[58]],60]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[131,47],[[49,[48]]]],[[132,47],[[51,[25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[133,47],[[51,[117]]]],[[69,82,83],84],[[134,47],[[51,[73]]]],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[131,47,97],[[99,[[98,[45]]]]]],[[124,47,97],[[99,[[98,[45]]]]]],[[135,47,97],[[99,[[98,[45]]]]]],[[127,47,97],[[99,[[98,[45]]]]]],[[136,47,97],[[99,[[98,[45]]]]]],[[134,47,97],[[99,[[98,[45]]]]]],[[137,47,97],[[99,[[98,[45]]]]]],[[138,47,97],[[99,[[98,[45]]]]]],[[133,47,97],[[99,[[98,[45]]]]]],[[139,47,97],[[99,[[98,[45]]]]]],[[140,47,97],[[99,[[98,[45]]]]]],[[132,47,97],[[99,[[98,[45]]]]]],[141,131],[[]],[[]],[142,124],[143,135],[[]],[[]],[144,127],[[]],[145,136],[146,134],[[]],[147,137],[[]],[[]],[[]],[148,133],[[]],[149,139],[[]],[150,132],[[]],[134,69],[136,69],[124,69],[132,69],[138,69],[131,69],[137,69],[139,69],[133,69],[151,69],[140,69],[127,69],[[]],[135,69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[69,[[118,[28]]]],[[124,47],[[51,[55]]]],[[140,47],[[51,[25]]]],[[124,47],[[51,[[66,[114]]]]]],[[124,47],[[51,[[66,[114]]]]]],[[134,47],[[51,[122]]]],[[124,47],[[51,[57]]]],[[127,47],[[51,[115]]]],[[136,47],[[51,[115]]]],[[131,47],[[51,[[66,[57]]]]]],[[135,47],[[51,[[66,[57]]]]]],[[139,47],[[51,[25]]]],[[137,47],[[51,[55]]]],[[134,47],[[51,[[66,[91]]]]]],[[133,47],[[51,[72]]]],[[131,82,125],[[99,[[98,[45]]]]]],[[124,82,125],[[99,[[98,[45]]]]]],[[135,82,125],[[99,[[98,[45]]]]]],[[127,82,125],[[99,[[98,[45]]]]]],[[136,82,125],[[99,[[98,[45]]]]]],[[134,82,125],[[99,[[98,[45]]]]]],[[137,82,125],[[99,[[98,[45]]]]]],[[138,82,125],[[99,[[98,[45]]]]]],[[133,82,125],[[99,[[98,[45]]]]]],[[139,82,125],[[99,[[98,[45]]]]]],[[140,82,125],[[99,[[98,[45]]]]]],[[132,82,125],[[99,[[98,[45]]]]]],[[69,82,125],[[99,[[98,[45]]]]]],[[131,47],[[99,[[98,[45]]]]]],[[124,47],[[99,[[98,[45]]]]]],[[135,47],[[99,[[98,[45]]]]]],[[127,47],[[99,[[98,[45]]]]]],[[136,47],[[99,[[98,[45]]]]]],[[134,47],[[99,[[98,[45]]]]]],[[137,47],[[99,[[98,[45]]]]]],[[138,47],[[99,[[98,[45]]]]]],[[133,47],[[99,[[98,[45]]]]]],[[139,47],[[99,[[98,[45]]]]]],[[140,47],[[99,[[98,[45]]]]]],[[132,47],[[99,[[98,[45]]]]]],[[69,47],[[99,[[98,[45]]]]]],[[127,47],[[51,[152]]]],[[124,47],[[51,[[24,[48]]]]]],[[124,47],[[51,[100]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[124,47],[[51,[152]]]],[[136,47],[[51,[152]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[134,47],[[51,[73]]]],[[137,47],[[51,[116]]]],[[138,47],[[51,[116]]]],[[134,47],[[51,[73]]]],[[139,47],[[51,[72]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[85,25],[85,25],[[],[[118,[28]]]],[[],[[118,[28]]]],[[153,47],[[51,[72]]]],0,[[154,47],[[51,[25]]]],0,[155,24],[156,24],[[157,47],[[51,[58]]]],0,[[158,47],[[51,[159]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[94,47],[[51,[58]]]],0,[[160,47],[[51,[24]]]],0,[[160,47],[[51,[24]]]],0,[[160,47],[[51,[24]]]],0,[[161,47],[[51,[24]]]],0,[[161,47],[[51,[24]]]],0,[155,155],[156,156],[[]],[[]],[[94,47],[[51,[58]]]],0,[[162,82,83],84],[[163,82,83],84],[[117,47],[[51,[66]]]],0,[[164,47],[[51,[156]]]],0,[[94,47],[[51,[58]]]],[[165,47],[[51,[58]]]],[[166,47],[[51,[58]]]],0,0,0,[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[167,47],[[51,[155]]]],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[165,47],[[51,[168]]]],[[166,47],[[51,[168]]]],0,0,[[90,47],[[51,[159]]]],0,[[165,47],[[51,[159]]]],[[166,47],[[51,[159]]]],0,0,[[155,155],119],[[156,156],119],[[],119],[[],119],[[169,47],[[51,[119]]]],0,[170,157],[[]],[[]],[[]],[171,167],[[]],[172,164],[[]],[[]],[159,173],[[]],[174,175],[[]],[159,90],[176,177],[[]],[[]],[159,158],[[]],[101,153],[101,178],[[]],[[]],[179,94],[[]],[180,160],[[]],[181,161],[[]],[159,182],[159,183],[[]],[184,185],[[]],[186,187],[[]],[184,188],[[]],[[]],[[]],[165,162],[166,162],[[]],[[]],[[]],[[]],[189,190],[[]],[119,169],[[]],[191,192],[[]],[[]],[[],193],[[]],[194,154],[[]],[194,195],[[]],[174,196],[177,163],[169,163],[161,163],[183,163],[173,163],[188,163],[193,163],[90,163],[164,163],[197,163],[196,163],[154,163],[187,163],[153,163],[192,163],[160,163],[94,163],[167,163],[182,163],[185,163],[158,163],[175,163],[178,163],[[]],[157,163],[195,163],[190,163],[198,163],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[199,117],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[162,[[118,[28]]]],[163,[[118,[28]]]],[[]],[[]],[[183,47],[[51,[159]]]],0,[[193,47],[[51,[168]]]],0,[[177,47],[[51,[58]]]],0,[[193,47],[[51,[168]]]],0,[[[24,[97]]],[[200,[155]]]],[[[24,[97]]],[[200,[156]]]],[[94,47],[[51,[160]]]],0,[[94,47],[[51,[161]]]],0,[[182,47],[[51,[159]]]],0,[[165,47],[[51,[87]]]],[[166,47],[[51,[87]]]],0,0,[[178,47],[[51,[72]]]],0,[[195,47],[[51,[25]]]],0,[[157,82,125],[[99,[[98,[45]]]]]],[[155,82,125],[[99,[[98,[45]]]]]],[[167,82,125],[[99,[[98,[45]]]]]],[[156,82,125],[[99,[[98,[45]]]]]],[[164,82,125],[[99,[[98,[45]]]]]],[[173,82,125],[[99,[[98,[45]]]]]],[[175,82,125],[[99,[[98,[45]]]]]],[[90,82,125],[[99,[[98,[45]]]]]],[[177,82,125],[[99,[[98,[45]]]]]],[[158,82,125],[[99,[[98,[45]]]]]],[[153,82,125],[[99,[[98,[45]]]]]],[[178,82,125],[[99,[[98,[45]]]]]],[[94,82,125],[[99,[[98,[45]]]]]],[[160,82,125],[[99,[[98,[45]]]]]],[[161,82,125],[[99,[[98,[45]]]]]],[[182,82,125],[[99,[[98,[45]]]]]],[[183,82,125],[[99,[[98,[45]]]]]],[[185,82,125],[[99,[[98,[45]]]]]],[[187,82,125],[[99,[[98,[45]]]]]],[[188,82,125],[[99,[[98,[45]]]]]],[[165,82,125],[[99,[[98,[45]]]]]],[[166,82,125],[[99,[[98,[45]]]]]],[[162,82,125],[[99,[[98,[45]]]]]],[[190,82,125],[[99,[[98,[45]]]]]],[[169,82,125],[[99,[[98,[45]]]]]],[[198,82,125],[[99,[[98,[45]]]]]],[[192,82,125],[[99,[[98,[45]]]]]],[[193,82,125],[[99,[[98,[45]]]]]],[[154,82,125],[[99,[[98,[45]]]]]],[[195,82,125],[[99,[[98,[45]]]]]],[[196,82,125],[[99,[[98,[45]]]]]],[[163,82,125],[[99,[[98,[45]]]]]],[[117,82,125],[[99,[[98,[45]]]]]],[[157,47],[[99,[[98,[45]]]]]],[[167,47],[[99,[[98,[45]]]]]],[[164,47],[[99,[[98,[45]]]]]],[[173,47],[[99,[[98,[45]]]]]],[[175,47],[[99,[[98,[45]]]]]],[[90,47],[[99,[[98,[45]]]]]],[[177,47],[[99,[[98,[45]]]]]],[[158,47],[[99,[[98,[45]]]]]],[[153,47],[[99,[[98,[45]]]]]],[[178,47],[[99,[[98,[45]]]]]],[[94,47],[[99,[[98,[45]]]]]],[[160,47],[[99,[[98,[45]]]]]],[[161,47],[[99,[[98,[45]]]]]],[[182,47],[[99,[[98,[45]]]]]],[[183,47],[[99,[[98,[45]]]]]],[[185,47],[[99,[[98,[45]]]]]],[[187,47],[[99,[[98,[45]]]]]],[[188,47],[[99,[[98,[45]]]]]],[[165,47],[[99,[[98,[45]]]]]],[[166,47],[[99,[[98,[45]]]]]],[[162,47],[[99,[[98,[45]]]]]],[[190,47],[[99,[[98,[45]]]]]],[[169,47],[[99,[[98,[45]]]]]],[[198,47],[[99,[[98,[45]]]]]],[[192,47],[[99,[[98,[45]]]]]],[[193,47],[[99,[[98,[45]]]]]],[[154,47],[[99,[[98,[45]]]]]],[[195,47],[[99,[[98,[45]]]]]],[[196,47],[[99,[[98,[45]]]]]],[[163,47],[[99,[[98,[45]]]]]],[[117,47],[[99,[[98,[45]]]]]],[[192,47],[[51,[87]]]],0,[[198,47],[[51,[119]]]],0,[[190,47],[[51,[162]]]],0,[[188,47],[[51,[63]]]],0,[[175,47],[[51,[174]]]],0,[[173,47],[[51,[159]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[155,97],[156,97],[[196,47],[[51,[174]]]],0,[[185,47],[[51,[63]]]],0,[[187,47],[[51,[100]]]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[201,[[201,[202]]]],[201,[[4,[[201,[203]]]]]],[[[201,[[0,[[203,[58]],33]]]],[204,[[0,[[203,[58]],33]]]]],49],[[[205,[58]],[204,[58]]],[[205,[58]]]],[85,25],[204,[[204,[202]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[[]],[[]],[[]],[[]],[[]],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],0,0,[[[59,[[0,[206,41,42]]]],82,125],[[99,[[98,[45]]]]]],[[[59,[[0,[206,41,42]]]],47],[[99,[[98,[45]]]]]],[[[59,[[0,[206,41,42]]]],47],51],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[],26],[[],26],[[],26],[[],[[118,[28]]]],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[6],[6],[6],[[207,7],8],[[207,7],8],[[]],[[],6],[[]],[[],17],[[],16],[21],[[],25],[[],4],[[],4],[[],26],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[85,25],[[],[[118,[28]]]],[115,24],[63,24],[114,24],[152,24],[88,24],[208,24],[209,24],[68,24],[128,24],[67,24],[116,24],[92,24],[122,24],[210,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,68],[128,128],[67,67],[116,116],[92,92],[122,122],[210,210],[121,121],[56,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[85,25],[28,[[4,[56]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[56,25],[[121,47],[[51,[55]]]],0,[[122,122],119],[[],119],[[]],[[]],[58,63],[[]],[211,114],[212,152],[[]],[[]],[159,208],[58,208],[[]],[58,209],[[]],[[]],[[]],[[]],[213,116],[[]],[[]],[214,92],[[]],[112,122],[[]],[[[216,[215]]],210],[217,121],[[]],[218,56],[[]],[58,56],[159,56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],[[219,[25]]]],[[]],[[[24,[97]]],[[200,[115]]]],[97,[[200,[115]]]],[[[24,[97]]],[[200,[63]]]],[97,[[200,[63]]]],[97,[[200,[114]]]],[[[24,[97]]],[[200,[114]]]],[97,[[200,[152]]]],[[[24,[97]]],[[200,[152]]]],[97,[[200,[88]]]],[[[24,[97]]],[[200,[88]]]],[[[24,[97]]],[[200,[208]]]],[97,[[200,[208]]]],[97,[[200,[209]]]],[[[24,[97]]],[[200,[209]]]],[[[24,[97]]],[[200,[68]]]],[97,[[200,[68]]]],[97,[[200,[128]]]],[[[24,[97]]],[[200,[128]]]],[97,[[200,[67]]]],[[[24,[97]]],[[200,[67]]]],[97,[[200,[116]]]],[[[24,[97]]],[[200,[116]]]],[[[24,[97]]],[[200,[92]]]],[97,[[200,[92]]]],[[[24,[97]]],[[200,[122]]]],[97,[[200,[210]]]],[[[24,[97]]],[[200,[210]]]],[[115,82,125],[[99,[[98,[45]]]]]],[[63,82,125],[[99,[[98,[45]]]]]],[[114,82,125],[[99,[[98,[45]]]]]],[[152,82,125],[[99,[[98,[45]]]]]],[[88,82,125],[[99,[[98,[45]]]]]],[[208,82,125],[[99,[[98,[45]]]]]],[[209,82,125],[[99,[[98,[45]]]]]],[[68,82,125],[[99,[[98,[45]]]]]],[[128,82,125],[[99,[[98,[45]]]]]],[[67,82,125],[[99,[[98,[45]]]]]],[[116,82,125],[[99,[[98,[45]]]]]],[[92,82,125],[[99,[[98,[45]]]]]],[[122,82,125],[[99,[[98,[45]]]]]],[[210,82,125],[[99,[[98,[45]]]]]],[[121,82,125],[[99,[[98,[45]]]]]],[[121,47],[[99,[[98,[45]]]]]],[[121,47],[[51,[55]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[115,97],[115,97],[63,97],[63,97],[114,97],[114,97],[152,97],[152,97],[88,97],[88,97],[208,97],[208,97],[209,97],[209,97],[68,97],[68,97],[128,97],[128,97],[67,97],[67,97],[116,97],[116,97],[92,97],[92,97],[122,97],[210,97],[210,97],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[56,[[4,[58]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[],[[118,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,220],[[4,[109,221]]]],[[222,95],222],[[223,95],[[4,[223,221]]]],[[224,95],[[4,[224,221]]]],[[225,95],225],[[226,95],226],[[227,228,95],[[4,[221]]]],[[229,95],[[4,[229,221]]]],[[230,95,226],[[4,[230,221]]]],0,0,[220,[[4,[2,221]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[231,231],[232,232],[2,2],[233,233],[234,234],[235,235],[31,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[6],[6],[6],[6],[6],[6],[6],0,0,0,0,[[2,218],[[66,[108]]]],[[2,107],[[66,[108]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[199,234],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,108],[[24,[[96,[95]]]]]],[[235,218,218],66],[232,108],[[2,108],24],[[2,108],[[24,[109]]]],[2,66],[[2,106],[[24,[113]]]],[[2,110],[[24,[[96,[[236,[108]]]]]]]],[[2,110],[[24,[[96,[120]]]]]],[235,66],[2],[[2,213],[[24,[[96,[130]]]]]],[235,66],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[2,108],119],0,0,0,[108,232],0,0,0,[[2,108],[[4,[237]]]],0,0,0,0,0,0,[2,129],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[235,103],[[24,[[236,[107]]]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[221,221],[237,237],[[]],[[]],[6],[6],[6],[6],[6],[6],[[221,7],8],[[221,7],8],[[237,7],8],[[237,7],8],[237,221],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[]],[[]],[[],16],[[],17],[[],17],[[],16],[21],[21],[221,[[24,[23]]]],[[]],[[]],[[],25],[[],25],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[95,218],0,[120,120],[95,95],[238,238],[105,105],[239,239],[240,240],[113,113],[103,103],[130,130],[241,241],[111,111],[104,104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[95,102],0,[[],105],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[103,103],119],[[],119],0,[[120,7],8],[[95,7],8],[[238,7],8],[[105,7],8],[[239,7],8],[[240,7],8],[[103,7],8],[[130,7],8],[[241,7],8],[[111,7],8],[[104,7],8],[[242,7],8],[[]],[[]],[[]],[[242,107,243,[24,[151]],159,244],[[4,[105,221]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],58],[103],[95,108],[105,107],0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[105,66],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],[[],17],[[],16],[[],17],[[],16],0,0,0,[105,66],0,0,0,0,0,[95,238],0,0,0,0,[[220,242],[[4,[95,221]]]],0,0,[103,[[24,[245]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[246,246],[[]],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[246,159]],[[246,108],[[24,[[247,[235]]]]]],[[],6],[[],6],0,[[246,218,108,108,235],[[247,[235]]]],[[]],[[]],[[],16],[[],17],[[],17],[[],16],0,[[218,108,235]],[246,66],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[]],[[]],0,[236,236],[[]],[[]],[[[236,[33]]],[[236,[33]]]],[[]],[[],236],[6],[6],[6],0,[[[236,[248]],7],8],[[]],[[]],[[236,[249,[58]]],[[24,[96]]]],[[],6],[[]],[[],16],[[],17],[236,119],[236,58],0,[[],236],[[]],[[],4],[[],4],[[],26],[[]],[[111,250],104],[[111,226],104],0,0,0,0,0,0,0,0,0,0,0,0,0,[[14,220],[[4,[12]]]],[[]],[[]],[[]],[[]],[14,14],[[]],0,[6],[6],[6],[6],[6],[6],[[12,7],8],[[12,7],8],[251,12],[221,12],[252,12],[253,12],[[]],[254,12],[[]],[[]],[[],6],[[],6],[[]],[[]],[[],16],[[],17],[[],17],[[],16],[2,14],[21],[[14,108]],[12,[[24,[23]]]],0,[[]],[[],25],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[255,255],[256,256],[257,257],[[]],[[]],[[]],[[],255],[[],256],[[],257],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[258,[[4,[255]]]],[258,[[4,[256]]]],[259],[6],[6],[6],[6],[6],[[255,255],119],[[256,256],119],[[257,257],119],[[],119],[[],119],[[],119],[[255,7],8],[[255,7],8],[[256,7],8],[[257,7],8],[[11,7],8],[[11,7],8],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[4,[255]]]],[28,[[4,[256]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[257,[[4,[259,11]]]],[[257,260],[[4,[11]]]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],16],[[],17],[[],17],[[],16],0,0,[21],[[255,261],4],[[256,261],4],[11,[[24,[23]]]],[[]],[[]],[[]],[[],25],[[],25],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],66],[[],[[66,[28]]]],0,0,0,[262,262],[262,262],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[263,263],[[]],[[],262],[[],262],0,0,0,[[],264],[6],[6],[265,66],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[258,[[4,[264]]]],[258,[[4,[263]]]],[258,[[4,[[24,[266]]]]]],[6],[6],[6],[6],[6],[6],[[263,263],119],[[],119],0,[[10,7],8],[[10,7],8],[[267,7],8],[[264,7],8],[[263,7],8],0,[[]],[[]],[[]],[252,10],[268,10],[[]],[[]],[[]],[269,[[4,[267,270]]]],[269,[[4,[267,270]]]],[[]],[[],[[24,[271]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[],17],[[],17],[[],16],0,[[],[[4,[22,10]]]],0,0,[28,[[4,[272,25]]]],0,[[267,264],257],0,0,0,0,0,0,0,[21],0,0,0,0,0,0,[[263,261],4],[10,[[24,[23]]]],0,0,[[]],[[],25],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[267,269],[[4,[270]]]],[[267,269],[[4,[270]]]],[[]],[[]],[[]],[[]],[[]],[[]],[258,[[4,[[24,[272]]]]]],[[24,261],4]],"c":[],"p":[[6,"SyncMultiverseStream"],[3,"ExplorerDb"],[4,"Error"],[4,"Result"],[4,"GlobalState"],[15,"usize"],[3,"Formatter"],[6,"Result"],[4,"BootstrapError"],[4,"Error"],[4,"Error"],[4,"IndexerError"],[3,"Block"],[3,"Indexer"],[3,"Header"],[3,"Request"],[3,"Request"],[3,"Receiver"],[6,"BlockSubscription"],[6,"TipSubscription"],[3,"Demand"],[3,"Settings"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[3,"__StaticPath"],[15,"str"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"Settings"],[8,"Filter"],[8,"Clone"],[3,"Query"],[3,"EmptyMutation"],[3,"Subscription"],[3,"Schema"],[3,"Request"],[8,"Reply"],[4,"Infallible"],[8,"Send"],[8,"Sync"],[4,"SocketAddr"],[3,"Tls"],[8,"Future"],[3,"Cors"],[6,"Context"],[3,"Address"],[6,"FieldResult"],[3,"TransactionInput"],[6,"Result"],[3,"TransactionOutput"],[3,"VoteStatus"],[3,"Branch"],[15,"i32"],[3,"IndexCursor"],[3,"Pool"],[15,"u64"],[3,"ConnectionFields"],[3,"EmptyFields"],[3,"Connection"],[3,"VotePlanStatus"],[3,"Value"],[3,"Block"],[3,"Transaction"],[3,"Vec"],[3,"ChainLength"],[3,"EpochNumber"],[4,"Certificate"],[3,"FeeSettings"],[3,"VotePayloadPublicStatus"],[3,"BftLeader"],[3,"BlockDate"],[3,"Epoch"],[3,"VotePayloadPrivateStatus"],[4,"VotePayloadStatus"],[3,"TallyPublicStatus"],[3,"TallyPrivateStatus"],[4,"TallyStatus"],[3,"VoteProposalStatus"],[4,"Leader"],[6,"ContextSelectionSet"],[3,"Fields"],[6,"ServerResult"],[3,"Registry"],[3,"PoolStakeDistribution"],[3,"Ratio"],[3,"NonZero"],[3,"Settings"],[3,"EpochStabilityDepth"],[3,"Proposal"],[3,"ExternalProposalId"],[3,"EContext"],[3,"LinearFee"],[3,"ExplorerBlock"],[3,"Arc"],[4,"ConstValue"],[3,"Box"],[3,"Pin"],[3,"TaxType"],[3,"BftLeaderId"],[3,"BlockDate"],[4,"ExplorerAddress"],[4,"ExplorerVoteTally"],[3,"ExplorerTransaction"],[6,"Epoch"],[6,"FragmentId"],[6,"HeaderId"],[6,"Ref"],[6,"PoolId"],[3,"ExplorerVoteProposal"],[4,"PayloadType"],[3,"EpochData"],[3,"PublicKey"],[3,"PoolId"],[3,"VotePlanId"],[3,"ConfigParams"],[4,"Cow"],[15,"bool"],[3,"StakePoolData"],[3,"VoteOptionRange"],[4,"PayloadType"],[3,"StakeDistribution"],[3,"PoolRegistration"],[3,"Positioned"],[3,"Treasury"],[3,"PoolRetirement"],[3,"Slot"],[8,"Stream"],[3,"ExplorerVotePlan"],[3,"StakeDelegation"],[3,"EvmMapping"],[3,"UpdateProposal"],[3,"VotePlan"],[3,"OwnerStakeDelegation"],[3,"PoolUpdate"],[3,"VoteCast"],[3,"VoteTally"],[3,"UpdateVote"],[3,"MintToken"],[3,"StakeDelegation"],[3,"PoolRegistration"],[3,"OwnerStakeDelegation"],[3,"PoolRetirement"],[3,"PoolUpdate"],[3,"VotePlan"],[3,"VoteCast"],[3,"UpdateProposal"],[3,"UpdateVote"],[3,"EvmMapping"],[4,"Certificate"],[3,"TimeOffsetSeconds"],[3,"AddBftLeader"],[3,"AddCommitteeId"],[4,"DiscriminationEnum"],[4,"ConsensusTypeEnum"],[3,"Block0Date"],[3,"BlockContentMaxSize"],[15,"u32"],[3,"PerCertificateFee"],[3,"PerVoteCertificateFee"],[4,"RewardParamsUnion"],[4,"ConfigParam"],[3,"ConsensusType"],[3,"LinearRewardParams"],[3,"HalvingRewardParams"],[3,"Discrimination"],[3,"NonZeroU32"],[3,"FeesInTreasury"],[3,"Block0Date"],[4,"Discrimination"],[4,"ConsensusType"],[3,"SlotsPerEpoch"],[15,"u8"],[3,"SlotDuration"],[3,"Milli"],[3,"Milli"],[3,"RemoveBftLeader"],[3,"LinearFee"],[3,"PerCertificateFee"],[3,"PerVoteCertificateFee"],[3,"ProposalExpiration"],[3,"KesUpdateSpeed"],[3,"Value"],[3,"TreasuryAdd"],[3,"TaxType"],[3,"TreasuryParams"],[3,"RewardPot"],[4,"RewardParams"],[3,"RewardParams"],[3,"Ratio"],[3,"RewardLimitByAbsoluteStake"],[3,"PoolRewardParticipationCapping"],[3,"CommitteeId"],[3,"RemoveCommitteeId"],[3,"TransactionMaxExpiryEpochs"],[4,"ConfigParam"],[3,"RewardLimitNone"],[3,"ConfigParams"],[6,"InputValueResult"],[4,"PaginationInterval"],[8,"From"],[8,"TryFrom"],[3,"ValidatedPaginationArguments"],[3,"InclusivePaginationInterval"],[8,"OutputType"],[4,"ApiError"],[3,"VotePlanCount"],[3,"VoteStatusCount"],[3,"Weight"],[3,"PublicKey"],[3,"TimeOffsetSeconds"],[6,"VotePlanId"],[6,"ExternalProposalId"],[3,"Weight"],[8,"Borrow"],[3,"Options"],[3,"ChainLength"],[4,"Resettable"],[3,"Block"],[4,"ExplorerError"],[6,"Addresses"],[6,"Blocks"],[6,"ChainLengths"],[6,"Epochs"],[3,"StakeControl"],[6,"StakePool"],[6,"StakePoolBlocks"],[6,"Transactions"],[6,"VotePlans"],[3,"Explorer"],[3,"Tip"],[3,"StableIndex"],[3,"BlockchainConfig"],[3,"State"],[3,"PersistentSequence"],[3,"BlockNotFound"],[4,"BlockProducer"],[3,"ExplorerInput"],[3,"ExplorerOutput"],[4,"ExplorerVote"],[3,"ExplorerBlockBuildingContext"],[3,"TransactionSlice"],[3,"HashMap"],[3,"Identifier"],[3,"Multiverse"],[3,"Ref"],[8,"Debug"],[8,"Into"],[3,"DecryptedPrivateTallyProposal"],[4,"ParseError"],[3,"Error"],[3,"Error"],[4,"Error"],[4,"LogFormat"],[4,"LogOutput"],[3,"LogSettings"],[8,"Deserializer"],[3,"LogGuard"],[3,"NonBlocking"],[8,"Serializer"],[3,"Command"],[3,"ConfigLogSettings"],[3,"Config"],[3,"LOG_FILTER_LEVEL_POSSIBLE_VALUES"],[3,"Uri"],[3,"CommandLine"],[3,"Error"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"LevelFilter"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[3,"Token"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[8,"AmbiguousIfMoreThanOne"],[3,"PageMeta"],[13,"Private"],[13,"Public"],[13,"Private"],[3,"Inner"],[13,"File"],[13,"FormatNotSupported"]]},\
"explorer_client":{"doc":"","t":"DENENNMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLFLFLMLLLLLLLLLLLLLLLLL","n":["Command","Error","Explorer","ExplorerClientCommand","Io","LastBlock","address","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","full_version","group_id","has_subcommand","init","init","init","into","into","into","into_request","into_request","into_request","main","provide","report_error","source","source_version","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip"],"q":[[0,"explorer_client"]],"d":["","","","Explorer Client CLI toolkit","","Get last block","explorer address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","display full version details (software version, source …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","display the sources version, allowing to check the source…","","","","","","","","","","","","","","","","",""],"i":[0,0,4,0,4,6,3,3,3,6,6,4,3,6,4,3,6,3,6,3,3,6,4,3,6,4,3,6,4,3,6,3,6,4,4,4,4,4,3,6,3,6,3,6,3,3,6,4,3,6,4,3,6,4,3,6,0,4,0,4,3,4,4,3,6,4,3,6,4,3,6,3,6,3,6,4,3,6],"f":[0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],0,[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[3,[[5,[4]]]],[[6,7],[[5,[8]]]],[[4,9],10],[[4,9],10],[11,4],[8,4],[[]],[[]],[[]],[12,[[5,[3,13]]]],[12,[[5,[6,13]]]],[12,[[5,[3,13]]]],[12,[[5,[6,13]]]],0,[[],[[15,[14]]]],[16,17],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[]],[19],[4],[4,[[15,[20]]]],0,[[],7],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],21],[[],21],[[],21],[[3,12],[[5,[13]]]],[[6,12],[[5,[13]]]],[[3,12],[[5,[13]]]],[[6,12],[[5,[13]]]],[[]],[[]],[[]]],"c":[],"p":[[3,"Command"],[15,"usize"],[3,"Command"],[4,"Error"],[4,"Result"],[4,"ExplorerClientCommand"],[3,"String"],[4,"ExplorerError"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Request"],[3,"Demand"],[8,"Error"],[3,"TypeId"]]},\
"find":{"doc":"Find my vote","t":"DHHHHHHHHLLLLLLLLLLLLMLLLLLLFLLLLLLML","n":["Args","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","deref","deref_mut","drop","fmt","fragments","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","main","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","voting_key","vzip"],"q":[[0,"find"]],"d":["Args defines and declares CLI behaviour within the context …","","","","","","","","","","","","","","","","","","","","","Obtain fragments by providing path to historical fund data.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","voting key",""],"i":[0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2],"f":[0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[2,2],[[]],[[],1],[[],1],[3],[3],[3],[[2,4],5],0,[[]],[6,[[8,[2,7]]]],[6,[[8,[2,7]]]],[[],[[10,[9]]]],[[],3],[[]],[[],[[13,[[12,[11]]]]]],[[]],[[],8],[[],8],[[],14],[[2,6],[[8,[7]]]],[[2,6],[[8,[7]]]],0,[[]]],"c":[],"p":[[3,"Command"],[3,"Args"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[8,"Error"],[3,"Box"],[6,"Result"],[3,"TypeId"]]},\
"grpc_client_app":{"doc":"","t":"F","n":["main"],"q":[[0,"grpc_client_app"]],"d":[""],"i":[0],"f":[[[]]],"c":[],"p":[]},\
"grpc_server_app":{"doc":"","t":"F","n":["main"],"q":[[0,"grpc_server_app"]],"d":[""],"i":[0],"f":[[[]]],"c":[],"p":[]},\
"hdkeygen":{"doc":"","t":"DDMAAMAMMMMADDSGLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLRSSSDDMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLLLLLMLLLLLLMLLLLLLLLLLLLLLLDFARRNERDRRNNRRLLLLLLFFFLLLLLLLLLLLLLLLLLLLL","n":["Key","KeyRange","_marker","account","bip44","derivation_scheme","key","key","key","path","range","rindex","Account","AccountId","SIZE","Seed","account_id","address","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","cmp","counter","counter","encode_hex","encode_hex_upper","eq","fmt","fmt","from","from","from","from_secret_key","from_seed","from_str","from_str","hash","id","increase_counter","into","into","partial_cmp","public","secret","secret","set_counter","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","COIN_TYPE","ACCOUNT","EXTERNAL","INTERNAL","Key","KeyRange","_marker","account","account","account","address","address","address_account","address_group","address_single","addresses","as_ref","base32_len","bip44","borrow","borrow","borrow_mut","borrow_mut","cardano","chain_code","change","change","check_base32","chimeric_bip44","clone","clone_into","coerce_unchecked","coin_type","derivation_scheme","derive_path_unchecked","derive_unchecked","derive_unchecked","encode_hex","encode_hex_upper","external","external","fmt","fmt","fmt","from","from","hd_key","id","internal","internal","into","into","into_iter","key","key","key","new","new_unchecked","next","next","path","path","pk","pk","public","public_key","public_key_slice","purpose","range","sign","sign","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify","verify","vzip","vzip","write_base32","HdKey","decode_derivation_path","hdpayload","CBOR_BREAK","CBOR_INDEFINITE_ARRAY","CannotDecrypt","Error","HDKEY_SIZE","HdKey","MAX_PAYLOAD_SIZE","NONCE","NotEnoughEncryptedData","PayloadIsTooLarge","SALT","TAG_LEN","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cursor_read","decode_derivation","decode_derivation_path","decrypt","drop","fmt","fmt","from","from","into","into","new","provide","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"hdkeygen"],[12,"hdkeygen::account"],[63,"hdkeygen::bip44"],[64,"hdkeygen::key"],[147,"hdkeygen::rindex"],[150,"hdkeygen::rindex::hdpayload"]],"d":["convenient wrapper around the <code>Key</code>.","","","account based wallet, does not really have any …","","","","","","","","random indexes wallet - 2 Level of randomly chosen hard …","","","the total size of an account ID","","","get the public address associated to this account …","","","","","","","","","","","get the transaction counter","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","increase the counter with the given amount","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","convenient wrapper around the <code>Key</code>.","","","","","","","","","","","","","","","","","","","","get key’s chain code","","","","","","","","","","derive the private key against the given derivation index …","derive the private key against the given derivation index …","derive the private key against the given derivation index …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","get an address recovering object, this object can be used …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","create a <code>Key</code> with the given component","","","get the derivation path that lead to this key","","","","retrieve the associated public key of the given private key","","get the public key content without revealing the chaincode.","","","create a signature for the given message and associate the …","create a signature for the given message and associate the …","","","","","","","","","verify the signature with the private key for the given …","verify the signature with the public key for the given …","","","","The key to encrypt and decrypt HD payload","","HD Payload","","","","","","The key to encrypt and decrypt HD payload","This is the max size we accept to try to decrypt a …","","","this relates to the issue that addresses with the payload …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>HDKey</code> from an extended public key","","","","","","","","","","",""],"i":[0,0,38,0,0,29,0,29,38,29,38,0,0,0,3,0,2,3,3,3,2,3,2,3,3,3,3,3,2,2,3,3,3,3,3,2,3,3,2,2,3,3,3,3,2,2,3,3,2,2,2,2,3,3,2,3,2,3,2,3,2,3,3,0,29,29,29,0,0,38,29,29,29,29,29,29,29,29,29,29,29,29,29,38,29,38,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,38,29,29,29,29,29,38,38,29,29,38,38,29,38,38,29,29,29,29,29,29,29,29,38,29,29,29,29,29,38,29,38,29,38,29,29,29,38,29,0,0,0,0,0,56,0,0,0,0,0,56,56,0,0,56,47,56,47,47,47,0,0,0,47,47,56,56,56,47,56,47,47,56,47,56,56,47,56,47,56,47,56,47],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],3],[[3,4],5],[3],[[],6],[[]],[[]],[[]],[[]],[[],[[10,[[9,[7,8]]]]]],[3,3],[[]],[[3,3],11],[[[2,[1]]],12],0,[[],[[14,[13]]]],[[],[[14,[13]]]],[[3,3],15],[[3,16],17],[[3,16],17],[[]],[[]],[[],3],[[[19,[18]]],[[2,[18]]]],[20,[[2,[21]]]],[22,10],[22,[[10,[3]]]],[3],0,[[[2,[1]],12]],[[]],[[]],[[3,3],[[23,[11]]]],[[[2,[1]]]],[[[2,[1]]],19],0,[[[2,[1]],12]],[[]],[[],24],[[],10],[[],10],[[],10],[[],10],[[],25],[[],25],[[]],[[]],[[],10],0,0,0,0,0,0,0,[[[29,[26,[28,[27]]]]],[[29,[26,[28,[30]]]]]],[[[29,[26,[28,[31]]]],32],[[29,[26,[28,[27]]]]]],[[[29,[33,[28,[27]]]]],[[29,[33,[28,[30]]]]]],[[[29,[26,[28,[30]]]],34],[[29,[26,[28,[35]]]]]],[[[29,[33,[28,[30]]]],34],[[29,[33,[28,[35]]]]]],[[[29,[33,[28,[35]]]],4],5],[[[29,[33,[28,[35]]]],4,[36,[21]]],5],[[[29,[33,[28,[35]]]],4],5],[[[29,[33,[28,[30]]]],37],[[38,[33,37,[28,[30]],[28,[35]]]]]],[29],[[],6],[[[29,[26,[28,[39]]]]],[[29,[26,[28,[40]]]]]],[[]],[[]],[[]],[[]],[[[29,[26,[28,[40]]]]],[[29,[26,[28,[31]]]]]],[[[29,[26]]]],[[[29,[26,[28,[27]]]],34],[[29,[26,[28,[30]]]]]],[[[29,[33,[28,[27]]]],34],[[29,[33,[28,[30]]]]]],[[],[[10,[[9,[7,8]]]]]],[[[29,[26,[28,[39]]]]],[[29,[26,[28,[40]]]]]],[[[29,[41]]],[[29,[41]]]],[[]],[29,29],[[[29,[26,[28,[40]]]],32],[[29,[26,[28,[31]]]]]],0,[[[29,[26]],42],[[29,[26]]]],[[[29,[33]],34],[[29,[33]]]],[[[29,[26]],43],[[29,[26]]]],[[],[[14,[13]]]],[[],[[14,[13]]]],[[[29,[26,[28,[27]]]]],[[29,[26,[28,[30]]]]]],[[[29,[33,[28,[27]]]]],[[29,[33,[28,[30]]]]]],[[[29,[33]],16],17],[[[29,[44]],16],17],[[[29,[26]],16],17],[[]],[[]],[[[29,[26,[46,[45]]]]],47],[[[29,[[28,[27]]]]],32],[[[29,[26,[28,[27]]]]],[[29,[26,[28,[30]]]]]],[[[29,[33,[28,[27]]]]],[[29,[33,[28,[30]]]]]],[[]],[[]],[[]],[[[29,[26,[46,[45]]]],48],[[29,[26,[46,[49]]]]]],0,0,[29,38],[[48,50],29],[[[38,[33,37]]],23],[[[38,[26,51]]],23],[29,48],0,[[[29,[[19,[18]]]]],[[36,[21]]]],[[[29,[33]]],[[36,[21]]]],[[[29,[26]]],[[29,[33]]]],[[[29,[33]]],33],[[[29,[33]]]],[[[29,[26,[28,[39]]]],32],[[29,[26,[28,[40]]]]]],0,[[[29,[[19,[18]]]],52],53],[[[29,[26]],52],53],[[]],[[],24],[[],10],[[],10],[[],10],[[],10],[[],25],[[],25],[[[29,[26]],52,53],15],[[[29,[33]],52,53],15],[[]],[[]],[[],10],0,[[],[[23,[[48,[54]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[47,47],[[]],[[],[[23,[55]]]],[[],[[23,[43]]]],[[],[[23,[[48,[54]]]]]],[47,[[10,[[9,[55]],56]]]],[47],[[56,16],17],[[56,16],17],[[]],[[]],[[]],[[]],[33,47],[57],[[]],[[],24],[[],10],[[],10],[[],10],[[],10],[[],25],[[],25],[[]],[[]]],"c":[],"p":[[8,"AsymmetricKey"],[3,"Account"],[3,"AccountId"],[4,"Discrimination"],[3,"Address"],[15,"usize"],[3,"u5"],[3,"Global"],[3,"Vec"],[4,"Result"],[4,"Ordering"],[15,"u32"],[15,"char"],[8,"FromIterator"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Ed25519Extended"],[3,"SecretKey"],[6,"Seed"],[3,"Ed25519"],[15,"str"],[4,"Option"],[3,"String"],[3,"TypeId"],[3,"XPrv"],[3,"Account"],[3,"Bip44"],[3,"Key"],[3,"Change"],[3,"CoinType"],[3,"HardDerivation"],[3,"XPub"],[3,"SoftDerivation"],[3,"Address"],[3,"PublicKey"],[3,"SoftDerivationRange"],[3,"KeyRange"],[3,"Root"],[3,"Purpose"],[8,"Clone"],[8,"IntoIterator"],[3,"Derivation"],[8,"Debug"],[3,"Root"],[3,"Rindex"],[3,"HdKey"],[3,"DerivationPath"],[3,"Address"],[4,"DerivationScheme"],[3,"DerivationRange"],[8,"AsRef"],[3,"Signature"],[3,"AnyScheme"],[15,"u8"],[4,"Error"],[3,"Demand"]]},\
"hersir":{"doc":"","t":"AAAAAAAAADLLLLLLMLLLLLLLLLLLLLLLMLCDCGCCCCCCCDLMLLLLLAMLLLLFLALMLLLMLLLMLALMAAMALMLLLALMLALLMNNENLLLLLLLLLLFLLLLLLLLLLNELLLLLLLLFLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLCNENDDNMMLLLLLLMMLLLLLLLMLLLLLLLLLLLLLLLAMMLLLLMLMLLMLLLLLLAMLLAMDMLLLLMLLLLLLLLMMLMLLLLNNELLLLLLLLLLLLLLLLLLLLMMNNENNDGELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLFDDMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLDMLLLLLLLLLLLLFLLLLLMLLLLLLFFNNDCEEDDNNNNNNDDEDDNDEDMMMMMAMMMLLLLLLLLLLLLLLLLLLLLLLAMMMMMMLFFFFFLLLLLLLLLLLLLLLMMLLLLLMMLLLLLLLLLLLMMLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLMFMMMMMMMMMMMMMAMMMLLLLLLLMMMMLLLLLLLLLLLLLLLMMMMAMMMMLLLLLAMMMMMMMMMMMMMMMMMNNCCEGLLLLALLLLLLLLLLLLLLLWDDLLMLLMMLLLLLLLLLLMLLMLLMLLLLLLLLLMLLLLMLLLLLLLLLLLMLLLMLLMLLMLLMLLLLLLLMLLLLLLLLLLLLLLLLLLENNLLLLLLLLLLLLLLLLLLMMMMMMDMLMLMLLLLLLLLMLLMLLLLLLLLLLLMLLLLLLMLLMLMLMLMLMLMLMLMLLLMLLLMLMLMLMLMLMLLMLMLLLLMLMLLMLDDLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMMMLLNNECLLLLALLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMDMMLLLLLLLLMLLLLLLMMLLLMLLLLLWWNNNNNDCNNNENNNNNNNNCDDDDRRRENNDNNNNNNNCLMLLLLLLLLLLLLLLLLLCLLALLLLLLLLLMALLLLLLAMLLLMMMMMMMMLMLMLLLLLMLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMNNNENNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNEEINDNNNNDMALLLLLLAAMMLLLLMFLLLLLLLLLLLLMLMKLMLLLMLLLLLLLLLMAAAAANEDDDDDNNNNMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNNLLLLALLLLLLLLLLLLLLALLALLLLDLLLLMLLLLLLLLLLLLLLMMLLLLLMMLMDLLLLLLMLLLLLLLLLLLLLLLLLMMLDMLLLLLLLLLLLLMLLLLLLMLLLLLMLDNNNNNEDDDDDDDNNNMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNEDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFMMLLLLLLLLLLLLLLLLLLMMNNNENNNLLLLLLLLLLLLLLLLLLLLLLLDLLLLLMLLLFLLLLLLMLLLMLLLLLLLLLMLWCDDDCCCLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLLLALLMMLMLLLLLMLLLLLLLLLLLLLLWNNNNNNNNENIENNNNNNNNNNNNDDDCNDEDNNNNDNNNNNENNNNNRLLLLLLMLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLALLKLLLLKLLLKLKLLLLLMLLLLLLLLLLLLLLMMMLMMLLLLLLLLLLLLLLLMKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDNNNIEDDDDDNNDNNNNEENLLLLLMLKLLLLLLMLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLMLLLLLMMLLLLLLLLLLLLLLLLLLKLLLLKLLKLLKLLLLLLLMMLLLLLLMLLMLLMLLMLLMLLLLMLLLLLLMLLMLKLLKLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMNNNENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAFFAFFHFFFRMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLADLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLGMMMMMMMMMMMMDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDAAFADLLLLLLLLLLLLLLLLFARMMMMMMDDADDDDGMMMMMMMMMMMMDDDDDDDDDDDDIK","n":["args","builder","cli","config","controller","error","spawn","style","utils","Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","verbose","vzip","ControllerError","NetworkBuilder","Node","NodeAlias","NodeSetting","Random","Seed","Settings","Topology","VotePlanKey","VotePlanSettings","Wallet","apply_config","blockchain","blockchain_config","blockchain_config_or_hash","borrow","borrow_mut","build","committee","committee_templates","committees","default","deref","deref_mut","document","drop","explorer","explorer","explorer_template","finish_all","from","init","inner","into","into_request","notify_all","observers","register","rng","session_settings","session_settings","settings","stake_pool","template","topology","topology","topology","try_from","try_into","type_id","vote","vote_plan_templates","vote_plan_templates","vzip","wallet","wallet_template","wallet_templates","wallet_templates","Bech3","CannotFindAlias","Error","Wallet","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","generate_committee_data","init","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","CannotFindAlias","Error","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","generate_explorer","init","into","into_request","provide","to_string","try_from","try_into","type_id","vzip","Random","Seed","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","derive","drop","drop","eq","equivalent","fmt","fmt","from","from","from_str","from_str","generate","init","init","into","into","into_request","into_request","new","rng","rng_mut","seed","seed","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zero","Blockchain","Committee","Error","Explorer","NodeSetting","Settings","Settings","alias","block0","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","committees","config","deref","deref","deref_mut","deref_mut","drop","drop","dump_private_vote_keys","explorer","fmt","fmt","fmt","from","from","from","from","from","init","init","into","into","into_request","into_request","new","node","node_topology","nodes","populate_block0_blockchain_configuration","populate_block0_blockchain_initials","populate_trusted_peers","provide","secret","source","stake_pools","to_owned","to_string","topology_secret","try_from","try_from","try_into","try_into","type_id","type_id","vote_plan","vote_plans","vzip","vzip","wallet","wallets","NodeSetting","alias","borrow","borrow_mut","clone","clone_into","config","deref","deref_mut","drop","fmt","from","init","into","into_request","node_topology","secret","to_owned","topology_secret","try_from","try_into","type_id","vzip","Private","Public","VotePlanSettings","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","from_public_vote_plan","init","into","into_request","to_id","to_owned","try_from","try_into","type_id","vote_plan","vzip","keys","vote_plan","Account","CannotRetrieveAddress","Error","OperationUnavailableForExternalWallet","UTxO","Wallet","WalletLib","WalletType","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","committee_id","delegation_cert_for_block0","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","equivalent","external","fmt","fmt","fmt","fmt","from","from","from","from","generate_account","generate_utxo","get_hash","has_alias","hash","identifier","init","init","init","inner","inner","into","into","into","into_request","into_request","into_request","provide","save_to","stake_key","template","template","to_initial_fund","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","generate","Node","Topology","alias","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","new","nodes","to_owned","to_owned","trusted_peers","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_node","with_trusted_peer","VotePlanKey","alias","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","generate_vote_plans","get_hash","hash","init","into","into_request","owner_alias","serialize","to_owned","try_from","try_into","type_id","vzip","generate","populate_tokens","Block0","Block0Hash","BlockchainBuilder","BlockchainConfiguration","BlockchainConfigurationOrHash","CommitteeTemplate","Config","ExplorerTemplate","External","External","Generated","Generated","Interactive","Monitor","NodeConfig","PrivateParameters","SessionMode","SessionSettings","SpawnParams","Standard","VotePlanTemplate","WalletTemplate","WalletTemplateBuilder","address","address_bech32_prefix","alias","alias","allow_private_addresses","blockchain","blockchain","blockchain","bootstrap_from_peers","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_blockchain","build_topology","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","committee","committee_end","committee_member_public_keys","committees","committees","connect_to","crs","default","default_jormungandr","default_log_level","default_persistence_mode","default_root","default_title","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","dns_server_address","drop","drop","drop","drop","drop","explorer","faketime","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","generate_documentation","gossip_interval","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","jormungandr","jormungandr","leadership_mode","listen_address","log","log_level","max_bootstrap_attempts","max_connections","max_inbound_connections","mempool","mode","network_stuck_check","node_alias","node_key_file","node_spawn_params","nodes","parse_session_mode_from_str","persistence_mode","persistence_mode","persistent_fragment_log","policy","preferred_layer","private","proposals","public_address","query_complexity_limit","query_depth_limit","root","session","skip_bootstrap","spawn_params","spawn_params","threshold","title","to_explorer_params","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","tokens","topics_of_interest","trusted_peers","trusted_peers","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","value","verbose","version","vote_end","vote_plan","vote_plan_key","vote_plans","vote_start","voting_token","vzip","vzip","vzip","vzip","vzip","wallet","wallets","whitelist","alias","communication_pk","communication_pk","id","member_pk","member_pk","address","alias","delegate","discrimination","tokens","tokens","value","value","wallet_type","Block0","Block0Hash","BlockchainBuilder","BlockchainConfiguration","BlockchainConfigurationOrHash","ConsensusVersion","borrow","borrow_mut","clone","clone_into","configuration","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","","BlockchainBuilder","BlockchainConfiguration","block0_date","block0_date","block0_date","block_content_max_size","block_content_max_size","block_content_max_size","blockchain","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone_into","committee","committees","committees","committees","consensus","consensus","consensus","consensus_genesis_praos_active_slot_coeff","consensus_genesis_praos_active_slot_coeff","consensus_genesis_praos_active_slot_coeff","default","default","deref","deref","deref_mut","deref_mut","deserialize","discrimination","discrimination","discrimination","drop","drop","external_consensus_leader_ids","external_consensus_leader_ids","external_consensus_leader_ids","fmt","from","from","has_external_consensus_leader_ids","init","init","into","into","into_request","into_request","kes_update_speed","kes_update_speed","leader","leaders","leaders","leaders","linear_fee","linear_fee","linear_fee","slot_duration","slot_duration","slot_duration","slots_per_epoch","slots_per_epoch","slots_per_epoch","to_owned","try_from","try_from","try_into","try_into","tx_max_expiry_epochs","tx_max_expiry_epochs","tx_max_expiry_epochs","type_id","type_id","vzip","vzip","with_block0_date","with_block_content_max_size","with_committee","with_committees","with_consensus","with_consensus_genesis_praos_active_slot_coeff","with_discrimination","with_external_consensus_leader_ids","with_leader","with_leaders","with_linear_fee","with_slot_duration","with_slots_per_epoch","with_tx_max_expiry_epochs","CommitteeTemplate","External","Generated","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","alias","communication_pk","communication_pk","id","member_pk","member_pk","SpawnParams","alias","allow_private_addresses","allow_private_addresses","bootstrap_from_peers","bootstrap_from_peers","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","dns_server_address","dns_server_address","drop","faketime","faketime","fmt","from","get_alias","get_faketime","get_jormungandr","get_leadership_mode","get_log_level","get_persistence_mode","get_verbose","get_version","gossip_interval","gossip_interval","in_memory","init","into","into_request","is_leader","jormungandr","jormungandr","leader","leadership_mode","leadership_mode","listen_address","listen_address","log_level","log_level","max_bootstrap_attempts","max_bootstrap_attempts","max_connections","max_connections","max_inbound_connections","max_inbound_connections","mempool","mempool","network_stuck_check","network_stuck_check","new","no_listen_address","node_key_file","node_key_file","override_settings","passive","persistence_mode","persistence_mode","persistent_fragment_log","persistent_fragment_log","policy","policy","preferred_layer","preferred_layer","public_address","public_address","skip_bootstrap","skip_bootstrap","to_owned","topics_of_interest","topics_of_interest","trusted_peers","trusted_peers","try_from","try_into","type_id","verbose","verbose","version","version","vzip","whitelist","whitelist","with_dns_server_address","PrivateParameters","VotePlanTemplate","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","committee_end","committee_member_public_keys","committees","crs","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","private","proposals","threshold","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vote_end","vote_plan_key","vote_start","voting_token","vzip","vzip","External","Generated","WalletTemplate","WalletTemplateBuilder","address","alias","borrow","borrow_mut","builder","clone","clone_into","default_discrimination","default_wallet_type","delegate","delegate_mut","deref","deref_mut","deserialize","discrimination","drop","eq","equivalent","fmt","from","get_hash","has_alias","hash","id","init","into","into_request","is_generated","new_account","new_external","new_utxo","to_owned","tokens","try_from","try_into","type_id","value","vzip","wallet_type","address","alias","delegate","discrimination","tokens","tokens","value","value","wallet_type","WalletTemplateBuilder","address","alias","borrow","borrow_mut","build","default","delegated_to","deref","deref_mut","discrimination","discrimination","drop","from","init","into","into_request","new","node_alias","tokens","try_from","try_into","type_id","value","vzip","with","with_address","with_alias","with_token","","","BlockFormatError","CannotCreateFile","CannotSerializeBlock","CannotSpawnNode","CannotWriteYamlFile","Controller","Error","FragmentIsPendingForTooLong","FragmentNotInMemPoolLogs","GrpcError","InteractiveCommandError","InvalidBlock","InvalidEnclaveLeaderIds","InvalidFragmentLogs","InvalidGrpcCall","InvalidHeaderId","InvalidNetworkStats","Io","IoError","JormungandrInteractiveCommandExec","MonitorController","MonitorControllerBuilder","MonitorLegacyNode","MonitorNode","NODE_CONFIG_FILE","NODE_SECRETS_FILE","NODE_TOPOLOGY_KEY_FILE","NodeError","NodeFailedToBootstrap","NodeFailedToShutdown","ProgressBarController","Reqwest","Rest","RestError","SerializationError","ShutdownProcedure","Startup","UserError","UserInteractionController","block0_file","block0_file","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","controlled_wallet","controlled_wallets","convert_to_def","defined_nodes","defined_vote_plan","defined_vote_plans","defined_wallets","deref","deref","deref_mut","deref_mut","do_for_all_alias","drop","drop","error","expect_spawn_failed","fmt","fmt","from","from","from","from","init","init","inner","interactive","into","into","into_persistent","into_request","into_request","make_starter_for","monitor","network_builder","new","node_config","node_settings","prefix","process","process","progress_bar","progress_bar","progress_bar","progress_bar","progress_bar_thread","provide","session_settings","settings","settings","source","spawn","spawn_explorer","spawn_node_async","stake_pool","title","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wallet","working_directory","working_directory","alias","alias","alias","alias","alias","cause","cause","duration","e","e","fragment_id","fragment_id","logs","logs","logs","message","path","path","BlockFormatError","BlockWriteError","CannotSpawnNode","Error","Explorer","FragmentSender","FsFixture","InteractiveCommand","Io","Legacy","NoExplorerConfigurationDefined","Node","NodeNotFound","Reqwest","Serialization","Settings","SettingsWallet","StakePoolNotFound","Startup","VotePlanNotFound","Wallet","WalletNotFound","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","ConsoleWriter","Describe","Exit","Explorer","InteractiveCommand","InteractiveCommandError","InteractiveCommandExec","IoError","JormungandrInteractiveCommandExec","Send","Show","Spawn","UserError","UserInteractionController","app_name","args","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","controller","controller","controller","deref","deref","deref_mut","deref_mut","description","do_for_all_alias","drop","drop","fmt","format_error","from","from","init","init","into","into","into_request","into_request","legacy_nodes","new","nodes","parse_and_exec","parse_and_exec","prompt","show_help","show_info","show_prompt","title","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wallets","describe","explorer","send","show","spawn","All","Describe","DescribeAll","DescribeNodes","DescribeTopology","DescribeVotePlans","DescribeWallets","Nodes","Topology","VotePlan","Wallets","alias","alias","alias","alias","alias","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","exec","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","group_id","group_id","has_subcommand","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","Explorer","ExplorerTip","Tip","alias","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","exec","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","into_request","into_request","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","Send","Tally","Tx","Vote","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","cast","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","tally","try_from","try_into","tx","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","CastVote","augment_args","augment_args_for_update","borrow","borrow_mut","choice","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","proposal_id","proposal_index","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","via","vote_plan","vzip","wallet","VoteTally","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","committee","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","via","vote_plan","vzip","SendTransaction","ada","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","to","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","via","vzip","ActiveVotePlans","BlockHeight","FragmentCount","Fragments","Logs","PeerStats","Show","ShowBlockHeight","ShowFragmentCount","ShowFragments","ShowLogs","ShowNodeStats","ShowPeerStats","ShowStatus","Stats","Status","VotePlans","alias","alias","alias","alias","alias","alias","alias","alias","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","contains","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","exec","exec","exec","exec","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","only_errors","show_logs_for","tail","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Leader","Passive","Spawn","SpawnLeaderNode","SpawnPassiveNode","alias","alias","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","into","into","into","into_request","into_request","into_request","legacy","legacy","spawn_node","storage","storage","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","wait","wait","Describe","Exit","Explorer","InteractiveCommand","Send","Show","Spawn","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","UserInteractionController","borrow","borrow_mut","cast_vote","controlled_wallet","controller","controller","controller_mut","deref","deref_mut","do_for_all_alias","drop","from","init","into","into_request","legacy_nodes","legacy_nodes","legacy_nodes_mut","new","nodes","nodes","nodes_mut","send_transaction","spawn_node","tally_vote","try_from","try_into","type_id","vzip","wallets","wallets","wallets_mut","","LegacyNode","MonitorController","MonitorControllerBuilder","NetworkBuilderObserver","Node","NodeError","ProgressBarController","add_to_progress_bar","block0_conf","block0_file","blockchain","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build_progress_bar","controlled_wallet","controlled_wallets","controller_progress","defined_vote_plans","defined_wallets","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","finalize","finished","from","from","from","init","init","init","inner","into","into","into","into_request","into_request","into_request","monitor_nodes","network_builder","new","new","new","new_spawn_params","new_with_progress_bar","node","node_dir","notify","progress_bar","progress_bar_thread","session_settings","session_settings","settings","spawn_legacy_node","spawn_node","spawn_node_custom","stake_pool","title","topology","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","working_directory","","BlockFormatError","CannotCreateFile","CannotDeserialize","CannotSendFragment","CannotSendFragmentBatch","CannotSerializeBlock","CannotSpawnNode","CannotWriteYamlFile","Error","FragmentIsPendingForTooLong","FragmentNode","FragmentNodeError","FragmentNotInMemPoolLogs","GrpcError","HashParseError","InvalidAddressFormat","InvalidBlock","InvalidEnclaveLeaderIds","InvalidFragmentLogs","InvalidGrpcCall","InvalidHeaderId","InvalidNetworkStats","InvalidRequest","Io","JormungandrClient","JormungandrLogger","JormungandrRest","LegacyNode","ListFragmentError","MemPoolCheck","MockClientError","Node","NodeFailedToBootstrap","NodeFailedToShutdown","NonSuccessErrorCode","PollError","ProgressBarController","ReadBytes","RequestError","Reqwest","ReqwestError","Rest","RestError","RestError","SerializationError","ShutdownProcedure","Startup","UnknownError","_DERIVE_core_fmt_Debug_FOR_Error","account_state","account_state_by_pk","account_state_by_pk_raw","account_votes","account_votes_all","account_votes_with_plan_id","addr","address","address","alias","alias","alias","alias","assert_no_errors","block","block_as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture_logs","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collected_logs","collected_panics","contains_any_of","contains_error","controller","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_logger","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","enable_logger","epoch_reward_history","eq","equivalent","explorer","finish_monitoring","finish_with_message","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment_id","fragment_id","fragment_logs","fragment_logs","fragment_logs","fragments_statuses","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_address","get_blocks","get_created_blocks_counter","get_created_blocks_hashes","get_created_blocks_hashes_after","get_error_indicators","get_fragments","get_genesis_block_hash","get_lines","get_lines_as_string","get_lines_with_error_and_invalid","get_log_content","get_log_lines_with_level","get_panic_content","get_panic_lines","grpc","handshake","headers","init","init","init","init","init","init","init","init","init","init","inner","inner","inner_client","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_running","is_up","last_block_height","last_validated_block_date","leaders_log","legacy","log","log","log_content","log_content","log_content","log_content","log_err","log_in_block_fragment","log_in_block_fragment","log_info","log_leadership_log","log_pending_fragment","log_pending_fragment","log_rejected_fragment","log_rejected_fragment","log_stats","logger","logs","logs","logs_collector","message","network_stats","new","new","new","new","new","new","new_with_cert","new_with_custom_settings","p2p_available","p2p_non_public","p2p_quarantined","p2p_view","panics_collector","prefix","process","progress_bar","progress_bar","progress_bar","progress_bar_failure","progress_bar_start","progress_bar_success","provide","provide","provide","provide","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","raw","remaining_rewards","rest","reward_history","rt","send_batch_fragments","send_batch_fragments","send_fragment","send_fragment","send_fragment","send_fragment_batch","send_raw_fragment","send_raw_fragments","set_origin","settings","shutdown","shutdown","source","source","source","stake_distribution","stake_distribution_at","stake_pools","stats","status","tip","tip","tip","tip","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updates","upload_blocks","uri_from_socket_addr","vote_plan_statuses","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_for_bootstrap","wait_for_chain_length","wait_for_shutdown","alias","alias","alias","alias","alias","cause","cause","duration","e","e","fragment_id","fragment_id","logs","logs","logs","message","path","path","alias","alias","fragment_id","fragment_ids","logs","logs","reason","reason","checks","response","status","BackwardCompatibleRest","CannotSendFragment","CannotSendFragmentBatch","Exited","FragmentNode","FragmentNodeError","JormungandrClient","JormungandrLogger","JormungandrProcess","JormungandrRest","LegacyNode","ListFragmentError","Log","MemPoolCheck","ReqwestError","Rest","Running","Starting","StartupVerificationMode","Status","UnknownError","account_state","account_state_by_pk","account_votes","account_votes_all","account_votes_with_plan_id","addr","address","alias","alias","alias","alias","alias","alias","alias","alias","as_named_process","assert_no_errors_in_log","assert_no_errors_in_log_with_message","block_as_bytes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture_logs","check_no_errors_in_log","child","clone","clone","clone_into","clone_into","collected_logs","collected_panics","correct_state_verifier","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_logger","drop","drop","drop","drop","drop","drop","enable_logger","epoch_reward_history","eq","explorer","fmt","fmt","fragment_id","fragment_logs","fragment_logs","fragment_logs","fragment_logs","fragments_logs","fragments_statuses","from","from","from","from","from","from","genesis_block_hash","get_lines_with_error_and_invalid","get_lines_with_error_and_invalid","grpc","grpc_client","init","init","init","init","init","inner","inner_client","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_running","is_running","is_up","last_block_height","last_block_height","leaders_log","legacy_rest","log","log_content","log_content","log_content","log_content","log_content","log_in_block_fragment","log_in_block_fragment","log_in_block_fragment","log_pending_fragment","log_pending_fragment","log_pending_fragment","log_rejected_fragment","log_rejected_fragment","log_rejected_fragment","log_stats","log_stats","log_stats","log_stats","logger","logger","logs_collector","network_stats","new","new","new","p2p_available","p2p_listen_addr","p2p_listen_address","p2p_non_public","p2p_public_address","p2p_public_address","p2p_quarantined","p2p_view","panics_collector","pid","ports_are_opened","process","process_id","progress_bar","progress_bar","progress_bar_failure","progress_bar_start","progress_bar_success","raw","raw","remaining_rewards","rest","rest","rest_address","rest_debug","rest_settings","rest_socket_addr","rest_uri","reward_history","rt","secure_rest","send_batch_fragments","send_batch_fragments","send_batch_fragments","send_fragment","send_fragment","send_fragment","send_fragment","send_fragment_batch","send_raw_fragment","send_raw_fragments","set_origin","settings","shutdown","shutdown","shutdown","stake_distribution","stake_distribution_at","stake_pools","stats","stats","status","status","steal_temp_dir","stop","temp_dir","temp_dir","time_era","tip","tip","tip","to_owned","to_owned","to_remote","to_trusted_peer","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vote_plan_statuses","vzip","vzip","vzip","vzip","vzip","wait_for_bootstrap","wait_for_bootstrap","wait_for_shutdown","wait_for_shutdown","alias","alias","fragment_id","fragment_ids","logs","logs","reason","reason","CircularTrust","ConsumptionBenchmark","Controller","Error","Explorer","FragmentSender","FragmentVerifier","IO","InteractiveCommand","Internal","MonitorNode","Rest","Serialization","Verification","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","interactive","monitor","run_health_check","spawn_network","standard","jormungandr_user_interaction","spawn_network","POOLS","run_health_check","spawn_network","spawn_network","TICKER","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","binary","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","error","from","from","from","from","from","from","icons","info","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","scenario_title","seed","success","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Icon","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","account","block","blockchain","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","failure","from","from","from","from","from","from","from","from","from","from","from","from","ignored","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jcli","jormungandr","scenario","seed","success","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","Dotifier","dotifier","introduction","print_intro","vote_plan","Dotifier","borrow","borrow_mut","deref","deref_mut","dot_node_label","dot_wallet_label","dottify","drop","from","init","into","into_request","try_from","try_into","type_id","vzip","print_intro","style","TICKER","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","binary","error","icons","info","scenario_title","seed","success","Icon","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","account","block","blockchain","failure","ignored","jcli","jormungandr","scenario","seed","success","transaction","wallet","VotePlanExtension","convert_to_def"],"q":[[0,"hersir"],[9,"hersir::args"],[34,"hersir::builder"],[93,"hersir::builder::committee"],[118,"hersir::builder::explorer"],[138,"hersir::builder::rng"],[187,"hersir::builder::settings"],[252,"hersir::builder::settings::node"],[275,"hersir::builder::settings::vote_plan"],[298,"hersir::builder::settings::vote_plan::VotePlanSettings"],[300,"hersir::builder::settings::wallet"],[380,"hersir::builder::stake_pool"],[381,"hersir::builder::topology"],[424,"hersir::builder::vote"],[451,"hersir::builder::wallet"],[453,"hersir::config"],[649,"hersir::config::CommitteeTemplate"],[655,"hersir::config::WalletTemplate"],[664,"hersir::config::blockchain"],[690,"hersir::config::blockchain::configuration"],[783,"hersir::config::committee"],[804,"hersir::config::committee::CommitteeTemplate"],[810,"hersir::config::spawn_params"],[898,"hersir::config::vote_plan"],[947,"hersir::config::wallet"],[990,"hersir::config::wallet::WalletTemplate"],[999,"hersir::config::wallet::builder"],[1028,"hersir::controller"],[1145,"hersir::controller::NodeError"],[1163,"hersir::controller::error"],[1218,"hersir::controller::interactive"],[1282,"hersir::controller::interactive::args"],[1287,"hersir::controller::interactive::args::describe"],[1447,"hersir::controller::interactive::args::explorer"],[1499,"hersir::controller::interactive::args::send"],[1530,"hersir::controller::interactive::args::send::cast"],[1561,"hersir::controller::interactive::args::send::tally"],[1589,"hersir::controller::interactive::args::send::tx"],[1618,"hersir::controller::interactive::args::show"],[1863,"hersir::controller::interactive::args::spawn"],[1949,"hersir::controller::interactive::command"],[1979,"hersir::controller::interactive::controller"],[2012,"hersir::controller::monitor"],[2095,"hersir::controller::monitor::node"],[2467,"hersir::controller::monitor::node::Error"],[2485,"hersir::controller::monitor::node::FragmentNodeError"],[2493,"hersir::controller::monitor::node::RestError"],[2496,"hersir::controller::monitor::node::legacy"],[2737,"hersir::controller::monitor::node::legacy::FragmentNodeError"],[2745,"hersir::error"],[2788,"hersir::spawn"],[2793,"hersir::spawn::interactive"],[2795,"hersir::spawn::monitor"],[2798,"hersir::spawn::standard"],[2799,"hersir::style"],[2897,"hersir::style::icons"],[3090,"hersir::utils"],[3095,"hersir::utils::dotifier"],[3112,"hersir::utils::introduction"],[3114,"hersir::utils::introduction::style"],[3128,"hersir::utils::introduction::style::icons"],[3153,"hersir::utils::vote_plan"]],"d":["","","","","","","","centralized styles for the different items to display.","","Hersir is a command line tool that lets you deploy a …","","","","","","","Path to config file","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","Enable verbose mode","","","","","","","","","","","","","wallet to utilise when testing jormungandr","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","derive the Context into a new context, seeding a new RNG …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","retrieve the original seed of the pseudo random generator","","","","","","","","","","","","","","","","","","contains all the data to start or interact with a node","","","for reference purpose only","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","node secret, this will be passed to the node at start up …","","","","","","","","","","","","","","","","","","contains all the data to start or interact with a node","for reference purpose only","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","node secret, this will be passed to the node at start up …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","wallet to utilise when testing jormungandr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Wallet which was given in configuration by address, thus …","","Generated wallet when we want let hersir generate new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Wallet which was given in configuration by address, thus …","Generated wallet when we want let hersir generate new …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Node is going to be used by the <code>Controller</code> to monitor the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Prints wallets, nodes which can be used. Draw topology","Exit interactive mode","Sends Explorer queries","","","","","","send fragments","Prints nodes related data, like stats,fragments etc.","Spawn leader or passive node (also legacy)","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prints everything","","","","","","","Prints available node with aliases that can be used","Prints trusted peer info","Prints Votes Plan","Prints available wallets with aliases that can be used","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends transaction","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Tally the vote","Sends transaction","Send the vote","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Prints block height","Prints fragments counts","Prints received fragment list","Prints logs, can filter logs to print only errors or …","Prints peers stats","","","","","","","","","Prints stats","Prints which nodes are upp","Active Vote Plans","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prints wallets, nodes which can be used. Draw topology","Exit interactive mode","Sends Explorer queries","","send fragments","Prints nodes related data, like stats,fragments etc.","Spawn leader or passive node (also legacy)","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized rest api","","","","","Node is going to be used by the <code>Controller</code> to monitor the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeegacy tolerant rest api This layer returns raw strings …","","","","","","","","","Specialized rest api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","style to apply when displaying the path to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","icons are not meant to add some SWAG to the display, not …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","style to apply when displaying the <code>Seed</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","icon associated the <code>jcli</code> command line binary","icon associated the <code>jcli</code> command line binary","","icon associated the test <code>Seed</code> to re-run the same tests with","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","centralized styles for the different items to display.","","","","","","","","style to apply when displaying the path to a …","","icons are not meant to add some SWAG to the display, not …","","","style to apply when displaying the <code>Seed</code>","","","","","","","","","","","","","","","","","","","","icon associated the <code>jcli</code> command line binary","icon associated the <code>jcli</code> command line binary","","icon associated the test <code>Seed</code> to re-run the same tests with","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,0,11,11,11,11,11,55,11,11,11,11,11,0,11,11,0,0,55,0,11,11,11,11,11,0,11,11,11,0,11,11,11,28,28,0,28,28,28,28,28,28,28,28,28,28,28,0,28,28,28,28,28,28,28,28,28,28,37,0,37,37,37,37,37,37,37,37,0,37,37,37,37,37,37,37,37,37,0,0,40,44,40,44,40,44,40,44,40,44,40,44,44,40,44,40,40,40,40,40,44,40,40,40,40,44,40,44,40,44,44,44,44,44,44,40,44,40,40,44,40,44,40,44,40,44,40,0,49,0,49,0,0,49,51,20,20,49,20,49,20,20,20,51,20,49,20,49,20,49,20,20,20,49,49,20,49,49,49,49,20,49,20,49,20,49,20,0,51,20,20,20,20,49,51,49,20,20,49,51,20,49,20,49,20,49,0,20,20,49,0,20,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,52,52,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,263,263,57,31,0,31,57,0,0,0,55,57,55,31,57,55,31,57,55,57,55,55,55,57,55,31,57,55,31,57,57,55,31,57,57,55,57,55,31,31,57,55,55,31,55,55,57,55,57,55,57,55,31,55,55,57,55,31,57,55,31,31,55,55,55,55,55,57,55,31,57,55,31,57,55,31,57,55,31,57,55,31,0,0,0,70,25,70,25,70,25,70,25,70,25,25,70,25,70,25,70,25,70,25,70,25,70,25,70,25,70,70,25,25,70,70,25,70,25,70,25,70,25,70,25,70,0,72,72,72,72,72,72,72,72,72,72,72,72,72,0,72,72,72,72,72,72,72,72,72,72,72,72,0,0,14,14,0,0,0,0,0,0,17,27,17,27,77,77,0,0,0,0,0,77,0,0,0,114,21,114,82,82,0,86,12,82,12,76,24,21,77,12,76,24,21,77,12,12,12,76,24,21,77,12,76,24,21,77,0,26,26,26,12,21,112,24,0,0,0,0,0,12,76,24,21,77,12,76,24,21,77,12,76,24,21,77,114,82,12,76,24,21,77,12,82,12,76,24,21,77,77,12,76,24,21,77,24,82,12,76,24,21,77,12,76,24,21,77,12,76,24,21,77,82,24,82,82,24,82,82,82,82,82,24,82,114,82,12,12,0,82,21,82,82,82,26,26,82,21,21,24,12,82,0,76,112,24,21,12,76,24,21,77,77,114,82,82,76,12,76,24,21,77,12,76,24,21,77,12,76,24,21,77,114,82,82,26,0,26,12,26,26,12,76,24,21,77,0,12,82,264,264,265,265,264,265,266,267,267,267,267,266,267,266,267,14,14,0,0,0,0,14,14,14,14,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,13,86,13,13,86,13,86,13,86,13,86,86,13,13,86,13,86,13,13,86,13,13,86,13,13,86,13,86,13,86,13,13,86,13,13,86,13,86,13,13,13,86,13,13,86,13,86,13,86,13,13,86,13,86,13,13,86,13,13,86,13,13,86,13,13,13,86,13,86,13,86,13,13,86,13,86,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,264,264,265,265,264,265,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,26,112,26,112,26,112,26,112,26,26,26,112,26,112,26,112,26,112,26,112,26,112,26,112,26,112,26,112,26,112,26,26,112,26,112,26,112,26,112,26,112,26,26,26,26,26,112,27,27,0,0,27,27,27,27,0,27,27,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,266,267,267,267,267,266,267,266,267,0,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,0,0,131,131,131,131,131,0,0,131,131,131,0,131,131,131,131,131,131,131,118,0,0,0,0,0,0,0,0,0,131,131,0,131,131,131,131,131,131,118,0,15,15,118,15,118,15,15,15,15,15,15,15,15,15,15,118,15,118,15,0,118,15,0,15,118,118,118,118,15,15,118,15,121,0,118,15,15,118,15,15,0,172,15,15,15,173,177,178,177,178,121,173,121,118,121,15,15,118,15,15,15,15,172,15,118,118,15,118,15,118,15,118,15,15,15,15,268,269,270,271,272,273,274,272,268,270,271,272,269,271,272,269,273,274,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,167,167,167,0,0,0,118,0,167,167,167,118,0,137,0,140,137,140,137,137,137,0,0,142,140,140,137,140,137,137,0,140,137,137,137,140,137,140,137,140,137,140,137,142,137,142,275,140,137,137,137,137,137,137,140,137,140,137,140,137,140,137,142,0,0,0,0,0,141,0,0,0,0,0,0,141,141,141,141,143,144,145,146,147,143,144,145,146,147,143,144,145,146,147,141,141,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,143,144,145,146,147,141,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,141,143,144,145,146,147,0,0,148,149,149,149,148,148,148,149,148,149,148,149,148,149,148,149,148,149,148,149,148,149,148,149,148,149,148,149,148,149,149,148,148,149,148,149,148,149,148,149,148,149,148,149,148,149,148,149,148,149,0,150,150,150,150,150,150,150,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,0,150,150,0,150,150,150,150,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,0,154,154,154,154,154,0,0,0,0,0,0,0,0,154,154,154,155,156,157,158,159,160,161,162,155,156,157,158,159,160,161,162,155,156,157,158,159,160,161,162,154,154,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,156,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,155,156,157,158,159,160,161,162,154,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,156,0,156,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,154,155,156,157,158,159,160,161,162,164,164,0,0,0,165,166,165,166,165,166,164,164,164,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,165,166,165,166,164,164,165,166,164,165,166,164,165,166,165,166,0,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,165,166,165,166,167,167,167,0,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,142,142,142,142,142,142,142,142,142,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,0,0,0,0,0,0,0,121,121,121,172,172,174,121,172,174,121,172,121,121,121,174,121,121,172,174,121,172,174,121,172,174,121,121,174,172,174,121,172,174,121,121,172,174,121,172,174,121,121,172,172,174,121,121,121,0,121,174,121,121,121,121,121,121,121,121,121,172,172,172,174,121,172,174,121,172,174,121,172,174,121,121,0,131,131,182,192,192,131,131,131,0,131,0,0,131,131,182,190,131,131,131,131,131,131,190,131,0,0,0,0,192,0,0,0,131,131,182,182,0,182,182,131,192,131,0,131,131,131,131,192,0,179,179,179,179,179,179,188,178,179,276,178,178,178,163,179,179,178,163,188,131,173,192,168,182,179,190,178,163,188,131,173,192,168,182,179,190,178,188,173,168,179,188,173,168,179,163,163,163,163,178,178,163,188,131,173,173,192,168,182,179,190,178,163,188,131,173,192,168,182,179,190,179,178,163,188,131,173,192,168,182,179,190,179,179,190,190,178,178,173,188,131,131,192,192,168,182,182,179,190,190,168,168,276,178,179,179,178,163,188,131,131,131,131,131,131,131,131,173,192,192,168,168,182,182,182,182,182,182,179,190,188,188,163,163,163,163,188,188,163,163,178,163,163,163,163,178,188,188,178,163,188,131,173,192,168,182,179,190,179,179,188,178,163,188,131,173,192,168,182,179,190,178,163,188,131,173,192,168,182,179,190,178,178,178,163,179,0,178,173,276,178,178,178,173,276,178,173,178,276,178,276,178,178,178,131,192,163,190,179,178,163,188,173,168,179,179,179,179,179,179,179,163,173,178,178,178,173,178,178,178,131,192,182,190,188,188,188,188,179,179,178,179,188,276,178,276,178,179,179,179,179,179,179,178,179,131,192,182,179,179,179,179,178,178,178,188,179,188,173,168,179,131,192,182,190,178,163,188,131,173,192,168,182,179,190,178,163,188,131,173,192,168,182,179,190,178,163,188,131,173,192,168,182,179,190,179,188,0,179,178,163,188,131,173,192,168,182,179,190,178,188,178,268,269,270,271,272,273,274,272,268,270,271,272,269,271,272,269,273,274,277,278,277,278,277,278,277,278,279,279,279,0,192,192,219,0,0,0,0,0,0,0,192,233,0,192,233,219,219,0,0,192,205,205,205,205,205,188,123,276,177,177,177,123,123,123,123,123,123,123,205,177,123,233,205,219,177,123,233,205,219,177,123,123,205,219,205,219,163,163,123,177,123,233,205,219,177,123,233,205,219,205,177,123,123,233,205,219,205,205,219,123,205,219,168,276,177,123,205,205,205,177,123,233,205,219,219,177,177,123,123,123,177,123,233,205,219,179,188,177,123,233,205,219,177,123,233,205,219,177,123,177,177,123,205,177,177,276,177,177,123,123,276,177,123,276,177,123,276,177,123,177,177,123,123,177,123,163,205,177,123,205,205,123,123,205,123,123,205,205,163,123,123,177,123,177,177,177,177,177,205,205,205,177,123,123,123,205,123,123,205,188,123,276,177,123,276,177,123,205,205,205,205,205,205,177,123,205,205,205,205,177,205,177,123,123,123,123,123,123,177,123,205,205,219,123,123,177,123,233,205,219,177,123,233,205,219,177,123,233,205,219,205,177,123,233,205,219,177,123,177,123,277,278,277,278,277,278,277,278,83,83,83,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,0,0,0,0,0,0,0,0,241,243,244,245,246,247,0,241,243,244,245,246,247,241,243,244,245,246,247,241,241,243,243,244,244,245,245,246,246,247,247,241,243,244,245,246,247,241,243,244,245,246,247,0,241,243,244,245,246,247,0,0,241,243,244,245,246,247,241,243,244,245,246,247,241,243,244,245,246,247,0,0,0,241,243,244,245,246,247,241,243,244,245,246,247,241,243,244,245,246,247,241,243,244,245,246,247,0,248,250,251,252,253,254,255,256,257,258,259,260,0,0,0,248,250,251,252,253,254,255,256,257,258,259,260,248,250,251,252,253,254,255,256,257,258,259,260,248,248,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,248,250,251,252,253,254,255,256,257,258,259,260,248,250,251,252,253,254,255,256,257,258,259,260,0,248,250,251,252,253,254,255,256,257,258,259,260,0,248,250,251,252,253,254,255,256,257,258,259,260,248,250,251,252,253,254,255,256,257,258,259,260,248,250,251,252,253,254,255,256,257,258,259,260,0,0,0,0,0,0,248,250,251,252,253,254,255,256,257,258,259,260,248,250,251,252,253,254,255,256,257,258,259,260,248,250,251,252,253,254,255,256,257,258,259,260,248,250,251,252,253,254,255,256,257,258,259,260,0,0,0,0,0,0,0,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,0,0,0,241,243,244,245,246,247,0,0,0,0,0,0,0,0,248,250,251,252,253,254,255,256,257,258,259,260,0,0,0,0,0,0,0,0,0,0,0,0,0,280],"f":[0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[[]],[3,[[6,[4,5]]]],[3,[[6,[4,5]]]],[[],[[8,[7]]]],[[],2],[[]],[[],9],[[],6],[[],6],[[],10],[[4,3],[[6,[5]]]],[[4,3],[[6,[5]]]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[11,12],11],0,[[11,13],11],[[11,14],11],[[]],[[]],[11,[[6,[15,16]]]],0,0,[[11,[18,[17]]],11],[[],11],[2],[2],[[19,20],[[6,[16]]]],[2],0,[[11,[8,[21]]],11],0,[11],[[]],[[],2],0,[[]],[[],9],[[11,22]],0,[[11,23],11],0,[[11,24],11],0,0,0,0,0,[[11,25],11],0,[[],6],[[],6],[[],10],0,[[11,[18,[26]]],11],0,[[]],0,[[11,27],11],[[11,[18,[27]]],11],0,0,0,0,0,[[]],[[]],[2],[2],[2],[[28,29],30],[[28,29],30],[[]],[31,28],[32,28],[[],[[6,[33,28]]]],[[],2],[[]],[[],9],[34],[28,[[8,[35]]]],[[],36],[[],6],[[],6],[[],10],[[]],0,0,[[]],[[]],[2],[2],[2],[[37,29],30],[[37,29],30],[[]],[[38,21],[[6,[39,37]]]],[[],2],[[]],[[],9],[34],[[],36],[[],6],[[],6],[[],10],[[]],0,0,[[]],[[]],[[]],[[]],[40,40],[[[44,[[0,[41,42,43]]]]],[[44,[[0,[41,42,43]]]]]],[[]],[[]],[2],[2],[2],[2],[[[44,[45]]],[[44,[45]]]],[2],[2],[[40,40],46],[[],46],[[40,29],30],[[40,29],30],[[]],[[]],[47,6],[47,[[6,[40]]]],[42,40],[[],2],[[],2],[[]],[[]],[[],9],[[],9],[40,[[44,[45]]]],0,[[[44,[42]]]],[[[44,[42]]],40],0,[[]],[[]],[[],36],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[]],[[]],[[],40],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[20,20],[[]],0,0,[2],[2],[2],[2],[2],[2],[[20,48]],0,[[20,29],30],[[49,29],30],[[49,29],30],[[]],[28,49],[37,49],[31,49],[[]],[[],2],[[],2],[[]],[[]],[[],9],[[],9],[[[38,[50,51]],13,8,44],[[6,[20,49]]]],0,0,0,[[20,13,44]],[20,[[6,[49]]]],[20],[34],0,[49,[[8,[35]]]],0,[[]],[[],36],0,[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],0,0,[[]],[[]],0,0,0,0,[[]],[[]],[51,51],[[]],0,[2],[2],[2],[[51,29],30],[[]],[[],2],[[]],[[],9],0,0,[[]],0,[[],6],[[],6],[[],10],[[]],0,0,0,[[]],[[]],[52,52],[[]],[2],[2],[2],[[52,29],30],[[]],[53,52],[[],2],[[]],[[],9],[52,54],[[]],[[],6],[[],6],[[],10],[52,53],[[]],0,0,0,0,0,0,0,0,0,0,[55,[[6,[56,31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[57,57],[55,55],[[]],[[]],[55,[[6,[58,31]]]],[[55,59,60],[[6,[61,31]]]],[2],[2],[2],[2],[2],[2],[62,[[6,[57]]]],[2],[2],[2],[[57,57],46],[[],46],[27,55],[[57,29],30],[[55,29],30],[[31,29],30],[[31,29],30],[[]],[[]],[27,55],[[]],[27,55],[27,55],[[],63],[[55,64],46],[57],[55,65],[[],2],[[],2],[[],2],[55,8],0,[[]],[[]],[[]],[[],9],[[],9],[[],9],[34],[[55,[66,[19]]],67],[55,[[8,[68]]]],[55,27],0,[55,[[6,[69,31]]]],[[]],[[]],[[],36],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[18,38],[[6,[49]]]],0,0,0,[[]],[[]],[[]],[[]],[25,25],[70,70],[[]],[[]],[[],25],[2],[2],[2],[2],[2],[2],[[25,29],30],[[70,29],30],[[]],[[]],[[],2],[[],2],[[]],[[]],[[],9],[[],9],[[[71,[50]]],70],0,[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[]],[[]],[[25,70],25],[[70,[71,[50]]],70],0,0,[[]],[[]],[72,72],[[]],[2],[2],[62,[[6,[72]]]],[2],[[72,72],46],[[],46],[[72,29],30],[[]],[33],[[],63],[72],[[],2],[[]],[[],9],0,[[72,73],6],[[]],[[],6],[[],6],[[],10],[[]],[[],[[6,[31]]]],[[56,[75,[74,63]]],[[18,[61]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,14],[12,25],[12,12],[76,76],[24,24],[21,21],[77,77],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],24],[[],78],[[],79],[[],80],[[],81],[[],36],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[62,[[6,[12]]]],[62,[[6,[76]]]],[62,[[6,[24]]]],[62,[[6,[21]]]],[62,[[6,[77]]]],0,0,[2],[2],[2],[2],[2],0,0,[[12,29],30],[[76,29],30],[[24,29],30],[[21,29],30],[[77,29],30],[[77,29],30],[[]],[[]],[[]],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[12,47],[[6,[82,83]]]],0,[47,77],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[21,84],[[]],[[]],[[]],[[]],[[]],[[],36],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[14,14],[[]],0,[[],14],[2],[2],[62,[[6,[14]]]],[2],[[14,29],30],[[]],[[],2],[[]],[[],9],[[]],[[],6],[[],6],[[],10],[[]],0,0,0,[13,85],[[86,85],86],0,[13,87],[[86,87],86],0,0,[[]],[[]],[[]],[[]],[86,13],[13,13],[[]],[[86,88],86],[13,[[18,[88]]]],[[86,[18,[88]]],86],0,[13,89],[[86,89],86],0,[13,90],[[86,90],86],0,[[],13],[[],86],[2],[2],[2],[2],[62,[[6,[13]]]],[13,91],[[86,91],86],0,[2],[2],[13,[[18,[92]]]],[[86,[18,[92]]],86],0,[[13,29],30],[[]],[[]],[13,46],[[],2],[[],2],[[]],[[]],[[],9],[[],9],[13,93],0,[[86,[71,[50]]],86],[13,94],[[86,[18,[[71,[50]]]]],86],0,[13,95],[[86,95],86],0,[13,96],[[86,97],86],0,[13,98],[[86,99],86],0,[[]],[[],6],[[],6],[[],6],[[],6],[13,[[8,[97]]]],[[86,[8,[97]]],86],0,[[],10],[[],10],[[]],[[]],[[13,85],13],[[13,87],13],[[13,88],13],[[13,[18,[88]]],13],[[13,89],13],[[13,90],13],[[13,91],13],[[13,[18,[92]]],13],[[13,[71,[50]]],13],[[13,[18,[[71,[50]]]]],13],[[13,95],13],[[13,96],13],[[13,98],13],[[13,[8,[97]]],13],0,0,0,[[]],[[]],[17,17],[[]],[2],[2],[62,[[6,[17]]]],[2],[[17,29],30],[[]],[[],2],[[]],[[],9],[[]],[[],6],[[],6],[[],10],[[]],0,0,0,0,0,0,0,0,[[82,46],82],0,[[82,46],82],0,[[]],[[]],[82,82],[[]],[2],[2],[62,[[6,[82]]]],[82,[[8,[100]]]],0,[2],[[82,101],82],0,[[82,29],30],[[]],[82,50],[82,[[8,[101]]]],[82,8],[82,102],[82,[[8,[79]]]],[82,80],[82,46],[82,8],[[82,103],82],0,[82,82],[[],2],[[]],[[],9],[82,46],[[82,78],82],0,[82,82],[[82,102],82],0,[[82,[8,[100]]],82],0,[[82,79],82],0,[[82,2],82],0,[[82,99],82],0,[[82,99],82],0,[[82,104],82],0,[[82,103],82],0,[47,82],[82,82],[[82,78],82],0,[[82,105]],[82,82],[[82,80],82],0,[[82,[66,[19]]],82],0,[[82,106],82],0,[[82,107],82],0,[[82,108],82],0,[[82,46],82],0,[[]],[[82,109],82],0,[[82,[18,[110]]],82],0,[[],6],[[],6],[[],10],[[82,46],82],0,[[82,111],82],0,[[]],[[82,[18,[108]]],82],0,[[82,100],82],0,0,[[]],[[]],[[]],[[]],[26,26],[112,112],[[]],[[]],0,0,0,0,[2],[2],[2],[2],[62,[[6,[26]]]],[62,[[6,[112]]]],[2],[2],[[26,29],30],[[112,29],30],[[]],[[]],[[],2],[[],2],[[]],[[]],[[],9],[[],9],0,0,0,[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],0,0,0,0,[[]],[[]],0,0,0,0,[27,[[8,[36]]]],[27,[[8,[64]]]],[[]],[[]],0,[27,27],[[]],[[],91],[[],57],[27,8],[27,8],[2],[2],[62,[[6,[27]]]],[27,91],[2],[[27,27],46],[[],46],[[27,29],30],[[]],[[],63],[[27,64],46],[27],[27,36],[[],2],[[]],[[],9],[27,46],[[[71,[64]],113,91,[38,[74,63]]],27],[[[71,[36]],113,[38,[74,63]]],27],[[[71,[64]],113,91,[38,[74,63]]],27],[[]],[27,38],[[],6],[[],6],[[],10],[27,113],[[]],[27,[[8,[57]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[114,27],[[],114],[[114,47],114],[2],[2],[[114,91],114],0,[2],[[]],[[],2],[[]],[[],9],[[[71,[64]]],114],0,0,[[],6],[[],6],[[],10],0,[[]],[[114,63],114],[[114,[71,[36]]],114],[[114,[71,[64]]],114],[[114,74,63],114],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,78],0,[[]],[[]],[[]],[[]],[15,15],[[]],[[15,47],[[8,[115]]]],[15,[[18,[115]]]],[[15,72,116],117],[15,94],[[15,47],[[6,[117,16]]]],[15,[[18,[117]]]],[15,94],[2],[2],[2],[2],0,[2],[2],0,[[15,82,47],[[6,[16]]]],[[118,29],[[6,[119]]]],[[118,29],[[6,[119]]]],[120,118],[[]],[[]],[121,15],[[],2],[[],2],0,0,[[]],[[]],[15,15],[[],9],[[],9],[[15,82],[[6,[122,16]]]],0,0,[[20,81],[[6,[15,16]]]],[[15,47],[[6,[105,16]]]],[[15,47],[[6,[51,16]]]],0,0,0,0,0,0,0,0,[34],0,[15,20],0,[118,[[8,[35]]]],[[15,82],[[6,[123,16]]]],[15,[[6,[124,16]]]],[[15,47],[[6,[123,16]]]],[[15,47],[[6,[125,16]]]],0,[[]],[[],36],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[]],[[]],[[15,47],[[8,[55]]]],[15,81],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[2],[2],[2],[[16,29],30],[[16,29],30],[49,16],[126,16],[127,16],[128,16],[129,16],[31,16],[130,16],[[]],[131,16],[132,16],[133,16],[134,16],[118,16],[120,16],[135,16],[136,16],[[],2],[[]],[[],9],[34],[16,[[8,[35]]]],[[],36],[[],6],[[],6],[[],10],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[137,137],[[]],0,0,0,0,[2],[2],[2],[2],0,[[8,138,138]],[2],[2],[[137,29],[[6,[119]]]],[[137,118]],[[]],[[]],[[],2],[[],2],[[]],[[]],[[],9],[[],9],0,[[36,36,36,[18,[36,139]]],137],0,[[[18,[36,139]],137],[[6,[118]]]],[[140,[18,[36]],137],[[6,[118]]]],0,[[137,118]],[137],[137],0,[[]],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[141,142],[[6,[16]]]],[[143,142],[[6,[16]]]],[[144,142],[[6,[16]]]],[[145,142],[[6,[16]]]],[[146,142],[[6,[16]]]],[[147,142],[[6,[16]]]],[[141,29],30],[[143,29],30],[[144,29],30],[[145,29],30],[[146,29],30],[[147,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[3,[[6,[141,5]]]],[3,[[6,[143,5]]]],[3,[[6,[144,5]]]],[3,[[6,[145,5]]]],[3,[[6,[146,5]]]],[3,[[6,[147,5]]]],[3,[[6,[141,5]]]],[3,[[6,[143,5]]]],[3,[[6,[144,5]]]],[3,[[6,[145,5]]]],[3,[[6,[146,5]]]],[3,[[6,[147,5]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[47,46],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[141,3],[[6,[5]]]],[[143,3],[[6,[5]]]],[[144,3],[[6,[5]]]],[[145,3],[[6,[5]]]],[[146,3],[[6,[5]]]],[[147,3],[[6,[5]]]],[[141,3],[[6,[5]]]],[[143,3],[[6,[5]]]],[[144,3],[[6,[5]]]],[[145,3],[[6,[5]]]],[[146,3],[[6,[5]]]],[[147,3],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[[148,142],[[6,[16]]]],[[149,142],[[6,[16]]]],[[148,29],30],[[149,29],30],[[]],[[]],[3,[[6,[148,5]]]],[3,[[6,[149,5]]]],[3,[[6,[148,5]]]],[3,[[6,[149,5]]]],[[],[[8,[7]]]],[47,46],[[],2],[[],2],[[]],[[]],[[],9],[[],9],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[148,3],[[6,[5]]]],[[149,3],[[6,[5]]]],[[148,3],[[6,[5]]]],[[149,3],[[6,[5]]]],[[]],[[]],0,0,0,0,[1,1],[1,1],[[]],[[]],0,[[],1],[[],1],[2],[2],[2],[[150,142],[[6,[16]]]],[[150,29],30],[[]],[3,[[6,[150,5]]]],[3,[[6,[150,5]]]],[47,46],[[],2],[[]],[[],9],0,[[],6],[[],6],0,[[],10],[[150,3],[[6,[5]]]],[[150,3],[[6,[5]]]],[[]],0,[1,1],[1,1],[[]],[[]],0,[[],1],[[],1],[2],[2],[2],[[151,142],[[6,[16]]]],[[151,29],30],[[]],[3,[[6,[151,5]]]],[3,[[6,[151,5]]]],[[],[[8,[7]]]],[[],2],[[]],[[],9],0,0,[[],6],[[],6],[[],10],[[151,3],[[6,[5]]]],[[151,3],[[6,[5]]]],0,0,[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[[152,142],[[6,[16]]]],[[152,29],30],[[]],[3,[[6,[152,5]]]],[3,[[6,[152,5]]]],[[],[[8,[7]]]],[[],2],[[]],[[],9],[[],6],[[],6],[[],10],[[152,3],[[6,[5]]]],[[152,3],[[6,[5]]]],0,0,[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[[153,142],[[6,[16]]]],[[153,29],30],[[]],0,[3,[[6,[153,5]]]],[3,[[6,[153,5]]]],[[],[[8,[7]]]],[[],2],[[]],[[],9],0,[[],6],[[],6],[[],10],[[153,3],[[6,[5]]]],[[153,3],[[6,[5]]]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[154,142]],[[155,142]],[[156,142]],[[157,142]],[[158,142]],[[159,142]],[[160,142]],[[161,142]],[[162,142]],[[154,29],30],[[155,29],30],[[156,29],30],[[157,29],30],[[158,29],30],[[159,29],30],[[160,29],30],[[161,29],30],[[162,29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,[[6,[154,5]]]],[3,[[6,[155,5]]]],[3,[[6,[156,5]]]],[3,[[6,[157,5]]]],[3,[[6,[158,5]]]],[3,[[6,[159,5]]]],[3,[[6,[160,5]]]],[3,[[6,[161,5]]]],[3,[[6,[162,5]]]],[3,[[6,[154,5]]]],[3,[[6,[155,5]]]],[3,[[6,[156,5]]]],[3,[[6,[157,5]]]],[3,[[6,[158,5]]]],[3,[[6,[159,5]]]],[3,[[6,[160,5]]]],[3,[[6,[161,5]]]],[3,[[6,[162,5]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[47,46],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[46,8,47,[8,[2]],163]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[154,3],[[6,[5]]]],[[155,3],[[6,[5]]]],[[156,3],[[6,[5]]]],[[157,3],[[6,[5]]]],[[158,3],[[6,[5]]]],[[159,3],[[6,[5]]]],[[160,3],[[6,[5]]]],[[161,3],[[6,[5]]]],[[162,3],[[6,[5]]]],[[154,3],[[6,[5]]]],[[155,3],[[6,[5]]]],[[156,3],[[6,[5]]]],[[157,3],[[6,[5]]]],[[158,3],[[6,[5]]]],[[159,3],[[6,[5]]]],[[160,3],[[6,[5]]]],[[161,3],[[6,[5]]]],[[162,3],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[164,142],[[6,[16]]]],[[165,142],[[6,[16]]]],[[166,142],[[6,[16]]]],[[164,29],30],[[165,29],30],[[166,29],30],[[]],[[]],[[]],[3,[[6,[164,5]]]],[3,[[6,[165,5]]]],[3,[[6,[166,5]]]],[3,[[6,[164,5]]]],[3,[[6,[165,5]]]],[3,[[6,[166,5]]]],[[],[[8,[7]]]],[[],[[8,[7]]]],[47,46],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],9],[[],9],[[],9],0,0,[[142,102,46,47,[8,[111]],46],[[6,[16]]]],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[164,3],[[6,[5]]]],[[165,3],[[6,[5]]]],[[166,3],[[6,[5]]]],[[164,3],[[6,[5]]]],[[165,3],[[6,[5]]]],[[166,3],[[6,[5]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[[167,29],30],[[]],[3,[[6,[167,5]]]],[3,[[6,[167,5]]]],[47,46],[[],2],[[]],[[],9],[[],6],[[],6],[[],10],[[167,3],[[6,[5]]]],[[167,3],[[6,[5]]]],[[]],0,[[]],[[]],[[142,47,47,47,2,97],[[6,[168,16]]]],[[142,47],[[8,[115]]]],[142,15],0,[142,15],[2],[2],[[8,138,138]],[2],[[]],[[],2],[[]],[[],9],[142],0,[142,18],[15,142],[142],0,[142,18],[[142,47,47,47,169],[[6,[168,16]]]],[[142,82],[[6,[123,16]]]],[[142,47,47,47],[[6,[168,16]]]],[[],6],[[],6],[[],10],[[]],[142],0,[142,18],0,0,0,0,0,0,0,0,[[121,170],170],[121,171],[121,78],[[172,14],172],[[]],[[]],[[]],[[]],[[]],[[]],[[172,24],[[6,[121,16]]]],[[121,47,100],173],[[121,47],[[6,[115,16]]]],[121,[[18,[115]]]],0,[121,[[18,[117]]]],[121,94],[2],[2],[2],[2],[2],[2],[2],[2],[2],[121],[174],[[]],[[]],[[]],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[],9],[[],9],[[],9],[121],0,[47,172],[[[71,[36]]],174],[[15,24],[[6,[121,16]]]],[[121,47],82],[[15,24,[176,[175]]],121],0,[[121,47],78],[[174,22]],0,0,[121,24],0,[121,20],[[121,82,111],[[6,[177,16]]]],[[121,47,102,80],[[6,[178,16]]]],[[121,82],[[6,[178,16]]]],[[121,47],[[6,[125,16]]]],0,[[172,25],172],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[]],[[]],[[]],[121,81],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[179,180],[[6,[181,182]]]],[[179,47],[[6,[181,182]]]],[[179,47],[[6,[36,182]]]],[[179,56],[[6,[[8,[[18,[183,139]]]],182]]]],[179,[[6,[[38,[36,[18,[183,139]],184]],182]]]],[[179,185,56],[[6,[[8,[[18,[97,139]]]],182]]]],0,[178,100],[179,36],[[],36],[178,50],[178,50],[178,50],[[163,47]],[[179,186],[[6,[187,182]]]],[[179,186],[[6,[[18,[97,139]],182]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[178],[188,188],[173,173],[168,168],[179,179],[[]],[[]],[[]],[[]],0,0,[163,46],[163,46],[178,123],[2],[2],[2],[2],[173],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[179],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[179],[[179,99],[[6,[189,182]]]],[[190,190],46],[[],46],[178,[[6,[124,133]]]],[178],[[173,191]],[[188,29],[[6,[119]]]],[[131,29],30],[[131,29],30],[[192,29],[[6,[119]]]],[[192,29],[[6,[119]]]],[[168,29],[[6,[119]]]],[[182,29],[[6,[119]]]],[[182,29],[[6,[119]]]],[[179,29],[[6,[119]]]],[[190,29],[[6,[119]]]],[[190,29],[[6,[119]]]],[168,186],0,[[],[[6,[[38,[186,193,184]],192]]]],[178,[[6,[[38,[194,193]],192]]]],[179,[[6,[[38,[186,193,184]],182]]]],[[179,[18,[36,139]]],[[6,[[38,[36,195,184]],182]]]],[[]],[[]],[[]],[182,131],[196,131],[120,131],[129,131],[190,131],[[]],[135,131],[136,131],[[]],[129,192],[[]],[186,168],[[]],[136,182],[197,182],[129,182],[[]],[198,182],[199,182],[[]],[[]],[47,[[6,[188,190]]]],[188,[[6,[[18,[187,139]],190]]]],[163,2],[163,[[18,[186,139]]]],[[163,200],[[18,[186,139]]]],[[],[[18,[47,139]]]],[[188,[18,[186,139]]],[[6,[[18,[201,139]],190]]]],[188,186],[163,[[18,[202,139]]]],[163,[[18,[36,139]]]],[178,[[18,[36]]]],[163,36],[[163,79],94],[163,36],[163,[[18,[36,139]]]],[178,188],[188,203],[188,[[6,[[18,[204,139]],190]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[179,205],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[178,46],[178,46],[178,99],[163,[[8,[206]]]],[179,[[6,[[18,[207,139]],182]]]],0,[[178,47]],[[173,191,191]],[[],[[18,[36,139]]]],[178,[[18,[36]]]],[178,36],[178,36],[[173,191]],[[186,206,185]],[[178,194,206,185]],[[173,191]],[178],[186],[[178,194]],[[186,36]],[[178,194,36]],[178],[178,163],[131,94],[192,94],0,[190,36],[179,[[6,[[18,[208,139]],182]]]],[[123,173],178],[[[0,[209,210]],[0,[209,210]]],163],[100,188],[[170,36],173],[186,168],[36,179],[[36,[66,[19]]],179],[[36,211],179],[179,[[6,[[18,[212,139]],182]]]],[179,[[6,[[18,[212,139]],182]]]],[179,[[6,[[18,[212,139]],182]]]],[179,[[6,[[18,[36,139]],182]]]],0,0,0,[178,173],0,0,[178],[178],[178],[34],[34],[34],[34],[[188,186],[[6,[[18,[187,139]],190]]]],[[188,186],[[6,[[18,[187,139]],190]]]],[[188,186],[[6,[[18,[204,139]],190]]]],[[188,204],[[6,[190]]]],[179,213],[179,[[6,[169,182]]]],[178,179],[[179,99],[[6,[[18,[189,139]],182]]]],0,[[[18,[201,139]],46],[[6,[214,192]]]],[[178,[18,[201]],46],[[6,[214,192]]]],[201,[[6,[168,192]]]],[[178,201],[[6,[168,192]]]],[[179,201],[[6,[168,182]]]],[[179,[18,[201,139]],46],[[6,[214,182]]]],[[179,[18,[97,139]]],[[6,[182]]]],[[179,[18,[[18,[97,139]],139]]],[[6,[182]]]],[[179,[71,[36]]]],[179,[[6,[215,182]]]],[178,[[6,[[8,[216]],131]]]],[179,[[6,[36,182]]]],[131,[[8,[35]]]],[192,[[8,[35]]]],[182,[[8,[35]]]],[179,[[6,[217,182]]]],[[179,99],[[6,[217,182]]]],[179,[[6,[[18,[36,139]],182]]]],[179,[[6,[218,182]]]],[178,[[6,[219,135]]]],[178,[[6,[185,131]]]],[178,185],[188,204],[179,[[6,[185,182]]]],[[]],[[]],[[]],[[]],[[],36],[[],36],[[],36],[[],36],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[179,[[6,[[38,[185,220,184]],182]]]],[[188,187],[[6,[190]]]],[100,36],[179,[[6,[[18,[221,139]],182]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[178,[[6,[131]]]],[[188,222,223]],[178,[[6,[[8,[216]],131]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[205,180],[[6,[36,129]]]],[[205,47],[[6,[36,129]]]],[[205,56],[[6,[36,129]]]],[205,[[6,[36,129]]]],[[205,185,56],[[6,[36,129]]]],0,[123,100],[[],36],[177,50],[177,50],[177,50],[123,36],[123,36],[123,36],0,[123,224],[123],[[123,47]],[[205,186],[[6,[[18,[97,139]],182]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[177],[123,[[6,[225]]]],0,[205,205],[219,219],[[]],[[]],0,0,[123,226],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[205],[2],[123],[2],[2],[2],[2],[205],[[205,99],[[6,[36,129]]]],[[219,219],46],[[123,84],[[6,[124,133]]]],[[205,29],[[6,[119]]]],[[219,29],[[6,[119]]]],0,[[],[[6,[[38,[186,193,184]],192]]]],[177,[[6,[[38,[194,193]],192]]]],[123,[[6,[[38,[186,193,184]],192]]]],[205,[[6,[[38,[186,193,184]],182]]]],[205,[[6,[[38,[186,193,184]],182]]]],[[205,[18,[36,139]]],[[6,[[38,[36,195,184]],182]]]],[[]],[[]],[[]],[[]],[[]],[227,219],[177,[[6,[228,131]]]],[177,[[18,[36]]]],[123,[[18,[36,139]]]],[123,188],0,[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[177,46],[123,46],[177,46],[177,99],[123,99],[205,[[6,[36,129]]]],[177,205],[[177,47]],[[],[[18,[36,139]]]],[177,[[18,[36]]]],[177,36],[123,36],[123,[[18,[36,139]]]],[[186,206,185]],[[177,194,206,185]],[[123,186,206,185]],[186],[[177,194]],[[123,186]],[[186,36]],[[177,194,36]],[[123,186,36]],[177],[177],[123],[123],[177,163],0,0,[205,[[6,[36,129]]]],[[123,173],177],[[229,230,[8,[81]],36],[[6,[123,135]]]],[[36,211],205],[205,[[6,[36,129]]]],[123,100],0,[205,[[6,[36,129]]]],[123,108],0,[205,[[6,[36,129]]]],[205,[[6,[36,129]]]],0,[123,99],[123,46],0,[123,99],[177,173],0,[177],[177],[177],[205,213],0,[205,[[6,[36,129]]]],[177,179],[123,179],[123,100],[123,179],[205,211],0,[123,36],[[205,99],[[6,[36,129]]]],0,[[123,[66,[19]]],179],[[[18,[201,139]],46],[[6,[214,192]]]],[[177,[18,[201]],46],[[6,[214,192]]]],[[123,[18,[201,139]],46],[[6,[214,192]]]],[201,[[6,[168,192]]]],[[177,201],[[6,[168,192]]]],[[123,201],[[6,[168,192]]]],[[205,201],[[6,[168,129]]]],[[205,[18,[201,139]],46],[[6,[214,182]]]],[[205,[18,[97,139]]],[[6,[231,129]]]],[[205,[18,[[18,[97,139]],139]]],[[6,[129]]]],[[205,[71,[36]]]],[205,[[6,[36,129]]]],[177,[[6,[[8,[216]],131]]]],[123],[205,[[6,[36,129]]]],[205,[[6,[36,129]]]],[[205,99],[[6,[36,129]]]],[205,[[6,[36,129]]]],[177,[[6,[232,131]]]],[205,[[6,[36,129]]]],[177,[[6,[219,135]]]],[[123,233],[[6,[219,135]]]],[123,[[8,[81]]]],[123],[123,[[8,[78]]]],0,[123,234],[177,185],[123,185],[205,[[6,[185,182]]]],[[]],[[]],[123,235],[123,110],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[205,[[6,[36,129]]]],[[]],[[]],[[]],[[]],[[]],[177,[[6,[131]]]],[[123,233,223],[[6,[135]]]],[177,[[6,[[8,[216]],131]]]],[[123,223],[[6,[[8,[216]],236]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[2],[2],[2],[[83,29],30],[[83,29],30],[118,83],[133,83],[16,83],[120,83],[182,83],[237,83],[238,83],[130,83],[239,83],[131,83],[134,83],[[]],[[],2],[[]],[[],9],[34],[83,[[8,[35]]]],[[],36],[[],6],[[],6],[[],10],[[]],0,0,[[]],[4,[[6,[83]]]],0,[[],240],[12,[[6,[83]]]],0,[[]],[[12,4],[[6,[83]]]],[[12,4],[[6,[83]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[241,242],[243,242],[2],[244,242],[2],[245,242],[2],[246,242],[2],[247,242],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],[248,249],[2],[250,249],[251,249],[2],[252,249],[2],[253,249],[2],[254,249],[2],[255,249],[2],[256,249],[2],[257,249],[2],[258,249],[2],[259,249],[2],[260,249],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[24,47]],0,0,[[]],[[]],[2],[2],[[261,51],36],[[261,27],36],[[261,20,262],67],[2],[[]],[[],2],[[]],[[],9],[[],6],[[],6],[[],10],[[]],[[24,47]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[72,117]],"c":[],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Args"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Request"],[3,"TypeId"],[3,"NetworkBuilder"],[3,"Config"],[3,"BlockchainConfiguration"],[4,"BlockchainConfigurationOrHash"],[3,"Controller"],[4,"Error"],[4,"CommitteeTemplate"],[3,"Vec"],[3,"Path"],[3,"Settings"],[3,"ExplorerTemplate"],[3,"Event"],[3,"Rc"],[3,"SessionSettings"],[3,"Topology"],[3,"VotePlanTemplate"],[4,"WalletTemplate"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Error"],[3,"CommitteeDataManager"],[3,"Demand"],[8,"Error"],[3,"String"],[4,"Error"],[3,"HashMap"],[3,"ExplorerConfiguration"],[3,"Seed"],[8,"Clone"],[8,"RngCore"],[8,"Sized"],[3,"Random"],[6,"ChaChaRng"],[15,"bool"],[15,"str"],[3,"ChildPath"],[4,"Error"],[6,"NodeAlias"],[3,"NodeSetting"],[4,"VotePlanSettings"],[3,"VotePlan"],[6,"VotePlanId"],[3,"Wallet"],[3,"Address"],[4,"WalletType"],[3,"CommitteeId"],[3,"BlockDate"],[6,"PoolId"],[4,"Initial"],[8,"Deserializer"],[15,"u64"],[6,"WalletAlias"],[3,"Identifier"],[8,"AsRef"],[6,"Result"],[3,"UnspecifiedAccountIdentifier"],[3,"InitialUTxO"],[3,"Node"],[8,"Into"],[3,"VotePlanKey"],[8,"Serializer"],[3,"TokenIdentifier"],[3,"Iter"],[3,"NodeConfig"],[4,"SessionMode"],[3,"PathBuf"],[4,"Level"],[4,"PersistenceMode"],[4,"TestingDirectory"],[3,"SpawnParams"],[4,"Error"],[3,"ExplorerParams"],[3,"SecondsSinceUnixEpoch"],[3,"BlockchainBuilder"],[3,"BlockContentMaxSize"],[3,"CommitteeIdDef"],[6,"ConsensusVersion"],[3,"ActiveSlotCoefficient"],[4,"Discrimination"],[3,"ConsensusLeaderId"],[3,"KesUpdateSpeed"],[8,"Iterator"],[3,"LinearFee"],[3,"SlotDuration"],[15,"u8"],[3,"NumberOfSlotsPerEpoch"],[15,"u32"],[4,"SocketAddr"],[3,"FaketimeConfig"],[4,"LeadershipMode"],[3,"Duration"],[3,"Mempool"],[3,"NodeConfig"],[3,"Policy"],[3,"PreferredListConfig"],[3,"Multiaddr"],[3,"TopicsOfInterest"],[3,"TrustedPeer"],[3,"Version"],[3,"PrivateParameters"],[3,"Value"],[3,"WalletTemplateBuilder"],[4,"Wallet"],[3,"VotePlan"],[3,"VotePlanDef"],[4,"InteractiveCommandError"],[3,"Error"],[3,"Error"],[3,"MonitorController"],[3,"Starter"],[3,"JormungandrProcess"],[3,"ExplorerProcess"],[3,"StakePool"],[4,"WriteError"],[4,"WalletError"],[3,"FixtureError"],[3,"Error"],[3,"Error"],[4,"Error"],[4,"Error"],[4,"ExplorerError"],[4,"FragmentSenderError"],[4,"StartupError"],[4,"ReadError"],[3,"ConsoleWriter"],[8,"Fn"],[3,"Global"],[3,"JormungandrInteractiveCommandExec"],[4,"Describe"],[3,"UserInteractionController"],[3,"DescribeTopology"],[3,"DescribeWallets"],[3,"DescribeVotePlans"],[3,"DescribeNodes"],[3,"DescribeAll"],[4,"Explorer"],[3,"ExplorerTip"],[4,"Send"],[3,"CastVote"],[3,"VoteTally"],[3,"SendTransaction"],[4,"Show"],[3,"ShowNodeStats"],[3,"ShowLogs"],[3,"ShowFragmentCount"],[3,"ShowFragments"],[3,"ShowBlockHeight"],[3,"ActiveVotePlans"],[3,"ShowPeerStats"],[3,"ShowStatus"],[3,"JormungandrLogger"],[4,"Spawn"],[3,"SpawnPassiveNode"],[3,"SpawnLeaderNode"],[4,"InteractiveCommand"],[3,"MemPoolCheck"],[3,"Value"],[3,"ProgressBar"],[3,"Block0Configuration"],[3,"MonitorControllerBuilder"],[3,"ProgressBarController"],[3,"NetworkBuilderObserver"],[3,"MultiProgress"],[3,"Arc"],[3,"LegacyNode"],[3,"Node"],[3,"JormungandrRest"],[3,"Identifier"],[3,"AccountState"],[4,"RestError"],[3,"AccountVotes"],[3,"RandomState"],[3,"Hash"],[3,"Hash"],[3,"Block"],[3,"JormungandrClient"],[3,"EpochRewardsInfo"],[4,"MockClientError"],[8,"Display"],[4,"FragmentNodeError"],[3,"FragmentLog"],[6,"FragmentId"],[4,"FragmentStatus"],[3,"ScanError"],[4,"Error"],[4,"Error"],[3,"Error"],[3,"SystemTime"],[4,"Fragment"],[3,"LogEntry"],[3,"HandshakeResponse"],[4,"Header"],[3,"BackwardCompatibleRest"],[3,"BlockDate"],[3,"LeadershipLog"],[3,"PeerStats"],[8,"Read"],[8,"Send"],[3,"RestSettings"],[3,"PeerRecord"],[3,"RawRest"],[3,"FragmentsProcessingSummary"],[3,"SettingsDto"],[3,"ExitStatus"],[3,"StakeDistributionDto"],[3,"NodeStatsDto"],[4,"Status"],[3,"UpdateProposalStateDef"],[3,"VotePlanStatus"],[3,"ChainLength"],[3,"Duration"],[3,"NamedProcess"],[4,"JormungandrError"],[3,"JormungandrStateVerifier"],[4,"NodeState"],[6,"HeaderId"],[3,"Child"],[3,"CommunicationParams"],[3,"Response"],[4,"Yaml"],[4,"StartupVerificationMode"],[3,"TimeEra"],[3,"RemoteJormungandr"],[4,"ShutdownError"],[4,"ConsumptionBenchmarkError"],[4,"FragmentVerifierError"],[4,"Error"],[3,"UserInteraction"],[3,"binary"],[3,"Style"],[3,"seed"],[3,"error"],[3,"success"],[3,"info"],[3,"scenario_title"],[3,"seed"],[3,"Emoji"],[3,"jcli"],[3,"jormungandr"],[3,"scenario"],[3,"wallet"],[3,"account"],[3,"transaction"],[3,"block"],[3,"blockchain"],[3,"success"],[3,"failure"],[3,"ignored"],[3,"Dotifier"],[8,"Write"],[13,"Private"],[13,"Generated"],[13,"External"],[13,"External"],[13,"Generated"],[13,"NodeFailedToBootstrap"],[13,"ShutdownProcedure"],[13,"NodeFailedToShutdown"],[13,"FragmentNotInMemPoolLogs"],[13,"FragmentIsPendingForTooLong"],[13,"CannotCreateFile"],[13,"CannotWriteYamlFile"],[8,"InteractiveCommandExec"],[8,"FragmentNode"],[13,"CannotSendFragment"],[13,"CannotSendFragmentBatch"],[13,"NonSuccessErrorCode"],[8,"VotePlanExtension"]]},\
"iapyx":{"doc":"Library part of iapyx which serves as a core lib for this …","t":"DENNNNNNNNNNNNNDNDEENNNNNNNDNENNNDDENNNNNNNNNNNNDENNNNNDNDNNNNENNDNNMMMMMMMMMMMMAMMAAMMAMMMMAMMMMMMMMMMMMMAMMAMMMMMMMNDCCENNNNNNNNNLLMMLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLMMMNNNNNDENNNNNNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLFFCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAAACCCCCCCAAANNNDNNNENNMLLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLMLLLLLLLLMLLNNNDENMMLLLLLLLMMMLLLLLLLLLLLLLMLLLLLLLLLMMLMMMLLLLLLLLLLMMMLLNNNDENNNEMLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLNNNNDENNNNNDNNNNLMLLLLLLMLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLMCCCCCCCAAADRMLLLLLLLLLMLLLLLLMMMLMLLLLCCCCCAAADLLLLLLLLLLLMLMLLLLLMNCNENCALLLLLLLLLLLLLLLLLALLLLLLDMMLLLLLLLLLMLLLMMMLMLLLLMMMLMDMLLLLLLLLLMLLMMMLMLLLLMMLMRDLLLLLLLLLMLLMLLLLLLRDLLMMLLLLLLLMLLLLLLLLMMLLMLLLLLCCCCCCAAADENNNNLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENDNNLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENDLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNENDNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLNNNENDGINNNNNNNKKMKMFKAAFFNNNENDGINNNNNNNLLLLLLLLLLLLLLLLLLLKLKLMKLMLLLLLLLLLLFLKLLLLLLLLLLNNNNEDLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLL","n":["ArtificialUserLoad","ArtificialUserLoadError","Backend","BackendError","BackendError","BackendNotDefined","Bech32","CannotFindProposal","CannotLeakSecret","CannotReadQrCode","CannotRecover","CannotRetrieveFunds","CannotSendVote","ConfigError","ConfigurationError","Controller","Controller","ControllerBuilder","ControllerBuilderError","ControllerError","InvalidProposalsLen","InvalidSecretKeyLength","Key","LoadConfig","MissingGroupForToken","MissingProposal","MissingVoteplan","MultiController","MultiController","MultiControllerError","MultiControllerError","NoMoreVotesToVote","NoSecretKeyEncoded","NodeLoad","NodeLoadConfig","NodeLoadError","NotEnoughProposals","NotEnoughWallets","ParseAccountIdentifier","PinRead","PinRead","RandomChoiceFailed","RequestGen","Rest","Rest","Rest","RestError","ServicingConfig","ServicingStationLoad","ServicingStationLoadError","SettingsNotDefined","StatusProvider","TimeError","TransactionsWerePendingForTooLong","Valgrind","VoteStatusProvider","VotesCastRegister","Wallet","Wallet","Wallet","WalletCore","WalletCore","WalletError","WalletError","WalletNotDefined","WalletRequestGen","WalletTime","WalletTime","address","backend","backend","backend","backend","batch_size","block_date_generator","block_date_generator","config","config","config","config","controller","criterion","debug","expiry","exports","global_pin","inner","load","multi_controller","options","pending_txs","proposals","qr","qr_codes_folder","rand","read_pin_from_filename","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","settings","settings","settings","settings","update_account_before_vote","use_https","use_v1","utils","vote_cast_counter","voting_group","wallet","wallet","wallet","wallet_index","wallets","fragments","proposal_index","vote_plan_name","CannotFindProposal","Controller","ControllerBuilder","ControllerBuilderError","ControllerError","MissingGroupForToken","MissingVoteplan","ParseAccountIdentifier","Rest","TransactionsWerePendingForTooLong","Valgrind","Wallet","WalletCore","WalletTime","account","active_vote_plan","backend","block_date_generator","borrow","borrow","borrow_mut","borrow_mut","builder","confirm_all_transactions","confirm_transaction","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fragment_logs","from","from","from","from","from","from","from","from","funds","get_account_state","get_proposals","header","id","in_current_span","init","init","into","into","into_request","into_request","pending_transactions","proposals","provide","refresh_state","remove_pending_transaction","send_fragment","send_fragments","set_block_date_generator","settings","settings","source","switch_backend","to_string","total_value","try_from","try_from","try_into","try_into","type_id","type_id","vote","vote_for","vote_plan_history","votes_batch","votes_history","vzip","vzip","wait_for_pending_transactions","wallet","wallet_address","fragments","proposal_index","vote_plan_name","BackendError","BackendNotDefined","Bech32","CannotLeakSecret","CannotReadQrCode","ControllerBuilder","Error","InvalidSecretKeyLength","Key","NoSecretKeyEncoded","PinRead","Rest","SettingsNotDefined","TimeError","WalletError","WalletNotDefined","backend","borrow","borrow","borrow_mut","borrow_mut","build","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","provide","settings","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wallet","with_backend_from_address","with_backend_from_client","with_wallet_from_account","with_wallet_from_qr_file","with_wallet_from_qr_hash_file","with_wallet_from_secret_file","with_wallet_from_secret_key","default_block_date_generator","from_block_or_shift","ArtificialUserLoad","ArtificialUserLoadError","Controller","ControllerBuilder","ControllerBuilderError","ControllerError","MultiController","MultiControllerError","NodeLoad","NodeLoadConfig","NodeLoadError","ServicingStationLoad","ServicingStationLoadError","VoteStatusProvider","Wallet","WalletError","WalletRequestGen","expiry","qr","ArtificialUserLoadConfig","MultiController","MultiControllerError","NodeLoadConfig","ServicingStationRequestGen","StatusProviderError","VoteStatusProvider","WalletRequestGen","config","multi_controller","request_generators","scenario","status_provider","ArtificialUserLoadConfig","ArtificialUserRequestType","NodeLoadConfig","NodeLoadConfigError","ServicingStationConfigError","ServicingStationLoadConfig","ServicingStationRequestType","artificial_user","node","servicing_station","Account","Challenge","Challenges","Config","Fund","Proposal","Proposals","RequestType","Settings","Vote","account","borrow","borrow","borrow_mut","borrow_mut","challenge","challenges","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","fmt","fmt","from","from","fund","get_hash","hash","init","init","into","into","into_request","into_request","proposal","serialize","serialize","settings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vote","vzip","vzip","CannotFindPrivateKeyRoot","CannotReadMnemonicsFile","CannotReadQrs","Config","Error","MultiController","address","batch_size","borrow","borrow","borrow_mut","borrow_mut","build_multi_controller","clone","clone_into","config","criterion","debug","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","fmt","from","from","from","global_pin","header","in_current_span","init","init","into","into","into_request","into_request","provide","qr_codes_folder","read_pin_from_filename","rest_settings","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","serialize","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","use_https","use_v1","voting_group","vzip","vzip","CannotFindConfigurationFor","Challenge","Challenges","Config","Error","Fund","Proposal","Proposals","RequestType","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","criterion","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","get","get_hash","hash","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","provide","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_https","vzip","vzip","vzip","Backend","Controller","InvalidProposalsLen","MissingProposal","MultiController","MultiControllerError","NoMoreVotesToVote","NotEnoughProposals","NotEnoughWallets","PinRead","RandomChoiceFailed","RestSettings","VotesCastRegister","Wallet","WalletCore","WalletTime","backend","backend","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","clone","clone_into","confirm_all_transactions","confirm_transaction","cors","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","enable_debug","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","new_use_https","proposals","provide","recover_from_qrs","recover_from_sks","settings","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_wallet_state","update_wallet_state_if","update_wallets_state","use_https","vote","votes_batch","vzip","vzip","vzip","wallet_count","wallets","AccountRequestGen","ArtificialUserRequestGen","BatchWalletRequestGen","RequestGenError","ServicingStationRequestGen","SettingsRequestGen","WalletRequestGen","artificial_user","jormungandr","servicing_station","ArtificialUserRequestGen","DEFAULT_MAX_SPLITS","account_gen","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","max_splits","new_account","new_node","new_settings","new_static","next","next_request","node_gen","request_type","settings_gen","split","static_gen","try_from","try_into","type_id","vzip","AccountRequestGen","BatchWalletRequestGen","RequestGenError","SettingsRequestGen","WalletRequestGen","account","post","settings","AccountRequestGen","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","next","rand","random_account_request","rest","split","try_from","try_into","type_id","vzip","wallets","Backend","BatchWalletRequestGen","MultiController","RequestGenError","Wallet","WalletRequestGen","batch","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","header","in_current_span","init","into","into_request","provide","single","source","to_string","try_from","try_into","type_id","vzip","BatchWalletRequestGen","batch_size","block_date_generator","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","multi_controller","new","next","next_usize","options","proposals","rand","random_votes","settings","split","try_from","try_into","type_id","update_account_before_vote","use_v1","vote_cast_counter","vzip","wallet_index","WalletRequestGen","block_date_generator","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","multi_controller","new","next","options","proposals","rand","random_vote","settings","split","try_from","try_into","type_id","update_account_before_vote","vote_cast_counter","vzip","wallet_index","DEFAULT_MAX_SPLITS","SettingsRequestGen","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","max_splits","new","next","rest","settings_request","split","try_from","try_into","type_id","vzip","DEFAULT_MAX_SPLITS","ServicingStationRequestGen","borrow","borrow_mut","challenges","client","deref","deref_mut","drop","from","init","into","into_request","max_splits","new_challenge","new_challenges","new_fund","new_proposal","new_proposals","next","next_request","next_usize","proposals","rand","random_challenge","random_proposal","request_type","split","try_from","try_into","type_id","vzip","ArtificialUserLoad","ArtificialUserLoadError","NodeLoad","NodeLoadError","ServicingStationLoad","ServicingStationLoadError","artificial_users","node","servicing_station","ArtificialUserLoad","Error","LoadConfig","MultiController","Rest","ServicingConfig","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","provide","source","start","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfigError","Error","MultiControllerError","NodeLoad","RequestGen","StatusProvider","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","provide","source","start","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConfigurationError","Error","RestError","ServicingStationLoad","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","provide","source","start","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Backend","Controller","Error","PinRead","VoteStatusProvider","Wallet","WalletTime","backend","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","get_statuses","header","in_current_span","init","init","into","into","into_request","into_request","into_status","new","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BadPin","CannotDecodeHash","CannotReadPinFromFile","Error","GlobalModeOnly","PinReadModeSettings","Secret","SecretFromQrCode","UnableToDecodeQr","UnableToDetectFileName","UnableToGetSecretKey","UnableToOpenImage","UnableToReadFileName","UnableToReadQr","UnableToSplitFileName","from_bytes","from_file","from_filename","from_payload_file","global_pin","read_qrs","to_bech32","expiry","qr","default_block_date_generator","from_block_or_shift","BadPin","CannotDecodeHash","CannotReadPinFromFile","Error","GlobalModeOnly","PinReadModeSettings","Secret","SecretFromQrCode","UnableToDecodeQr","UnableToDetectFileName","UnableToGetSecretKey","UnableToOpenImage","UnableToReadFileName","UnableToReadQr","UnableToSplitFileName","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from_bytes","from_bytes","from_file","from_file","from_filename","from_payload_file","from_payload_file","global_pin","header","in_current_span","init","init","into","into","into_qr_pin_mode","into_request","into_request","provide","read_qrs","source","to_bech32","to_bech32","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BackendError","CannotRecover","CannotRetrieveFunds","CannotSendVote","Error","Wallet","account","borrow","borrow","borrow_mut","borrow_mut","confirm_all_transactions","confirm_transaction","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","header","id","identifier","in_current_span","init","init","inner","into","into","into_request","into_request","pending_transactions","pending_txs","provide","recover","recover_from_utxo","remove_pending_transaction","set_state","source","spending_counter","to_string","total_value","try_from","try_from","try_into","try_into","type_id","type_id","vote","vzip","vzip"],"q":[[0,"iapyx"],[114,"iapyx::ControllerError"],[117,"iapyx::controller"],[201,"iapyx::controller::ControllerError"],[204,"iapyx::controller::builder"],[273,"iapyx::expiry"],[275,"iapyx::exports"],[294,"iapyx::load"],[307,"iapyx::load::config"],[317,"iapyx::load::config::artificial_user"],[376,"iapyx::load::config::node"],[438,"iapyx::load::config::servicing_station"],[513,"iapyx::load::multi_controller"],[607,"iapyx::load::request_generators"],[617,"iapyx::load::request_generators::artificial_user"],[645,"iapyx::load::request_generators::jormungandr"],[653,"iapyx::load::request_generators::jormungandr::account"],[674,"iapyx::load::request_generators::jormungandr::post"],[705,"iapyx::load::request_generators::jormungandr::post::batch"],[735,"iapyx::load::request_generators::jormungandr::post::single"],[762,"iapyx::load::request_generators::jormungandr::settings"],[783,"iapyx::load::request_generators::servicing_station"],[815,"iapyx::load::scenario"],[824,"iapyx::load::scenario::artificial_users"],[870,"iapyx::load::scenario::node"],[916,"iapyx::load::scenario::servicing_station"],[958,"iapyx::load::status_provider"],[1007,"iapyx::qr"],[1029,"iapyx::utils"],[1031,"iapyx::utils::expiry"],[1033,"iapyx::utils::qr"],[1098,"iapyx::wallet"]],"d":["Struct responsible to simulate real user calls send to …","Generator errors","Backend related errors","Backend","Backend issues","Lack of Backend definition","Bech32","Missing proposals","Cannot leak secret","Qr code","Recovery failed","Funds retrieval failure","Error with sending votes","Configuration error","Configuration error","Responsible for all wallet operations from voting to …","Wallet Controller related errors","Builder for wallet controller","Builder errors","Controller related Errors","Too many proposals","Cannot leak secret","Key","Loading configuration","Internal wallet errors","Missing proposal","Internal wallet errors","Responsible for controlling more than one wallet at one …","Controller errors","Errors for <code>MultiController</code>","Controller errors","Not enough votes","No secret key exposed","Load scenario for node only calls. It uses <code>WalletRequestGen</code>…","Node Load configuration struct. It defines all aspects of …","Errors for node load","Not enough proposals","Not enough proposals","Parse account identifier","Reading pin","Read pin errors","Randomizing choices failed","Requests generator error","Rest","Connection with rest","Rest api errors","Rest api errors","Building configuration","Servicing station load scenario. Basically responsible for …","Servicing station errors","Settings related","Status providers error","Time","Expiry","Proxy","Responsible for providing information about status for …","Missing proposal","Wallet object, which wraps struct from chain-wallet-libs …","Wallet issues","Wallet related errors","Internal wallet errors","Internal wallet core errors","Wallet error","Wallet","Lack of Wallet definition","Vote request generator. Implements <code>RequestGenerator</code> …","Wallet expiry issues","Wallet time boundaries errors","REST API address to be excercised by load tool","Catalyst backend client","","","","Batch size for single load step","Expiry date generator","","","","","Inner configuration which controls common settings like …","","Success criteria for run. It helps to put simple assertion …","Print verbose information during load","consts for defining transaction expiry block date","","This parameter work in conjunction with <code>qr_codes_folder</code>. …","","","","","","","qr parsing utils","Source folder for seed qr codes which can be used during …","","This parameter work in conjunction with <code>global_pin</code> and …","Sometimes we may want to run load tool again on the same …","This particular settings controls when load tool will …","Source folder for seed bech32 accounts file which will be …","Cached blockchain settings","","","","","Use https protocol","Use REST API V1, which allows send batch votes or checking …","","","Voting groups which account belongs to. Existence of this …","","Wallet state","","","","Expired fragmnents","proposal index within parent vote plan","name of parent vote plan","Missing proposals","Responsible for all wallet operations from voting to …","","","Controller related Errors","Internal wallet errors","Internal wallet errors","Parse account identifier","Connection with rest","Expiry","Proxy","Wallet issues","Internal wallet errors","Wallet expiry issues","Gets account","Gets vote plan from node","Catalyst backend client","Expiry date generator","","","","","","Confirms all transactions means to remove them from …","Confirms transaction by it id. This means to remove it …","","","","","","","","","Gets fragment logs from node","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Gets proposals from vit-servicing-station","Get account state from blockchain (ada/delegation status …","Gets proposals from vit-servicing-station based on voting …","","Gets account identifier. This is something different that …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Unconfirmed collection of transactions (which statuses we …","Gets proposals from vit-servicing-station","","Reload wallet state from blockchain","remove specific transaction from assumed pending","Sends raw transaction bytes","Sends collection of raw transaction bytes","Sets transaction ttl definition. Usually when we are …","Gets blockchain Settings from blockchain","Cached blockchain settings","","Connects to new backend","","gets total value ada","","","","","","","Send specialized transaction (with vote certificates) …","Send specialized transaction (with vote certificates) …","Gets vote plan history from node for given vote plan id","Send collection for specialized transaction (with vote …","Gets vote plan history from node","","","Waits until all transaction will have final states (either …","Wallet state","","Expired fragmnents","proposal index within parent vote plan","name of parent vote plan","Backend","Lack of Backend definition","Bech32","Cannot leak secret","Qr code","Builder for wallet controller","Builder errors","Cannot leak secret","Key","No secret key exposed","Reading pin","Rest","Settings related","Time","Wallet","Lack of Wallet definition","","","","","","Builds Controller","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Sets backend from address along with connectivity setup …","Sets backend from <code>ValgrindClient</code> struct","Sets wallet based on account bytes","Sets wallet based on qr code with private key","Sets wallet based on payload file (in form of hex encoded …","Sets wallet based on secret file with bech32 secret key","Sets wallet based on secret key struct","Creates <code>BlockDateGenerator</code> object based on settings","Creates <code>BlockDateGenerator</code> object based on setup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","No private key root","No mnemonic file","Cannot read qr","Node Load configuration struct. It defines all aspects of …","Builder related error","MultiController setup","REST API address to be excercised by load tool","Batch size for single load step","","","","","Construct multi controller (for multi accounts handling)","","","Inner configuration which controls common settings like …","Success criteria for run. It helps to put simple assertion …","Print verbose information during load","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","This parameter work in conjunction with <code>qr_codes_folder</code>. …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Source folder for seed qr codes which can be used during …","This parameter work in conjunction with <code>global_pin</code> and …","Gets rest settings","Sometimes we may want to run load tool again on the same …","This particular settings controls when load tool will …","Source folder for seed bech32 accounts file which will be …","","","","","","","","","","","Use https protocol","Use REST API V1, which allows send batch votes or checking …","Voting groups which account belongs to. Existence of this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Backend related errors","Wallet Controller related errors","Too many proposals","Missing proposal","Responsible for controlling more than one wallet at one …","Errors for <code>MultiController</code>","Not enough votes","Not enough proposals","Not enough proposals","Read pin errors","Randomizing choices failed","","Missing proposal","Wallet related errors","Internal wallet core errors","Wallet time boundaries errors","Get inner backend client which can perform some custom …","","","","","","","","","","","Confirms all transactions for all wallets. Confirms means …","Confirms all transactions for wallet. Confirms means loose …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Gets proposals from vit-servicing-station based on voting …","","Creates object based on qr codes files","Creates object based on secret files","","","","","","","","","","","","","","Update wallet states based on current state in blockchain","Update wallet states based on current state in blockchain …","Update wallet state for entire wallets collection based on …","","Sends vote transaction on behalf of wallet with index …","Sends bunch of vote transactions on behalf of wallet with …","","","","Wallet counts","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Vote request generator. Implements <code>RequestGenerator</code> …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Creates new object","","","","","Sends vote with random choice on behalf of random wallet. …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Struct responsible to simulate real user calls send to …","Generator errors","Loading configuration","Controller errors","Rest api errors","Building configuration","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates new object based on configuration","","","Starts load based on configuration","","","","","","","","","","Configuration error","Errors for node load","Controller errors","Load scenario for node only calls. It uses <code>WalletRequestGen</code>…","Requests generator error","Status providers error","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates new object","","","Starts scenario","","","","","","","","","","Configuration error","Servicing station errors","Rest api errors","Servicing station load scenario. Basically responsible for …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates new load scenario object","","","Start scenario","","","","","","","","","","","","","","Responsible for providing information about status for …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates object based on address and verbosity","","","","","","","","","","","","Cannot decode qr","Cannot  decode hash","Cannot read pin","Qr handling Errors","Wrong pin reading mode","Read mode for Pin. It can try to read it from file name or …","Alias for secret key","Trait for converting qr code into secret key","Cannot decode qr","Cannot get filename","Cannot get secret key","Cannot open image","Cannot read file","Cannot read qr","Cannot split file name","Convert to secret from bytes","Convert to secret from qr code file","Try to read it from filename","Convert from qr code payload","Static one","Reads qr codes from paths","Convert secret to bech32 format","consts for defining transaction expiry block date","qr parsing utils","Creates <code>BlockDateGenerator</code> object based on settings","Creates <code>BlockDateGenerator</code> object based on setup","Cannot decode qr","Cannot  decode hash","Cannot read pin","Qr handling Errors","Wrong pin reading mode","Read mode for Pin. It can try to read it from file name or …","Alias for secret key","Trait for converting qr code into secret key","Cannot decode qr","Cannot get filename","Cannot get secret key","Cannot open image","Cannot read file","Cannot read qr","Cannot split file name","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Convert to secret from bytes","","Convert to secret from qr code file","","Try to read it from filename","Convert from qr code payload","","Static one","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert to <code>PinReadMode</code> based on path","","","","Reads qr codes from paths","","Convert secret to bech32 format","","","","","","","","","","","Backend issues","Recovery failed","Funds retrieval failure","Error with sending votes","Wallet error","Wallet object, which wraps struct from chain-wallet-libs …","Get account object","","","","","Confirms all transactions means to remove them from …","Confirms transaction by it id. This means to remove it …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get account id","Get account identifier","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Unconfirmed collection of transactions (which statuses we …","","","Recover wallet from secret key bytes","Recover from utxo secret key    ///","remove specific transaction from assumed pending","update value and spending-counters","","Gets spending counters","","total ada wallet holds","","","","","","","Send specialized transaction (with vote certificates) …","",""],"i":[0,0,68,47,14,47,47,6,47,47,14,14,14,97,100,0,68,0,0,0,68,47,47,93,6,68,6,0,93,0,97,68,47,0,0,0,68,68,6,47,68,68,97,47,6,93,100,93,0,0,47,97,47,6,6,0,68,0,6,68,6,68,0,47,47,0,6,68,65,1,66,102,46,65,1,88,95,99,101,65,0,65,65,0,0,65,85,0,88,88,85,88,0,65,88,65,65,65,65,1,66,88,46,88,65,65,0,88,65,0,1,46,88,66,114,115,115,6,0,0,0,0,6,6,6,6,6,6,6,6,6,1,1,1,1,1,6,1,6,0,1,1,1,6,1,6,1,6,6,6,1,1,6,6,6,6,6,6,6,1,1,1,6,1,6,1,6,1,6,1,6,1,1,6,1,1,1,1,1,1,1,6,1,6,1,1,6,1,6,1,6,1,1,1,1,1,1,6,1,1,1,114,115,115,47,47,47,47,47,0,0,47,47,47,47,47,47,47,47,47,46,46,47,46,47,46,46,46,47,46,47,46,47,47,47,46,47,47,47,47,47,47,47,47,47,47,47,46,47,46,47,46,47,47,46,47,47,46,47,46,47,46,47,46,47,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,59,59,0,59,59,59,0,59,59,60,59,60,59,60,60,60,59,60,59,60,59,60,59,60,59,60,59,60,59,59,59,60,59,60,60,59,59,59,60,59,60,59,60,60,59,60,60,59,60,59,60,59,60,59,60,60,59,60,67,67,67,0,0,67,65,65,65,67,65,67,65,65,65,65,65,65,65,67,65,67,65,65,67,65,67,67,65,67,67,65,67,67,65,67,65,67,65,67,67,65,65,65,65,65,65,65,67,65,67,65,67,65,67,65,67,65,65,65,65,67,71,69,69,0,0,69,69,69,0,70,69,70,71,69,70,71,69,70,69,70,70,70,69,70,71,69,70,71,69,70,69,70,71,69,69,69,70,71,71,69,70,71,70,69,69,71,71,69,70,71,69,70,71,69,70,71,71,69,70,69,70,71,69,70,71,69,70,71,69,70,71,70,69,70,71,68,68,68,68,0,0,68,68,68,68,68,0,68,68,68,68,66,66,66,68,37,66,68,37,37,37,37,66,66,37,37,66,68,37,66,68,37,66,68,37,37,68,68,37,66,68,68,68,68,68,68,68,68,37,68,68,66,68,37,66,68,37,66,68,37,37,66,68,66,66,66,68,37,68,66,68,37,66,68,37,66,68,37,66,66,66,37,66,66,66,68,37,66,66,0,0,0,0,0,0,0,0,0,0,0,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,0,0,0,0,0,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,87,0,87,0,87,0,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,87,87,87,87,87,87,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,0,0,0,0,0,0,93,93,93,93,95,93,95,93,95,95,93,95,93,95,93,93,93,95,93,93,93,93,93,93,93,95,93,95,93,95,93,95,93,93,95,93,95,93,95,93,95,93,95,93,97,0,97,0,97,97,99,97,99,97,99,99,97,99,97,99,97,97,97,99,97,97,97,97,97,97,97,99,97,99,97,99,97,99,97,97,99,97,99,97,99,97,99,97,99,97,100,0,100,0,101,100,101,100,101,101,100,101,100,101,100,100,100,101,100,100,100,100,100,101,100,101,100,101,100,101,100,100,101,100,101,100,101,100,101,100,101,100,98,98,0,98,0,98,98,102,102,98,102,98,102,98,102,98,102,98,98,98,102,98,98,98,98,98,98,102,98,98,102,98,102,98,102,98,0,102,98,98,98,102,98,102,98,102,98,102,98,51,51,51,0,51,0,0,0,51,51,51,51,51,51,51,116,116,75,116,75,0,116,0,0,0,0,51,51,51,0,51,0,0,0,51,51,51,51,51,51,51,75,51,75,51,75,51,75,51,75,51,51,51,75,51,51,51,51,51,51,116,106,116,106,75,116,106,75,51,51,75,51,75,51,75,75,51,51,0,51,116,106,51,75,51,75,51,75,51,75,51,14,14,14,14,0,0,85,85,14,85,14,85,85,85,14,85,14,85,14,85,14,14,85,14,14,14,85,85,14,85,14,85,85,14,85,14,85,85,14,85,85,85,85,14,85,14,85,85,14,85,14,85,14,85,85,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[1,[[7,[[5,[4]],6]]]],0,0,[[]],[[]],[[]],[[]],0,[1],[[1,8]],[9],[9],[9],[9],[9],[9],[[6,10],11],[[6,10],11],[1,[[7,[[13,[8,12]],6]]]],[[]],[14,6],[15,6],[16,6],[17,6],[18,6],[19,6],[[]],[1,[[7,[20,6]]]],[1,[[7,[21,6]]]],[[1,22],[[7,[[5,[23]],6]]]],[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[1,28],[[]],[[],9],[[],9],[[]],[[]],[[],29],[[],29],[1,[[5,[8]]]],[[1,22],[[7,[[5,[23]],6]]]],[30],[1,[[7,[6]]]],[[1,8]],[1,[[7,[8,6]]]],[[1,[5,[[5,[31]]]]],[[7,[[5,[8]],6]]]],[[1,32]],[1,[[7,[33,6]]]],0,[6,[[35,[34]]]],[[1,36,37],[[7,[6]]]],[[],36],[1,38],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],[[1,23,40],[[7,[8,6]]]],[[1,22,41,31],[[7,[8,6]]]],[[1,42],[[7,[[35,[[5,[31]]]],6]]]],[[1,5],[[7,[[5,[8]],6]]]],[1,[[7,[[35,[[5,[43]]]],6]]]],[[]],[[]],[[1,44],[[7,[6]]]],0,[1,[[7,[45,6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[46,[[7,[1,47]]]],[[],46],[9],[9],[9],[9],[9],[9],[[47,10],11],[[47,10],11],[[]],[48,47],[49,47],[50,47],[18,47],[14,47],[16,47],[15,47],[51,47],[[]],[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[[]],[[],9],[[],9],[[]],[[]],[[],29],[[],29],[30],0,[47,[[35,[34]]]],[[],36],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],[[]],[[]],0,[[46,[52,[36]],37],[[7,[46,47]]]],[[46,53],[[7,[46,47]]]],[46,[[7,[46,47]]]],[[46,[55,[54]],22],[[7,[46,47]]]],[[46,[55,[54]],22],[[7,[46,47]]]],[[46,[55,[54]]],[[7,[46,47]]]],[[46,[57,[56]]],[[7,[46,47]]]],[33,32],[[[35,[58]],[35,[58]],33],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[59,59],[60,60],[[]],[[]],[9],[9],[9],[9],[61,[[7,[59]]]],[61,[[7,[60]]]],[9],[9],[[59,59],62],[[],62],[[59,10],11],[[60,10],11],[[]],[[]],0,[[],63],[59],[[],9],[[],9],[[]],[[]],[[],29],[[],29],0,[[59,64],7],[[60,64],7],0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],0,[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[65,[[7,[66,67]]]],[65,65],[[]],0,0,0,[9],[9],[9],[9],[61,[[7,[65]]]],[9],[9],[[65,10],11],[[67,10],11],[[67,10],11],[[]],[68,67],[[]],0,[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[[]],[[],9],[[],9],[[]],[[]],[[],29],[[],29],[30],0,0,[65,37],0,0,0,[[65,64],7],[67,[[35,[34]]]],[[]],[[],36],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[69,69],[70,70],[[]],[[]],0,0,[9],[9],[9],[9],[9],[9],[61,[[7,[69]]]],[61,[[7,[70]]]],[9],[9],[9],[[69,69],62],[[],62],[[69,10],11],[[70,10],11],[[71,10],11],[[71,10],11],[[]],[[]],[[]],[[70,69],[[7,[72,71]]]],[[],63],[69],[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],29],[[],29],[[],29],[30],[[69,64],7],[[70,64],7],[[]],[[]],[[],36],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],[[],39],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[66,53],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[37,37],[[]],[66],[[66,8]],0,[[],37],[9],[9],[9],[9],[9],[9],[9],[9],[9],0,[[68,10],11],[[68,10],11],[[37,10],[[7,[73]]]],[[]],[17,68],[51,68],[15,68],[14,68],[18,68],[6,68],[74,68],[[]],[[]],[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[[]],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],37],[[66,22],[[7,[[5,[23]],68]]]],[30],[[22,75,37],[[7,[66,68]]]],[[22,37],[[7,[66,68]]]],0,[68,[[35,[34]]]],[[]],[[],36],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],[[],39],[[66,9],[[7,[68]]]],[[66,9,76],[[7,[68]]]],[66,[[7,[68]]]],0,[[66,9,23,40,58],[[7,[8,68]]]],[[66,9,62,5,58],[[7,[[5,[8]],68]]]],[[]],[[]],[[]],[66,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[9],[9],[9],[[]],[[],9],[[]],[[],29],0,[77,78],[79,78],[80,78],[[81,59],78],[78,[[7,[82,83]]]],[78,[[7,[[5,[[35,[84]]]],83]]]],0,0,0,[78],0,[[],7],[[],7],[[],39],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[9],[9],[9],[[]],[[],9],[[]],[[],29],[[[5,[85]],86],77],[77,[[7,[82,83]]]],0,[77,[[7,[83]]]],0,[77],[[],7],[[],7],[[],39],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[9],[9],[9],[[87,10],11],[[87,10],11],[68,87],[14,87],[[]],[15,87],[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[[]],[[],9],[[]],[[],29],[30],0,[87,[[35,[34]]]],[[],36],[[],7],[[],7],[[],39],[[]],0,0,0,[[]],[[]],[9],[9],[9],[[]],[[],9],[[]],[[],29],0,[[66,9,62,62,22],[[7,[79,68]]]],[79,[[7,[82,83]]]],[79,9],0,0,0,[79,[[7,[[5,[[35,[84]]]],68]]]],0,[79],[[],7],[[],7],[[],39],0,0,0,[[]],0,0,0,[[]],[[]],[9],[9],[9],[[]],[[],9],[[]],[[],29],0,[[66,62,22],[[7,[88,87]]]],[88,[[7,[82,83]]]],0,0,0,[88,[[7,[8,68]]]],0,[88],[[],7],[[],7],[[],39],0,0,[[]],0,0,0,[[]],[[]],[9],[9],[9],[[]],[[],9],[[]],[[],29],0,[86,80],[80,[[7,[82,83]]]],0,[80,[[7,[83]]]],[80],[[],7],[[],7],[[],39],[[]],0,0,[[]],[[]],0,0,[9],[9],[9],[[]],[[],9],[[]],[[],29],0,[[89,[5,[90]]],81],[89,81],[89,81],[[89,[5,[91]]],81],[89,81],[81,[[7,[82,83]]]],[81,[[7,[[5,[[35,[84]]]],83]]]],[81,9],0,0,[81,[[7,[92,83]]]],[81,[[7,[92,83]]]],0,[81],[[],7],[[],7],[[],39],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[9],[9],[9],[9],[9],[9],[[93,10],11],[[93,10],11],[[]],[[]],[67,93],[94,93],[71,93],[68,93],[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[[]],[[],9],[[],9],[[]],[[]],[[],29],[[],29],[60,95],[30],[93,[[35,[34]]]],[95,[[7,[[5,[96]],93]]]],[[],36],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[9],[9],[9],[9],[9],[9],[[97,10],11],[[97,10],11],[[]],[[]],[87,97],[68,97],[98,97],[67,97],[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[[]],[[],9],[[],9],[[]],[[]],[[],29],[[],29],[65,99],[30],[97,[[35,[34]]]],[99,[[7,[[35,[96]],97]]]],[[],36],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,[9],[9],[9],[9],[9],[9],[[100,10],11],[[100,10],11],[[]],[[]],[71,100],[94,100],[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[[]],[[],9],[[],9],[[]],[[]],[[],29],[[],29],[70,101],[30],[100,[[35,[34]]]],[101,[[7,[[5,[96]],100]]]],[[],36],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[98,10],11],[[98,10],11],[[]],[[]],[6,98],[18,98],[14,98],[51,98],[15,98],[102,[[5,[103]]]],[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[[]],[[],9],[[],9],[[]],[[]],[[],29],[[],29],[[104,8],103],[[36,62],[[7,[102,98]]]],[30],[98,[[35,[34]]]],[[],36],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[5,[31]],105],[[7,[106,51]]]],[[[55,[54]],105],[[7,[106,51]]]],0,[[[55,[54]],105],[[7,[106,51]]]],0,[[75,62],[[5,[106]]]],[[],[[7,[36,51]]]],0,0,[33,32],[[[35,[58]],[35,[58]],33],32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[9],[9],[9],[9],[9],[9],[[51,10],11],[[51,10],11],[[]],[50,51],[48,51],[107,51],[[]],[108,51],[109,51],[[[5,[31]],105],[[7,[106,51]]]],[[[5,[31]],105],[[7,[106,51]]]],[[[55,[54]],105],[[7,[106,51]]]],[[[55,[54]],105],[[7,[106,51]]]],0,[[[55,[54]],105],[[7,[106,51]]]],[[[55,[54]],105],[[7,[106,51]]]],0,[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[[]],[[],9],[[],9],[[]],[[]],[[75,[55,[54]]],105],[[],29],[[],29],[30],[[75,62],[[5,[106]]]],[51,[[35,[34]]]],[[],[[7,[36,51]]]],[106,[[7,[36,51]]]],[[],36],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,[[85,2],3],[[]],[[]],[[]],[[]],[85],[[85,8]],[9],[9],[9],[9],[9],[9],[[85,10],11],[[14,10],11],[[14,10],11],[[]],[[]],[15,14],[[[0,[24,25,26]]],[[27,[[0,[24,25,26]]]]]],[85,28],[[85,2],[[7,[110,19]]]],[[]],[[],9],[[],9],0,[[]],[[]],[[],29],[[],29],[85,[[5,[8]]]],0,[30],[[],[[7,[85,14]]]],[[],[[7,[85,14]]]],[[85,8]],[[85,38],[[7,[17]]]],[14,[[35,[34]]]],[85],[[],36],[85,38],[[],7],[[],7],[[],7],[[],7],[[],39],[[],39],[[85,111,112,40,58],[[7,[113,14]]]],[[]],[[]]],"c":[],"p":[[3,"Controller"],[4,"Discrimination"],[3,"Address"],[3,"VotePlanStatus"],[3,"Vec"],[4,"ControllerError"],[4,"Result"],[6,"FragmentId"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"FragmentLog"],[3,"HashMap"],[4,"Error"],[4,"Error"],[4,"RestError"],[3,"Error"],[4,"Error"],[4,"ParseAccountIdentifierError"],[3,"Fund"],[3,"AccountState"],[15,"str"],[3,"FullProposalInfo"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"AccountId"],[3,"Request"],[3,"Demand"],[15,"u8"],[4,"BlockDateGenerator"],[3,"SettingsDto"],[8,"Error"],[4,"Option"],[3,"String"],[3,"RestSettings"],[3,"Value"],[3,"TypeId"],[3,"Choice"],[15,"u32"],[6,"VotePlanId"],[3,"AccountVotes"],[3,"Duration"],[3,"Address"],[3,"ControllerBuilder"],[4,"Error"],[4,"ImageError"],[4,"Error"],[4,"Error"],[4,"Error"],[8,"Into"],[3,"ValgrindClient"],[3,"Path"],[8,"AsRef"],[3,"Ed25519Extended"],[3,"SecretKey"],[3,"BlockDate"],[4,"RequestType"],[3,"Config"],[8,"Deserializer"],[15,"bool"],[15,"u64"],[8,"Serializer"],[3,"Config"],[3,"MultiController"],[4,"Error"],[4,"MultiControllerError"],[4,"RequestType"],[3,"Config"],[4,"Error"],[3,"Configuration"],[3,"Error"],[4,"Error"],[3,"PinReadModeSettings"],[8,"Fn"],[3,"AccountRequestGen"],[3,"ArtificialUserRequestGen"],[3,"BatchWalletRequestGen"],[3,"SettingsRequestGen"],[3,"ServicingStationRequestGen"],[3,"Request"],[4,"RequestFailure"],[6,"Id"],[3,"Wallet"],[3,"WalletNodeRestClient"],[4,"RequestGenError"],[3,"WalletRequestGen"],[3,"VitStationRestClient"],[3,"Challenge"],[3,"Proposal"],[3,"Response"],[4,"Error"],[4,"RestError"],[3,"ArtificialUserLoad"],[3,"EfficiencyBenchmarkFinish"],[4,"Error"],[4,"Error"],[3,"NodeLoad"],[4,"Error"],[3,"ServicingStationLoad"],[3,"VoteStatusProvider"],[3,"Status"],[4,"FragmentStatus"],[4,"PinReadMode"],[6,"Secret"],[4,"BadPinError"],[4,"KeyQrCodeError"],[3,"Error"],[3,"AccountIdentifier"],[3,"Settings"],[3,"Proposal"],[3,"Box"],[13,"TransactionsWerePendingForTooLong"],[13,"CannotFindProposal"],[8,"SecretFromQrCode"]]},\
"iapyx_load":{"doc":"","t":"AFDNNNEENNNNNENENNNNNDLLLLLLLLLLLLLLLLLLLLFALLLLLLLLLLMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCENNLLLLLLALLLALLLLLLLLLLLLLLLDNNENMLLMLLLLLMMMMLLLLLLLLMLLLLFMMMMMMMMLLLLLMMMLDNNENMLLMLLLLLMMMLLLMLLLLLMLLLLFMMMMMMMMLLLLLMMMLCECNNLLLLLLALLLALLLLLLLLLLLLLLLDNNENMLLLLLLLMMMMLLLLLLLLMLLLLFMMMMMMMMLLLLLMMLDNNENMLLLLLLLMMMLLLMLLLLLMLLLLFMMMMMMMMLLLLLMML","n":["load","main","ArtificialLoadCommand","ArtificialUserError","Burst","Const","IapyxLoadCommand","IapyxLoadCommandError","Io","Monitor","MultiControllerError","NodeLoadError","NodeOnly","NodeOnlyLoadCommand","None","ProgressBarMode","SerializeError","ServicingStationError","Simulation","Standard","StaticOnly","StaticOnlyLoadCommand","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_monitor","burst","clone","clone_into","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","config","config","constant","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","eq","equivalent","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","has_subcommand","header","header","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","parse_progress_bar_mode_from_str","provide","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","BurstCountIapyxLoadCommand","BurstDurationIapyxLoadCommand","BurstIapyxLoadCommand","Count","Duration","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","count","deref","deref_mut","drop","duration","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","BurstCountIapyxLoadCommand","Monitor","None","ProgressBarMode","Standard","address","augment_args","augment_args_for_update","batch_size","borrow","borrow_mut","build_config","command","command_for_update","count","criterion","debug","delay","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","into","into_request","parse_progress_bar_mode_from_str","progress_bar_mode","qr_codes_folder","read_pin_from_filename","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","status_pace","threads","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_https","use_v1","voting_group","vzip","BurstDurationIapyxLoadCommand","Monitor","None","ProgressBarMode","Standard","address","augment_args","augment_args_for_update","batch_size","borrow","borrow_mut","build_config","command","command_for_update","criterion","debug","delay","deref","deref_mut","drop","duration","exec","fmt","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","into","into_request","parse_progress_bar_mode_from_str","progress_bar_mode","qr_codes_folder","read_pin_from_filename","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","status_pace","threads","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_https","use_v1","voting_group","vzip","ConstDurationIapyxLoadCommand","ConstIapyxLoadCommand","ConstantCountIapyxLoadCommand","Count","Duration","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","count","deref","deref_mut","drop","duration","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","ConstantCountIapyxLoadCommand","Monitor","None","ProgressBarMode","Standard","address","augment_args","augment_args_for_update","borrow","borrow_mut","build_config","command","command_for_update","count","criterion","debug","delay","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","into","into_request","parse_progress_bar_mode_from_str","progress_bar_mode","qr_codes_folder","read_pin_from_filename","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","status_pace","threads","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_https","voting_group","vzip","ConstDurationIapyxLoadCommand","Monitor","None","ProgressBarMode","Standard","address","augment_args","augment_args_for_update","borrow","borrow_mut","build_config","command","command_for_update","criterion","debug","delay","deref","deref_mut","drop","duration","exec","fmt","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","into","into_request","parse_progress_bar_mode_from_str","progress_bar_mode","qr_codes_folder","read_pin_from_filename","reuse_accounts_early","reuse_accounts_lazy","secrets_folder","status_pace","threads","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","use_https","voting_group","vzip"],"q":[[0,"iapyx_load"],[2,"iapyx_load::load"],[172,"iapyx_load::load::burst"],[203,"iapyx_load::load::burst::count"],[252,"iapyx_load::load::burst::duration"],[301,"iapyx_load::load::constant"],[332,"iapyx_load::load::constant::count"],[379,"iapyx_load::load::constant::duration"]],"d":["","","","","Bursts mode. Sends votes in batches and then wait x seconds","Constant load. Sends votes with x votes per second speed.","","","","","","","Load which targets blockchain calls only","","","","","","Load with simulate real user case (both blockchain and …","","Load which targets static data only","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to configuration file","Path to configuration file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Requests count based load. Defines how many requests load …","Duration based load. Defines how much time load should run","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Address in format: 127.0.0.1:8000","","","Number of votes sent in single batch","","","","","","How many requests per thread should be sent","Pass criteria","Print additional information","Amount of delay (in miliseconds) between requests","","","","","","Returns the argument unchanged.","","","Global pin for all qr codes","","","Calls <code>U::from(self)</code>.","","","Show progress. Available are (Monitor,Standard,None)","Qr codes source folder","Read pin from filename of each qr code","Update all accounts state before sending any vote","Update account state just before sending vote","Secrets source folder","How frequent (in seconds) to print status","Prints nodes related data, like stats,fragments etc.","","","","","","Use https for sending fragments","Use v1 endpoint for sending votes","","","","","","","","Address in format: 127.0.0.1:8000","","","Number of votes sent in single batch","","","","","","Pass criteria","Print additional information","Amount of delay (in miliseconds) between requests","","","","Duration of scenario in seconds","","","Returns the argument unchanged.","","","Global pin for all qr codes","","","Calls <code>U::from(self)</code>.","","","Show progress. Available are (Monitor,Standard,None)","Qr codes source folder","Read pin from filename of each qr code","Update all accounts state before sending any vote","Update account state just before sending vote","Secrets source folder","How frequent (in seconds) to print status","Prints nodes related data, like stats,fragments etc.","","","","","","Use https for sending fragments","Use v1 endpoint for sending votes","","","","","","Requests count based load. Defines how many requests load …","Duration based load. Defines how much time load should run","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Address in format: 127.0.0.1:8000","","","","","","","","How many requests per thread should be sent","Pass criteria","Print additional information","Amount of delay (in miliseconds) between requests","","","","","","Returns the argument unchanged.","","","Global pin for all qr codes","","","Calls <code>U::from(self)</code>.","","","Show progress. Available are (Monitor,Standard,None)","Qr codes source folder","Read pin from filename of each qr code","Update all accounts state before sending any vote","Update account state just before sending vote","Secrets source folder","How frequent (in seconds) to print status","Prints nodes related data, like stats,fragments etc.","","","","","","Use https for sending fragments","","","","","","","","Address in format: 127.0.0.1:8000","","","","","","","","Pass criteria","Print additional information","Amount of delay (in miliseconds) between requests","","","","Duration of scenario in seconds","","","Returns the argument unchanged.","","","Global pin for all qr codes","","","Calls <code>U::from(self)</code>.","","","Show progress. Available are (Monitor,Standard,None)","Qr codes source folder","Read pin from filename of each qr code","Update all accounts state before sending any vote","update account state just before sending vote","Secrets source folder","How frequent (in seconds) to print status","Prints nodes related data, like stats,fragments etc.","","","","","","Use https for sending fragments","",""],"i":[0,0,0,7,11,11,0,0,7,2,7,7,6,0,2,0,7,7,6,2,6,0,9,10,9,10,6,11,6,11,7,6,9,10,11,2,7,6,9,10,11,2,0,0,2,2,6,9,10,11,6,9,10,11,9,10,0,7,6,9,10,11,2,7,6,9,10,11,2,7,6,9,10,11,2,2,2,6,9,10,11,7,7,6,9,10,11,2,2,7,7,7,7,7,7,7,6,9,10,11,2,6,9,10,11,6,9,10,11,9,10,6,11,7,2,7,7,6,9,10,11,2,7,6,9,10,11,2,7,6,9,10,11,2,0,7,7,2,7,2,7,6,9,10,11,2,7,6,9,10,11,2,7,6,9,10,11,2,6,9,10,11,6,9,10,11,7,6,9,10,11,2,0,0,0,36,36,36,36,36,36,36,36,0,36,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,2,2,0,2,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,2,2,0,2,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,40,40,40,40,40,40,40,40,0,40,40,40,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,2,2,0,2,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,2,2,0,2,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42],"f":[0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,3],0,[2,2],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[2,2],5],[[],5],[6,[[8,[7]]]],[9,[[8,[7]]]],[10,[[8,[7]]]],[11,[[8,[7]]]],[[7,12],13],[[7,12],13],[[6,12],13],[[9,12],13],[[10,12],13],[[11,12],13],[[2,12],[[8,[14]]]],[[2,12],[[8,[14]]]],[15,7],[16,7],[17,7],[[]],[18,7],[19,7],[20,7],[[]],[[]],[[]],[[]],[[]],[21,[[8,[6,22]]]],[21,[[8,[9,22]]]],[21,[[8,[10,22]]]],[21,[[8,[11,22]]]],[21,[[8,[6,22]]]],[21,[[8,[9,22]]]],[21,[[8,[10,22]]]],[21,[[8,[11,22]]]],[[],[[24,[23]]]],[[],[[24,[23]]]],[25,5],[25,5],[[[0,[26,27,28]]],[[29,[[0,[26,27,28]]]]]],[[[0,[26,27,28]]],[[29,[[0,[26,27,28]]]]]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[25,[[8,[2,31]]]],[32],[7,[[24,[33]]]],[[]],[[],34],[[],34],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[6,21],[[8,[22]]]],[[9,21],[[8,[22]]]],[[10,21],[[8,[22]]]],[[11,21],[[8,[22]]]],[[6,21],[[8,[22]]]],[[9,21],[[8,[22]]]],[[10,21],[[8,[22]]]],[[11,21],[[8,[22]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[4],[4],[4],0,[36,[[8,[7]]]],[[36,12],13],[[]],[21,[[8,[36,22]]]],[21,[[8,[36,22]]]],[25,5],[[],4],[[]],[[],30],[[],8],[[],8],[[],35],[[36,21],[[8,[22]]]],[[36,21],[[8,[22]]]],[[]],0,0,0,0,0,0,[1,1],[1,1],0,[[]],[[]],[37,38],[[],1],[[],1],0,0,0,0,[4],[4],[4],[37,[[8,[7]]]],[[37,12],13],[[]],[21,[[8,[37,22]]]],[21,[[8,[37,22]]]],0,[[],[[24,[23]]]],[[],4],[[]],[[],30],[25,[[8,[2,31]]]],0,0,0,0,0,0,0,0,[[],8],[[],8],[[],35],[[37,21],[[8,[22]]]],[[37,21],[[8,[22]]]],0,0,0,[[]],0,0,0,0,0,0,[1,1],[1,1],0,[[]],[[]],[39,38],[[],1],[[],1],0,0,0,[4],[4],[4],0,[39,[[8,[7]]]],[[39,12],13],[[]],[21,[[8,[39,22]]]],[21,[[8,[39,22]]]],0,[[],[[24,[23]]]],[[],4],[[]],[[],30],[25,[[8,[2,31]]]],0,0,0,0,0,0,0,0,[[],8],[[],8],[[],35],[[39,21],[[8,[22]]]],[[39,21],[[8,[22]]]],0,0,0,[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[4],[4],[4],0,[40,[[8,[7]]]],[[40,12],13],[[]],[21,[[8,[40,22]]]],[21,[[8,[40,22]]]],[25,5],[[],4],[[]],[[],30],[[],8],[[],8],[[],35],[[40,21],[[8,[22]]]],[[40,21],[[8,[22]]]],[[]],0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[41,38],[[],1],[[],1],0,0,0,0,[4],[4],[4],[41,[[8,[7]]]],[[41,12],13],[[]],[21,[[8,[41,22]]]],[21,[[8,[41,22]]]],0,[[],[[24,[23]]]],[[],4],[[]],[[],30],[25,[[8,[2,31]]]],0,0,0,0,0,0,0,0,[[],8],[[],8],[[],35],[[41,21],[[8,[22]]]],[[41,21],[[8,[22]]]],0,0,[[]],0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[42,38],[[],1],[[],1],0,0,0,[4],[4],[4],0,[42,[[8,[7]]]],[[42,12],13],[[]],[21,[[8,[42,22]]]],[21,[[8,[42,22]]]],0,[[],[[24,[23]]]],[[],4],[[]],[[],30],[25,[[8,[2,31]]]],0,0,0,0,0,0,0,0,[[],8],[[],8],[[],35],[[42,21],[[8,[22]]]],[[42,21],[[8,[22]]]],0,0,[[]]],"c":[],"p":[[3,"Command"],[4,"ProgressBarMode"],[4,"Monitor"],[15,"usize"],[15,"bool"],[4,"IapyxLoadCommand"],[4,"IapyxLoadCommandError"],[4,"Result"],[3,"ArtificialLoadCommand"],[3,"StaticOnlyLoadCommand"],[4,"NodeOnlyLoadCommand"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Error"],[4,"Error"],[3,"Error"],[4,"MultiControllerError"],[4,"Error"],[4,"Error"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[4,"Option"],[15,"str"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"Request"],[4,"Infallible"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"],[4,"BurstIapyxLoadCommand"],[3,"BurstCountIapyxLoadCommand"],[3,"Config"],[3,"BurstDurationIapyxLoadCommand"],[4,"ConstIapyxLoadCommand"],[3,"ConstantCountIapyxLoadCommand"],[3,"ConstDurationIapyxLoadCommand"]]},\
"imhamt":{"doc":"","t":"NDDENNNEEENNAMAAMAAAMAMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDCCCCLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLMLMLLLLLLLLIODIDRLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLKLLLLLLLLLLLLLLFFFFADNENNNEDGNNMLLLLLLLLMLLLLALLLLLLLLLLLLFLLLLLLLLFLLLFLFLLFLFLLFLLLLLLLLLLLLLLFFNENNNEEENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLG","n":["EntryExists","Hamt","HamtIter","InsertError","KeyNotFound","KeyNotFound","KeyNotFound","RemoveError","ReplaceError","UpdateError","ValueCallbackError","ValueNotMatching","bitmap","content","hamt","hash","hasher","helper","node","operation","root","sharedref","stack","ArrayIndex","SmallBitmap","borrow","borrow","borrow_mut","borrow_mut","clear_index","clone","clone","clone_into","clone_into","create","eq","fmt","fmt","from","from","get_found","get_index_sparse","get_sparse_pos","into","into","is_empty","is_not_found","is_set","new","not_found","once","present","set_index","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Hamt","HamtIter","InsertError","RemoveError","ReplaceError","UpdateError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","contains_key","content","default","eq","fmt","from","from","from_iter","hasher","insert","insert_or_update","insert_or_update_simple","into","into","into_iter","into_iter","is_empty","iter","lookup","new","next","remove","remove_match","replace","replace_with","root","size","stack","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","Hash","Hash","HashedKey","Hasher","LevelIndex","SIZE","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","compute","eq","eq","finish","fmt","fmt","from","from","hash","hash_slice","into","into","level_index","mask","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write","write_i128","write_i16","write_i32","write_i64","write_i8","write_isize","write_length_prefix","write_str","write_u128","write_u16","write_u32","write_u64","write_u8","write_usize","clone_array_and_extend","clone_array_and_insert_at_pos","clone_array_and_remove_at_pos","clone_array_and_set_at_pos","reference","Collision","ContinueIn","Entry","Found","Leaf","LeafMany","LookupRet","Node","NodeIter","NotFound","SubNode","bitmap","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clear_at","clear_or_replace_at","clone","clone_into","debug","fmt","fmt","fmt","from","from","from","from","from_box","from_vec","get_child","get_record_and_pos","insert","insert_rec","into","into","into","into","is_empty","iter","iter","len","lookup_one","new","number_children","remove","remove_eq_rec","remove_match","remove_rec","replace","replace_at","replace_rec","replace_with","replace_with_rec","set_at","singleton","size_rec","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update_rec","depth_rec","EntryExists","InsertError","KeyNotFound","KeyNotFound","KeyNotFound","RemoveError","ReplaceError","UpdateError","ValueCallbackError","ValueNotMatching","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","provide","provide","provide","provide","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","SharedRef"],"q":[[0,"imhamt"],[23,"imhamt::bitmap"],[61,"imhamt::hamt"],[109,"imhamt::hash"],[160,"imhamt::helper"],[164,"imhamt::node"],[165,"imhamt::node::reference"],[242,"imhamt::node::reference::debug"],[243,"imhamt::operation"],[314,"imhamt::sharedref"]],"d":["","","","","","","","","","","","","helpers and type for the HAMT bitmap","","","","","","","","","","","Sparse index in the array.","This is a node size bitmap to allow to find element in the …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get the sparse array index from a level index","Get the position of a level index in the sparse array for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Check if the element exist","Create a new bitmap with no element","","Create a new bitmap with 1 element set","","","","","","","","","","","","","","","","","","","","","","","Check if the key is contained into the HAMT","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Update or insert the element at the key K","Update or insert the element at the key K","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Try to get the element related to key K","","","","","Replace the element at the key by the v and return the new …","Replace the element at the key by the v and return the new …","","","","","","","","","","","Update the element at the key K.","A hashable type.","Derive macro generating an impl of the trait <code>Hash</code>.","Hash of a key","A trait for hashing an arbitrary stream of bytes.","Hash value subgroup per level used as Index for children","","","","","","","","","","Compute the HashedKey from a key ‘k’","","","Returns the hash value for the values written so far.","","","Returns the argument unchanged.","Returns the argument unchanged.","Feeds this value into the given <code>Hasher</code>.","Feeds a slice of this type into the given <code>Hasher</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","get the index associated with a specific level","","","","","","","","","","Writes some data into this <code>Hasher</code>.","Writes a single <code>i128</code> into this hasher.","Writes a single <code>i16</code> into this hasher.","Writes a single <code>i32</code> into this hasher.","Writes a single <code>i64</code> into this hasher.","Writes a single <code>i8</code> into this hasher.","Writes a single <code>isize</code> into this hasher.","Writes a length prefix into this hasher, as part of being …","Writes a single <code>str</code> into this hasher.","Writes a single <code>u128</code> into this hasher.","Writes a single <code>u16</code> into this hasher.","Writes a single <code>u32</code> into this hasher.","Writes a single <code>u64</code> into this hasher.","Writes a single <code>u8</code> into this hasher.","Writes a single <code>usize</code> into this hasher.","","","","","","","","","","","","","Node of the Hash Array Mapped Trie","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[20,0,0,0,25,27,26,0,0,0,27,25,0,23,0,0,16,0,0,0,16,0,23,0,0,1,3,1,3,1,1,3,1,3,3,1,1,3,1,3,3,1,1,1,3,1,3,1,1,3,1,1,1,1,3,1,3,1,3,1,3,0,0,0,0,0,0,23,16,23,16,16,16,16,23,16,16,16,23,16,16,16,16,16,16,23,16,23,16,16,16,16,16,23,16,16,16,16,16,16,23,16,23,16,23,16,23,16,16,0,0,0,0,0,0,28,2,28,2,28,2,28,2,28,28,2,11,28,2,28,2,15,15,28,2,28,2,28,2,28,2,28,2,28,2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,49,0,49,44,44,0,0,0,49,44,43,49,43,46,44,49,43,46,44,43,43,43,43,43,0,43,46,44,49,43,46,44,46,46,43,46,46,0,49,43,46,44,43,43,46,46,0,43,43,46,0,46,0,46,43,0,46,0,43,43,0,43,49,43,46,44,49,43,46,44,49,43,46,44,46,0,0,20,0,25,27,26,0,0,0,27,25,20,25,27,26,20,25,27,26,20,25,27,26,20,25,27,26,20,25,27,26,20,20,25,25,27,27,26,26,20,25,27,26,20,25,27,26,20,25,27,26,27,20,25,27,26,20,25,27,26,20,25,27,26,20,25,27,26,20,25,27,26,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,2],1],[1,1],[3,3],[[]],[[]],[4,3],[[1,1],5],[[1,6],7],[[3,6],7],[[]],[[]],[3,4],[[1,2],3],[[1,2],3],[[]],[[]],[1,5],[3,5],[[1,2],5],[[],1],[[],3],[2,1],[1,4],[[1,2],1],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[16,[[0,[10,11,12]],[0,[10,13,14,15]],10]]],[[16,[[0,[10,11,12]],[0,[10,13,14,15]],10]]]],[[]],[[[16,[[0,[11,12]],[17,[[0,[15,14]]]],[0,[15,14]]]]],5],0,[[],[[16,[[0,[11,12]],[0,[14,15]]]]]],[[[16,[[0,[12,11]],[0,[14,15]],13]],[16,[[0,[12,11]],[0,[14,15]],13]]],5],[[[16,[[0,[18,11,12]],[0,[18,13,14,15]],18]],6],7],[[]],[[]],[19,[[16,[[0,[12,11]],[0,[14,15,10]],10]]]],0,[[[16,[[0,[11,12]],[0,[10,14,15]],10]],[0,[10,14,15]],10],[[8,[[16,[[0,[11,12]],[0,[10,14,15]],10]],20]]]],[[[16,[[0,[11,12]],[0,[14,15,10]],10,10]],[0,[14,15,10]],10,10,21],[[8,[[16,[[0,[11,12]],[0,[14,15,10]],10,10]],[0,[22,18]]]]]],[[[16,[[0,[11,12]],[0,[14,15,10]],10,10]],[0,[14,15,10]],10,10,21],[[16,[[0,[11,12]],[0,[14,15,10]],10,10]]]],[[]],[[]],[[]],[16],[[[16,[[0,[11,12]],[0,[14,15]]]]],5],[[[16,[[0,[11,12]],[0,[15,14]]]]],[[23,[[0,[15,14]]]]]],[[[16,[[0,[11,12]],[17,[[0,[15,14]]]],[0,[15,14]]]]],24],[[],[[16,[[0,[11,12]],[0,[14,15]]]]]],[23,24],[[[16,[[0,[11,12]],[17,[[0,[15,14]]]],[0,[10,14,15]],10]]],[[8,[[16,[[0,[11,12]],[17,[[0,[15,14]]]],[0,[10,14,15]],10]],25]]]],[[[16,[[0,[11,12]],[17,[[0,[15,14]]]],[0,[14,15,10]],[0,[13,10]]]]],[[8,[[16,[[0,[11,12]],[17,[[0,[15,14]]]],[0,[14,15,10]],[0,[13,10]]]],25]]]],[[[16,[[0,[11,12]],[0,[14,15,10]],10]],10],[[8,[26]]]],[[[16,[[0,[11,12]],[0,[14,15,10]],10]],21],[[8,[[16,[[0,[11,12]],[0,[14,15,10]],10]],26]]]],0,[[[16,[[0,[11,12]],[0,[14,15]]]]],4],0,[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[[16,[[0,[11,12]],[0,[14,15,10]],10]],21],[[8,[[16,[[0,[11,12]],[0,[14,15,10]],10]],[27,[[0,[22,18]]]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[28,28],[2,2],[[]],[[]],[[[29,[[0,[11,12]]]]],28],[[28,28],5],[[2,2],5],[[],30],[[28,6],7],[[2,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[28,4],2],[2,31],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[]],[32],[33],[34],[35],[36],[37],[4],[38],[39],[40],[31],[30],[41],[4],[10,42],[[10,4],42],[4,42],[[10,4],42],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[43,2],[[24,[43]]]],[[43,2,[24,[[45,[44]]]]],[[24,[43]]]],[[[43,[10,10]]],[[43,[10,10]]]],[[]],0,[[[43,[18,18]],6],7],[[[46,[18,18]],6],7],[[[44,[18,18]],6],7],[[]],[[]],[[]],[[]],[42,46],[47,46],[[43,3],45],[[[46,[[17,[13]],[0,[10,13]],10]]],24],[[[46,[[0,[10,13]],10]],[0,[10,13]],10],[[8,[[46,[[0,[10,13]],10]],20]]]],[[43,28,4,[0,[10,13]],10],[[8,[[43,[[0,[10,13]],10]],20]]]],[[]],[[]],[[]],[[]],[43,5],[43,[[48,[[45,[44]]]]]],[46,48],[46,4],[[43,28,4],[[49,[[0,[13,[17,[13]]]]]]]],[[],43],[43,4],[[[46,[[17,[13]],[0,[10,13]],10]],28],[[8,[[44,[[17,[13]],[0,[10,13]],10]],25]]]],[[43,28,4],[[8,[[24,[[43,[[0,[[17,[13]],13,10]],[0,[13,10]]]]]],25]]]],[[[46,[[17,[13]],[0,[10,13]],13,10]],28],[[8,[[44,[[17,[13]],[0,[10,13]],13,10]],25]]]],[[43,28,4],[[8,[[24,[[43,[[0,[[17,[13]],13,10]],10]]]],25]]]],[[[46,[[0,[10,13]],10]],10],[[8,[26]]]],[[43,3,[45,[44]]],43],[[43,28,4,10],[[8,[26]]]],[[[46,[[0,[10,13]],10]],21],[[8,[[46,[[0,[10,13]],10]],26]]]],[[43,28,4,21],[[8,[[43,[[0,[13,10]],10]],26]]]],[[43,2,[45,[44]]],43],[[2,[45,[44]]],43],[43,4],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[[46,[[0,[10,13]],10]],28,21],[[8,[[44,[[0,[10,13]],10]],[27,[[0,[22,18]]]]]]]],[[43,28,4,21],[[8,[[24,[[43,[[0,[13,10]],10]]]],[27,[[0,[22,18]]]]]]]],[43,4],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20,20],[25,25],[[[27,[[0,[22,18,10]]]]],[[27,[[0,[22,18,10]]]]]],[26,26],[[]],[[]],[[]],[[]],[[20,20],5],[[25,25],5],[[[27,[[0,[22,18,13]]]],27],5],[[26,26],5],[[20,6],7],[[20,6],7],[[25,6],7],[[25,6],7],[[[27,[[0,[22,18,18]]]],6],7],[[[27,[[0,[22,18]]]],6],7],[[26,6],7],[[26,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50],[50],[50],[50],[[[27,[[0,[22,18]]]]],[[24,[22]]]],[[]],[[]],[[]],[[]],[[],51],[[],51],[[],51],[[],51],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],0],"c":[],"p":[[3,"SmallBitmap"],[3,"LevelIndex"],[3,"ArrayIndex"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[8,"Clone"],[8,"Hasher"],[8,"Default"],[8,"PartialEq"],[8,"Eq"],[8,"Hash"],[3,"Hamt"],[8,"Borrow"],[8,"Debug"],[8,"IntoIterator"],[4,"InsertError"],[8,"FnOnce"],[8,"Error"],[3,"HamtIter"],[4,"Option"],[4,"RemoveError"],[4,"ReplaceError"],[4,"UpdateError"],[3,"HashedKey"],[3,"PhantomData"],[15,"u64"],[15,"u32"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"str"],[15,"u128"],[15,"u16"],[15,"u8"],[3,"Box"],[3,"Node"],[4,"Entry"],[3,"Arc"],[3,"Collision"],[3,"Vec"],[3,"Iter"],[4,"LookupRet"],[3,"Demand"],[3,"String"]]},\
"integration_tests":{"doc":"","t":"ENNNNNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMLLLLL","n":["Error","FragmentSenderError","IapyxError","No","VerificationError","VitupError","Vote","VoteTiming","Yes","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","new","provide","source","tally_end","tally_start","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vote_start","vzip","vzip","vzip","wait_for_tally_end","wait_for_tally_start"],"q":[[0,"integration_tests"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,4,4,2,4,4,0,0,2,2,17,4,2,17,4,2,2,2,17,4,2,17,4,2,17,4,2,4,4,17,4,4,4,4,4,2,4,4,17,4,2,17,4,2,17,4,2,17,4,4,17,17,2,4,17,4,2,17,4,2,17,4,2,17,17,4,2,17,17],"f":[0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[]],[3],[3],[3],[3],[3],[3],[3],[3],[3],[[4,5],6],[[4,5],6],[[]],[7,4],[[]],[8,4],[9,4],[10,4],[[]],[[[0,[11,12,13]]],[[14,[[0,[11,12,13]]]]]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[16,16,16],17],[18],[4,[[20,[19]]]],0,0,[[]],[[],21],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],0,[[]],[[]],[[]],[[17,24]],[[17,24]]],"c":[],"p":[[3,"Private"],[4,"Vote"],[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"FragmentSenderError"],[4,"ControllerError"],[4,"Error"],[4,"Error"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"Request"],[15,"u32"],[3,"VoteTiming"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"JormungandrRest"]]},\
"jcli":{"doc":"","t":"FF","n":["main","report_error"],"q":[[0,"jcli"]],"d":["",""],"i":[0,0],"f":[[[]],[[[2,[1]]]]],"c":[],"p":[[8,"Error"],[3,"Box"]]},\
"jcli_lib":{"doc":"","t":"ANNNNDENNNNNALLLLALLLLALLMLLALLLLLLLLLLLLLLMLLLLLLAAMALLLLLLLLLLAALLNDEDENDNNDMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFFFFFFFMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNDNNENENNNNDNNLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLFMMLLLLFLLFFLMFLLLLLLLLLLLLLLLLLLLLLLLLLMMMMNENNENNNNNNNNNNNNNNNNNNNNENNNNNNNNDNNNNNNDNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMAAAAAAAAAMMLFFFAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFFFMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLLLMMLLLLLLDLLLLLLLLLLLLLLLLMMMLLLLLLDLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLMLDLLLLLLLLLLLLLLLLMMMLLLLLLDLLLLLLMLLLLLLLLLLFMMLLLLLLDLLLLLLLLLLLLLLLLMMLLLLLMLNDNDELLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLMMLLLDLLLLLLLLLLLLLLLMLMLLLLLFLNDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMLLLLLLLLLLLLLLLMMLLLENNLLLLLLLLLLLLLLALLLLLALDLLLLLLLLLLLLLLLMLMLLLLLLDLLLLLLLLLLLLLLLMLMLLLLLLDLLLLLLFFLLLFLLLLLLMLMFMFLLLLLFFLDDLLLLLLLLLLFFLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMNEENNNNNLLALLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLMMDLLLLLLLLLLLLLLLMLLLLLLLDLLLLLLLLLLLLLLLMLLLLLLLNNDNNNNEDNEDNNNNNENNNNDDNNNNDNDNNNNNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLMLLLLLLLLLLLMMMLLLLLLLLLLLMMMMMMMMLLLMMFFMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMENNNNNNNEDNNNLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLAALLNNNENNNNNNNDDDDNNNLLMLLLLLLLLLLLLLMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLFLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLMNNNNNNNNNNNNNNNENALLALLLLLLALLLLLLLLAAAAAAAAAAALLLLLAALENLLLLLLLLLLLLLLLLFLLLLLLMMMDLLMLLLLLLLLLLLLLLAAMLLLLLLNELLLLLLLLLLFLLLLLLLLLLLLMMNNELLLLLLLLLLFLLLLLLLLLLLLMENLLLLLLLLLLLLLLLLLLLLLLMNEENLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLMMNENLLLLLLLLLLLLLFLLLFFLLLLLLMMMMENLLLLLLLLLLLLLLLLALLLLLLNELLLLLLLLLLLLLLLLLLLLLLMMENLLLLLLLLLLLLLLLLALLLLLLNELLLLLLLLLLLLLLLLLLLLLLMMNNELLLLLLLLLALLLLLALLLLLLLLENLLLLLLLLLLLLLLLLLLLLLLMMNELLLLLLLLLLLLLLLLLLLLLLMMNELLLLLLLLLLLLLLLLFLLLLLLMMNELLLLLLLLLLLLLLLLLLLLLLMNELLLLLLLLLLLLLLLLLLLLLLMMMNELLLLLLLLLLLLLLLLLLLLLLMMMNELLLLLLLLLLLLLLLLLLLLLLMMNELLLLLLLLLLLLLLLLLLLLLLMNEDLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLMMNEALLLLLLALLLLLLLLLLALLLLLLENNLLLLLLLLLLLLLLLLLLLLLLENLLLLLLLLLLLLLLLLLLLLLLMMNELLLLLLLLLLLLLLLLLLLLLLMMENLLLLLLLLLLLLLLLLLLLLLALDNEMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNGNNENNNNNNNNNNNNNNNNNNNNNNNNAAAAALLALLLLLLALLLLFFFFLLLALLLLLLLLLLLLLLLLLALLLLAALAAALALLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDMLLLLLLMLLLLLLLLLLLLLLLMLDLLLLMLLMLLLLLLLLLLLLLLLLDLLLLLLMLLLLLLLLMLLMLLLLLMLDMLLLLLLMLLLLLLLLLLLLLLLMLDRLLLLLLMLLLLLLLLLLLLLLLLLMDLLLLLLMLLLLLLLLLLMLLLLLLDDLLLLLLLLMMMMMMMLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLDLLLLMLLMLLLLMFLLLLLLLLLLLLDMLLLLLLMLLLLMLLLLLLMMLLLLLLNDNNEMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLFMMMLLLLLLLLLLLMLDLLLLLLMLLLLLLLLLLLLLLLLDLLLLLLMLLLLLLLLLLLLLLLLDLLLLLLMLLLLLLLLLLLLLLLMLDLLMLLMLLMFFFFLLLLMLLLLLLFFMMMMMLLLLLMMLNNNNDELLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLMLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLMCNNDECEALLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLMLLLLLLLLAAMAALLLLLLLLLLLLLLLLALLLDNENMLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLMMMNENFLLLLLLLLLLLLFFFLFFLLLLLLENNNNFLLLLLLLLLLLLFFLFFLLLLLLMMMMNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMNNEEDNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNDNEDNNDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNENNNNNNNNNNNNNNNDNNNNDNNNENLLLLLLLLLLLLALLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLALLLLLLLLLLLLLLLLMMMMMMMMMMENNLLLLLLALLLLLLLLLLALLLLLLEDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMLLLLLLLLLLLLLLLLLLDNEDNLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLMMMMMLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLMMLLLLLLNNNNCELLLLLLAALLLLLLLLLLALLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLMMLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMMLLEDDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFMMMMLLLMLLLLLLLLLLLLLLLLLMMLLLL","n":["jcli_lib","Address","Certificate","Debug","Genesis","JCli","JCliCommand","Key","Rest","Transaction","Utils","Votes","address","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","block","borrow","borrow","borrow_mut","borrow_mut","certificate","command","command","command","command_for_update","command_for_update","debug","deref","deref","deref_mut","deref_mut","drop","drop","exec","exec","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","full_version","group_id","has_subcommand","init","init","into","into","key","rest","source_version","transaction","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","utils","vote","vzip","vzip","Account","AccountArgs","Address","DiscriminationData","Error","Info","InfoArgs","MultisigAddressNotSupported","Single","SingleArgs","address","address_info","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","delegation","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination_data","discrimination_data","drop","drop","drop","drop","drop","drop","exec","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","group_id","has_subcommand","init","init","init","init","init","init","into","into","into","into","into","into","key","key","mk_account","mk_address","mk_address_1","mk_address_2","mk_delegation","mk_discrimination","mk_single","prefix","provide","testing","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","BlockFileCorrupted","BlockSerializationFailed","BuildingGenesisFromBlock0Failed","Common","Decode","Encode","Error","GeneratedBlock0Invalid","Genesis","GenesisFileCorrupted","GenesisSerializationFailed","Hash","Init","Input","InputInvalid","OutputInvalid","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","decode_block_0","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","encode_block_0","exec","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","init","init_genesis_yaml","input","input_file","into","into","into","into","load_block","load_block","open","open_block_file","open_output","open_output","output_file","print_hash","provide","source","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","path","path","source","source","Base64","Certificate","ConfigFileCorrupted","ElectionPublicKey","Error","ExpectedSignedOrNotCertificate","ExpectingOnlyOneSigningKey","InputInvalid","InvalidBech32","InvalidBech32Key","InvalidCertificate","InvalidCertificateBech32","InvalidChoice","InvalidJson","InvalidPoolDelegation","InvalidPoolDelegationWeights","InvalidPrivateVotePlanCommitteeKeys","InvalidVotePlanCommitteeBlockDates","InvalidVotePlanVoteBlockDates","Io","KeyInvalid","KeyNotFound","ManagementThresholdInvalid","MintTokenDoesntNeedSignature","New","NewArgs","NoSigningKeys","NotStakePoolRegistration","NotVotePlanCertificate","OutputInvalid","OwnerStakeDelegation","OwnerStakeDelegationDoesntNeedSignature","PoolDelegationWithZeroWeight","Print","PrintArgs","PrivateTallyError","PrivateTallyExpected","SharesError","Show","Sign","StakeDelegation","StakeDelegationArgs","StakePoolRegistration","StakePoolRetirement","TooManyPoolDelegations","TooManyVotePlanProposals","UpdateProposal","UpdateVote","VoteCast","VoteCastDoesntNeedSignature","VotePlan","VotePlanConfig","VotePlanDoesntNeedSignature","VotePlanError","VoteTally","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","exec","exec","exec","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","has_subcommand","init","init","init","init","init","input","into","into","into","into","into","key","new_owner_stake_delegation","new_stake_delegation","new_stake_pool_registration","new_stake_pool_retirement","new_update_proposal","new_update_vote","new_vote_cast","new_vote_plan","new_vote_tally","pool_id","private_key","provide","read_cert","read_cert_or_signed_cert","read_input","show","sign","source","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","weighted_pool_ids","write_cert","write_output","write_signed_cert","actual","actual","actual","actual","committee_end","expected","found","got","got","index","max","max","max","max_expected","path","path","source","source","vote_end","vote_end","vote_start","OwnerStakeDelegation","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","output","pool_ids","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","StakeDelegation","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","output","pool_ids","stake_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","StakePoolRegistration","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","kes_key","management_threshold","operators","output","owners","reward_account","start_validity","tax_fixed","tax_limit","tax_ratio","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vrf_key","vzip","StakePoolRetirement","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","output","pool_id","retirement_time","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","UpdateProposal","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config_file","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","open_config_file","output","proposer_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","UpdateVote","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","output","proposal_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","voter_id","vzip","Private","PrivateVoteCast","Public","PublicVoteCast","VoteCastCmd","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","choice","choice","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","election_key_path","exec","exec","exec","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","into","into","into","options","output","output","proposal_index","proposal_index","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vote_plan_id","vote_plan_id","vzip","vzip","vzip","VotePlanRegistration","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","output","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","validate_voteplan","vzip","Private","PrivateTally","Public","PublicTally","VoteTallyRegistration","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","id","init","init","init","into","into","into","output","output","shares","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vote_plan","vote_plan_id","vzip","vzip","vzip","ShowArgs","StakePoolId","VotePlanId","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","stake_pool_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote_plan_id","vzip","GetStakePoolId","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","output","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","GetVotePlanId","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","output","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Sign","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","committee_vote_plan_sign","committee_vote_tally_sign","deref","deref_mut","drop","evm_mapping_sign","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","output","pool_owner_sign","signing_keys","stake_delegation_account_binding_sign","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","update_proposal_sign","update_vote_sign","vzip","WeightedPoolId","WeightedPoolIds","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","delegation_ratio","delegation_ratio_sum","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_str","group_id","init","init","into","into","pool_id","pool_ids","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","weight","Block","Debug","Error","HexMalformed","InputInvalid","Io","Message","MessageMalformed","augment_subcommands","augment_subcommands_for_update","block","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","into","into","message","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","path","source","Block","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Message","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","input","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Bech32","Derivation","Derive","Derive","Ed25519","Ed25519Bip32","Ed25519Extended","Error","FromBytes","FromBytes","GenPrivKeyType","Generate","Generate","Hex","InvalidOutput","InvalidSeed","Io","Key","PublicKey","Rand","RistrettoGroup2HashDh","SecretKey","Seed","Sign","Sign","Signature","SignatureVerification","SumEd25519_12","ToBytes","ToBytes","ToPublic","ToPublic","UnexpectedBech32SignHrp","UnexpectedBip32Bech32Hrp","UnknownBech32PrivKeyHrp","UnknownBech32PubKeyHrp","Verify","Verify","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_to_priv_key","bytes_to_pub_key","child_key","clone","clone","clone_into","clone_into","command","command","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","data","data","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","exec","exec","exec","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_str","from_str","gen_priv_key","gen_pub_key","group_id","group_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","index","init","init","init","init","init","init","init","init","init","init","init","input_bytes","input_key","input_key","into","into","into","into","into","into","into","into","into","into","into","key_type","key_type","output","output_file","output_file","output_file","output_file","parent_key","process_private_key","process_public_key","provide","public_key","public_key","read_bech32","read_hex","secret_key","seed","sign","signature","source","to_owned","to_owned","to_possible_value","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_key","actual_hrp","actual_hrp","expected_hrp","hrp","hrp","private_hrp","public_hrp","seed_len","Error","InputFileInvalid","InputFileYamlMalformed","InputFragmentMalformed","InputHexMalformed","OutputFormatFailed","OutputFragmentMalformed","RequestError","Rest","RestArgs","SerdeError","V0","V1","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","config","debug","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","host","init","init","into","into","provide","source","tls_cert_path","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","v0","v1","vzip","vzip","Bytes","CertIo","Client","Error","HostAddrNotBase","Internal","InvalidParams","Json","Pem","Redirecton","Request","RestArgs","RestClient","RestRequestBuilder","RestResponse","Text","Timeout","Unexpected","augment_args","augment_args_for_update","base_url","body","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","client","client","client","clone","clone_into","command","command_for_update","debug","debug","debug","delete","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","execute","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get","group_id","host","init","init","init","init","init","into","into","into","into","into","json","json","make_request_builder","make_url","post","provide","query","request_builder","source","text","tls_cert_path","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","addr","Account","Block","Diagnostic","Leaders","Message","Network","Node","Rewards","Settings","Shutdown","Stake","StakePool","StakePools","Tip","Utxo","V0","Vote","account","augment_subcommands","augment_subcommands_for_update","block","borrow","borrow_mut","command","command_for_update","deref","deref_mut","diagnostic","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","leaders","message","network","node","rewards","settings","shutdown","stake","stake_pool","stake_pools","tip","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","utxo","vote","vzip","Account","Get","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","request_account_information","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","account_id","args","output_format","Block","augment_args","augment_args_for_update","block_id","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","next_id","subcommand","subcommand","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Get","NextId","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","exec_get","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","count","Get","NextId","Subcommand","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","exec_get","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","Diagnostic","Get","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","Get","GetLogs","Leaders","Logs","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","get_logs","has_subcommand","has_subcommand","init","init","into","into","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","args","output_format","Logs","Message","Post","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","get_logs","has_subcommand","init","into","post_fragment","post_message","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","args","file","output_format","Network","Stats","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","stats","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Get","Stats","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","Node","Stats","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","stats","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Get","Stats","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","Epoch","History","Rewards","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","epoch","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","history","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Epoch","Get","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","epoch","Get","History","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","length","Get","Settings","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","request_settings","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","Post","Shutdown","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","Get","Stake","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","epoch","output_format","Get","StakePool","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","pool_id","Get","StakePools","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","Get","Tip","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","Get","Subcommand","Utxo","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fragment_id","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","output_index","subcommand","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","args","output_format","Active","Vote","active","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","committees","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","plans","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Active","Committees","Plans","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Committees","Get","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","Get","Plans","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","args","output_format","V1","Vote","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote","vzip","AccountVotes","AccountVotes","Vote","account_id","args","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","exec","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","output_format","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vote_plan_id","vzip","vzip","AccountAddressGroup","AccountAddressScript","AccountAddressSingle","AccountIdError","AddAccount","AddCertificate","AddInput","AddOutput","AddWitness","Auth","Block0Error","CancelByUser","CannotFinalizeWithoutValidUntil","CertificateError","DataForWitness","Error","Finalize","FragmentId","Id","Info","InfoCalculationFailed","InfoExpectedSingleAccount","InfoFileWriteFailed","InvalidBlock0HeaderHash","MakeTransaction","MakeWitness","MakeWitnessAccountCounterMissing","MakeWitnessAccountInvalidCounterLane","MessageSerializationFailed","New","NoSigningKeys","OutputFormatFailed","RandError","RestError","Seal","SecretKeyReadFailed","SetExpiryDate","StagingFileOpenFailed","StagingFileReadFailed","StagingFileWriteFailed","StaticStr","ToMessage","TooManyWitnessesToAddWitness","Transaction","TxDoesntNeedPayloadAuth","TxFinalizationFailed","TxKindToAddExtraInvalid","TxKindToAddInputInvalid","TxKindToAddOutputInvalid","TxKindToAddWitnessInvalid","TxKindToFinalizeInvalid","TxKindToGetMessageInvalid","TxKindToSealInvalid","TxKindToSetValidityTimeInvalid","TxKindToSignDataHashInvalid","TxNeedPayloadAuth","TxWithOwnerStakeDelegationHasOutputs","TxWithOwnerStakeDelegationHasUtxoInput","TxWithOwnerStakeDelegationMultiInputs","UserInputError","WitnessCountToSealInvalid","WitnessFileBech32EncodingFailed","WitnessFileBech32HrpInvalid","WitnessFileBech32Malformed","WitnessFileDeserializationFailed","WitnessFileReadFailed","WitnessFileSerializationFailed","WitnessFileWriteFailed","add_account","add_certificate","add_input","add_output","add_witness","augment_subcommands","augment_subcommands_for_update","auth","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","common","deref","deref","deref_mut","deref_mut","display_data_for_witness","display_fragment_id","display_id","display_message","drop","drop","exec","finalize","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","info","init","init","into","into","mk_witness","new","provide","seal","set_expiry_date","simplified","source","staging","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","actual","actual","actual","actual","error","expected","expected","inputs","kind","kind","kind","kind","kind","kind","kind","kind","kind","max","max","path","path","path","path","path","path","path","path","path","source","source","source","source","source","source","source","source","AddAccount","account","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","value","vzip","AddCertificate","augment_args","augment_args_for_update","borrow","borrow_mut","certificate","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","AddInput","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","index","init","into","transaction_id","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","value","vzip","AddOutput","address","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","value","vzip","AddWitness","HRP","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","witness","witness","Auth","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","signing_keys","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","CommonFees","CommonTransaction","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","coefficient","command","command","command_for_update","command_for_update","constant","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","init","init","into","into","linear_fee","load","staging_file","store","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","Finalize","augment_args","augment_args_for_update","borrow","borrow_mut","change","command","command_for_update","common","deref","deref_mut","drop","exec","fee","finalize","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Info","address_prefix","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","fee","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","output","output_format","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Account","MkWitness","OldUTxO","UTxO","WitnessType","account_spending_counter","account_spending_counter_lane","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","from","from","from_arg_matches","from_arg_matches_mut","from_str","genesis_block_hash","group_id","init","init","into","into","make_witness","output","secret","sign_data_hash","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","witness_type","write_witness","New","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Seal","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","SetExpiryDate","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","common","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","MakeTransaction","augment_args","augment_args_for_update","block0_hash","borrow","borrow_mut","change","command","command_for_update","common","common_fee_from_settings","create_new_private_key","create_receiver_address","create_receiver_secret_key_and_address","deref","deref_mut","drop","exec","force","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","make_address","make_transaction","post","receiver","rest_args","secret","sender_account","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","value","vzip","Authed","Balancing","Finalizing","Sealed","Staging","StagingKind","add_account","add_input","add_output","add_witness","balance","balance_inputs_outputs","borrow","borrow","borrow_mut","borrow_mut","builder_after_witness","clone","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","evm_transaction","extra","extra_authed","fees","finalize_payload","fmt","fmt","fmt","fragment","from","from","get_inputs_outputs","init","init","inputs","inputs","into","into","kind","load","make_fragment","need_auth","new","outputs","outputs","seal","serialize","serialize","set_auth","set_evm_transaction","set_expiry_date","set_extra","staging_kind_name","store","to_owned","to_string","total_input","total_output","transaction_sign_data_hash","transaction_sign_data_hash_on","try_from","try_from","try_into","try_into","type_id","type_id","valid_until","vzip","vzip","witness_count","witnesses","AccountId","Bech32ConversionFailure","Bech32Convert","Bech32ConvertArgs","Error","OutputFormat","Utils","account_id","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","convert_prefix","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_bech32","group_id","has_subcommand","init","init","init","into","into","into","io","key_parser","new_hrp","output_file","output_format","provide","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vote","vzip","vzip","vzip","AccountId","AddressNotAccount","Error","NotRecognized","account","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","id_from_pub","init","init","into","into","provide","to_owned","to_string","to_url_arg","try_from","try_from","try_from_str","try_into","try_into","type_id","type_id","vzip","vzip","addr","addr","kind","Io","ReadYamlError","Yaml","ask_yes_or_no","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","init","into","open_file_read","open_file_write","path_to_path_buf","provide","read_line","read_yaml","source","to_string","try_from","try_into","type_id","vzip","Error","SecretKeyFileMalformed","SecretKeyFileReadFailed","SecretKeyMalformed","UserInputError","_read_secret_key_from_file","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","init","into","parse_ed25519_secret_key","parse_pub_key","provide","read_ed25519_secret_key_from_file","read_secret_key","source","to_string","try_from","try_into","type_id","vzip","path","path","source","source","CannotOpen","Error","OutputFile","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","open","output","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","cause","path","Custom","CustomFormattingFailed","Error","FormatVariant","GtmplError","Json","JsonFormattingFailed","OutputFormat","Yaml","YamlFormattingFailed","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","format","format_json","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_str","from_str","group_id","init","init","init","init","into","into","into","into","json_array_to_gtmpl","json_number_to_gtmpl","json_object_to_gtmpl","json_value_to_gtmpl","provide","provide","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","Empty","InsufficientShares","InvalidBinaryShare","Io","Io","JsonError","JsonError","MemberVotePlanShares","ProposalSharesNotBalanced","SharesError","TallyDecryptShare","UnclearVotePlan","ValidationFailed","VotePlanDecryptShares","VotePlanError","VotePlanIdNotFound","VotePlansRead","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_vote_plan_by_id","init","init","init","init","init","into","into","into","into","into","provide","provide","read_vote_plan_shares_from_file","serialize","serialize","serialize","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Base64","Bech32","Committee","ConfigFileCorrupted","DecryptionKeyRead","ElectionKey","EncryptedTallyRead","Error","FormatError","FragmentFileOpenFailed","FragmentFileWriteFailed","Hex","InputInvalid","InvalidCommitteMemberIndex","InvalidCrs","InvalidOutput","InvalidPublicKey","InvalidSecretKey","InvalidSeed","InvalidThreshold","Io","JsonError","MergeError","MergedVotePlan","PrivateTallyExpected","Rand","RestError","SecretKeyReadFailed","Seed","SharesError","Tally","TallyError","Vote","VotePlanError","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command_for_update","committee","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","election_public_key","exec","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","from_str","from_str","has_subcommand","ids","init","init","init","into","into","into","proposals","provide","source","tally","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","committee_members","found","path","path","path","seed_len","source","source","source","threshold","Committee","CommunicationKey","MemberKey","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","communication_key","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","member_key","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","CommunicationKey","Generate","Generate","ToPublic","ToPublic","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","input_key","into","into","into","output_file","output_file","seed","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","Generate","Generate","MemberKey","ToPublic","ToPublic","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","crs","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","index","init","init","init","input_key","into","into","into","keys","output_file","output_file","seed","threshold","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","ElectionPublicKey","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","member_keys","output_file","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","DecryptResults","DecryptionShares","MergeResults","MergeShares","MergedVotePlan","Tally","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","decrypt_tally","decryption_shares","deref","deref_mut","drop","exec","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","merge_results","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Output","TallyVotePlanWithAllShares","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","output_format","result","serialize","shares","threshold","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote_plan","vote_plan_id","vzip","vzip","MergeShares","TallyGenerateVotePlanDecryptionShares","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","exec","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","init","init","into","into","key","shares","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vote_plan","vote_plan_id","vzip","vzip","Error","MergeVotePlan","MergedVotePlan","MergedVoteProposalStatus","PrivacyMismatch","VotePlanEncrypted","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","eq","eq","equivalent","equivalent","exec","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","ids","init","init","init","init","into","into","into","into","merge_voteplans","options","output_format","proposal_id","proposals","provide","serialize","serialize","tally","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote_plans","votes_cast","vzip","vzip","vzip","vzip"],"q":[[0,"jcli_lib"],[1,"jcli_lib::jcli_lib"],[68,"jcli_lib::jcli_lib::address"],[216,"jcli_lib::jcli_lib::block"],[328,"jcli_lib::jcli_lib::block::Error"],[332,"jcli_lib::jcli_lib::certificate"],[523,"jcli_lib::jcli_lib::certificate::Error"],[544,"jcli_lib::jcli_lib::certificate::new_owner_stake_delegation"],[569,"jcli_lib::jcli_lib::certificate::new_stake_delegation"],[595,"jcli_lib::jcli_lib::certificate::new_stake_pool_registration"],[630,"jcli_lib::jcli_lib::certificate::new_stake_pool_retirement"],[656,"jcli_lib::jcli_lib::certificate::new_update_proposal"],[683,"jcli_lib::jcli_lib::certificate::new_update_vote"],[709,"jcli_lib::jcli_lib::certificate::new_vote_cast"],[790,"jcli_lib::jcli_lib::certificate::new_vote_plan"],[816,"jcli_lib::jcli_lib::certificate::new_vote_tally"],[893,"jcli_lib::jcli_lib::certificate::show"],[918,"jcli_lib::jcli_lib::certificate::show::stake_pool_id"],[943,"jcli_lib::jcli_lib::certificate::show::vote_plan_id"],[968,"jcli_lib::jcli_lib::certificate::sign"],[1001,"jcli_lib::jcli_lib::certificate::weighted_pool_ids"],[1046,"jcli_lib::jcli_lib::debug"],[1097,"jcli_lib::jcli_lib::debug::Error"],[1099,"jcli_lib::jcli_lib::debug::block"],[1123,"jcli_lib::jcli_lib::debug::message"],[1147,"jcli_lib::jcli_lib::key"],[1462,"jcli_lib::jcli_lib::key::Error"],[1470,"jcli_lib::jcli_lib::rest"],[1537,"jcli_lib::jcli_lib::rest::config"],[1654,"jcli_lib::jcli_lib::rest::config::Error"],[1655,"jcli_lib::jcli_lib::rest::v0"],[1710,"jcli_lib::jcli_lib::rest::v0::account"],[1735,"jcli_lib::jcli_lib::rest::v0::account::Account"],[1738,"jcli_lib::jcli_lib::rest::v0::block"],[1765,"jcli_lib::jcli_lib::rest::v0::block::next_id"],[1790,"jcli_lib::jcli_lib::rest::v0::block::next_id::NextId"],[1792,"jcli_lib::jcli_lib::rest::v0::block::subcommand"],[1818,"jcli_lib::jcli_lib::rest::v0::block::subcommand::Subcommand"],[1819,"jcli_lib::jcli_lib::rest::v0::diagnostic"],[1843,"jcli_lib::jcli_lib::rest::v0::diagnostic::Diagnostic"],[1844,"jcli_lib::jcli_lib::rest::v0::leaders"],[1892,"jcli_lib::jcli_lib::rest::v0::leaders::GetLogs"],[1894,"jcli_lib::jcli_lib::rest::v0::message"],[1922,"jcli_lib::jcli_lib::rest::v0::message::Message"],[1926,"jcli_lib::jcli_lib::rest::v0::network"],[1951,"jcli_lib::jcli_lib::rest::v0::network::stats"],[1975,"jcli_lib::jcli_lib::rest::v0::network::stats::Stats"],[1977,"jcli_lib::jcli_lib::rest::v0::node"],[2002,"jcli_lib::jcli_lib::rest::v0::node::stats"],[2026,"jcli_lib::jcli_lib::rest::v0::node::stats::Stats"],[2028,"jcli_lib::jcli_lib::rest::v0::rewards"],[2055,"jcli_lib::jcli_lib::rest::v0::rewards::epoch"],[2079,"jcli_lib::jcli_lib::rest::v0::rewards::epoch::Epoch"],[2081,"jcli_lib::jcli_lib::rest::v0::rewards::history"],[2105,"jcli_lib::jcli_lib::rest::v0::rewards::history::History"],[2107,"jcli_lib::jcli_lib::rest::v0::settings"],[2132,"jcli_lib::jcli_lib::rest::v0::settings::Settings"],[2134,"jcli_lib::jcli_lib::rest::v0::shutdown"],[2158,"jcli_lib::jcli_lib::rest::v0::shutdown::Shutdown"],[2159,"jcli_lib::jcli_lib::rest::v0::stake"],[2183,"jcli_lib::jcli_lib::rest::v0::stake::Stake"],[2186,"jcli_lib::jcli_lib::rest::v0::stake_pool"],[2210,"jcli_lib::jcli_lib::rest::v0::stake_pool::StakePool"],[2213,"jcli_lib::jcli_lib::rest::v0::stake_pools"],[2237,"jcli_lib::jcli_lib::rest::v0::stake_pools::StakePools"],[2239,"jcli_lib::jcli_lib::rest::v0::tip"],[2263,"jcli_lib::jcli_lib::rest::v0::tip::Tip"],[2264,"jcli_lib::jcli_lib::rest::v0::utxo"],[2313,"jcli_lib::jcli_lib::rest::v0::utxo::Subcommand"],[2315,"jcli_lib::jcli_lib::rest::v0::vote"],[2342,"jcli_lib::jcli_lib::rest::v0::vote::active"],[2367,"jcli_lib::jcli_lib::rest::v0::vote::committees"],[2391,"jcli_lib::jcli_lib::rest::v0::vote::committees::Committees"],[2393,"jcli_lib::jcli_lib::rest::v0::vote::plans"],[2417,"jcli_lib::jcli_lib::rest::v0::vote::plans::Plans"],[2419,"jcli_lib::jcli_lib::rest::v1"],[2444,"jcli_lib::jcli_lib::rest::v1::vote"],[2495,"jcli_lib::jcli_lib::transaction"],[2631,"jcli_lib::jcli_lib::transaction::Error"],[2667,"jcli_lib::jcli_lib::transaction::add_account"],[2693,"jcli_lib::jcli_lib::transaction::add_certificate"],[2718,"jcli_lib::jcli_lib::transaction::add_input"],[2745,"jcli_lib::jcli_lib::transaction::add_output"],[2771,"jcli_lib::jcli_lib::transaction::add_witness"],[2798,"jcli_lib::jcli_lib::transaction::auth"],[2823,"jcli_lib::jcli_lib::transaction::common"],[2880,"jcli_lib::jcli_lib::transaction::finalize"],[2907,"jcli_lib::jcli_lib::transaction::info"],[2935,"jcli_lib::jcli_lib::transaction::mk_witness"],[2988,"jcli_lib::jcli_lib::transaction::new"],[3012,"jcli_lib::jcli_lib::transaction::seal"],[3036,"jcli_lib::jcli_lib::transaction::set_expiry_date"],[3061,"jcli_lib::jcli_lib::transaction::simplified"],[3101,"jcli_lib::jcli_lib::transaction::staging"],[3182,"jcli_lib::jcli_lib::utils"],[3259,"jcli_lib::jcli_lib::utils::account_id"],[3299,"jcli_lib::jcli_lib::utils::account_id::Error"],[3302,"jcli_lib::jcli_lib::utils::io"],[3330,"jcli_lib::jcli_lib::utils::key_parser"],[3359,"jcli_lib::jcli_lib::utils::key_parser::Error"],[3363,"jcli_lib::jcli_lib::utils::output_file"],[3408,"jcli_lib::jcli_lib::utils::output_file::Error"],[3410,"jcli_lib::jcli_lib::utils::output_format"],[3503,"jcli_lib::jcli_lib::utils::vote"],[3611,"jcli_lib::jcli_lib::vote"],[3721,"jcli_lib::jcli_lib::vote::Error"],[3731,"jcli_lib::jcli_lib::vote::committee"],[3758,"jcli_lib::jcli_lib::vote::committee::communication_key"],[3836,"jcli_lib::jcli_lib::vote::committee::member_key"],[3915,"jcli_lib::jcli_lib::vote::election_public_key"],[3940,"jcli_lib::jcli_lib::vote::tally"],[3971,"jcli_lib::jcli_lib::vote::tally::decrypt_tally"],[4014,"jcli_lib::jcli_lib::vote::tally::decryption_shares"],[4064,"jcli_lib::jcli_lib::vote::tally::merge_results"]],"d":["","Address tooling and helper","Certificate generation tool","Debug tools for developers","Block tooling and helper","Jormungandr CLI toolkit","Jormungandr CLI toolkit","Key Generation","Send request to node REST API","Build and view offline transaction","Utilities that perform specialized tasks","Vote related operations","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","display full version details (software version, source …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","display the sources version, allowing to check the source…","","","","","","","","","","","","","","","","Create an account address from a single public key.","","","","","Display the content and info of a bech32 formatted address.","","","Create an address from a single public key. This address …","","An address, in bech32 format, to display the content and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A public key in bech32 encoding with the key type prefix.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A public key in bech32 encoding with the key type prefix.","A public key in bech32 encoding with the key type prefix.","","","","","","","","Set the prefix to use to describe the address. This is …","","Set the discrimination type to testing (default is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode the block 0 and print the corresponding YAML file","create the block 0 file (the genesis block of the …","","","create block 0 of the blockchain (i.e. the genesis block)","","","print the block hash (aka the block id) of the block 0","Create a default Genesis file with appropriate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","the file path to the genesis file defining the block 0","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","the file path to the block to create","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build certificate","","","","","","build an owner stake delegation certificate","","","Print certificate","","","","","Output information encoded into the certificate","Sign a certificate. You can call this command multiple …","build a stake delegation certificate","","create the stake pool registration certificate.","retire the given stake pool ID From the blockchain","","","create a new update proposal certificate","create a new update vote certificate","create a vote cast certificate","","create a new vote plan certificate","","","","create a new vote tally certificate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","get the certificate to sign from the given file. If no file","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","write the output to the given file or print it to the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","write the output to the given file or print it to the …","","the public key used in the stake key registration","","","","","","","create the stake pool registration certificate.","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Public key of the block signing key","management threshold","public key of the operators(s)","print the output signed certificate in the given file, if …","public key of the owner(s)","the account to reward the stake pool tax too","start validity","set the fixed value tax the stake pool will reserve from …","The maximum tax value the stake pool will take.","The percentage take of the stake pool.","","","","","","public key of the VRF key","","retire the given stake pool ID From the blockchain","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","print the output signed certificate in the given file, if …","set the 32bytes (in hexadecimal) of the Stake Pool …","start retirement","","","","","","","","","","","","","","the file path to the config file defining the config param …","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","print the output signed certificate in the given file, if …","the proposer ID.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","print the output signed certificate in the given file, if …","the Proposal ID of the proposal.","","","","","","the voter ID.","","","","","","create a vote cast certificate","","","","","","","","","","","","","the number of choice within the proposal you vote for","the number of choice within the proposal you vote for","","","","","","","","","","","","","","","","key to encrypt the vote with","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","size of voting options","write the output to the given file or print it to the …","write the output to the given file or print it to the …","the number of proposal in the vote plan you vote for","the number of proposal in the vote plan you vote for","","","","","","","","","","","","","","","","the vote plan identified on the blockchain","the vote plan identified on the blockchain","","","","create a vote plan certificate","","","","","","","","","","","Returns the argument unchanged.","","","","","the file containing the vote plan configuration (YAML). If …","Calls <code>U::from(self)</code>.","write the output to the given file or print it to the …","","","","","","","","","","","","create a vote tally certificate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","vote plan id","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","write the output to the given file or print it to the …","write the output to the given file or print it to the …","path to the json file containing the tally shares","","","","","","","","","","","","","","","","path to the json file containing the vote plan result","The id of the vote plan to include in the certificate. Can …","","","","","get the stake pool id from the given stake pool …","get the vote plan id from the given vote plan certificate","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","file to read the certificate from (defaults to stdin)","Calls <code>U::from(self)</code>.","file to write the output to (defaults to stdout)","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","file to read the certificate from (defaults to stdin)","Calls <code>U::from(self)</code>.","file to write the output to (defaults to stdout)","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","get the certificate to sign from the given file. If no file","Calls <code>U::from(self)</code>.","write the signed certificate into the given file. If no …","","path to the file with the signing key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","hex-encoded stake pool IDs and their numeric weights in …","","","","","","","","","","","","","Decode hex-encoded block and display its content","","","","","","Decode hex-encoded message and display its content","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","file containing hex-encoded message. If not provided, it …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","file containing hex-encoded message. If not provided, it …","Calls <code>U::from(self)</code>.","","","","","","","","","","derive a child key from a ed25519bip32 parent key","","","","","","retrive a private/public key from the given bytes","","","generate a private key","","","","","","","","","","","","sign data with private key","","","","","get the bytes out of a private key","","get the public key out of a given private key","","","","","","verify signed data with public key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","path to file with data to sign, if no value is passed, …","path to file with signed data, if no value is passed, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the index of child key","","","","","","","","","","","","retrieve the private key from the given bytes","path to the private key to serialize in bytes Or read from …","the source private key to extract the public key from","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Type of a private key","Type of a private key","path to file to write signature into, if no value is …","","","","","the ed25519bip32 parent key to derive a child key from","","","","","path to file with bech32-encoded public key","","","path to file with bech32-encoded secret key","optional seed to generate the key, for the same entropy …","","path to file with signature","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send request to node REST API","","","API version 0","API version 1","","","","","","","","","","print additional debug information to stderr. The output …","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","node API address. Must always have <code>http://</code> or <code>https://</code> …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","An optional TLS root certificate to be used in a case when …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","print additional debug information to stderr. The output …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","node API address. Must always have <code>http://</code> or <code>https://</code> …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An optional TLS root certificate to be used in a case when …","","","","","","","","","","","","","","","","","","","","","","","","","","Account operations","Block operations","System diagnostic information","Node leaders operations","Message sending","Network information","Node information","Rewards information","Node settings","Shutdown node","Stake information","Stake pool operations","Stake pools operations","Blockchain tip information","UTXO information","","Vote related operations","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Get account state","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","An Account ID either in the form of an address of kind …","","","","","","ID of the block","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Get block descendant ID","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Maximum number of IDs, must be between 1 and 100, default 1","Get block","Get block descendant ID","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Get system diagnostic information","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get leadership log","","","Leadership log operations","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","get the node’s logs on the message pool. This will …","","Post message. Prints id for posted message","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","File containing hex-encoded message. If not provided, …","","","Network information","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get network information","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Node information","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get node information","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Rewards distribution for a specific epoch","Rewards distribution history one or more epochs starting …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get rewards for epoch","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Epoch number","Get rewards for one or more epochs","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Number of epochs","Get node settings","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Shutdown node","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get stake distribution","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Epoch to get the stake distribution from","","Get stake pool details","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","hex-encoded pool ID","Get stake pool IDs","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Get tip ID","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get UTxO details","","","","","","","","","","","","","","","","","","","","","","hex-encoded ID of the transaction fragment","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","index of the transaction output","","","","","","","","","","","","","","","","Active vote related operations","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Committee members","Active vote plans","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Get committee members list","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Get active vote plans list","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Get numbers of proposals within a vote plan a given user …","","Account id to filter votes. An Account ID either in the …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Id of the voteplan for which we want to list proposals the …","","","","","","","add Account input to the transaction","set a certificate to the Transaction. If there is already …","add UTxO input to the transaction","add output to the transaction","add output to the finalized transaction","make auth","","","","","get the data to sign from the given transaction (if the …","","Lock a transaction and start adding witnesses","get the Fragment ID from the given ‘sealed’ transaction","DEPRECATED: use ‘data-for-witness’ instead","display the info regarding a given transaction","","","","","send a transaction from one account to another (simplified …","create witnesses","","","","create a new staging transaction. The transaction is …","","","","","Finalize the transaction","","set a transaction expiration date","","","","","get the message format out of a sealed transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the account to debit the funds from","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","the value","","","","","","","bech32-encoded certificate","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","the output index where the credited funds to utilise are.","","Calls <code>U::from(self)</code>.","the Transaction ID which contains the credited funds to …","","","","","","the value","","","the UTxO address or account address to credit funds to","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","the value","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","path to the file with the signing key","","","","","","","","","","","","","","","","","fee per certificate","fee per owner stake delegation (default: fee-certificate)","fee per pool registration (default: fee-certificate)","fee per stake delegation (default: fee-certificate)","fee per vote cast","fee per vote plan","fee per every input and output","","","","","fee per transaction","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","place where the transaction is going to be save during its …","","","","","","","","","","","","","","","","","","","Set the change in the given address","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","set the address prefix to use when displaying the addresses","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","write the info in the given file or print it to the …","","","","","","","","","","","","","value is mandatory if <code>--type=account</code>. It is the counter …","lane to use for the spending counter. Each lane has an …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","the hash of the block0, the first block of the blockchain","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","the file path to the file to write the witness in. If …","the file path to the file to read the signing key from. If …","the Transaction ID of the witness to sign","","","","","","","","","","","","the type of witness to build: account, UTxO or Legacy UtxO","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","the slot this transaction should be valid until, for …","","","","","","","","Set the change in the given address","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","the account to send funds to","","the file path to the file to read the signing key from. If …","the account to debit the funds from","","","","","","","the value","","","Settings inputs and outputs","Settings witnesses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","convert a bech32 with hrp n into a bech32 with prefix m","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","the bech32 you want to convert","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","the new bech32 hrp you want to use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","open the given file path as a readable stream, or stdin if …","open the given file path as a writable stream, or stdout …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","output the key to the given file or to stdout if not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of output data. Possible values: json, yaml. Any …","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create committee member keys","","","Build the election public key from committee member keys","","","","","","","","","","","","","","","","","","","","","","","","","Perform decryption of private voting tally","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","commands for managing committee member communication keys","commands for managing committee member stake keys","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","generate a private key","","get the public key out of a given private key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","The file with the private key to extract the public key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","optional seed to generate the key, for the same entropy …","","","","","","","","","","","","","","","","","","","","generate a private key","","","get the public key out of a given private key","","","","","","","","","","","","","","","","","","","the common reference string","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","index of the committee member this key is generated for","","","","The file with the private key to extract the public key …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","communication keys of all committee members","","","optional seed to generate the key, for the same entropy …","threshold number of the committee members sufficient for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Keys of all committee members","","","","","","","","Decrypt all proposals in a vote plan.","Create a decryption share for private voting tally.","Merge voteplans that have the same external proposal ids.","Merge multiple sets of shares in a single object to be …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The path to a JSON file containing decryption shares …","The minimum number of shares needed for decryption","","","","","","","","","The path to json-encoded vote plan to decrypt. If this …","The id of the vote plan to decrypt. Can be left …","","","Merge multiple sets of shares in a single object to be …","Create decryption shares for all proposals in a vote plan.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The path to bech32-encoded decryption key.","The path to the shares to merge","","","","","","","","","","","The path to json-encoded vote plan to decrypt. If this …","The id of the vote plan to decrypt. Can be left …","","","","","","like VoteProposalStatus but without the index field, since …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","The path to json-encoded list of voteplans to merge. If …","","","","",""],"i":[0,7,7,7,7,0,0,7,7,7,7,7,0,3,3,7,7,0,3,7,3,7,0,3,7,3,3,7,0,3,7,3,7,3,7,3,7,3,7,3,7,3,7,3,3,7,3,7,3,7,0,0,3,0,3,7,3,7,3,7,3,7,3,7,0,0,3,7,17,0,0,0,0,17,0,16,17,0,20,0,20,21,22,23,20,21,22,23,17,17,17,20,21,22,23,16,17,20,21,22,23,16,17,20,21,22,23,17,20,21,22,23,22,17,20,21,22,23,16,17,20,21,22,23,16,22,23,17,20,21,22,23,16,17,16,16,17,20,21,22,23,16,17,20,21,22,23,17,20,21,22,23,20,21,22,23,17,17,20,21,22,23,16,17,20,21,22,23,16,22,23,0,0,0,0,0,0,0,21,16,21,16,17,20,21,22,23,16,17,20,21,22,23,16,17,20,21,22,23,16,17,20,21,22,23,17,20,21,22,23,17,20,21,22,23,16,33,33,33,0,34,34,0,33,0,33,33,34,34,0,33,33,37,32,37,32,34,34,33,34,37,32,33,34,37,32,34,37,32,34,37,32,0,33,34,37,32,33,34,37,32,33,34,37,32,0,34,33,33,33,33,33,34,37,32,34,37,32,34,37,32,37,32,34,33,34,37,32,0,32,37,33,34,37,32,0,37,37,0,0,32,32,0,33,33,33,33,34,37,32,33,34,37,32,33,34,37,32,34,37,32,34,37,32,33,34,37,32,262,263,262,263,42,0,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,41,0,42,42,42,42,43,42,42,41,0,42,42,42,41,41,43,0,43,43,42,42,43,43,43,42,43,42,42,42,43,44,55,44,55,41,43,41,43,42,41,43,44,55,42,41,43,44,55,41,43,44,55,41,43,44,55,42,41,43,44,55,42,41,43,44,55,42,41,43,44,55,41,43,44,42,42,42,42,42,42,42,42,42,42,42,42,42,41,43,44,55,41,43,44,55,41,43,44,55,44,55,41,43,42,41,43,44,55,44,42,41,43,44,55,55,0,0,0,0,0,0,0,0,0,55,55,42,0,0,0,0,0,42,42,42,41,43,44,55,42,41,43,44,55,42,41,43,44,55,41,43,44,55,41,43,44,55,42,41,43,44,55,0,0,0,0,264,265,266,267,268,267,269,270,271,272,264,265,266,270,273,274,273,274,275,268,275,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,65,65,65,65,65,65,65,65,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,70,0,70,0,0,68,69,68,69,70,70,68,69,70,68,69,70,68,69,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,69,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,69,68,69,68,69,68,69,70,68,69,70,68,69,70,68,69,70,68,69,70,68,69,68,69,70,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,71,73,0,73,0,0,74,75,74,75,73,73,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,74,75,73,74,73,74,75,73,74,75,74,75,75,73,74,75,73,74,75,73,74,75,73,74,75,73,74,75,75,75,73,74,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,76,76,76,76,76,0,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,84,84,84,84,84,84,0,0,84,84,84,0,84,84,84,84,84,84,84,84,84,0,84,0,84,84,84,84,84,0,0,84,0,0,93,93,93,90,93,90,90,90,93,93,0,0,93,90,93,90,93,90,90,93,90,93,93,90,93,93,90,93,90,90,93,90,93,90,93,90,93,90,93,93,93,90,90,94,0,0,95,95,95,94,95,94,94,0,94,95,94,95,94,94,94,95,94,95,94,95,94,95,95,94,95,95,95,94,94,94,94,95,94,95,0,95,95,95,94,95,94,95,94,95,94,94,94,95,276,276,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,99,99,0,102,100,100,100,0,0,102,0,0,102,99,99,99,99,0,99,99,100,99,0,0,102,99,99,100,0,102,0,102,99,99,99,99,0,102,103,104,105,106,107,108,109,103,104,105,106,107,108,109,102,102,99,102,103,104,105,106,107,108,109,100,101,99,102,103,104,105,106,107,108,109,100,101,0,0,109,100,101,100,101,102,103,104,105,106,107,108,109,102,103,104,105,106,107,108,109,107,108,99,102,103,104,105,106,107,108,109,100,101,99,102,103,104,105,106,107,108,109,100,101,99,102,103,104,105,106,107,108,109,100,101,102,103,104,105,106,107,108,109,99,99,102,103,104,105,106,107,108,109,100,101,99,99,99,99,99,99,99,99,99,99,102,103,104,105,106,107,108,109,100,101,102,103,104,105,106,107,108,109,102,103,104,105,106,107,108,109,101,101,0,0,103,104,105,106,107,108,109,102,109,99,102,103,104,105,106,107,108,109,100,101,103,104,106,99,102,103,104,105,106,107,108,109,100,101,103,105,107,103,104,105,106,109,103,103,99,103,108,0,0,107,105,107,108,99,100,101,100,99,99,102,103,104,105,106,107,108,109,100,101,99,102,103,104,105,106,107,108,109,100,101,99,102,103,104,105,106,107,108,109,100,101,102,103,104,105,106,107,108,109,102,103,104,105,106,107,108,109,100,108,99,102,103,104,105,106,107,108,109,100,101,109,277,278,277,279,280,278,278,281,0,121,121,121,121,121,121,121,0,0,121,120,120,120,120,120,121,120,121,120,120,0,132,120,121,120,121,120,121,120,121,121,120,121,121,121,121,121,121,121,121,121,121,120,120,120,132,120,121,120,121,121,121,132,121,120,121,120,121,120,121,120,120,0,0,120,121,125,125,125,0,125,125,125,125,125,125,125,0,0,0,0,125,125,125,132,132,133,128,133,128,130,132,125,133,128,130,132,125,130,132,133,128,132,132,132,132,133,128,132,133,133,128,130,132,125,133,128,130,132,125,133,128,130,132,125,128,125,125,133,128,130,132,125,132,132,133,132,132,133,128,130,132,125,133,128,130,132,125,128,130,133,0,133,125,128,128,125,130,132,132,125,133,128,130,132,125,133,128,130,132,125,133,128,130,132,125,132,132,133,128,130,132,125,282,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,0,137,0,137,137,0,137,137,137,137,137,137,0,137,137,137,137,137,137,137,137,0,0,0,0,0,0,0,0,0,0,0,137,137,137,137,137,0,0,137,0,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,0,138,138,138,138,138,138,283,283,283,0,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,0,0,141,141,141,141,141,141,141,142,0,142,142,142,142,142,142,142,142,142,142,0,142,142,142,142,142,142,142,142,142,142,142,142,284,284,143,143,0,143,143,143,143,143,143,143,143,143,143,0,143,143,143,143,143,143,143,143,143,143,143,143,285,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,286,146,0,0,145,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,145,146,145,146,145,146,0,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,145,146,287,287,148,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,0,148,148,148,0,0,148,148,148,148,148,148,288,289,288,289,0,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,0,150,150,150,150,150,150,151,0,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,290,290,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,152,152,152,152,152,152,153,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,291,291,154,154,0,154,154,154,154,154,154,154,154,154,0,154,154,154,154,154,0,154,154,154,154,154,154,154,154,0,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,292,292,156,0,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,293,293,157,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,157,157,157,157,157,157,294,294,159,0,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,295,160,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,296,296,296,161,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,297,297,297,162,0,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,298,298,163,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,299,165,0,0,164,164,165,165,164,165,164,165,164,165,164,165,164,165,164,165,164,165,164,164,164,165,164,165,164,165,164,165,164,165,164,165,164,164,164,165,164,165,164,165,164,165,164,165,164,165,300,300,166,0,0,166,166,166,166,166,166,0,166,166,166,166,166,166,166,166,166,166,0,166,166,166,166,166,166,0,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,301,301,169,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,302,302,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,170,0,172,0,171,171,171,171,172,172,171,172,171,172,171,172,171,172,171,172,171,172,171,172,171,172,171,172,171,172,171,172,171,172,171,172,171,172,171,171,172,171,172,171,172,171,172,171,172,171,171,172,174,174,174,174,175,175,175,175,175,175,174,174,174,174,175,0,175,175,175,175,174,174,174,174,175,175,174,174,174,175,174,174,174,174,175,174,175,174,174,174,0,175,174,0,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,0,0,0,0,0,175,175,0,175,174,175,174,175,175,0,175,174,175,174,0,0,0,0,175,174,175,0,174,174,175,174,174,174,174,174,174,174,174,174,174,174,175,175,175,0,175,174,175,174,0,0,174,0,0,0,174,0,174,175,174,175,174,175,174,175,175,175,174,303,304,305,306,307,303,305,308,309,310,311,312,313,314,315,316,317,304,306,318,319,320,321,322,323,303,324,325,318,319,320,321,322,323,324,325,0,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,0,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,0,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,0,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,0,0,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,0,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,0,0,187,173,187,173,187,173,187,173,187,187,187,187,187,187,187,187,173,187,173,187,187,173,187,173,187,173,173,187,173,187,173,187,173,187,173,187,173,187,173,187,173,173,173,187,173,187,173,187,173,187,173,187,173,187,173,0,190,190,190,190,190,190,190,190,190,190,190,190,190,0,190,190,190,190,190,190,190,190,190,190,190,190,0,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,193,0,193,193,0,194,194,194,194,194,193,194,193,193,193,194,194,194,193,194,193,194,193,194,193,194,193,194,194,193,194,194,194,193,194,193,0,194,194,194,193,194,193,194,193,194,193,194,194,194,193,194,194,0,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,0,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,0,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,0,204,204,204,204,204,204,204,204,204,0,0,0,0,204,204,204,204,204,204,204,204,204,204,204,0,0,204,204,204,204,204,204,204,204,204,204,204,204,204,213,213,213,213,0,0,189,189,189,189,189,189,213,189,213,189,189,213,213,189,213,189,213,189,213,189,213,189,213,213,189,189,189,189,189,213,213,189,189,213,189,189,213,189,189,189,213,189,189,189,189,189,189,189,189,189,213,189,189,189,189,189,189,189,213,213,189,189,189,189,213,189,213,189,213,189,189,213,189,189,189,0,219,220,0,0,0,0,0,221,221,220,220,220,221,219,220,221,219,220,221,220,221,0,220,221,219,220,221,219,220,221,219,220,219,219,220,221,219,219,220,221,220,221,221,221,220,220,221,219,220,221,219,0,0,221,0,0,219,219,219,220,221,219,220,221,219,220,221,219,220,221,220,221,0,220,221,219,0,176,0,176,139,139,176,139,176,139,139,139,176,139,176,139,176,139,176,176,139,176,0,139,176,139,176,176,139,176,139,139,176,139,139,176,139,176,139,176,326,327,327,127,0,127,0,127,127,127,127,127,127,127,127,127,127,127,127,0,0,0,127,0,0,127,127,127,127,127,127,0,54,54,54,54,0,54,54,54,54,54,54,54,54,54,54,54,54,0,0,54,0,0,54,54,54,54,54,54,328,329,328,329,113,0,0,225,225,113,225,113,225,225,225,113,225,113,225,113,225,113,113,225,113,225,225,225,225,225,113,225,113,225,225,225,113,113,113,113,225,113,225,113,225,225,225,113,225,330,330,226,123,0,0,0,226,123,0,226,123,147,147,147,226,123,227,147,226,123,227,226,226,147,147,147,226,123,227,147,226,123,227,147,226,123,227,226,123,123,227,227,147,147,147,147,226,226,123,123,123,123,227,147,147,226,226,147,147,226,123,227,147,226,123,227,0,0,0,0,123,227,123,226,123,227,147,226,123,227,147,226,123,227,147,226,123,227,147,147,147,226,123,227,49,49,49,46,49,46,49,0,49,0,0,46,49,0,0,46,46,46,49,233,234,235,46,49,233,234,235,233,233,46,49,233,234,235,46,49,233,234,235,233,234,235,46,49,233,234,235,46,46,49,49,233,234,235,46,46,46,49,49,49,49,233,234,234,235,0,46,49,233,234,235,46,49,233,234,235,46,49,0,233,234,235,46,49,233,46,49,46,49,233,234,235,235,46,49,233,234,235,46,49,233,234,235,46,49,233,234,235,242,242,241,242,242,241,242,0,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,0,242,242,242,242,0,242,241,242,0,242,241,241,242,241,240,242,241,240,240,240,241,241,0,242,241,240,242,241,240,242,241,240,0,241,242,242,240,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,241,240,241,241,240,240,241,259,242,241,240,242,241,240,259,242,242,0,240,242,242,241,240,242,241,240,242,241,240,241,241,242,241,240,331,332,333,334,335,336,333,334,335,331,0,246,246,246,246,246,246,246,246,0,246,246,246,246,246,246,246,246,246,246,0,246,246,246,246,246,246,0,0,249,0,249,247,248,247,248,249,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,248,247,248,249,247,248,247,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,247,248,249,0,252,0,0,252,250,251,250,251,252,252,250,251,252,250,251,252,250,251,252,250,251,252,250,250,251,252,250,251,252,250,251,252,250,251,252,250,251,252,250,251,252,250,251,252,250,251,252,250,250,251,252,251,250,251,252,250,250,251,250,250,250,251,252,250,251,252,250,251,252,250,251,252,250,251,252,250,251,252,0,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,254,254,254,254,0,0,254,254,254,254,254,254,0,0,254,254,254,254,254,254,254,254,254,254,0,254,254,254,254,254,254,0,0,255,255,255,256,255,256,255,255,255,256,255,256,255,256,255,255,256,255,255,255,255,256,255,256,255,256,256,255,255,255,256,255,256,255,256,255,255,255,255,255,256,0,0,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,258,257,257,257,258,0,0,0,0,245,245,261,261,245,261,259,260,245,261,259,260,259,260,259,260,261,261,245,261,259,260,245,261,259,260,259,260,245,261,259,260,259,260,259,260,261,245,245,259,260,245,261,259,260,261,261,261,259,245,261,259,260,245,261,259,260,0,260,261,260,259,245,259,260,260,259,260,245,245,261,259,260,245,261,259,260,245,261,259,260,261,261,261,260,245,261,259,260],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],0,[[]],[[]],[[]],[[]],0,[[],1],[[],1],0,[[],1],[[],1],0,[2],[2],[2],[2],[2],[2],[3,[[6,[[5,[4]]]]]],[7,[[6,[[5,[4]]]]]],[[]],[[]],[8,[[6,[3,9]]]],[8,[[6,[7,9]]]],[8,[[6,[3,9]]]],[8,[[6,[7,9]]]],0,[[],[[11,[10]]]],[12,13],[[],2],[[],2],[[]],[[]],0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[3,8],[[6,[9]]]],[[7,8],[[6,[9]]]],[[3,8],[[6,[9]]]],[[7,8],[[6,[9]]]],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[15,[[6,[16]]]],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,0,[2],[2],[2],[2],[2],[2],[17,[[6,[16]]]],[[16,18],19],[[16,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[6,[17,9]]]],[8,[[6,[20,9]]]],[8,[[6,[21,9]]]],[8,[[6,[22,9]]]],[8,[[6,[23,9]]]],[8,[[6,[17,9]]]],[8,[[6,[20,9]]]],[8,[[6,[21,9]]]],[8,[[6,[22,9]]]],[8,[[6,[23,9]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[12,13],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[12,[25,[24]],13]],[[12,26,27]],[[12,[25,[28]],13,29]],[[12,[25,[28]],[25,[28]],13,29]],[[12,[25,[24]],13,[25,[24]]]],[13,26],[[12,[25,[24]],13]],0,[30],0,[[],31],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[17,8],[[6,[9]]]],[[20,8],[[6,[9]]]],[[21,8],[[6,[9]]]],[[22,8],[[6,[9]]]],[[23,8],[[6,[9]]]],[[17,8],[[6,[9]]]],[[20,8],[[6,[9]]]],[[21,8],[[6,[9]]]],[[22,8],[[6,[9]]]],[[23,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[32,[[6,[33]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[32,[[6,[33]]]],[34,[[6,[33]]]],[[33,18],19],[[33,18],19],[35,33],[36,33],[[]],[[]],[[]],[[]],[8,[[6,[34,9]]]],[8,[[6,[37,9]]]],[8,[[6,[32,9]]]],[8,[[6,[34,9]]]],[8,[[6,[37,9]]]],[8,[[6,[32,9]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[12,13],[[],2],[[],2],[[],2],[[],2],[[]],0,0,[[]],[[]],[[]],[[]],[38,[[6,[39,33]]]],[37,[[6,[39,33]]]],[37,[[6,[38,33]]]],[11,[[6,[38,33]]]],[11,[[6,[40,33]]]],[32,[[6,[40,33]]]],0,[37,[[6,[33]]]],[30],[33,[[11,[4]]]],[[],31],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[34,8],[[6,[9]]]],[[37,8],[[6,[9]]]],[[32,8],[[6,[9]]]],[[34,8],[[6,[9]]]],[[37,8],[[6,[9]]]],[[32,8],[[6,[9]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[41,[[6,[42]]]],[43,[[6,[42]]]],[44,[[6,[42]]]],[[42,18],19],[[42,18],19],[45,42],[46,42],[47,42],[48,42],[49,42],[50,42],[[]],[51,42],[52,42],[53,42],[54,42],[[]],[[]],[[]],[[]],[8,[[6,[41,9]]]],[8,[[6,[43,9]]]],[8,[[6,[44,9]]]],[8,[[6,[55,9]]]],[8,[[6,[41,9]]]],[8,[[6,[43,9]]]],[8,[[6,[44,9]]]],[8,[[6,[55,9]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[12,13],[12,13],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[30],[[[11,[56]]],[[6,[57,42]]]],[[[11,[56]]],[[6,[57,42]]]],[[[11,[56]]],[[6,[31,42]]]],0,0,[42,[[11,[4]]]],[[],31],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[],14],[[41,8],[[6,[9]]]],[[43,8],[[6,[9]]]],[[44,8],[[6,[9]]]],[[55,8],[[6,[9]]]],[[41,8],[[6,[9]]]],[[43,8],[[6,[9]]]],[[44,8],[[6,[9]]]],[[55,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],0,[[[11,[[58,[56]]]],57],[[6,[42]]]],[[[11,[[58,[56]]]],59],[[6,[42]]]],[[[11,[56]],60],[[6,[42]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[61,[[6,[42]]]],[[]],[8,[[6,[61,9]]]],[8,[[6,[61,9]]]],[[],[[11,[10]]]],[[],2],[[]],0,0,[[],6],[[],6],[[],14],[[61,8],[[6,[9]]]],[[61,8],[[6,[9]]]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[62,[[6,[42]]]],[[]],[8,[[6,[62,9]]]],[8,[[6,[62,9]]]],[[],[[11,[10]]]],[[],2],[[]],0,0,0,[[],6],[[],6],[[],14],[[62,8],[[6,[9]]]],[[62,8],[[6,[9]]]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[63,[[6,[42]]]],[[63,18],19],[[]],[8,[[6,[63,9]]]],[8,[[6,[63,9]]]],[[],[[11,[10]]]],[[],2],[[]],0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],14],[[63,8],[[6,[9]]]],[[63,8],[[6,[9]]]],0,[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[64,[[6,[42]]]],[[]],[8,[[6,[64,9]]]],[8,[[6,[64,9]]]],[[],[[11,[10]]]],[[],2],[[]],0,0,0,[[],6],[[],6],[[],14],[[64,8],[[6,[9]]]],[[64,8],[[6,[9]]]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[65,[[6,[42]]]],[[]],[8,[[6,[65,9]]]],[8,[[6,[65,9]]]],[[],[[11,[10]]]],[[],2],[[]],[[[11,[66]]],[[6,[38,42]]]],0,0,[[],6],[[],6],[[],14],[[65,8],[[6,[9]]]],[[65,8],[[6,[9]]]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[67,[[6,[42]]]],[[]],[8,[[6,[67,9]]]],[8,[[6,[67,9]]]],[[],[[11,[10]]]],[[],2],[[]],0,0,[[],6],[[],6],[[],14],[[67,8],[[6,[9]]]],[[67,8],[[6,[9]]]],0,[[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[68,[[6,[42]]]],[69,[[6,[42]]]],[70,[[6,[42]]]],[[]],[[]],[[]],[8,[[6,[68,9]]]],[8,[[6,[69,9]]]],[8,[[6,[70,9]]]],[8,[[6,[68,9]]]],[8,[[6,[69,9]]]],[8,[[6,[70,9]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[12,13],[[],2],[[],2],[[],2],[[]],[[]],[[]],0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[68,8],[[6,[9]]]],[[69,8],[[6,[9]]]],[[70,8],[[6,[9]]]],[[68,8],[[6,[9]]]],[[69,8],[[6,[9]]]],[[70,8],[[6,[9]]]],0,0,[[]],[[]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[71,[[6,[42]]]],[[]],[8,[[6,[71,9]]]],[8,[[6,[71,9]]]],[[],[[11,[10]]]],[[],2],0,[[]],0,[[],6],[[],6],[[],14],[[71,8],[[6,[9]]]],[[71,8],[[6,[9]]]],[72,[[6,[42]]]],[[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[73,[[6,[42]]]],[74,[[6,[42]]]],[75,[[6,[42]]]],[[]],[[]],[[]],[8,[[6,[73,9]]]],[8,[[6,[74,9]]]],[8,[[6,[75,9]]]],[8,[[6,[73,9]]]],[8,[[6,[74,9]]]],[8,[[6,[75,9]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[12,13],0,[[],2],[[],2],[[],2],[[]],[[]],[[]],0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[73,8],[[6,[9]]]],[[74,8],[[6,[9]]]],[[75,8],[[6,[9]]]],[[73,8],[[6,[9]]]],[[74,8],[[6,[9]]]],[[75,8],[[6,[9]]]],0,0,[[]],[[]],[[]],0,0,0,[1,1],[1,1],[[]],[[]],[2],[2],[2],[76,[[6,[42]]]],[[]],[8,[[6,[76,9]]]],[8,[[6,[76,9]]]],[12,13],[[],2],[[]],0,[[],6],[[],6],[[],14],[[76,8],[[6,[9]]]],[[76,8],[[6,[9]]]],0,[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[77,[[6,[42]]]],[[]],[8,[[6,[77,9]]]],[8,[[6,[77,9]]]],[[],[[11,[10]]]],[[],2],0,[[]],0,[[],6],[[],6],[[],14],[[77,8],[[6,[9]]]],[[77,8],[[6,[9]]]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[78,[[6,[42]]]],[[]],[8,[[6,[78,9]]]],[8,[[6,[78,9]]]],[[],[[11,[10]]]],[[],2],0,[[]],0,[[],6],[[],6],[[],14],[[78,8],[[6,[9]]]],[[78,8],[[6,[9]]]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[[72,12,[80,[[79,[72]]]]],[[6,[81,42]]]],[[82,12,[80,[[79,[82]]]]],[[6,[81,42]]]],[2],[2],[2],[[83,12,[80,[[79,[83]]]]],[[6,[81,42]]]],[84,[[6,[42]]]],[[]],[8,[[6,[84,9]]]],[8,[[6,[84,9]]]],[[],[[11,[10]]]],[[],2],0,[[]],0,[[85,[11,[86]],[80,[[79,[85]]]],29],[[6,[81,42]]]],0,[[87,12,[80,[[79,[87]]]]],[[6,[81,42]]]],[[],6],[[],6],[[],14],[[84,8],[[6,[9]]]],[[84,8],[[6,[9]]]],[[88,12,[80,[[79,[85]]]]],[[6,[81,42]]]],[[89,12,[80,[[79,[85]]]]],[[6,[81,42]]]],[[]],0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[90,90],[[]],[[],1],[[],1],[[],[[6,[91,42]]]],[[],[[6,[92,42]]]],[2],[2],[2],[2],[2],[2],[[90,18],19],[[]],[[]],[8,[[6,[93,9]]]],[8,[[6,[93,9]]]],[12,[[6,[90]]]],[[],[[11,[10]]]],[[],2],[[],2],[[]],[[]],0,0,[[]],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[93,8],[[6,[9]]]],[[93,8],[[6,[9]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1,1],[1,1],0,[[]],[[]],[[]],[[]],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[94,[[6,[95]]]],[[95,18],19],[[95,18],19],[[]],[51,95],[[]],[96,95],[8,[[6,[94,9]]]],[8,[[6,[94,9]]]],[12,13],[[],2],[[],2],[[]],[[]],0,[30],[95,[[11,[4]]]],[[],31],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[94,8],[[6,[9]]]],[[94,8],[[6,[9]]]],[[]],[[]],0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[97,[[6,[95]]]],[[]],[8,[[6,[97,9]]]],[8,[[6,[97,9]]]],[[],[[11,[10]]]],[[],2],0,[[]],[[],6],[[],6],[[],14],[[97,8],[[6,[9]]]],[[97,8],[[6,[9]]]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[98,[[6,[95]]]],[[]],[8,[[6,[98,9]]]],[8,[[6,[98,9]]]],[[],[[11,[10]]]],[[],2],0,[[]],[[],6],[[],6],[[],14],[[98,8],[[6,[9]]]],[[98,8],[[6,[9]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[31,99]]]],[[],[[6,[31,99]]]],0,[100,100],[101,101],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[102,[[6,[99]]]],[103,[[6,[99]]]],[104,[[6,[99]]]],[105,[[6,[99]]]],[106,[[6,[99]]]],[107,[[6,[99]]]],[108,[[6,[99]]]],[109,[[6,[99]]]],[[99,18],19],[[99,18],19],[[102,18],19],[[103,18],19],[[104,18],19],[[105,18],19],[[106,18],19],[[107,18],19],[[108,18],19],[[109,18],19],[[100,18],19],[[101,18],19],[51,99],[96,99],[110,99],[111,99],[112,99],[47,99],[113,99],[114,99],[[]],[115,99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[6,[102,9]]]],[8,[[6,[103,9]]]],[8,[[6,[104,9]]]],[8,[[6,[105,9]]]],[8,[[6,[106,9]]]],[8,[[6,[107,9]]]],[8,[[6,[108,9]]]],[8,[[6,[109,9]]]],[8,[[6,[102,9]]]],[8,[[6,[103,9]]]],[8,[[6,[104,9]]]],[8,[[6,[105,9]]]],[8,[[6,[106,9]]]],[8,[[6,[107,9]]]],[8,[[6,[108,9]]]],[8,[[6,[109,9]]]],[12,[[6,[101]]]],[12,6],[[[11,[101]]],[[6,[31,99]]]],[[],[[6,[31,99]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[12,13],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[103,[116,[92]]],[[6,[31,99]]]],[[103,[116,[92]]],[[6,[31,99]]]],[30],0,0,[[[117,[[11,[66]]]]],[[6,[99]]]],[11,[[6,[[116,[92]],99]]]],0,0,[107,[[6,[99]]]],0,[99,[[11,[4]]]],[[]],[[]],[100,[[11,[118]]]],[[],31],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[102,8],[[6,[9]]]],[[103,8],[[6,[9]]]],[[104,8],[[6,[9]]]],[[105,8],[[6,[9]]]],[[106,8],[[6,[9]]]],[[107,8],[[6,[9]]]],[[108,8],[[6,[9]]]],[[109,8],[[6,[9]]]],[[102,8],[[6,[9]]]],[[103,8],[[6,[9]]]],[[104,8],[[6,[9]]]],[[105,8],[[6,[9]]]],[[106,8],[[6,[9]]]],[[107,8],[[6,[9]]]],[[108,8],[[6,[9]]]],[[109,8],[[6,[9]]]],[[]],[108,[[6,[99]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[109,119],[[6,[99]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],[[],1],0,0,[2],[2],[2],[2],[2],[2],[120,[[6,[121]]]],[[121,18],19],[[121,18],19],[[]],[50,121],[122,121],[96,121],[[]],[51,121],[123,121],[124,121],[125,121],[126,121],[127,121],[8,[[6,[120,9]]]],[8,[[6,[120,9]]]],[12,13],0,[[],2],[[],2],[[]],[[]],[30],[121,[[11,[4]]]],0,[[],31],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[120,8],[[6,[9]]]],[[120,8],[[6,[9]]]],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],0,[[128,[117,[129]]],128],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[130,[[6,[131,125]]]],[132,[[6,[133,125]]]],0,0,[132,132],[[]],[[],1],[[],1],0,0,0,[133,128],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[128,[[6,[130,125]]]],[[125,18],19],[[125,18],19],[[]],[[]],[[]],[[]],[[]],[8,[[6,[132,9]]]],[8,[[6,[132,9]]]],[133,128],[[],[[11,[10]]]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[128,128],[130,[[6,[134,125]]]],[[133,135],128],[136,136],[133,128],[30],[128,128],0,[125,[[11,[4]]]],[130,[[6,[31,125]]]],0,[[]],[[],31],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[],14],[[132,8],[[6,[9]]]],[[132,8],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],0,[[]],[[]],[[],1],[[],1],[2],[2],0,[2],[137,[[6,[121]]]],[[]],[8,[[6,[137,9]]]],[8,[[6,[137,9]]]],[12,13],[[],2],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],14],[[137,8],[[6,[9]]]],[[137,8],[[6,[9]]]],0,0,[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[138,[[6,[121]]]],[[]],[8,[[6,[138,9]]]],[8,[[6,[138,9]]]],[12,13],[[],2],[[]],[[132,139],[[6,[140,121]]]],[[],6],[[],6],[[],14],[[138,8],[[6,[9]]]],[[138,8],[[6,[9]]]],[[]],0,0,0,0,[1,1],[1,1],0,[[]],[[]],[[],1],[[],1],[2],[2],[2],[141,[[6,[121]]]],[[]],[8,[[6,[141,9]]]],[8,[[6,[141,9]]]],[[],[[11,[10]]]],[[],2],[[]],0,0,0,[[],6],[[],6],[[],14],[[141,8],[[6,[9]]]],[[141,8],[[6,[9]]]],[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[[142,31],[[6,[121]]]],[[132,31,[11,[2]]],[[6,[121]]]],[[]],[8,[[6,[142,9]]]],[8,[[6,[142,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[142,8],[[6,[9]]]],[[142,8],[[6,[9]]]],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[[143,31],[[6,[121]]]],[[31,132],[[6,[121]]]],[[]],[8,[[6,[143,9]]]],[8,[[6,[143,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[143,8],[[6,[9]]]],[[143,8],[[6,[9]]]],[[]],0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[144,[[6,[121]]]],[[]],[8,[[6,[144,9]]]],[8,[[6,[144,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[144,8],[[6,[9]]]],[[144,8],[[6,[9]]]],[[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[145,[[6,[121]]]],[[]],[[]],[8,[[6,[145,9]]]],[8,[[6,[146,9]]]],[8,[[6,[145,9]]]],[8,[[6,[146,9]]]],[[132,147],[[6,[121]]]],[12,13],[12,13],[[],2],[[],2],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[145,8],[[6,[9]]]],[[146,8],[[6,[9]]]],[[145,8],[[6,[9]]]],[[146,8],[[6,[9]]]],[[]],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[148,[[6,[121]]]],[[]],[8,[[6,[148,9]]]],[8,[[6,[148,9]]]],[[132,147],[[6,[121]]]],[12,13],[[],2],[[]],[[132,149],[[6,[31,121]]]],[[132,[11,[66]]],[[6,[121]]]],[[],6],[[],6],[[],14],[[148,8],[[6,[9]]]],[[148,8],[[6,[9]]]],[[]],0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[150,[[6,[121]]]],[[]],[8,[[6,[150,9]]]],[8,[[6,[150,9]]]],[12,13],[[],2],[[]],0,[[],6],[[],6],[[],14],[[150,8],[[6,[9]]]],[[150,8],[[6,[9]]]],[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[151,[[6,[121]]]],[[]],[8,[[6,[151,9]]]],[8,[[6,[151,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[151,8],[[6,[9]]]],[[151,8],[[6,[9]]]],[[]],0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[152,[[6,[121]]]],[[]],[8,[[6,[152,9]]]],[8,[[6,[152,9]]]],[12,13],[[],2],[[]],0,[[],6],[[],6],[[],14],[[152,8],[[6,[9]]]],[[152,8],[[6,[9]]]],[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[153,[[6,[121]]]],[[]],[8,[[6,[153,9]]]],[8,[[6,[153,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[153,8],[[6,[9]]]],[[153,8],[[6,[9]]]],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],0,[154,[[6,[121]]]],[[]],[8,[[6,[154,9]]]],[8,[[6,[154,9]]]],[12,13],0,[[],2],[[]],[[],6],[[],6],[[],14],[[154,8],[[6,[9]]]],[[154,8],[[6,[9]]]],[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[155,[[6,[121]]]],[[]],[8,[[6,[155,9]]]],[8,[[6,[155,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[155,8],[[6,[9]]]],[[155,8],[[6,[9]]]],[[]],0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[156,[[6,[121]]]],[[]],[8,[[6,[156,9]]]],[8,[[6,[156,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[156,8],[[6,[9]]]],[[156,8],[[6,[9]]]],[[]],0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[157,[[6,[121]]]],[[]],[8,[[6,[157,9]]]],[8,[[6,[157,9]]]],[12,13],[[],2],[[]],[132,[[6,[158,121]]]],[[],6],[[],6],[[],14],[[157,8],[[6,[9]]]],[[157,8],[[6,[9]]]],[[]],0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[159,[[6,[121]]]],[[]],[8,[[6,[159,9]]]],[8,[[6,[159,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[159,8],[[6,[9]]]],[[159,8],[[6,[9]]]],[[]],0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[160,[[6,[121]]]],[[]],[8,[[6,[160,9]]]],[8,[[6,[160,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[160,8],[[6,[9]]]],[[160,8],[[6,[9]]]],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[161,[[6,[121]]]],[[]],[8,[[6,[161,9]]]],[8,[[6,[161,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[161,8],[[6,[9]]]],[[161,8],[[6,[9]]]],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[162,[[6,[121]]]],[[]],[8,[[6,[162,9]]]],[8,[[6,[162,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[162,8],[[6,[9]]]],[[162,8],[[6,[9]]]],[[]],0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[163,[[6,[121]]]],[[]],[8,[[6,[163,9]]]],[8,[[6,[163,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[163,8],[[6,[9]]]],[[163,8],[[6,[9]]]],[[]],0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[164,[[6,[121]]]],0,[[]],[[]],[8,[[6,[164,9]]]],[8,[[6,[165,9]]]],[8,[[6,[164,9]]]],[8,[[6,[165,9]]]],[[],[[11,[10]]]],[12,13],[[],2],[[],2],[[]],[[]],0,0,[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[164,8],[[6,[9]]]],[[165,8],[[6,[9]]]],[[164,8],[[6,[9]]]],[[165,8],[[6,[9]]]],[[]],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[166,[[6,[121]]]],[[]],[8,[[6,[166,9]]]],[8,[[6,[166,9]]]],[12,13],[[],2],[[]],0,[[],6],[[],6],[[],14],[[166,8],[[6,[9]]]],[[166,8],[[6,[9]]]],[[]],0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[167,[[6,[121]]]],[[]],[8,[[6,[167,9]]]],[8,[[6,[167,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[167,8],[[6,[9]]]],[[167,8],[[6,[9]]]],[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[168,[[6,[121]]]],[[]],[8,[[6,[168,9]]]],[8,[[6,[168,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[168,8],[[6,[9]]]],[[168,8],[[6,[9]]]],[[]],0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[169,[[6,[121]]]],[[]],[8,[[6,[169,9]]]],[8,[[6,[169,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[169,8],[[6,[9]]]],[[169,8],[[6,[9]]]],[[]],0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[170,[[6,[121]]]],[[]],[8,[[6,[170,9]]]],[8,[[6,[170,9]]]],[12,13],[[],2],[[]],[[],6],[[],6],[[],14],[[170,8],[[6,[9]]]],[[170,8],[[6,[9]]]],0,[[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[171,[[6,[121]]]],[172,[[6,[121]]]],[[]],[[]],[8,[[6,[171,9]]]],[8,[[6,[172,9]]]],[8,[[6,[171,9]]]],[8,[[6,[172,9]]]],[[],[[11,[10]]]],[12,13],[[],2],[[],2],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[171,8],[[6,[9]]]],[[172,8],[[6,[9]]]],[[171,8],[[6,[9]]]],[[172,8],[[6,[9]]]],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],0,[[]],[[]],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[2],[173,[[6,[174]]]],[173,[[6,[174]]]],[173,[[6,[174]]]],[173,[[6,[174]]]],[2],[2],[175,[[6,[174]]]],0,[[174,18],19],[[174,18],19],[[]],[121,174],[176,174],[54,174],[33,174],[123,174],[177,174],[[]],[51,174],[111,174],[178,174],[179,174],[8,[[6,[175,9]]]],[8,[[6,[175,9]]]],[12,13],0,[[],2],[[],2],[[]],[[]],0,0,[30],0,0,0,[174,[[11,[4]]]],0,[[],31],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[175,8],[[6,[9]]]],[[175,8],[[6,[9]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[180,[[6,[174]]]],[[]],[8,[[6,[180,9]]]],[8,[[6,[180,9]]]],[[],[[11,[10]]]],[[],2],[[]],[[],6],[[],6],[[],14],[[180,8],[[6,[9]]]],[[180,8],[[6,[9]]]],0,[[]],0,[1,1],[1,1],[[]],[[]],0,[[],1],[[],1],0,[2],[2],[2],[181,[[6,[174]]]],[[]],[8,[[6,[181,9]]]],[8,[[6,[181,9]]]],[[],[[11,[10]]]],[[],2],[[]],[[],6],[[],6],[[],14],[[181,8],[[6,[9]]]],[[181,8],[[6,[9]]]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[182,[[6,[174]]]],[[]],[8,[[6,[182,9]]]],[8,[[6,[182,9]]]],[[],[[11,[10]]]],0,[[],2],[[]],0,[[],6],[[],6],[[],14],[[182,8],[[6,[9]]]],[[182,8],[[6,[9]]]],0,[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[183,[[6,[174]]]],[[]],[8,[[6,[183,9]]]],[8,[[6,[183,9]]]],[[],[[11,[10]]]],[[],2],[[]],[[],6],[[],6],[[],14],[[183,8],[[6,[9]]]],[[183,8],[[6,[9]]]],0,[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[184,[[6,[174]]]],[[]],[8,[[6,[184,9]]]],[8,[[6,[184,9]]]],[[],[[11,[10]]]],[[],2],[[]],[[],6],[[],6],[[],14],[[184,8],[[6,[9]]]],[[184,8],[[6,[9]]]],[[]],[184,[[6,[185,174]]]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[186,[[6,[174]]]],[[]],[8,[[6,[186,9]]]],[8,[[6,[186,9]]]],[[],[[11,[10]]]],[[],2],[[]],0,[[],6],[[],6],[[],14],[[186,8],[[6,[9]]]],[[186,8],[[6,[9]]]],[[]],0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],0,[2],[2],[2],[2],[2],[2],[[173,18],19],[[]],[[]],[8,[[6,[187,9]]]],[8,[[6,[173,9]]]],[8,[[6,[187,9]]]],[8,[[6,[173,9]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],2],[[],2],[[]],[[]],[187,188],[173,[[6,[189,174]]]],0,[[173,189],[[6,[174]]]],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[187,8],[[6,[9]]]],[[173,8],[[6,[9]]]],[[187,8],[[6,[9]]]],[[173,8],[[6,[9]]]],[[]],[[]],0,[1,1],[1,1],[[]],[[]],0,[[],1],[[],1],0,[2],[2],[2],[190,[[6,[174]]]],0,[[187,[11,[191]],189],[[6,[174]]]],[[]],[8,[[6,[190,9]]]],[8,[[6,[190,9]]]],[[],[[11,[10]]]],[[],2],[[]],[[],6],[[],6],[[],14],[[190,8],[[6,[9]]]],[[190,8],[[6,[9]]]],[[]],0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[192,[[6,[174]]]],0,[[]],[8,[[6,[192,9]]]],[8,[[6,[192,9]]]],[[],[[11,[10]]]],[[],2],[[]],0,0,[[],6],[[],6],[[],14],[[192,8],[[6,[9]]]],[[192,8],[[6,[9]]]],[[]],0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[193,193],[[]],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[194,[[6,[174]]]],[[193,18],19],[[]],[[]],[8,[[6,[194,9]]]],[8,[[6,[194,9]]]],[12,[[6,[193]]]],0,[[],[[11,[10]]]],[[],2],[[],2],[[]],[[]],[[193,195,196,[11,[197]],198],[[6,[185,174]]]],0,0,0,[[]],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[194,8],[[6,[9]]]],[[194,8],[[6,[9]]]],[[]],[[]],0,[[194,185],[[6,[174]]]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[199,[[6,[174]]]],[[]],[8,[[6,[199,9]]]],[8,[[6,[199,9]]]],[[],[[11,[10]]]],[[],2],[[]],[[],6],[[],6],[[],14],[[199,8],[[6,[9]]]],[[199,8],[[6,[9]]]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[200,[[6,[174]]]],[[]],[8,[[6,[200,9]]]],[8,[[6,[200,9]]]],[[],[[11,[10]]]],[[],2],[[]],[[],6],[[],6],[[],14],[[200,8],[[6,[9]]]],[[200,8],[[6,[9]]]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[201,[[6,[174]]]],[[]],[8,[[6,[201,9]]]],[8,[[6,[201,9]]]],[[],[[11,[10]]]],[[],2],[[]],[[],6],[[],6],[[],14],[[201,8],[[6,[9]]]],[[201,8],[[6,[9]]]],0,[[]],0,[1,1],[1,1],0,[[]],[[]],0,[[],1],[[],1],0,[158,187],[[],[[6,[[203,[202]],174]]]],[203,191],[[],[[6,[174]]]],[2],[2],[2],[204,[[6,[174]]]],0,[[]],[8,[[6,[204,9]]]],[8,[[6,[204,9]]]],[[],[[11,[10]]]],[[],2],[[]],[[[25,[24]]],191],[[191,191,198,205,12,206,132,[11,[191]],13],[[6,[189,174]]]],0,0,0,0,0,[[],6],[[],6],[[],14],[[204,8],[[6,[9]]]],[[204,8],[[6,[9]]]],0,0,[[]],0,0,0,0,0,0,[[189,191,205],[[6,[174]]]],[[189,207],[[6,[174]]]],[[189,[209,[208]]],[[6,[174]]]],[[189,185],[[6,[174]]]],[189,[[6,[210,179]]]],[[189,211],[[6,[210,174]]]],[[]],[[]],[[]],[[]],[[189,[80,[[212,[85]]]]],[[6,[[80,[[79,[85]]]],174]]]],[213,213],[[]],[[],189],[2],[2],[2],[2],[214,[[6,[213]]]],[214,[[6,[189]]]],[2],[2],[[213,213],13],[[],13],0,0,0,[189,215],[[189,211],[[6,[210,174]]]],[[213,18],19],[[213,18],19],[[189,18],19],[189,[[6,[149,174]]]],[[]],[[]],[189,216],[[],2],[[],2],[189],0,[[]],[[]],0,[11,[[6,[189,174]]]],[[189,29],[[6,[149,174]]]],[189,13],[[],189],[189],0,[189,[[6,[174]]]],[[213,217],6],[[189,217],6],[189,[[6,[174]]]],[[189,218],[[6,[174]]]],[[189,206],[[6,[174]]]],[[189,57],[[6,[174]]]],[189,31],[[189,11],[[6,[174]]]],[[]],[[],31],[189,[[6,[215,179]]]],[189,[[6,[215,179]]]],[189,[[6,[196,174]]]],[[189,[80,[212]]],196],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],0,[[]],[[]],[189,2],0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[31,31],[[6,[219]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[220,[[6,[219]]]],[[219,18],19],[[219,18],19],[[]],[[]],[[]],[177,219],[8,[[6,[220,9]]]],[8,[[6,[221,9]]]],[8,[[6,[220,9]]]],[8,[[6,[221,9]]]],0,[[],[[11,[10]]]],[12,13],[[],2],[[],2],[[],2],[[]],[[]],[[]],0,0,0,0,0,[30],[219,[[11,[4]]]],[[],31],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[220,8],[[6,[9]]]],[[221,8],[[6,[9]]]],[[220,8],[[6,[9]]]],[[221,8],[[6,[9]]]],0,[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[139,139],[[]],[2],[2],[2],[2],[2],[2],[[139,18],19],[[176,18],19],[[176,18],19],[[]],[[]],[[[25,[24]]],222],[[],2],[[],2],[[]],[[]],[30],[[]],[[],31],[139,31],[[],6],[[],6],[12,[[6,[139,176]]]],[[],6],[[],6],[[],14],[[],14],[[]],[[]],0,0,0,0,0,0,[13,[[223,[13]]]],[[]],[[]],[2],[2],[2],[[127,18],19],[[127,18],19],[51,127],[124,127],[[]],[[],2],[[]],[11,[[6,[38,51]]]],[11,[[6,[40,51]]]],[11,66],[30],[11,[[6,[31,51]]]],[11,[[6,[134,127]]]],[127,[[11,[4]]]],[[],31],[[],6],[[],6],[[],14],[[]],0,0,0,0,0,[11,[[6,[[203,[224]],54]]]],[[]],[[]],[2],[2],[2],[[54,18],19],[[54,18],19],[[]],[47,54],[51,54],[[],2],[[]],[12,[[6,[198,54]]]],[12,[[6,[[25,[28]],47]]]],[30],[11,[[6,[198,54]]]],[[[11,[66]]],[[6,[198,54]]]],[54,[[11,[4]]]],[[],31],[[],6],[[],6],[[],14],[[]],0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[[113,18],19],[[113,18],19],[[225,18],19],[[]],[[]],[66,225],[8,[[6,[225,9]]]],[8,[[6,[225,9]]]],[[],[[11,[10]]]],[[],2],[[],2],[[]],[[]],[225,[[6,[40,113]]]],0,[30],[113,[[11,[4]]]],[[],31],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[225,8],[[6,[9]]]],[[225,8],[[6,[9]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[226,226],[[]],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[226,18],19],[[123,18],19],[[123,18],19],[[227,18],[[6,[228]]]],[[227,18],19],0,[[147,229],[[6,[31,123]]]],[[]],[226,147],[12,226],[[]],[227,123],[[]],[50,123],[124,123],[[]],[8,[[6,[147,9]]]],[8,[[6,[147,9]]]],[12,6],[12,[[6,[226]]]],[[],[[11,[10]]]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[[116,[229]]],230],[231,230],[[[232,[31,229]]],230],[229,230],[30],[30],[123,[[11,[4]]]],[[]],[[],31],[[],31],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[147,8],[[6,[9]]]],[[147,8],[[6,[9]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[233,233],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[214,[[6,[233]]]],[214,[[6,[234]]]],[214,[[6,[235]]]],[2],[2],[2],[2],[2],[[46,18],19],[[46,18],19],[[49,18],19],[[49,18],19],[[233,18],19],[[234,18],19],[[235,18],19],[51,46],[[]],[50,46],[[]],[51,49],[236,49],[50,49],[[]],[[]],[[[116,[237]]],234],[[]],[[[11,[[58,[56]]]],[11,[238]]],[[6,[239,46]]]],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[30],[30],[[[11,[[58,[56]]]],2,[11,[2]]],[[6,[235,49]]]],[[233,217],6],[[234,217],6],[[235,217],6],[46,[[11,[4]]]],[49,[[11,[4]]]],[[]],[[],31],[[],31],[[],6],[[],6],[[],6],[[],6],[[],6],[[[116,[234]]],[[6,[235]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[240,240],[[]],[[],1],[[],1],0,[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[241,[[6,[242]]]],[[242,18],19],[[242,18],19],[[240,18],19],[121,242],[113,242],[111,242],[49,242],[54,242],[243,242],[51,242],[244,242],[47,242],[50,242],[123,242],[96,242],[245,242],[46,242],[[]],[[]],[[]],[8,[[6,[241,9]]]],[8,[[6,[241,9]]]],[12,[[6,[240]]]],[12,6],[12,13],0,[[],2],[[],2],[[],2],[[]],[[]],[[]],0,[30],[242,[[11,[4]]]],0,[[]],[[],31],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[241,8],[[6,[9]]]],[[241,8],[[6,[9]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[246,[[6,[242]]]],[[]],[8,[[6,[246,9]]]],[8,[[6,[246,9]]]],[12,13],[[],2],[[]],0,[[],6],[[],6],[[],14],[[246,8],[[6,[9]]]],[[246,8],[[6,[9]]]],[[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[247,[[6,[242]]]],[248,[[6,[242]]]],[249,[[6,[242]]]],[[247,18],19],[[248,18],19],[[249,18],19],[[]],[[]],[[]],[8,[[6,[247,9]]]],[8,[[6,[248,9]]]],[8,[[6,[249,9]]]],[8,[[6,[247,9]]]],[8,[[6,[248,9]]]],[8,[[6,[249,9]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[12,13],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[247,8],[[6,[9]]]],[[248,8],[[6,[9]]]],[[249,8],[[6,[9]]]],[[247,8],[[6,[9]]]],[[248,8],[[6,[9]]]],[[249,8],[[6,[9]]]],[[]],[[]],[[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[250,[[6,[242]]]],[251,[[6,[242]]]],[252,[[6,[242]]]],[[]],[[]],[[]],[8,[[6,[250,9]]]],[8,[[6,[251,9]]]],[8,[[6,[252,9]]]],[8,[[6,[250,9]]]],[8,[[6,[251,9]]]],[8,[[6,[252,9]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[12,13],0,[[],2],[[],2],[[],2],0,[[]],[[]],[[]],0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[250,8],[[6,[9]]]],[[251,8],[[6,[9]]]],[[252,8],[[6,[9]]]],[[250,8],[[6,[9]]]],[[251,8],[[6,[9]]]],[[252,8],[[6,[9]]]],[[]],[[]],[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[253,[[6,[242]]]],[[]],[8,[[6,[253,9]]]],[8,[[6,[253,9]]]],[[],[[11,[10]]]],[[],2],[[]],0,0,[[],6],[[],6],[[],14],[[253,8],[[6,[9]]]],[[253,8],[[6,[9]]]],[[]],0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,0,[2],[2],[2],[254,[[6,[242]]]],[[]],[8,[[6,[254,9]]]],[8,[[6,[254,9]]]],[12,13],[[],2],[[]],0,[[],6],[[],6],[[],14],[[254,8],[[6,[9]]]],[[254,8],[[6,[9]]]],[[]],0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[255,[[6,[242]]]],[[]],[[]],[8,[[6,[255,9]]]],[8,[[6,[255,9]]]],[[],[[11,[10]]]],[[],2],[[],2],[[]],[[]],0,0,[[256,217],6],0,0,[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[255,8],[[6,[9]]]],[[255,8],[[6,[9]]]],0,0,[[]],[[]],0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[257,[[6,[242]]]],[258,[[6,[242]]]],[[]],[[]],[8,[[6,[257,9]]]],[8,[[6,[258,9]]]],[8,[[6,[257,9]]]],[8,[[6,[258,9]]]],[[],[[11,[10]]]],[[],[[11,[10]]]],[[],2],[[],2],[[]],[[]],0,0,[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[257,8],[[6,[9]]]],[[258,8],[[6,[9]]]],[[257,8],[[6,[9]]]],[[258,8],[[6,[9]]]],0,0,[[]],[[]],0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[259,259],[260,260],[[]],[[]],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[214,[[6,[259]]]],[214,[[6,[260]]]],[2],[2],[2],[2],[[259,259],13],[[260,260],13],[[],13],[[],13],[261,[[6,[242]]]],[[245,18],19],[[245,18],19],[[259,18],19],[[260,18],19],[[]],[[]],[[]],[[]],[8,[[6,[261,9]]]],[8,[[6,[261,9]]]],[[],[[11,[10]]]],0,[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[[116,[239]]],[[6,[[116,[259]],245]]]],0,0,0,0,[30],[[259,217],6],[[260,217],6],0,[[]],[[]],[[],31],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[261,8],[[6,[9]]]],[[261,8],[[6,[9]]]],0,0,[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Command"],[15,"usize"],[3,"JCli"],[8,"Error"],[3,"Box"],[4,"Result"],[4,"JCliCommand"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"TypeId"],[3,"AddressReadable"],[4,"Error"],[4,"Address"],[3,"Formatter"],[6,"Result"],[3,"InfoArgs"],[3,"DiscriminationData"],[3,"SingleArgs"],[3,"AccountArgs"],[3,"Ed25519"],[3,"PublicKey"],[4,"Discrimination"],[4,"Kind"],[8,"AsymmetricPublicKey"],[8,"FnOnce"],[3,"Demand"],[3,"String"],[3,"Common"],[4,"Error"],[4,"Genesis"],[4,"Block0ConfigurationError"],[4,"Error"],[3,"Input"],[8,"BufRead"],[3,"Block"],[8,"Write"],[4,"Certificate"],[4,"Error"],[4,"NewArgs"],[3,"PrintArgs"],[3,"DecryptedPrivateTallyError"],[4,"VotePlanError"],[4,"Error"],[3,"UnitVectorInitializationError"],[4,"SharesError"],[3,"Error"],[3,"Error"],[4,"CertificateFromBech32Error"],[4,"CertificateFromStrError"],[4,"Error"],[3,"StakeDelegationArgs"],[3,"Path"],[3,"Certificate"],[8,"AsRef"],[8,"Display"],[3,"SignedCertificate"],[3,"OwnerStakeDelegation"],[3,"StakeDelegation"],[3,"StakePoolRegistration"],[3,"StakePoolRetirement"],[3,"UpdateProposal"],[3,"PathBuf"],[3,"UpdateVote"],[3,"PublicVoteCast"],[3,"PrivateVoteCast"],[4,"VoteCastCmd"],[3,"VotePlanRegistration"],[3,"VotePlan"],[4,"VoteTallyRegistration"],[3,"PublicTally"],[3,"PrivateTally"],[4,"ShowArgs"],[3,"GetStakePoolId"],[3,"GetVotePlanId"],[3,"SetAuthData"],[3,"TxBuilderState"],[4,"SignedCertificate"],[3,"VoteTally"],[3,"EvmMapping"],[3,"Sign"],[8,"Payload"],[3,"PoolRegistration"],[3,"StakeDelegation"],[3,"UpdateProposal"],[3,"UpdateVote"],[3,"WeightedPoolId"],[3,"DelegationRatio"],[15,"u8"],[3,"WeightedPoolIds"],[4,"Debug"],[4,"Error"],[4,"FromHexError"],[3,"Block"],[3,"Message"],[4,"Error"],[4,"GenPrivKeyType"],[3,"Seed"],[4,"Key"],[3,"FromBytes"],[3,"ToBytes"],[3,"Generate"],[3,"ToPublic"],[3,"Sign"],[3,"Verify"],[3,"Derive"],[4,"SecretKeyError"],[3,"Error"],[4,"DerivationError"],[4,"Error"],[4,"PublicKeyError"],[4,"SignatureError"],[3,"Vec"],[8,"Into"],[3,"PossibleValue"],[8,"Bech32"],[4,"Rest"],[4,"Error"],[4,"WriteError"],[4,"Error"],[3,"Error"],[4,"Error"],[4,"ReadError"],[4,"ReadYamlError"],[3,"RestRequestBuilder"],[3,"Body"],[3,"RestResponse"],[3,"Bytes"],[3,"RestArgs"],[3,"RestClient"],[8,"DeserializeOwned"],[8,"Fn"],[3,"Url"],[4,"V0"],[4,"Account"],[3,"AccountId"],[3,"AccountState"],[3,"Block"],[4,"NextId"],[4,"Subcommand"],[4,"Diagnostic"],[4,"Leaders"],[4,"GetLogs"],[3,"OutputFormat"],[4,"Message"],[4,"Fragment"],[4,"Network"],[4,"Stats"],[4,"Node"],[4,"Stats"],[4,"Rewards"],[4,"Epoch"],[4,"History"],[4,"Settings"],[3,"SettingsDto"],[4,"Shutdown"],[4,"Stake"],[4,"StakePool"],[4,"StakePools"],[4,"Tip"],[3,"Utxo"],[4,"Subcommand"],[4,"Vote"],[4,"Active"],[4,"Committees"],[4,"Plans"],[4,"V1"],[3,"AccountVotes"],[4,"Vote"],[3,"CommonTransaction"],[4,"Error"],[4,"Transaction"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"ValueError"],[3,"AddAccount"],[3,"AddCertificate"],[3,"AddInput"],[3,"AddOutput"],[3,"AddWitness"],[4,"Witness"],[3,"Auth"],[3,"CommonFees"],[3,"LinearFee"],[3,"Staging"],[3,"Finalize"],[3,"Address"],[3,"Info"],[4,"WitnessType"],[3,"MkWitness"],[6,"HeaderId"],[6,"TransactionSignDataHash"],[3,"SpendingCounter"],[4,"EitherEd25519SecretKey"],[3,"New"],[3,"Seal"],[3,"SetExpiryDate"],[3,"Ed25519Extended"],[3,"SecretKey"],[3,"MakeTransaction"],[3,"Value"],[3,"BlockDate"],[3,"TransactionInput"],[3,"Address"],[3,"Output"],[4,"Balance"],[4,"OutputPolicy"],[3,"SetTtl"],[4,"StagingKind"],[8,"Deserializer"],[3,"Value"],[3,"InputOutputBuilder"],[8,"Serializer"],[3,"EvmTransaction"],[4,"Error"],[4,"Utils"],[3,"Bech32ConvertArgs"],[3,"Identifier"],[6,"Result"],[8,"AsymmetricKey"],[3,"OutputFile"],[4,"FormatVariant"],[3,"GtmplError"],[3,"Error"],[4,"Value"],[4,"Value"],[3,"Number"],[3,"Map"],[3,"TallyDecryptShare"],[3,"MemberVotePlanShares"],[3,"VotePlanDecryptShares"],[3,"DecryptionError"],[3,"TallyDecryptShare"],[3,"Hash"],[3,"VotePlanStatus"],[3,"Seed"],[4,"Vote"],[4,"Error"],[4,"DecodeError"],[3,"TallyError"],[4,"Error"],[4,"Committee"],[3,"Generate"],[3,"ToPublic"],[4,"CommunicationKey"],[3,"Generate"],[3,"ToPublic"],[4,"MemberKey"],[3,"ElectionPublicKey"],[4,"Tally"],[3,"TallyVotePlanWithAllShares"],[3,"Output"],[3,"TallyGenerateVotePlanDecryptionShares"],[3,"MergeShares"],[3,"MergedVotePlan"],[3,"MergedVoteProposalStatus"],[3,"MergeVotePlan"],[13,"InputInvalid"],[13,"OutputInvalid"],[13,"InvalidPoolDelegationWeights"],[13,"TooManyPoolDelegations"],[13,"TooManyVotePlanProposals"],[13,"InvalidBech32Key"],[13,"InvalidVotePlanCommitteeBlockDates"],[13,"PrivateTallyExpected"],[13,"ManagementThresholdInvalid"],[13,"ExpectingOnlyOneSigningKey"],[13,"KeyNotFound"],[13,"InputInvalid"],[13,"OutputInvalid"],[13,"InvalidVotePlanVoteBlockDates"],[13,"InputInvalid"],[13,"UnexpectedBech32SignHrp"],[13,"UnexpectedBip32Bech32Hrp"],[13,"UnknownBech32PrivKeyHrp"],[13,"UnknownBech32PubKeyHrp"],[13,"InvalidSeed"],[13,"HostAddrNotBase"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"Post"],[13,"Logs"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"Post"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"Get"],[13,"WitnessFileBech32HrpInvalid"],[13,"TooManyWitnessesToAddWitness"],[13,"WitnessCountToSealInvalid"],[13,"MakeWitnessAccountInvalidCounterLane"],[13,"CertificateError"],[13,"TxWithOwnerStakeDelegationMultiInputs"],[13,"TxKindToAddExtraInvalid"],[13,"TxKindToAddInputInvalid"],[13,"TxKindToAddOutputInvalid"],[13,"TxKindToAddWitnessInvalid"],[13,"TxKindToSealInvalid"],[13,"TxKindToFinalizeInvalid"],[13,"TxKindToGetMessageInvalid"],[13,"TxKindToSignDataHashInvalid"],[13,"TxKindToSetValidityTimeInvalid"],[13,"StagingFileOpenFailed"],[13,"StagingFileReadFailed"],[13,"StagingFileWriteFailed"],[13,"WitnessFileReadFailed"],[13,"WitnessFileWriteFailed"],[13,"WitnessFileBech32Malformed"],[13,"WitnessFileDeserializationFailed"],[13,"InfoFileWriteFailed"],[13,"NotRecognized"],[13,"AddressNotAccount"],[13,"SecretKeyFileReadFailed"],[13,"SecretKeyFileMalformed"],[13,"CannotOpen"],[13,"InvalidThreshold"],[13,"PrivateTallyExpected"],[13,"InputInvalid"],[13,"FragmentFileOpenFailed"],[13,"FragmentFileWriteFailed"],[13,"InvalidSeed"]]},\
"jormungandr":{"doc":"","t":"WWRRDDHHHHHHHHHHHHHRRDHHHHHHHHHHHHHRRRNNNNEEMMMMMAAMMMMFFLLLLLLLLLLMAAMMMLLLLLLLLLLALLLLLALLLLLLLLLLFMMFALLLLLLLLLLLLLLLAAAFAAFAAMMAMMMFFAAMAALLLLLLLLLLLLLLLALLLLLANNDNNDDIDNEENDENDEDNGNDDNNGDNNNNEGNNNDNNDEDDDGDDDDGGENNNDEDDDNNNDNNNNNNNNNNNNNNNNNNNNNNNDNGNNNNNNNNNDENNNLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMFLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLMLMLLLMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMLLLLLLLLLLLMMLLMMLLLLLMLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLKLMKLLLLMKLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNDNNNNNENNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNEDNNNNNNNLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMNNNNNNNNNNNNDNEDNNEDENNDENNNDNRNNNDNENNNDNNNDNEDDNMMMMAFAMAAAAAFMMMMMMMMMMAMFMMMAMAMAMMMFMMAMMMMAMMMMMMWNNNHHENHHNFLLLLLLLLLLLLLFLFLLLLLLDLLLLLLLLLLLLLLLLMLLLLLWWNNHHHDNENGHHHNFLLLLAALLLLLLLLLLLLMLLLLLLLLFMMLLLLMLLLLLLLLLNNELLLLLLLLLLLLLLWWDMLLLLLLMLLLLLLMLLLLWWWWWWWWWWWWWWWNENNNNNNNDHNNENDENENNDNRHNNNNNRDEGNNNDDNLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLFMLMLLFMMLLMMMMLLMMLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMMMMMMMMRHEHNNLLFLLFLLLLLLLLLLLLLLLLLLLLWDLLLLLLLLLLLLLLLLLLLLLLLLLLRWWWWDLLLLLLLLLLLLLLMLLLLLLLLLLWWWWWWWWWWWHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHRRRRRGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHRDGRDMMFMMLLLLFFLLLLLLMMLLMMMLLLLLLLLLFMMFFFFFFFMMFFFLLMMMLLLLLLLLMMDLLLLLLLLLLLLLMLMLLLLMLLLLLLMLMLLLMLLLLLWWDLLLLLLLLLLLMLLLLLLLLLLWWDNNNHHHNNEHHHRNNNDNELLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLWWWWWWWWRRHHHHHHHHHHHHRHHHHHHHHHHHHDDMLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMWWWWWWWWWHHHHRRRRRRRDMLLLLLLFFFFFFFFFLLLLFFMLLLLNNDGNEDNDNNLMLMMLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLMMMLLLMLLLMLLLLLLLLLMMLLLLMMLLLLLLLLLLLLLLLLLNDENENNLLLLLLLLMLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLNNEGNDNNNDDNNNDNNNNNNNMMLLLLLLLMMLLLLMALLLMMMLLLLLLLLLAMMMMMMAMMAMALLLLLLLDMMLLLLMMLLMLMLMLLLLLLLMLLLLLLLLWHDHLLLLLMLLLLLLLLLLLLLLLLLLLWWWWHHHHHHHHHHHHHHHNREHHHHHHHHHHHHHHHDLLLLLLLLLLLLLLLLLLLALLLLLLFFLMMMLMMLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLMLLLMLLMLLMLLLLMLLLLLLLLLLLLLLLLMMLLLLLWWWRHHHHHHHHHHHREHHHHHHHHHHHNNDLLLLLLLLLLLLLLLFLLLLLLLLMMLFMLLLLLLLLLLLLWEHHHHHHHHHNNIEDHHHHHHHHHDDNNNNNENLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMKLMFLLLLLLLLLLLLLLLLLLLLLLLLMMNNNENHHHHHHNENDNNNNNNNNNNNNNHHHHHHNENNNNNENNNNNDDDGDDDDDDDNNEEDNEMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMMLLMLLLMMMLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMWNDNENNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLFLLLLLLLLLNDECDDDDMMMMAMMMMAMMMMMAMMMMMMMMWNDECCLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLWWWWWWWWNDEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMMWDLLLLLMLLLLLLLLLLLLLLLWWWWWWWWWWWWWHHHHHHHHHHHHHHHNNNNDNENHHHHHHHHHHHHHHHDDNLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMFLMMLMMMLLLLMMMLFLLLLLLLLLLLLLLLLLLMMRRRDIDLKLKLKLKLKLAMMLLLLLLLLLLLLLLLLLLLLLLLLLLOOKLKLKLKLKLKLKLLLLLLLLLLDMMMMMMAMMMMMMDRDLLLLLMMMMMLLLLFMMMLLLLLLLLLLMLLLLLLLLMMLMMMLLLLLMMLLMMFLLLLMMLLMLLWWWWWWWCDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDGDNNEDGNNDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDENEDMMAFMMLLLLLLLLLLLLLLLLLLLLAMMAMLLLLLAMFMMALLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLMMAFFLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMFLLFLLALMFLLLLFAAMLLLLMMLFAMLLLLLLMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMWWWNNHHHHNNNENNRHHHHNNNNNFLLLLLLLLLLLLLFLLLLLLLFAARRRRRHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDDCCCNNDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHEDLLMMMLLLLLLLLLLMMMLLACLLLLLLLLLLLLLLLMMLLLLLLMMMMMMLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLNHHHNNGEDDNNNNHHHNNNLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLMMLMLLLLLLLLLLLLFLLLMMRRIIQQGKKFFCCCACCCAWWWGHGNGEGNNGHNNLLFFLLFLFLLLLLLLLLLLLLLMMMMMWHHHHFRRGAWWWWWWWWWWWWWWWWWWWWWRGGGGHHHHHHHHHHHHHHHHNDDEGDGHHHHHHHHHHHHHHHHNNDDDDDNDNNNNEENLMMLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMLMLMMMLLMAMMMLLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLDENSDNDDLLMLLLLLLLLLLMLMLLLMLLMLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLRWWWHHHHHHHHHHHHHHHHHHHHHHHHHHDGLLLLMLLLLLLLLLLLLLMLLLLLLLFLLLLLLLFFLLLLLLLWWWDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNEDENDHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDGNNNNLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLFLLLLLLLMMMFLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLMMMMMMMLLLLLLLLLLLLLLFFFLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMWWWWHHDHHHDLLLLLLLMLLLLFLLFLLLLLLLLLLLMFFFFMLLLLLLLAALLWWHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWWWWWWWWWWWWWWWWWWWWWWWWWWWWDLLMLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLFFLLLLWWWWWWWWWWWWWWWWWWWWWWWWWWWWWHHHHHHHHNNNENNNNNNHHHHHHHHNNNNNNNLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLFFFFFLFLLLLLLWWHHHHHHHHHHHHHDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLFALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWWWWWWDLLLLLLMLFFFFFLLLLFLLLLWWWWWWHHHHHHHNNENNNNHHHHHHHNNNNNLLLLLLLLLLLLLLLLLLFFFFFLLLLFFLLLLLLLDNDNDDEDLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDDDLLLLLLLLLLMMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMLLLMLMLLLLLLLLLLLLLEDCNHDNMFFLLLLLLALLLLLLLLLLLMLLLLLLLLMMMMAMMMAMMLMLLLLLLLLDDDDLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMLMMFMMMMMMMMMMMMFLLLLLLLLLLLLLLLLLLLLLLLLHHHHENNNNNNEDEDHHHHNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMHHHHNNDRRENNNNDHHHHDDDDDMMMMMLLLLLLLLLLLLLLLLMLLLLLLLLLLMAMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLMLMMAMMMMMLFMLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDMMMMMMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLALLLLLLLLLMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMMMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFDRRRNNDNDEENDMLLLMMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMLLMMMMMLMLLLLMLMMMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLWWWWNNNNNNHHHHHHHHHNNEENNNNNHHHHHHHHHNNNNNAFFFFFMMMMMMNNNNNNNNEENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMDLLLLLLLLLLLLLLLLWHHHHHHFRDDDDGDDDDDMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLALLMLLMLLLLLLMMAAMMMMAAMMMMMMMMMLLFMMMLLLAAMMLLLLLLLLLDEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLDDDDMLLLLLLLLLLLLLMMAMAMLLLLMLDDLLLLLLMLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLLLLLMMLLRRRDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLFLLLLMLLLLLLLLLLLLLLLLLLLRRWWRHHHHHHHHRRHHHHHHHHDRDLLLLMLLLLLLLLMLLLMMLLLLLLMMMLFMMMLLLLLLLLHHHHRRRHHHHNNDEDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLMMLMMMLLLLLLLLLLLLLLLLLLLLRRWWHHHHSDSHDHHHHDSSDMFFLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLMLFMMMLLLLLLLLLLLLLLLLLLAAADDDDLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLENNNEDDDDNDDNLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLMLLMLMLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNENHHHHHHHHHHHHHHHHHHHHHHHHHHHHHNDNEDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLWWHHHHHHHHHHHHHHHHHHHHHHCDEGGNDMMLMLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLMMLMLMMLLLLLLLLLLLLLLMM","n":["","","BLOCK_TASK_QUEUE_LEN","BOOTSTRAP_RETRY_WAIT","BootstrapData","BootstrappedNode","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CLIENT_TASK_QUEUE_LEN","FRAGMENT_TASK_QUEUE_LEN","InitializedNode","META","META","META","META","META","META","META","META","META","META","META","META","META","NETWORK_TASK_QUEUE_LEN","TOPOLOGY_TASK_QUEUE_LEN","WATCH_CLIENT_TASK_QUEUE_LEN","_0","_0","_1","_1","__PrivResult","__PrivResult","_logger_guard","_logger_guard","block0","block0_hash","block0_hash","blockcfg","blockchain","blockchain","blockchain","blockchain_tip","blockchain_tip","bootstrap","bootstrap_internal","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancellation_token","client","context","context","context","context","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","diagnostic","drop","drop","drop","drop","drop","fragment","from","from","from","from","from","init","init","init","init","init","init_os_signal_watchers","initial_peers","initial_peers","initialize_node","intercom","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jrpc","leadership","log","main","metrics","network","recv_signal_and_cancel","rest","secure","services","services","settings","settings","settings","settings","start","start_services","start_up","state","storage","stuck_notifier","topology","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","utils","vzip","vzip","vzip","vzip","vzip","watch_client","AddBftLeader","AddCommitteeId","ApplyBlockLedger","Bft","Bft","BftLeader","Block","Block0DataSource","Block0Date","Block0Date","Block0Error","Block0Malformed","BlockContentMaxSize","BlockDate","BlockVersion","CannotParseEntity","ChainLength","ConfigParam","ConfigParams","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusVersion","ConsensusVersion","Contents","ContentsBuilder","Discrimination","Ed25519Signed","Epoch","EpochRewardsInfo","EpochStabilityDepth","Evm","EvmMapping","FeesInTreasury","Fragment","FragmentId","FromSliceTooBig","FromSliceTooSmall","Genesis","GenesisLeader","GenesisPraos","GenesisPraos","Gossip","Header","HeaderBft","HeaderBftBuilder","HeaderBuilder","HeaderBuilderNew","HeaderContentEvalContext","HeaderDesc","HeaderGenesisPraos","HeaderGenesisPraosBuilder","HeaderHash","HeaderId","HeaderSetConsensusSignature","Initial","KesUpdateSpeed","KesVrfproof","Leader","LeaderOutput","Leadership","Ledger","LedgerStaticParameters","LinearFee","Malformed","MintToken","Multiverse","NegativeAmount","NoDiscrimination","NoInitialSettings","NoSlotDuration","NoSlotsPerEpoch","NoStartTime","None","OldUtxoDeclaration","Overflow","OwnerStakeDelegation","PerCertificateFees","PerVoteCertificateFees","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","RemoveBftLeader","RemoveCommitteeId","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","RewardsInfoParameters","SlotDuration","SlotId","SlotsPerEpoch","StakeDelegation","Transaction","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryParams","Unsigned","UpdateProposal","UpdateVote","Value","ValueError","VoteCast","VotePlan","VoteTally","accounts","accounts","accounts","active_vote_plans","add","add","add_to_account","apply_block","apply_fragment","apply_fragment","apply_owner_stake_delegation","apply_pool_registration","apply_pool_registration_signcheck","apply_pool_retirement","apply_pool_update","apply_protocol_changes","apply_stake_delegation","apply_transaction","apply_update","apply_update_proposal","apply_update_vote","apply_vote_cast","apply_vote_plan","apply_vote_tally","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","as_auth_slice","as_ref","as_slice","begin_block","bft_leader","block0_initial_hash","block0_start_time","block_builder","block_content_hash","block_content_size","block_date","block_date","block_date","block_date","block_parent_hash","block_version","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","can_distribute_reward","chain_length","chain_length","chain_length","chain_length","chain_length","chain_length","checked_add","checked_sub","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","common","compute_hash","compute_hash_size","config","consensus","consensus_eval_context","consensus_version","content_hash","contents","contents","date","date","date","date","date","date_at_slot","default","default","default","default","default","delegation","delegation","delegation_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","discrimination","distribute_rewards","drawn","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode","encode","encode","epoch","epoch","epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","era","era","era","era","fees","finish","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragments","fragments","fragments","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_epoch_slot_id","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_slice","from_str","from_str","from_u8","gc","generalize","generalize","genesis_leader","get","get_auth_size","get_authenticated_data","get_authenticated_data","get_bft_leader_id","get_consensus_eval_context","get_content_eval_context","get_hash","get_hash","get_hash","get_ref","get_size","get_stake_distribution","get_stakepool_id","get_static_parameters","get_total_value","governance","hash","hash","hash","hash","header","header","header","height","id","id","id","id","id","id","increase","info_eq","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial","inner","insert","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bft_builder","into_genesis_praos_builder","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_unsigned_header","is_empty","is_leader_for_date","iter","iter","iter","iter_slice","kes_update_speed","leaders_log","ledger","len","mint_token","mint_token_unchecked","multisig","new","new","new","new","new","new","new","new_raw","next","next","next_epoch","node_id","nodes","nr_states","nth_ancestor","oldutxos","params","parent_id","parent_id","partial_cmp","partial_cmp","partial_cmp","pots","proof","provide","provide","provide","push","push","push_many","remaining_rewards","report_accounts","report_all","report_stake_pools","saturating_add","scale","serialize","serialize","serialize","serialize","serialize","serialize","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","set_consensus_data","set_consensus_data","set_date","set_genesis","set_parent","set_signature","set_signature","set_stake_pool","set_treasury","settings","settings","settings","sig_key","sig_key","sign_using","sign_using","size","slot_duration","slot_duration","slot_id","slots_per_epoch","slots_per_epoch","source","split_in","stake_distribution","stake_pools","start_time","start_time","states_by_chain_length","states_by_hash","static_params","stats","sub","sum","sum","to_consensus_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_u8","token_distribution","token_totals","token_totals","total","treasury","treasury_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updates","updates","utxo_out","utxos","utxos","verify","version","version","votes","vrf_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zero","AddBftLeader","AddBftLeader","AddCommitteeId","AddCommitteeId","Block0Date","Block0Date","Block0Date","BlockContentMaxSize","BlockContentMaxSize","BoolInvalid","ConfigParam","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusVersion","ConsensusVersion","Discrimination","Discrimination","EpochStabilityDepth","EpochStabilityDepth","Error","FeesInTreasury","FeesInTreasury","Halving","InvalidTag","KesUpdateSpeed","KesUpdateSpeed","Linear","LinearFee","LinearFee","PerCertificateFees","PerCertificateFees","PerVoteCertificateFees","PerVoteCertificateFees","PoolRewardParticipationCapping","PoolRewardParticipationCapping","ProposalExpiration","ProposalExpiration","RemoveBftLeader","RemoveBftLeader","RemoveCommitteeId","RemoveCommitteeId","RewardLimitByAbsoluteStake","RewardLimitByAbsoluteStake","RewardLimitNone","RewardLimitNone","RewardParams","RewardParams","RewardParams","RewardPot","RewardPot","SizeInvalid","SlotDuration","SlotDuration","SlotsPerEpoch","SlotsPerEpoch","StructureInvalid","Tag","TagIter","TransactionMaxExpiryEpochs","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryAdd","TreasuryParams","TreasuryParams","UnknownString","arbitrary","arbitrary","as_ref","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_str","from_str","from_u16","idx","init","init","init","init","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","par_bridge","provide","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","constant","constant","epoch_rate","epoch_rate","epoch_start","epoch_start","ratio","ratio","AlreadyPresent","BackendError","Block0","Block0AlreadyInStorage","Block0InitialLedgerError","Block0NotAlreadyInStorage","BlockAlreadyPresent","BlockDeserialize","BlockHeaderVerificationFailed","BlockMissingParent","BlockNotFound","BlockNotRequested","Blockchain","BlockchainError","BootstrapError","Branch","CannotApplyBlock","CannotIterate","CheckHeaderProof","Checkpoints","ComparisonResult","Deserialize","Enabled","EpochLeadership","Error","HeaderWithCache","Intercom","Interrupted","LeadershipBlock","Ledger","MAIN_BRANCH_TAG","MissingParent","MissingParent","MissingParentBlock","Multiverse","NoTag","PreCheckedHeader","PreferCandidate","PreferCurrent","PullStreamFailed","Ref","SendError","Serialize","SkipFromStorage","Storage","Storage","StorageError","TaskData","Tip","TransactionSendError","block","block0","blockchain","blockchain_tip","bootstrap","bootstrap_from_stream","branch","branch","candidate","chain","chain_selection","checkpoints","chunk_sizes","compare_against","epoch_leadership_schedule","epoch_rewards_info","fragment_msgbox","garbage_collection_interval","header","inner","leadership","leadership","ledger","ledgers","multiverse","network_msgbox","new_epoch_leadership_from","new_ledger","previous_epoch_state","previous_state","process","ref_cache","reference","reference","reference_cache","rewards_info","rewards_report_all","span","start","state","stats_counter","storage","storage","storage","time_frame","time_frame","tip","watch_msgbox","cached_reference","header","header","header","parent_ref","","BlockDeserialize","BlockMissingParent","BlockchainError","CALLSITE","CALLSITE","Error","Interrupted","META","META","PullStreamFailed","bootstrap_from_stream","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","init","into","into_request","into_request","print_sz","provide","report","source","to_string","try_from","try_into","type_id","vzip","Branch","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_ref","get_ref","init","into","into_ref","into_request","into_request","new","reference","to_owned","try_from","try_into","type_id","vzip","","","Blockchain","BrokenHeaderChain","CALLSITE","CALLSITE","CALLSITE","ChainAdvance","EmptyHeaderStream","Error","HeaderChainVerificationFailed","HeaderStream","META","META","META","MissingParentBlock","advance_branch","borrow","borrow","borrow_mut","borrow_mut","chain_advance","chain_landing","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","header","init","init","into","into","into_request","into_request","into_request","into_request","land_header_chain","new_hashes","parent_header","poll_done","process_header","provide","source","stream","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Complete","Incomplete","Outcome","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","into_request","try_from","try_into","type_id","vzip","","","State","blockchain","borrow","borrow_mut","deref","deref_mut","drop","from","header","init","into","into_request","into_request","skip_present_blocks","start","stream","try_from","try_into","type_id","vzip","","","","","","","","","","","","","","","","AlreadyPresent","AppliedBlock","Block0","Block0AlreadyInStorage","Block0InitialLedgerError","Block0NotAlreadyInStorage","BlockDateBeforeParent","BlockHeaderVerificationFailed","BlockNotRequested","Blockchain","CALLSITE","CannotApplyBlock","ChainLengthNotIncremental","CheckHeaderProof","Enabled","EpochLeadership","Error","Existing","HeaderChainVerifyError","HeaderWithCache","Intercom","LeadershipBlock","Ledger","MAIN_BRANCH_TAG","META","MissingParent","MissingParentBlock","New","NewLeadershipScheduleFailed","NoTag","PROCESS_LOGGING_DISTANCE","PostCheckedHeader","PreCheckedHeader","Result","SendError","SkipFromStorage","Storage","StreamInfo","StreamReporter","TransactionSendError","append_block","apply_and_store_block","apply_and_store_leadership_block","apply_block0","apply_block_check_rewards","apply_block_dry_run","apply_block_finalize","block","block0","block0","block_received","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","bytes_received","cached_ref","clone","clone","clone_into","clone_into","create_and_store_reference","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch_leadership_schedule","epoch_rewards_info","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","gc","get_checkpoints","get_ref","handle_bootstrap_block","header","header","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_block_description","last_bytes_received","last_reported","leadership","leadership","ledgers","load_from_block0","load_from_storage","load_header_parent","new","new","new_epoch_leadership_from","new_ledger","new_ref","parent_ledger_state","post_check_header","pre_check_header","pre_verify_link","previous_epoch_state","previous_state","provide","provide","ref_cache","report","rewards_info","rewards_report_all","source","source","start","state","storage","storage","store_and_apply_block_finalize","stream_info","time_frame","time_frame","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_reward_info","child","child","parent","parent","cached_reference","header","header","header","parent_ref","ALLOWED_TIME_DISCREPANCY","CALLSITE","ComparisonResult","META","PreferCandidate","PreferCurrent","borrow","borrow_mut","check_rollback_up_to","clone","clone_into","compare_against","deref","deref_mut","drop","eq","equivalent","fmt","from","from_ref","get_hash","hash","init","into","into_request","into_request","partial_cmp","to_owned","try_from","try_into","type_id","vzip","","Checkpoints","as_ref","as_slice","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","from","from_ref","init","into","into_iter","into_request","into_request","iter","new_from","to_owned","try_from","try_into","type_id","vzip","BLOCKS","","","","","Multiverse","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","from","from_ref","gc","get","get_ref","init","inner","insert","into","into_request","into_request","new","to_owned","try_from","try_into","type_id","vzip","","","","","","","","","","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DEFAULT_TIMEOUT_PROCESS_ANNOUNCEMENT","DEFAULT_TIMEOUT_PROCESS_BLOCKS","DEFAULT_TIMEOUT_PROCESS_HEADERS","DEFAULT_TIMEOUT_PROCESS_LEADERSHIP","GET_NEXT_BLOCK_SCHEDULER_CONFIG","GetNextBlockScheduler","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","PULL_HEADERS_SCHEDULER_CONFIG","Process","PullHeadersScheduler","TIP_UPDATE_QUEUE_SIZE","TaskData","blockchain","blockchain","blockchain_gc","blockchain_tip","blockchain_tip","borrow","borrow","borrow_mut","borrow_mut","chain_header_error_into_reply","check_and_apply_block","deref","deref","deref_mut","deref_mut","drop","drop","fragment_msgbox","fragment_msgbox","from","from","garbage_collection_interval","garbage_collection_interval","get_next_block_scheduler","handle_input","init","init","into","into","into_request","into_request","into_request","into_request","network_block_error_into_reply","network_msgbox","network_msgbox","process_and_propagate_new_ref","process_block_announcement","process_chain_headers","process_leadership_block","process_leadership_block_inner","process_network_block","process_network_blocks","pull_headers_scheduler","service_info","spawn_get_next_block_scheduler","spawn_pull_headers_scheduler","start","start","start_garbage_collector","stats_counter","stats_counter","tip_update_mbox","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","watch_msgbox","watch_msgbox","Ref","active_vote_plans","block_date","block_parent_hash","borrow","borrow_mut","chain_length","clone","clone_into","deref","deref_mut","drop","elapsed","epoch_leadership_schedule","epoch_leadership_schedule","epoch_rewards_info","epoch_rewards_info","from","from_ref","hash","header","header","init","into","into_request","into_request","last_ref_previous_epoch","ledger","ledger","new","previous_epoch_state","slot","time","time_frame","time_frame","to_owned","try_from","try_into","type_id","vzip","","","RefCache","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_ref","get","init","inner","insert","into","into_request","into_request","new","to_owned","try_from","try_into","type_id","vzip","","","Ancestor","BackendError","BlockAlreadyPresent","BlockNotFound","CALLSITE","CALLSITE","CALLSITE","CannotIterate","Deserialize","Error","META","META","META","MINIMUM_BLOCKS_TO_FLUSH","MissingParent","Sending","Serialize","Storage","Storage","StreamingError","block_exists","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","distance","drop","drop","drop","drop","file","find_closest_ancestor","find_common_ancestor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","gc","get","get_blocks_by_chain_length","get_branches","get_chain_length","get_nth_ancestor","get_parent","get_tag","header_hash","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_ancestor","memory","provide","provide","put_block","put_tag","send_branch","send_branch_with","source","source","span","storage","stream_from_to","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","","","","","","","","","BRANCHES","BRANCH_REPROCESSING_INTERVAL","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","INTERNAL_TIP_UPDATE_QUEUE_SIZE","META","META","META","META","META","META","META","META","META","META","META","META","Tip","TipUpdater","blockchain","borrow","borrow","borrow_mut","borrow_mut","branch","branch","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fragment_mbox","from","from","from_ref","from_ref","get_ref","init","init","into","into","into_request","into_request","into_request","into_request","new","new","process_new_ref","reprocess_tip","run","stats_counter","switch_tip_branch","tip","to_owned","to_owned","try_from","try_from","try_into","try_into","try_request_fragment_removal","type_id","type_id","update_current_branch_tip","update_ref","vzip","vzip","watch_mbox","","","","","","","","","","CALLSITE","CALLSITE","META","META","PROCESS_TIMEOUT_GET_BLOCKS","PROCESS_TIMEOUT_GET_BLOCK_TIP","PROCESS_TIMEOUT_GET_HEADERS","PROCESS_TIMEOUT_GET_HEADERS_RANGE","PROCESS_TIMEOUT_GET_PEERS","PROCESS_TIMEOUT_PULL_BLOCKS","PROCESS_TIMEOUT_PULL_BLOCKS_TO_TIP","TaskData","blockchain_tip","borrow","borrow_mut","deref","deref_mut","drop","from","fuse_send_items","get_block_from_storage","get_block_tip","handle_get_blocks","handle_get_headers","handle_get_headers_range","handle_input","handle_pull_blocks","handle_pull_blocks_to_tip","init","into","into_request","into_request","send_range_from_storage","start","storage","try_from","try_into","type_id","vzip","Blockchain","BlockchainTip","Context","ContextLock","Diagnostic","Error","FullContext","FullContext","ServerStopper","ServerStopper","Span","blockchain","blockchain","blockchain_tip","blockchain_tip","bootstrap_stopper","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","diagnostic","drop","drop","drop","drop","enclave","fmt","fmt","from","from","from","from","from_ref","full","get_diagnostic_data","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","leadership_logs","network_state","network_task","new","new","node_state","node_state","provide","remove_bootstrap_stopper","rest_server_stopper","rest_server_stopper","set_blockchain","set_blockchain_tip","set_bootstrap_stopper","set_diagnostic_data","set_full","set_node_state","set_rest_server_stopper","set_span","span","span","stats_counter","stop","stop_bootstrap","to_owned","to_string","topology_task","transaction_task","try_from","try_from","try_from","try_from","try_full","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Cpu","Diagnostic","DiagnosticError","NoFile","RlimitResource","UnixError","UnknownError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cpu_usage_limit","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from_ref","getrlimit","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","new","open_files_limit","provide","serialize","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Evm","EvmMapping","Fragment","FragmentId","Initial","Logs","MintToken","OldUtxoDeclaration","OwnerStakeDelegation","Pool","PoolEntry","PoolRegistration","PoolRetirement","PoolUpdate","Process","StakeDelegation","Transaction","UpdateProposal","UpdateVote","VoteCast","VotePlan","VoteTally","ancestors_fee","ancestors_size","arbitrary","borrow","borrow_mut","clone","clone_into","deref","deref_mut","descendants_fee","descendants_size","deserialize","deserialize_from_slice","drop","encode","entries","entry","eq","equivalent","fmt","fragment_fee","fragment_ref","fragment_size","from","from","from_ref","hash","id","init","into","into_request","into_request","logs","logs","logs_max_entries","metrics","network_msg_box","network_msg_box","persistent_log","pool","pool","pool_max_entries","process","received_at","selection","serialize","serialized_size","to_owned","try_from","try_into","type_id","vzip","PoolEntry","ancestors_fee","ancestors_size","borrow","borrow_mut","deref","deref_mut","descendants_fee","descendants_size","drop","fragment_fee","fragment_fee","fragment_ref","fragment_ref","fragment_size","fragment_size","from","init","into","into_request","into_request","new","received_at","received_at","try_from","try_into","type_id","vzip","with_ancestors_fee","with_ancestors_size","with_descendants_fee","with_descendants_size","","CALLSITE","Logs","META","borrow","borrow_mut","deref","deref_mut","drop","entries","exist_all","exists","from","init","insert_all_pending","insert_pending","into","into_request","into_request","logs","logs_by_ids","modify","modify_all","new","remove_logs_after_date","try_from","try_into","type_id","vzip","","","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CannotPropagate","DEFAULT_BUF_SIZE","Error","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","Pool","borrow","borrow","borrow_mut","borrow_mut","close_persistent_log","deref","deref","deref_mut","deref_mut","drop","drop","filter_fragment","fmt","fmt","from","from","init","init","insert_and_propagate_all","internal","into","into","into_request","into_request","into_request","into_request","is_fragment_valid","is_transaction_valid","logs","logs","metrics","network_msg_box","new","persistent_log","pool","provide","prune_after_ledger_branch","remove_added_to_block","select","set_persistent_log","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_metrics","vzip","vzip","IndexedQueue","IndexedQueueEntry","IndexedQueueKeyRef","Pool","TimeoutQueueItem","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","entries","eq","eq","equivalent","equivalent","from","from","from","from","from","from_ref","get_hash","hash","head","id","index","init","init","init","init","init","insert_all","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","len","len","max_entries","max_entries","new","new","next","partial_cmp","pop_back","prev","push_front","remove","remove_all","remove_oldest","tail","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","valid_until","value","vzip","vzip","vzip","vzip","vzip","","","","BRANCHES","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DESCRIPTION","Error","META","META","META","META","META","META","META","META","META","META","META","PersistentLog","Pool","Process","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","hourly_wakeup","init","init","into","into","into_request","into_request","into_request","into_request","logs_max_entries","network_msg_box","new","open_log_file","pool_max_entries","provide","source","start","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","","ApplyFragmentError","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Commit","DoesNotFit","FragmentSelectionAlgorithm","FragmentSelectionAlgorithmParams","FragmentSelectionResult","META","META","META","META","META","META","META","META","META","NewLedgerState","OldestFirst","OldestFirst","Reject","Rejected","RequestSmallerFee","RequestSmallerSize","SelectionOutput","SoftDeadlineReached","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","contents","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ledger","ledger","new","rejected_fragments_cnt","select","select","space_left","try_apply_fragment","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","fragment_id","reason","AcceptGossip","AnnouncedBlock","Block","BlockMsg","BranchSwitch","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ChainHeaders","ClientMsg","DemotePeer","Error","Fragment","GetBlockTip","GetBlocks","GetBlocks","GetHeaders","GetLogs","GetNextBlock","GetStatuses","Gossip","LeadershipBlock","ListAvailable","ListNonPublic","ListQuarantined","META","META","META","META","META","META","NetworkBlocks","NetworkMsg","NewBlock","NewTip","PeerInfo","PromotePeer","Propagate","PropagateMsg","PullBlocks","PullBlocksToTip","PullHeaders","PullHeaders","RemoveTransactions","ReplyFuture","ReplyHandle","ReplySendError","ReplySender","ReplyStream","ReplyStreamFuture","ReplyStreamHandle","ReplyStreamSink","ReplyTrySendError","RequestSink","RequestStreamHandle","SelectTransactions","SendTransactions","TopologyMsg","TransactionMsg","UploadStream","View","WatchMsg","_phantom_error","_phantom_error","aborted","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_size","canceled","cause","clone","clone_into","code","code","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","failed","failed_precondition","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_send_error","into_stream_and_reply","into_streaming_request","into_streaming_request","into_streaming_request","into_streaming_request","invalid_argument","is_full","lead_receiver","lead_sender","map_send_error","not_found","poll","poll","poll_close","poll_close","poll_discover","poll_discover","poll_flush","poll_flush","poll_next","poll_next","poll_ready","poll_ready","poll_ready","provide","provide","provide","receiver","receiver","receiver","reply","reply","reply","reply_error","reply_error","reply_ok","sender","sender","sender","source","source","start_send","start_send","start_sending","stream_reply","stream_request","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll_next","try_poll_next","try_send_item","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unary_reply","unimplemented","upload","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","from","node_id","to","fail_fast","fragments","hard_deadline_future","ledger","origin","reply_handle","reply_handle","selection_alg","soft_deadline_future","","AccountLedgerError","Config","ContextError","Error","EstimationError","EthereumSignatureError","Fragment","IntercomError","MiningIsNotAllowed","NonArchiveNode","Storage","TransactionDecodedError","TxMsgSendError","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","init","init","into","into","into_request","into_request","into_request","into_request","listen","provide","source","start_jrpc_server","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EmptyEnclave","Enclave","EnclaveError","LeaderEvent","LeadershipLogHandle","Logs","Module","ModuleConfig","block_hard_deadline","block_hard_deadline","block_message","block_message","enclave","enclave","enclave","inner","internal_id","logs","logs","logs","logs","pool","pool","process","rewards_report_all","rewards_report_all","schedule","service_info","service_info","tip","tip","tip_ref","","EmptyEnclave","Enclave","EnclaveError","LeaderEvent","Schedule","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_ref","from_ref","init","init","inner","into","into","into_request","into_request","into_request","into_request","new","provide","query_header_bft_finalize","query_header_genesis_praos_finalize","query_schedules","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","","","","","","","","","Block","LeadershipLogHandle","LeadershipLogStatus","Logs","Pending","Rejected","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","equivalent","fmt","from","from","from","from_ref","from_ref","from_ref","get_hash","hash","init","init","init","insert","internal","internal_id","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","logs","logs","mark_finished","mark_finished","mark_wake","mark_wake","new","partial_cmp","serialize","set_status","set_status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","block","chain_length","parent","reason","","Logs","borrow","borrow_mut","deref","deref_mut","drop","entries","from","init","insert","into","into_request","into_request","logs","mark_finished","mark_wake","new","set_status","try_from","try_into","type_id","vzip","","","","","","","","","","","","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CannotConnectToFragmentPool","CannotScheduleWithEnclave","CannotSendLeadershipBlock","CannotUpdateLogs","Entry","FragmentSelectionFailed","LeadershipError","LedgerError","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","Module","ModuleConfig","TooEarlyForTimeFrame","action","action_entry","action_run_entry","action_run_entry_build_block","action_run_entry_in_bound","action_run_schedule","action_schedule","block_hard_deadline","block_hard_deadline","block_message","block_message","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current_slot","current_slot_position","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","enclave","enclave","epoch_instant","epoch_time","event","event_following_slot_time","event_nth_future_slot_time","event_slot_time","fmt","fmt","from","from","from","from","from","from","init","init","init","init","instant","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","log","logs","logs","new","pool","pool","prepare_block","provide","rewards_report_all","rewards_report_all","run","schedule","service_info","service_info","slot_instant","slot_time","source","step","tip","tip","tip_ref","to_string","too_late","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wait","wait_peek_deadline","source","time","KEY_SCOPE","KEY_SUB_TASK","KEY_TASK","Metrics","MetricsBackend","MetricsBuilder","add_backend","add_block_recv_cnt","add_block_recv_cnt","add_peer_connected_cnt","add_peer_connected_cnt","add_peer_quarantined_cnt","add_peer_quarantined_cnt","add_tx_recv_cnt","add_tx_recv_cnt","add_tx_rejected_cnt","add_tx_rejected_cnt","backends","backends","backends","borrow","borrow","borrow_mut","borrow_mut","build","builder","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","init","init","into","into","into_request","into_request","into_request","into_request","metrics_count_method","metrics_method","set_mempool_tx_count","set_mempool_tx_count","set_mempool_usage_ratio","set_mempool_usage_ratio","set_peer_available_cnt","set_peer_available_cnt","set_slot_start_time","set_slot_start_time","set_tip_block","set_tip_block","sub_peer_connected_cnt","sub_peer_connected_cnt","sub_peer_quarantined_cnt","sub_peer_quarantined_cnt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SimpleCounter","block_recv_cnt","mempool_tx_count","mempool_usage_ratio","peers_available_cnt","peers_connected_cnt","peers_quarantined_cnt","simple_counter","slot_start_time","start_time","tip_block","tx_recv_cnt","tx_rejected_cnt","votes_cast","BlockCounters","EXP_MOVING_AVERAGE_COEFF","SimpleCounter","add_block_recv_cnt","add_peer_connected_cnt","add_peer_quarantined_cnt","add_tx_recv_cnt","add_tx_rejected_cnt","avg_content_size","block_fee_sum","block_input_sum","block_recv_cnt","block_tx_count","borrow","borrow","borrow_mut","borrow_mut","calc_running_block_size_average","chain_length","content_size","date","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_stats","hash","init","init","into","into","into_request","into_request","into_request","into_request","mempool_tx_count","mempool_usage_ratio","new","peers_available_cnt","peers_connected_cnt","peers_quarantined_cnt","set_mempool_tx_count","set_mempool_usage_ratio","set_peer_available_cnt","set_slot_start_time","set_tip_block","slot_start_time","start_time","sub_peer_connected_cnt","sub_peer_quarantined_cnt","time","tip_block","totals","try_from","try_from","try_into","try_into","tx_recv_cnt","tx_rejected_cnt","type_id","type_id","votes_cast","vzip","vzip","","","","","","","","BootstrapError","BootstrapPeers","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Channels","Connection","ConnectionState","CouldNotDownloadBlock","DnsResolver","FetchBlockError","GlobalState","GlobalStateR","InternalCommRecv","InternalCommSend","ListenError","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","NetworkBootstrapResult","NewGlobalStateError","NoTrustedPeers","PropagateError","TaskParams","block0_hash","block_box","bootstrap","bootstrap","bootstrap_peers","bootstrapped","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer_sizes","cause","channels","client","client_box","client_count","clone","clone","clone_into","clone_into","concurrency_limits","config","connect_and_propagate","connected_count","connection","convert","dec_client_count","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","dns_resolver","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fetch_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","global","global_state","grpc","handle_network_input","handle_propagation_msg","inc_client_count","init","init","init","init","init","init","init","init","init","init","initial_peers","input","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keepalive_durations","keypair","netboot_peers","new","new","new_dns_resolver","node_address","num_clients_to_bump","p2p","peer","peers","propagate_message","provide","provide","provide","provide","retrieve_local_ip","security_params","service","sockaddr","source","source","span","span","span","span","spawn","start","subscription","timeout","to_owned","to_owned","to_string","to_string","to_string","to_string","topology_box","topology_peers","transaction_box","trusted_peers_shuffled","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watch","block","","","","BlockDecodingFailed","Blockchain","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ClientNotReady","Connect","EmptyTrustedPeers","Error","GcFailed","Interrupted","MAX_BOOTSTRAP_PEERS","META","META","META","META","PeerDecodingFailed","PeersNotAvailable","PullRequestFailed","PullStreamFailed","TipFailed","bootstrap_from_peer","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","init","into","into_request","into_request","peers_from_trusted_peer","provide","source","to_string","try_from","try_into","type_id","vzip","with_cancellation_token","inbound","outbound","BLOCKS","FRAGMENTS","HEADERS","BLOCKS","HEADERS","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Client","ClientBuilder","ConnectError","ConnectFuture","ConnectHandle","Continue","Disconnect","InboundSubscriptions","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","ProcessingOutcome","Progress","and_proceed_with","begin","block_events","block_sink","block_solicitations","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_pulls","channels","client_box","clone","clone_into","connect","connect","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fragment_sink","fragments","from","from","from","from","from","from_ref","global_state","gossip","gossip_sink","inbound","incoming_block_announcement","incoming_solicitation","init","init","init","init","init","inner","into","into","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","peer_id","poll","poll_shut_down","process_block_event","process_fragments","process_gossip","pull_headers","push_missing_headers","shutting_down","solicit_blocks","span","span","span","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upload_blocks","vzip","vzip","vzip","vzip","vzip","Block0Mismatch","CALLSITE","CALLSITE","CALLSITE","Canceled","ClientAuth","ConnectCanceled","ConnectError","ConnectFuture","ConnectHandle","DecodeBlock0","Handshake","InvalidNodeId","InvalidNodeSignature","META","META","META","PeerSignatureVerificationFailed","Subscription","Transport","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","init","init","init","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","into_request","match_block0","poll","provide","receiver","sender","source","task","to_string","try_complete","try_from","try_from","try_from","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","validate_peer_auth","vzip","vzip","vzip","expected","peer_responded","CLIENT_REQUESTS","SERVER_REQUESTS","Decode","Encode","NetworkData","Object","ResponseStream","decode","encode","read","response_stream","Client","ConnectError","FetchBlockError","client","connect","fetch_block","run_listen_socket","server","","","","BlockSubscription","CALLSITE","Client","Connect","ConnectError","FetchBlockError","FragmentSubscription","GetBlocks","GetBlocksStream","GossipSubscription","META","NoBlocks","UnexpectedBlock","borrow","borrow_mut","connect","connect_internal","deref","deref_mut","destination_endpoint","drop","fetch_block","fmt","fmt","from","init","into","into_request","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","received","requested","source","source","source","","CALLSITE","CALLSITE","META","META","run_listen_socket","HTTP2","TCP","Address","comm","","","","","","","","","","","","","","","","","","","","","","BUFFER_LEN","BlockEventAnnounceStream","BlockEventMissingStream","BlockEventSolicitStream","BlockEventSubscription","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Client","CommHandle","ConnectOptions","ErrorKind","FragmentSubscription","GetNodeAddress","GossipSubscription","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","NotSubscribed","NotSubscribed","OutboundSubscription","PeerComms","PeerInfo","PeerStats","Peers","Pending","PropagateError","Server","StreamOverflow","Subscribed","SubscriptionClosed","SubscriptionDirection","SubscriptionState","Unexpected","add_connecting","addr","block_announcements","block_announcements_subscribed","block_solicitations","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_pulls","clear","clear_pending","clear_pending","client_id","client_pending","clone","clone","clone","clone_into","clone_into","clone_into","connection_established","created","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","direction","direction","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","evict_clients","fmt","fmt","fmt","fmt","fmt","fragments","fragments_subscribed","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","generate_auth_nonce","get_peer_addr","gossip","gossip_subscribed","has_client_subscriptions","id","infos","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_item","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_streaming_request","into_streaming_request","is_client","is_subscribed","item","kind","kind","last_activity","last_block_received","last_block_received","last_fragment_received","last_fragment_received","last_gossip_received","last_gossip_received","lock_fut","mutex","new","new","node_id","peer_map","pending_block_announcement","pending_fragment","pending_gossip","poll","poll_discover","poll_next","propagate_block","propagate_fragment","propagate_gossip_to","propagate_with","pull_headers","refresh_peer_on_block","refresh_peer_on_fragment","refresh_peer_on_gossip","remote_addr","remote_addr","remove_peer","server_complete_handshake","set_pending_block_announcement","set_pending_fragment","set_pending_gossip","solicit_blocks_any","solicit_blocks_peer","state","stats","subscribe","subscribe_to_block_announcements","subscribe_to_block_events","subscribe_to_block_events","subscribe_to_block_solicitations","subscribe_to_chain_pulls","subscribe_to_fragments","subscribe_to_fragments","subscribe_to_gossip","subscribe_to_gossip","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","try_send","try_send_block_announcement","try_send_fragment","try_send_gossip","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update_entry","update_last_block_received","update_last_fragment_received","update_last_gossip_received","update_last_timestamp","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ClientAuth","CommStatus","Connecting","DEFAULT_OPEN_HANDSHAKED_LIMIT","Entry","Established","PeerData","PeerMap","add_client","add_connecting","auth_info","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","client_auth","client_id","client_id","comms","comms","complete_handshake","complete_handshake","connecting","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","entry","established","evict_clients","evict_if_full","from","from","from","from","from","generate_auth_nonce","generate_auth_nonce","in_progress","infos","init","init","init","init","init","inner","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","join_peer","map","new","new","next_peer_for_block_fetch","peer_comms","refresh_peer","remove","remove","remove_peer","server_comms","server_comms","stats","stats_counter","stats_counter","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_comm_status","update_comm_status","vzip","vzip","vzip","vzip","vzip","NONCE_LEN","","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","NodeService","SubscriptionStream","block_service","block_subscription","borrow","borrow_mut","channels","client_auth","clone","clone_into","deref","deref_mut","drop","fragment_service","fragment_subscription","from","from_ref","get_blocks","get_fragments","get_headers","global_state","gossip_service","gossip_subscription","handshake","init","into","into_request","into_request","join_streams","new","peer_id","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","send_message","serve_subscription","tip","to_owned","try_from","try_into","type_id","upload_blocks","vzip","","","","BlockAnnouncementProcessor","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Client","Direction","FragmentProcessor","FragmentProcessorSendFragmentsState","GetIngressAddress","GossipProcessor","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","PendingProcessing","ReverseDnsLookupFuture","ReverseLookup","SendFragments","Server","WaitingMessageBox","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffered_fragments","clear_buffered_fragments","complete","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","filter_gossip_node","fmt","from","from","from","from","from","from","global_state","global_state","global_state","handle_mbox_error","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mbox","mbox","mbox","message_box","new","new","new","node_id","node_id","node_id","peer_promoted","pending_processing","pending_processing","pending_processing","poll_close","poll_close","poll_close","poll_complete","poll_complete_refresh_stat","poll_flush","poll_flush","poll_flush","poll_flush_mbox","poll_flush_mbox","poll_ready","poll_ready","poll_ready","poll_send_fragments","process_block_announcements","process_fragments","process_gossip","refresh_stat","refresh_stat","send_fragments_state","start","start_send","start_send","start_send","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","fut","fut","ingress_addr","ingress_addr","resolved_hostnames","","","","","CALLSITE","CALLSITE","Config","META","META","S","__StaticPath","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cors","deref","deref","deref_mut","deref_mut","display_internal_server_error","drop","drop","error_to_body","from","from","from_ref","init","init","into","into","into_request","into_request","into_request","into_request","listen","run_server_with_app","setup_cors","setup_prometheus","start_rest_server","tls","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","v0","v1","vzip","vzip","","","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","filter","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","handle_rejection","handlers","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","logic","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GetBlockNextIdQuery","borrow","borrow_mut","count","deref","deref_mut","deserialize","drop","from","get_account_state","get_active_vote_plans","get_block_id","get_block_next_id","get_committees","get_diagnostic","get_leaders_logs","get_message_logs","get_network_p2p_available","get_network_p2p_non_public","get_network_p2p_quarantined","get_network_p2p_view","get_network_p2p_view_topic","get_network_stats","get_rewards_info_epoch","get_rewards_info_history","get_rewards_remaining","get_settings","get_stake_distribution","get_stake_distribution_at","get_stake_pool","get_stake_pools","get_stats_counter","get_tip","get_update_proposals","get_utxo","init","into","into_request","into_request","post_message","shutdown","try_from","try_into","type_id","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ContextError","Deserialize","Digest","Error","Fragment","FromConfigParam","Hash","Hex","IntercomError","InvalidTopic","META","META","META","META","META","META","META","META","MsgSendError","PublicKey","Serialize","Storage","TipBlockNotFound","TxMsgSendError","Value","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_account_state","get_active_vote_plans","get_block_id","get_block_next_id","get_committees","get_diagnostic","get_leaders_logs","get_message_logs","get_network_p2p_available","get_network_p2p_non_public","get_network_p2p_quarantined","get_network_p2p_view","get_network_p2p_view_topic","get_network_stats","get_rewards_info_epoch","get_rewards_info_history","get_rewards_remaining","get_settings","get_stake_distribution","get_stake_distribution_at","get_stake_pool","get_stake_pools","get_stats_counter","get_tip","get_topology_view","get_update_proposals","get_utxo","init","into","into_request","into_request","parse_account_id","parse_block_hash","parse_fragment_id","parse_topic","post_message","provide","shutdown","source","to_string","try_from","try_into","type_id","vzip","","","S","S","S","S","S","S","S","S","S","S","S","S","S","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","filter","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","handle_rejection","handlers","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","logic","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","","","","","","","GetMessageStatusesQuery","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fragment_ids","from","get_account_votes","get_account_votes_with_plan","get_accounts_votes_all","get_fragment_logs","get_fragment_statuses","init","into","into_request","into_request","post_fragments","try_from","try_into","type_id","vzip","","","","","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Context","Digest","Error","Fragments","Hash","Hex","Intercom","META","META","META","META","META","META","META","MsgSend","PublicKey","Storage","TxMsgSend","Value","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_account_votes","get_account_votes_with_plan","get_accounts_votes_all","get_fragment_logs","get_fragment_statuses","init","into","into_request","into_request","parse_account_id","post_fragments","provide","source","to_string","try_from","try_into","type_id","vzip","Bft","Format","GenesisPraos","Io","NodePublic","NodeSecret","NodeSecretFromFileError","OwnerKey","bft","bft","block_publickey","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","enclave","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","genesis","genesis","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","load_from_file","node_id","provide","sig_key","signing_key","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vrf_key","vzip","vzip","vzip","vzip","vzip","vzip","Enclave","LeaderEvent","Schedule","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create_header_bft","create_header_genesis_praos","current_slot","current_slot_data","date","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","enclave","epoch","fill","from","from","from","from_ref","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","leader_data","leadership","new","new","next_event","output","peek","stop_at_slot","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Block0Info","CommandLine","Error","Hash","LAZY","LOG_FILTER_LEVEL_POSSIBLE_VALUES","Path","__private_field","__stability","__static_ref_initialize","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command_arguments","deref","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","from_ref","full_version","init","init","into","into","into_request","into_request","into_request","into_request","jrpc_arguments","log_format","log_level","log_output","logging","rest_arguments","rewards_report_all","source_version","start","start_arguments","storage_check","to_owned","trace_collector_endpoint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CommandLine","JRpcArguments","RestArguments","StartArguments","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","block_0_hash","block_0_path","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","full_version","group_id","group_id","group_id","group_id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jrpc_arguments","listen","listen","listen_address","load","log_format","log_level","log_level_parse","log_output","node_config","public_address","rest_arguments","rewards_report_all","secret","source_version","start_arguments","storage","storage_check","trace_collector_endpoint","trusted_peer","trusted_peer_from_json","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Error","File","FileError","FormatNotSupported","InitSubscriber","InstallOpenTelemetryPipeLine","Json","LogFormat","LogGuard","LogOutput","LogSettings","META","META","META","META","Plain","Stderr","Stdout","_nonblocking_worker_guard","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from_ref","from_ref","from_ref","from_str","from_str","init","init","init","init","init","init_log","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","level","output","provide","serialize","serialize","source","to_owned","to_owned","to_owned","to_string","to_string","trace_collector_endpoint","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","cause","path","specified","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Config","ConfigIo","Cors","DEFAULT_BLOCK_HARD_DEADLINE","DEFAULT_NO_BLOCKCHAIN_UPDATES_WARNING_INTERVAL","Error","ExpectedBlock0Info","InvalidKey","InvalidLayersConfig","InvalidMultiaddr","JRpc","META","META","META","META","Mempool","RawSettings","Rest","Settings","Tls","allowed_headers","allowed_methods","allowed_origins","block_0","block_hard_deadline","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_file","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","command_line","config","config","cors","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","generate_network","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jrpc","jrpc_config","leadership","listen","listen","load","log_max_entries","log_settings","max_age_secs","mempool","network","network","no_blockchain_updates_warning_interval","persistent_log","pool_max_entries","priv_key_file","provide","resolve_trusted_peers","rest","rest_config","rewards_report_all","secret","serialize","serialize","serialize","serialize","serialize","source","storage","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_settings","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Bootstrap","Config","ConfigLogSettings","Connection","Cors","JRpc","LayersConfig","Leadership","P2pConfig","Prometheus","Rest","Tls","TrustedPeer","address","allow_private_addresses","allowed_headers","allowed_methods","allowed_origins","block_hard_deadline","bootstrap","bootstrap_from_trusted_peers","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_file","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connection","cors","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dns_server_address","drop","drop","drop","drop","drop","drop","drop","drop","drop","enabled","eq","eq","eq","equivalent","equivalent","equivalent","filter_level_opt_serde","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","gossip_interval","http_fetch_block0_service","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jrpc","layers","leadership","level","listen","listen","listen","log","logs_capacity","max_age_secs","max_bootstrap_attempts","max_client_connections","max_connections","max_connections_threshold","mempool","network_stuck_check","no_blockchain_updates_warning_interval","node_key_file","output","p2p","policy","preferred_list","priv_key_file","public_address","rest","secret_file","serialize","serialize","serialize","serialize","serialize","skip_bootstrap","storage","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics_of_interest","trace_collector_endpoint","trusted_peers","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelist","deserialize","serialize","Configuration","DEFAULT_MAX_CLIENT_CONNECTIONS","DEFAULT_MAX_CONNECTIONS","DEFAULT_TIMEOUT","Grpc","InvalidAddress","Listen","Ntt","Peer","PeerResolveError","Protocol","Resolve","TrustedPeer","addr","address","address","address","allow_private_addresses","bootstrap_from_trusted_peers","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","connection","connection","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","dns_server_address","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","get_hash","get_hash","gossip_interval","hash","hash","http_fetch_block0_service","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","layers","listen","listen_address","max_bootstrap_attempts","max_client_connections","max_connections","network_stuck_check","new","new","node_key","policy","protocol","protocol","protocol","provide","public_address","resolve","serialize","serialize","serialize","skip_bootstrap","source","timeout","timeout","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trusted_peers","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","whitelist","with_timeout","","","","","Block0","Block0","Block0InFuture","Block0Mismatch","BlockStorage","Blockchain","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ConfigurationError","DiagnosticError","Error","ErrorKind","FetchBlock0","GlobalState","Interrupted","Io","LoggingInitializationError","META","META","META","META","META","META","META","META","META","NetworkBootstrapError","NodeSecrets","ParseError","ServiceTerminatedWithError","StorageError","error","fetch_block0_http","fetch_one","load_blockchain","prepare_block_0","prepare_storage","expected","got","reason","reason","source","source","Block0","Block0","Block0InFuture","Block0Mismatch","BlockStorage","Blockchain","ConfigurationError","DiagnosticError","Error","ErrorKind","FetchBlock0","GlobalState","Interrupted","Io","LoggingInitializationError","NetworkBootstrapError","NodeSecrets","ParseError","ServiceTerminatedWithError","StorageError","borrow","borrow","borrow_mut","borrow_mut","code","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","init","init","into","into","into_request","into_request","into_request","into_request","provide","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","expected","got","reason","reason","source","source","State","borrow","borrow_mut","default","deref","deref_mut","drop","from","init","into","into_request","into_request","new","try_from","try_into","type_id","vzip","","CALLSITE","CALLSITE","CALLSITE","META","META","META","check_last_block_time","DEFAULT_NETWORK_STUCK_INTERVAL","Gossip","Gossips","NodeId","P2pTopology","Peer","PeerInfo","QuarantineConfig","ReportRecords","TaskData","View","address","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","deref","deref","deref_mut","deref_mut","drop","drop","encode","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","get_hash","get_hash","gossip","hash","hash","id","init","init","initial_peers","into","into","into_request","into_request","into_request","into_request","key","last_update","layers","limits","max_num_quarantine_records","max_quarantine","network_msgbox","peers","process","quarantine","quarantine","quarantine_duration","quarantine_whitelist","quarantined","report_duration","report_grace","report_records","report_whitelist","self_node","serialize","serialize","start","stats_counter","stats_counter","subscriptions","to_owned","to_owned","to_string","topic","topology","topology","topology_queue","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Gossip","GossipError","Gossips","InvalidGossip","ReadError","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize_from_slice","drop","drop","drop","encode","encode","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","get_hash","has_valid_address","hash","id","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","is_global","is_ipv4_global","provide","serialize","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","LayersConfig","ParseError","PreferredListConfig","RingsConfig","blocks","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_ref","init","into","into_request","into_request","messages","peers","preferred_list","preferred_list","rings","rings","to_owned","try_from","try_into","type_id","view_max","vzip","PreferredListConfig","PreferredListLayer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","current_peers","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_ref","init","init","into","into","into_request","into_request","into_request","into_request","name","new","peers","peers","populate","prng","remove","reset","subscribe","subscriptions","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unsubscribe","view","view_max","view_max","vzip","vzip","HIGH_INTEREST","LOW_INTERESET","NORMAL_INTEREST","ParseError","Rings","RingsConfig","blocks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from_ref","init","init","init","interest_levels","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","messages","name","new","parse_interest","populate","provide","remove","reset","rings","subscribe","subscriptions","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unsubscribe","view","vzip","vzip","vzip","MAX_GOSSIP_SIZE","MAX_ID_SIZE","","","BRANCHES","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DEFAULT_NETWORK_STUCK_INTERVAL","MAX_GOSSIP_SIZE","META","META","META","META","META","META","META","META","Process","QUARANTINE_CHECK","TaskData","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","from","from","gossip_interval","handle_input","init","init","initial_peers","input","into","into","into_request","into_request","into_request","into_request","network_msgbox","network_msgbox","network_stuck_check","send_gossip_messages","start","stats_counter","topology","topology_queue","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DEFAULT_MAX_NUM_QUARANTINE_RECORDS","DEFAULT_MAX_QUARANTINE_DURATION","DEFAULT_QUARANTINE_DURATION","META","META","META","META","Ok","Quarantine","QuarantineConfig","ReportNodeStatus","ReportRecord","ReportRecords","SoftReport","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from_config","from_ref","from_ref","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lift_reports","max_num_quarantine_records","max_quarantine","peer_info","quarantine_duration","quarantine_whitelist","record_new_gossip","report_duration","report_grace","report_node","report_records","report_time","report_whitelist","reported_nodes","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","BLOCKS","MESSAGES","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CYCLON_VIEW_SIZE","CustomLayerBuilder","GOSSIP_SIZE","LAZY","LOCAL_ADDR","META","META","META","META","P2pTopology","RINGS_VIEW_SIZE","VICINITY_VIEW_SIZE","View","__private_field","__stability","__static_ref_initialize","accept_gossips","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_for_gossip","build_for_view","build_layers","config","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","from","init","init","init","init","initiate_gossips","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","lift_reports","list_available","list_non_public","list_quarantined","new","peer_available_cnt","peers","promote_node","quarantine","report_node","secret_key_into_keynesis","self_node","stats_counter","topology","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_gossip","view","vzip","vzip","vzip","vzip","async_msg","fire_forget_scheduler","task","MessageBox","MessageQueue","SendError","TrySendError","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","equivalent","equivalent","err","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","init","init","init","init","into","into","into","into","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_send_error","into_streaming_request","into_streaming_request","is_disconnected","is_disconnected","is_full","is_full","kind","poll_close","poll_discover","poll_flush","poll_next","poll_ready","poll_ready","provide","provide","size_hint","start_send","start_send","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll_next","try_send","type_id","type_id","type_id","type_id","val","vzip","vzip","vzip","vzip","Command","CommandQueueClosed","CommandSend","DeclareCompleted","Error","FireForgetScheduler","FireForgetSchedulerConfig","FireForgetSchedulerFuture","RunningTask","Schedule","ScheduledTask","TimedOutTask","Timer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command_channel_size","command_receiver","command_sender","data","declare_completed","declare_completed","declare_timed_out","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_ref","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_completed","is_completed","is_running_same_task","is_scheduled","is_timed_out","launch","launcher","max_running","max_running_same_task","max_running_same_task","new","poll","pop_next_runnable_task","provide","running","schedule","schedule","scheduled","scheduler","sender","source","task_run_count","tid","tid","tid","timeout","timeout","timeout_key","timeouts","to_owned","to_running","to_string","to_timed_out","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_run_scheduled","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_data","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wid","wid","wid","task","task","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Cancelled","Input","Input","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","Panic","Service","Service","ServiceError","Services","Shutdown","TaskMessageBox","TokioServiceInfo","block_on_task","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","finish_listener","fmt","fmt","from","from","from","from","from","from","from_ref","handle","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","name","name","name","name","new","new","provide","run_periodic","run_periodic_fallible","runtime","runtime_handle","send_to","services","source","span","span","spawn","spawn_fallible","spawn_future","spawn_try_future","timeout_spawn","timeout_spawn_fallible","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","up_time","up_time","up_time","up_time","vzip","vzip","vzip","vzip","vzip","vzip","wait_any_finished","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","Message","MessageProcessor","RequestMsg","SubscriptionStream","SubscriptionTryStream","SyncMultiverse","WatchClient","block_sender","block_sender","block_subscription","blockchain","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from_ref","handle_sync_multiverse","init","init","init","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_server","new","request_tx","requests","start","storage","sync_multiverse","tip_receiver","tip_sender","tip_subscription","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","from","handle"],"q":[[0,"jormungandr"],[164,"jormungandr::blockcfg"],[1196,"jormungandr::blockcfg::config"],[1366,"jormungandr::blockcfg::config::RewardParams"],[1374,"jormungandr::blockchain"],[1472,"jormungandr::blockchain::PreCheckedHeader"],[1477,"jormungandr::blockchain::bootstrap"],[1511,"jormungandr::blockchain::branch"],[1534,"jormungandr::blockchain::candidate"],[1595,"jormungandr::blockchain::candidate::chain_advance"],[1612,"jormungandr::blockchain::candidate::chain_landing"],[1634,"jormungandr::blockchain::chain"],[1927,"jormungandr::blockchain::chain::HeaderChainVerifyError"],[1931,"jormungandr::blockchain::chain::PreCheckedHeader"],[1936,"jormungandr::blockchain::chain_selection"],[1968,"jormungandr::blockchain::checkpoints"],[1996,"jormungandr::blockchain::chunk_sizes"],[1997,"jormungandr::blockchain::multiverse"],[2027,"jormungandr::blockchain::process"],[2184,"jormungandr::blockchain::reference"],[2224,"jormungandr::blockchain::reference_cache"],[2249,"jormungandr::blockchain::storage"],[2367,"jormungandr::blockchain::tip"],[2457,"jormungandr::client"],[2505,"jormungandr::context"],[2616,"jormungandr::diagnostic"],[2682,"jormungandr::fragment"],[2756,"jormungandr::fragment::entry"],[2788,"jormungandr::fragment::logs"],[2817,"jormungandr::fragment::pool"],[2906,"jormungandr::fragment::pool::internal"],[3016,"jormungandr::fragment::process"],[3088,"jormungandr::fragment::selection"],[3217,"jormungandr::fragment::selection::SelectionOutput"],[3219,"jormungandr::intercom"],[3642,"jormungandr::intercom::NetworkMsg"],[3645,"jormungandr::intercom::TransactionMsg"],[3654,"jormungandr::jrpc"],[3709,"jormungandr::leadership"],[3741,"jormungandr::leadership::enclave"],[3792,"jormungandr::leadership::logs"],[3881,"jormungandr::leadership::logs::LeadershipLogStatus"],[3885,"jormungandr::leadership::logs::internal"],[3908,"jormungandr::leadership::process"],[4069,"jormungandr::leadership::process::LeadershipError"],[4071,"jormungandr::log"],[4074,"jormungandr::metrics"],[4142,"jormungandr::metrics::backends"],[4156,"jormungandr::metrics::backends::simple_counter"],[4225,"jormungandr::network"],[4548,"jormungandr::network::FetchBlockError"],[4549,"jormungandr::network::bootstrap"],[4597,"jormungandr::network::buffer_sizes"],[4599,"jormungandr::network::buffer_sizes::inbound"],[4602,"jormungandr::network::buffer_sizes::outbound"],[4604,"jormungandr::network::client"],[4803,"jormungandr::network::client::connect"],[4880,"jormungandr::network::client::connect::ConnectError"],[4882,"jormungandr::network::concurrency_limits"],[4884,"jormungandr::network::convert"],[4893,"jormungandr::network::grpc"],[4901,"jormungandr::network::grpc::client"],[4940,"jormungandr::network::grpc::client::FetchBlockError"],[4945,"jormungandr::network::grpc::server"],[4951,"jormungandr::network::keepalive_durations"],[4953,"jormungandr::network::p2p"],[4955,"jormungandr::network::p2p::comm"],[5323,"jormungandr::network::p2p::comm::peer_map"],[5441,"jormungandr::network::security_params"],[5442,"jormungandr::network::service"],[5516,"jormungandr::network::subscription"],[5741,"jormungandr::network::subscription::FragmentProcessorSendFragmentsState"],[5746,"jormungandr::rest"],[5801,"jormungandr::rest::v0"],[6563,"jormungandr::rest::v0::handlers"],[6636,"jormungandr::rest::v0::logic"],[6761,"jormungandr::rest::v1"],[7040,"jormungandr::rest::v1::handlers"],[7069,"jormungandr::rest::v1::logic"],[7137,"jormungandr::secure"],[7271,"jormungandr::secure::enclave"],[7336,"jormungandr::settings"],[7394,"jormungandr::settings::command_arguments"],[7518,"jormungandr::settings::logging"],[7654,"jormungandr::settings::logging::Error"],[7657,"jormungandr::settings::start"],[7883,"jormungandr::settings::start::config"],[8139,"jormungandr::settings::start::config::filter_level_opt_serde"],[8141,"jormungandr::settings::start::network"],[8318,"jormungandr::start_up"],[8366,"jormungandr::start_up::Error"],[8372,"jormungandr::start_up::error"],[8440,"jormungandr::start_up::error::Error"],[8446,"jormungandr::state"],[8463,"jormungandr::stuck_notifier"],[8471,"jormungandr::topology"],[8569,"jormungandr::topology::gossip"],[8652,"jormungandr::topology::layers"],[8682,"jormungandr::topology::layers::preferred_list"],[8731,"jormungandr::topology::layers::rings"],[8803,"jormungandr::topology::limits"],[8805,"jormungandr::topology::process"],[8870,"jormungandr::topology::quarantine"],[8973,"jormungandr::topology::topic"],[8975,"jormungandr::topology::topology"],[9078,"jormungandr::utils"],[9081,"jormungandr::utils::async_msg"],[9190,"jormungandr::utils::fire_forget_scheduler"],[9370,"jormungandr::utils::fire_forget_scheduler::Command"],[9372,"jormungandr::utils::task"],[9562,"jormungandr::watch_client"],[9654,"jormungandr::watch_client::RequestMsg"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap phase","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","new module to prepare for the new leadership scheduling of …","","Main entrypoint for the <code>jormungandr</code> binary","","all the network related actions and processes","","REST API of the node","","","","","","","","","","","","","","This module is responsible for discovering peers and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>Block</code> is an element of the blockchain it contains multiple …","","Seconds elapsed since 1-Jan-1970 (unix time)","","","","","Non unique identifier of the transaction position in the …","","","","","","","","","Block Contents","","","","","The epoch reward information.","","","","","All possible messages recordable in the content","","","","","","","","","","Finalized BFT Header","Header Builder (finalize BFT part)","Finalized BFT Header","","This is the data extracted from a header related to …","Header description","Finalized Genesis-Praos Header","Header Builder (finalize Genesis-Praos part)","","","","","","","","","Leadership represent a given epoch and their associated …","Overall ledger structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Control what information will be extracted from the …","","","","","","","","","","","","Unspent transaction value.","","","","","","","Amount added to each account. structure can be empty.","","Add a state to the multiverse. Return a <code>Ref</code> object that …","","","Try to apply messages to a State, and return the new State …","Try to apply a message to the State, and return the new …","","","","","","","","","Applies transaction to the account ledger by validating …","","","","","","","","","","","","","","","","","","","","","","","","","","Create a block from a block version, content and a header …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the consensus associated with the <code>Leadership</code>","","","","","","Date of the block.","","","","","Create a Block date given a leadership and a relative …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This need to be called before the <em>first</em> block of a new …","Total Drawn from reward escrow pot for this epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the epoch associated to the <code>Leadership</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get the TimeEra associated to the <code>Leadership</code>","","","","Fees contributed into the pot this epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Once the state are old in the timeline, they are less and …","","","","","","Get the authenticated data of a BFT header being built","","","","","","","","","","","","access the ledger static parameters","","","","","","","","","","","Identifier of the block, currently the hash of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a state to the multiverse. Return a Ref object that …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tentatively transition to a BFT Header builder","Tentatively transition to a Genesis-Praos Header builder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finalized to an unsigned header","","Test that the given leader object is able to create a …","","","","","","","","","","","","Create a new Header builder starting from the full content.","","","","","","","recommended to use new(), this is only for test","Get the slot following this one.","","","","","Return the number of states stored in memory.","","","Params used","Id of the parent block.","","","","","","","","","","","","set multiple messages in the block to build","","","","","","","","","","","","","","","","","","","","Set the date of this block","Set the header as a genesis header:","Set the header as a general block, with a specific depth …","Set the signature in the BFT header and return the …","Set the signature in the Genesis-Praos header and return a …","","","","","","","","","Just a helper to set the signature directly from what the …","","","","","","","","Divide a value by n equals parts, with a potential …","","Amount added to each pool id. structure can be empty.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Value added to the treasury","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verify whether this header has been produced by a leader …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Seconds elapsed since 1-Jan-1970 (unix time)","","","","","","","","","","","","","","","Possible errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","result when the given header is already present in the …","","","","","","","","","","","","blockchain object, can be safely shared across multiple …","","","the data that is contained in a branch","","","","list of pre-computed checkpoints from a given <code>Ref</code>.","","","","","","The parent’s is already present in the local storage and …","","","","","","the parent is missing from the local storage","","","","","","","","","a reference to a block in the blockchain","","","","","","","","","","","","","","","","","","","","","","","chose which of the two Ref is the most interesting to keep …","the leadership used to validate the current header’s …","If present, this is the rewards info distributed at the …","","","keep the Block header in memory, this will avoid retrieving","","","","Reference holder for the object in the <code>Multiverse&lt;Ledger&gt;</code>.","","","","","","holder to the previous epoch state or more precisely the …","","","","","reference to the block where the branch points to","","","","","","","","","","","","the time frame applicable in the current branch of the …","","","the cached reference if it was already cached.","return the Header so we can avoid doing clone of the data …","return back the Header so we can avoid doing a clone of …","return back the Header so we can avoid doing a clone of …","return the locally stored parent’s Ref. Already cached …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","the data that is contained in a branch","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","create the branch data with the current <code>last_updated</code> to …","reference to the block where the branch points to","","","","","","","","","","","","","","","","","","","","","","Consumes headers from the stream, filtering out those that …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Reads the stream and skips blocks that are already present …","","","","","","","","","","","","","","","","","","","","","","result when the given header is already present in the …","","","","","","","","","blockchain object, can be safely shared across multiple …","","","","","","","","","","The parent’s is already present in the local storage and …","","","","","","the parent is missing from the local storage","","","","","","","","","","","","","","","","Apply the block on the blockchain from a post checked …","Apply the block generated by this node. This should …","Apply the given block0 in the blockchain (updating the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create and store a reference of this leader to the new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","get <code>Ref</code> of the given header hash","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","function to do the initial application of the block0 in …","returns a future that will propagate the initial states …","load the header’s parent <code>Ref</code>.","","","","","","","check the header cryptographic properties and leadership’…","load the header’s parent and perform some simple …","Performs lightweight sanity checks on information fields …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the cached reference if it was already cached.","return the Header so we can avoid doing clone of the data …","return back the Header so we can avoid doing a clone of …","return back the Header so we can avoid doing a clone of …","return the locally stored parent’s Ref. Already cached …","","","","","","","","","","","","chose which of the two Ref is the most interesting to keep …","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","list of pre-computed checkpoints from a given <code>Ref</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","create a new list of checkpoints from the given starting …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","run the garbage collection of the multiverse","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The blockchain process is comprised mainly of two parts:","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a reference to a block in the blockchain","clone all active vote plans at this given state","retrieve the block date of the <code>Ref</code>","access the reference’s parent hash","","","retrieve the chain length, the number of blocks created …","","","","","","retrieve the time of the slot of the block. If the block …","","the leadership used to validate the current header’s …","access the rewards info that were distributed at the end …","If present, this is the rewards info distributed at the …","Returns the argument unchanged.","","retrieve the header hash of the <code>Ref</code>","access the <code>Header</code> of the block pointed by this <code>Ref</code>","keep the Block header in memory, this will avoid retrieving","","Calls <code>U::from(self)</code>.","","","","","Reference holder for the object in the <code>Multiverse&lt;Ledger&gt;</code>.","create a new <code>Ref</code>","holder to the previous epoch state or more precisely the …","get the chain_time’s <code>Slot</code>. This allows to compute an …","retrieve the time of the associated block.","get the time frame in application in the current branch of …","the time frame applicable in the current branch of the …","","","","","","","","object that store the <code>Ref</code> in a cache. Every time a <code>Ref</code> is …","","","","","","","","Returns the argument unchanged.","","return a future to get a <code>Ref</code> from the cache","","","return a future that will attempt to insert the given <code>Ref</code> …","Calls <code>U::from(self)</code>.","","","create a new <code>RefCache</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Stream a branch ending at <code>to</code> and starting from the ancestor","Like <code>send_branch</code>, but with a transformation function …","","","","","Return values:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handles updates to the tip. Only one of this structs …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","process a new candidate block on top of the blockchain, …","this function will re-process the tip against the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All possible messages recordable in the content","","","","","","","","","","","","","","","","","","","","the fee of the accumulated ancestor fragments does not …","the size of the accumulated ancestor fragments Does not …","","","","","","","","the fee of the accumulated descendant fragments does not …","the size of the accumulated descendant fragments Does not …","","","","","","","","","","fee of the fragment, does not include the fee of …","","size of the fragment in the memory pool","","Returns the argument unchanged.","","The ID of a message is a hash of its serialization <em>without</em> …","The ID of a fragment is a hash of its serialization <em>without</em>…","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","time when the entry was added to the pool","","","","","","","","","","the fee of the accumulated ancestor fragments does not …","the size of the accumulated ancestor fragments Does not …","","","","","the fee of the accumulated descendant fragments does not …","the size of the accumulated descendant fragments Does not …","","","fee of the fragment, does not include the fee of …","","","","size of the fragment in the memory pool","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","time when the entry was added to the pool","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns number of registered fragments","Returns true if fragment was registered","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Synchronizes the persistent log file contents and metadata …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns number of registered fragments. Setting <code>fail_fast</code> …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Sets the persistent log to a file. The file must be opened …","","","","","","","","","","","","Queue with the possibility to remove elements from the …","","A wrapper around the pointer to the key of the queue …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Returns clones of registered fragments","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A untrusted block Header has been received from the …","","General Block Message for the block task","","","","","","","","The stream of headers for missing chain blocks has been …","Client messages, mainly requests from connected peers to …","","The error values passed via intercom messages.","","","","","","","","","","A trusted Block has been received from the leadership task","","","","","","","","","","A stream of untrusted blocks has been received from the …","Messages to the network task.","","","","","","Propagation requests for the network task.","","","","","","","","","","","","","","","","","","","Messages to the topology task","…","An adapter for outbound client streaming requests","","Messages to the notifier task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts this stream into an infallible stream for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","represent the client side of an enclave. From there we …","","","leadership log handle. will allow to update the status of …","all leadership logs, allow for following up on the …","","","","","","","","","","TODO: we will need to remove this to instead query data to …","","","","","","","","","","","","","","","","","","","represent the client side of an enclave. From there we …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","TODO: we will need to remove this to instead query data to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","create a new enclave structure. This will need to change …","","ask the leader associated to the <code>LeaderEvent</code> to finalize …","ask the leader associated to the <code>LeaderEvent</code> to finalize …","ask the enclave to attempt computing some leadership …","","","","","","","","","","","","","","","","","","","","","leadership log handle. will allow to update the status of …","the status of a leadership log","all leadership logs, allow for following up on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","make a leadership event as finished.","","make a leadership event as triggered.","create a Leadership Logs. Logs will be removed once the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","all the different channels the network may need to talk to","","","","","","Global state shared between all network tasks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the local (to the task) connection details","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Queries the trusted peers for a block identified with the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The global state shared between all connections","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Try to get sufficient peers to do a netboot from","the network global state","","","","","","","","","","","","","Infallible util function to obtain local IP addr","","","","","","","","","","","","","the timeout to wait for unbefore the connection replies","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An error type to signal that the connection was not …","","The future that drives P2P client to establish a …","Handle used to monitor the P2P client in process of …","","","","","","","","","","","","","","","","","Initiates a client connection, returning a connection …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Checks if the client has connected and established …","","","","","","","","","","","","","","","","","","","Conversion from a chain-network byte container data type …","Conversion from an application data object to a …","","","","","","","","","","","","","","","","","","","The inbound subscription stream of block events.","","","","","","The inbound subscription stream of fragments.","","","The inbound subscription stream of P2P gossip.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","At the logical level, every peer is identified by its …","This module is responsible for handling active peers and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handle used by the per-peer communication tasks to produce …","Options for Peers::add_connecting","","","Future for executing async address lookup for the given …","","","","","","","","","","","","","","","","","","","","Stream used as the outbound half of a subscription stream.","State of the communication streams that a single peer …","","","The collection of currently connected peer nodes.","","","","","","","Indicates whether this subscription belongs to a client or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a handle with the <code>Client</code> direction and an item …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The to number of client connections that need to be removed","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Block announcement to send once the subscription is …","Fragment to send once the subscription is established","Gossip to send once the subscription is established","","","","","","","","","","","","","","","","","","","","","","","Returns a stream to use as an outbound half of the …","","","returns <code>None</code> if the handshake process was not completed …","","","","returns <code>None</code> if the handshake process was not completed …","","returns <code>None</code> if the handshake process was not completed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates this handle with the subscription state from …","","","","","","","","","","","","","","","","","","","Peer authentication is checked during the handshake. For …","","","","","","","","","","","","","","","","","","","","","","for clearing the peer map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Inserts peer and returns associated metadata","","","","","","Returns metadata of most recent peer interaction with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handles client ID authentication.","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ingests inbound subscription stream, the node_id refers to …","Possible states for FragmentProcessor::poll_send_fragments.","Fetch the address of the inbound peer from which the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Future returned by trust-dns-resolver reverse lookup.","Executes a reverse DNS lookup query on the inbound peer …","Checks the inbound peer address and (if resolved to any) …","","Wait for the message box to have capacity to send at least …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Conditionally filter gossip from non-public IP addresses","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends fragments to the fragments task.","","","","","Signals interaction with peer has occurred, this context …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert rejections to actual HTTP errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Convert rejections to actual HTTP errors","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","hold the node’s bft secret setting","","the genesis praos setting","","Node Secret’s Public parts","Node Secret(s)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","display full version details (software version, source …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Set format of the log emitted. Can be “json” or “…","Set log messages minimum severity. If not configured …","Set where the log will be emitted. Can be “stdout”, “…","","","report all the rewards in the reward distribution history","display the sources version, allowing to check the source…","","","Initialize the storage and exit, useful to check that the …","","Enable the OTLP trace data exporter and set the collector…","","","","","","","","","","","","","","","","","","","","","set the genesis block hash (the hash of the block0) so we …","Path to the genesis block (the block0) of the blockchain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","display full version details (software version, source …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","REST API listening address. If not configured anywhere, …","JRPC API listening address. If not configured anywhere, …","Specifies the address the node will listen to to receive …","load the command arguments from the command line args","Set format of the log emitted. Can be “json” or “…","Set log messages minimum severity. If not configured …","","Set where the log will be emitted. Can be “stdout”, “…","Set the node config (in YAML format) to use as general …","The address to listen from and accept connection from. …","","report all the rewards in the reward distribution history","Set the secret node config (in YAML format).","display the sources version, allowing to check the source…","","Path to the blockchain pool storage directory","Initialize the storage and exit, useful to check that the …","Enable the OTLP trace data exporter and set the collector…","set a trusted peer in the multiformat format (e.g.: ‘…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Format of the logger.","","Output of the logger.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Overall Settings for node","","If none provided, the list is empty, and all preflight …","If none provided, the list is empty and all preflight …","If none provided, echos request origin","","","","","","","","","","","","","","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","Enables CORS if provided","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","maximum number of entries in the fragment logs","","If none provided, CORS responses won’t be cached","","","","","path to the persistent log of all incoming fragments","maximum number of entries in the mempool","Path to server private key file, must be PKCS8 with single …","","","","","","","","","","","","","","Enables TLS and disables plain HTTP if provided","","","","","","","","","","","","","","","","","","","","","","","Load the settings","","","","","","","","","","","","","","","","","","","","Start up connection configuration","","","Jörmungandr provides multiple additional layers to the …","","","","","","Configuration item for a trusted peer.","The peer’s routable host address and TCP port as a …","Whether to allow non-public IP addresses on the network. …","If none provided, the list is empty, and all preflight …","If none provided, the list is empty and all preflight …","If none provided, echos request origin","","","","","","","","","","","","","","","","","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","","","","","Enables CORS if provided","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If given, specifies the address of the DNS server to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","interval to start gossiping with new nodes, changing the …","","Node identifier as a bech32-encoded ed25519 public key.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","settings for the different custom layers","","","","","The socket address to listen on, if different from the …","","the number of entries allowed in the leadership logs, …","If none provided, CORS responses won’t be cached","The number of times to retry bootstrapping from trusted …","Limit on the number of simultaneous client connections. If …","Limit on the number of simultaneous connections. If not …","This setting is not used and is left for backward …","setting of the mempool, fragment logs and related data","if no gossip has been received in the last interval, try …","the time interval with no blockchain updates after which …","File with the secret key used to advertise and …","","","setting for the policy","","Path to server private key file, must be PKCS8 with single …","The public address to which other peers may connect to","","","","","","","","","","Enables TLS and disables plain HTTP if provided","","","","","","","","","","","the rendezvous points for the peer to connect to in order …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","contains addrs of nodes which we can accept fragments from","","","The network static configuration settings","The limit on the number of simultaneous P2P client …","The limit on the number of simultaneous P2P connections …","The default timeout for connections","","","","","represent a connection peer","","Protocol to use for a connection.","","Trusted peer with DNS address resolved.","","","","","Whether to allow non-public IP addresses in gossip","Whether to limit bootstrap to trusted peers (which …","","","","","","","","","","","","","","","","","","","","","","","the connection to connect to","connection to listen to and start accepting connection from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the listener configuration, if the options …","Local socket address to listen to, if different from …","","Maximum allowed number of client connections.","Maximum allowed number of peer connections.","","","","","","Network protocol to use for this connection.","Network protocol to use for this connection.","the protocol to utilise for the p2p network","","","","","","","Whether to skip bootstrap, not recommended in normal …","","a timeout in case of inactivity or timout between request.","timeout of the connected peers. Will be set for when/if we …","the default value for the timeout for inactive connection","","","","","","","list of trusted addresses","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to fetch the block0_id from the HTTP base URL …","","","loading the block 0 is not as trivial as it seems, there …","prepare the block storage from the given settings","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Unique identifier of a node in the topology","object holding the P2pTopology of the Node","This represents a peer and its public key used for …","","","Forgive nodes we demoted after some time","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","limits for the property::{Serialize/Deserialize} …","","","","","","","","","","","A report will be lifted after ‘report_duration’","To avoid cycling down nodes back and and forth(and as such …","","","","","","","","","","","","","topics definition for p2p interest subscriptions","module defining the p2p topology management objects","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Check if the bind address is a global address Note: This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","This layer always return a view containing only a subset …","","","","","","","actual peers that are known to the topology","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","the preferred peers list","","","a pseudo random number generator, this will help with …","","","","","","","","","","","","","","the max number of entries to add in the list of the view","","","","","","","","This layer is very similar to poldercast::Rings, but …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","the max number of entries to add in the list of the view","","","","","","","","","","","","","","","","","","","","limit the gossip size to 512 bytes (limit per gossip).","limit the ID size to 32 bytes. Right now the Node ID are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","default number of records is 24_000","default max quarantine is 2 days","default quarantine duration is 10min","","","","","","","","","","Forgive nodes we demoted after some time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A report will be lifted after ‘report_duration’","To avoid cycling down nodes back and and forth(and as such …","Returns whether the node has been quarantined or not.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","object holding the P2pTopology of the Node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","This returns the peers known to the node which are not …","","","","","","register that we were able to establish an handshake with …","","register a strike against the given peer","","","","","","","","","","","","","","","","","update our gossip so that other nodes can see that we are …","Returns a list of neighbors selected in this turn to …","","","","","Multiple producer, single-consumer in-memory FIFO channels …","","Task management","The output end of an in-memory FIFO channel.","The input end of an in-memory FIFO channel. This can be …","The error type for <code>Sender</code>s used as <code>Sink</code>s.","The error type returned from <code>try_send</code>.","","","","","","","","","Constructs an in-memory channel and returns the output and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the message that was attempted to be sent but …","","","","","","","","","Drops the message and converts into a <code>SendError</code>.","","","Returns <code>true</code> if this error is a result of the receiver …","Returns <code>true</code> if this error is a result of the receiver …","Returns <code>true</code> if this error is a result of the channel …","Returns <code>true</code> if this error is a result of the channel …","","","","","","Polls the channel to determine if there is guaranteed to …","","","","","Sends a message on the channel.","","","","","","","","","","","","","","","","Sends a message over the channel.","","","","","","","","","","","","","","","","","Schedule for fire-forget tasks","","","","","","","","","","","","","","","","","","","","","","","","Size of command channel between <code>FireForgetScheduler</code> and …","","","","","Declares all tasks with given TID completed. Queued …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","How many tasks can be run in parallel","","How many tasks with the same TID can be run in prallel","Launcher controls how tasks will be started. It must be …","","","","","","Schedules a task to be launched. If task with same TID and …","","","","","","","","","","Launched task timeout after which it’s considered failed …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Input for the different task with input service","input for the task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wrap up a service","","","hold onto the different services created","the service has been required to shutdown","","the current future service information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","get the name of this Service","get the name of this Service","this is the name of the service task, useful for logging …","","create a new set of services","","","","","","Access the service’s handle","","","","Access the parent service span","","spawn a std::future within the service’s tokio handle","just like spawn but instead log an error on Result::Err","Spawn the given Future in a new dedicated runtime","Spawn the given Future in a new dedicated runtime","just like spawn but add a timeout","just like spawn_failable but add a timeout","","","","","","","","","","","","","","","","","","","","","get the time this service has been running since","get the time this service has been running since","provides us with information regarding the up time of the …","","","","","","","","select on all the started services. this function will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,574,575,574,575,0,0,2,1,1,2,12,0,0,2,12,2,12,0,0,2,12,1,574,575,2,12,1,574,575,1,0,0,2,12,1,2,12,1,574,575,2,12,1,574,575,0,2,12,1,574,575,0,2,12,1,574,575,2,12,1,574,575,0,2,12,0,0,2,12,1,574,575,2,2,12,12,1,1,574,574,575,575,0,0,0,0,0,0,0,0,0,2,1,0,2,12,1,0,0,0,0,1,0,0,2,12,1,574,575,2,12,1,574,575,2,12,1,574,575,0,2,12,1,574,575,0,54,54,0,125,57,0,0,0,0,54,0,0,54,0,0,83,0,0,0,54,0,54,0,0,54,58,0,0,54,33,33,54,0,0,64,64,58,0,125,57,0,0,0,0,0,0,0,0,0,0,0,0,0,33,54,58,0,0,0,0,0,54,83,33,0,64,86,86,86,86,86,125,33,64,33,54,54,33,33,54,33,54,54,54,54,54,54,54,0,54,0,54,33,33,54,54,54,57,33,33,0,0,33,33,33,19,19,28,19,24,27,28,19,19,35,19,19,19,19,19,19,19,19,19,19,19,19,19,19,8,54,55,34,56,30,57,58,19,27,59,27,57,27,57,19,91,69,69,0,57,57,57,35,31,35,57,57,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,27,19,8,57,57,19,31,19,27,27,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,34,27,59,57,30,30,0,73,31,19,31,8,8,8,57,19,68,19,73,24,56,65,70,27,19,19,19,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,57,8,57,27,8,54,56,57,19,27,69,19,28,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,30,80,8,57,73,73,34,8,54,55,34,56,30,66,67,57,58,69,19,27,64,59,8,54,55,34,56,30,66,67,57,58,69,19,27,64,59,73,19,73,19,28,35,34,83,83,86,86,8,31,54,55,34,34,56,30,57,68,68,58,69,19,35,70,28,27,27,64,64,59,59,8,8,65,367,122,115,116,114,474,482,91,91,125,73,24,83,83,83,86,8,31,54,54,54,54,54,54,54,54,55,34,34,34,56,56,56,30,30,65,66,67,57,68,58,69,19,19,35,70,28,27,27,27,27,64,59,59,34,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,57,34,34,58,24,66,67,91,24,58,115,116,57,57,57,34,27,59,24,58,19,57,19,19,19,34,57,27,59,8,8,8,68,8,66,67,57,57,68,59,19,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,0,73,24,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,122,122,367,367,122,122,115,115,116,116,114,114,474,474,482,482,91,91,125,125,73,73,24,24,83,83,86,86,8,8,31,31,54,54,55,55,34,34,56,56,30,30,65,65,66,66,67,67,57,57,68,68,58,58,69,69,19,19,35,35,70,70,28,28,27,27,64,64,59,59,122,30,73,56,30,19,30,69,19,35,30,19,19,19,122,73,24,56,65,19,28,122,34,59,34,482,367,24,59,19,28,8,57,34,27,59,19,57,83,86,64,56,65,65,19,70,70,70,27,27,8,54,56,57,19,27,8,54,56,57,27,115,116,122,122,122,115,116,28,28,19,35,19,474,482,115,116,57,576,8,34,576,8,83,27,73,28,576,8,24,24,19,19,27,27,27,58,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,57,83,86,34,68,27,64,59,58,19,19,19,28,28,19,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,27,64,59,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,19,19,19,19,19,73,8,57,19,482,367,122,115,116,114,474,482,91,125,73,24,83,86,8,31,54,55,34,56,30,65,66,67,57,68,58,69,19,35,70,28,27,64,59,27,54,152,54,152,0,54,152,54,152,92,0,54,152,54,152,54,152,54,152,0,54,152,151,92,54,152,151,54,152,54,152,54,152,54,152,54,152,54,152,54,152,54,152,54,152,0,54,152,54,152,92,54,152,54,152,92,0,0,54,152,54,152,54,152,92,151,152,152,153,92,151,152,153,92,151,152,153,92,151,152,153,92,151,152,153,92,151,152,153,92,151,152,153,92,151,152,153,92,151,152,92,151,152,92,92,151,152,92,92,151,151,152,152,153,92,151,152,153,152,152,152,153,92,151,152,153,92,151,152,153,153,92,92,151,151,152,152,153,153,152,153,153,153,153,153,153,92,153,92,151,152,153,92,92,151,152,152,153,92,151,152,153,92,151,152,153,92,151,152,153,577,578,577,578,577,578,577,578,196,193,175,175,175,175,193,162,175,162,193,175,0,162,0,0,175,193,0,0,0,193,187,0,0,196,175,162,0,175,0,196,193,175,0,175,0,163,163,162,0,175,193,187,0,175,0,0,0,175,185,157,166,166,0,0,0,158,0,0,0,0,0,0,161,161,166,166,161,198,185,165,161,157,0,166,0,185,161,165,0,157,0,172,0,165,157,9,0,165,166,0,157,9,165,161,0,166,579,579,580,581,581,0,162,162,162,0,0,0,162,0,0,162,0,162,162,162,162,162,162,162,162,162,162,162,162,162,0,162,0,162,162,162,162,162,162,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,0,0,173,173,0,0,0,0,173,0,173,0,0,0,0,173,0,176,173,176,173,0,0,176,173,176,173,176,173,173,173,176,173,173,173,176,176,173,176,173,176,176,173,173,0,176,176,176,176,173,173,176,173,176,173,176,173,176,173,176,173,178,178,0,178,178,178,178,178,178,178,178,178,178,178,178,178,178,0,0,0,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,0,175,175,175,175,174,175,175,0,0,175,174,0,187,0,0,184,0,196,175,0,175,0,0,196,175,184,174,175,0,0,0,0,175,187,175,0,0,175,182,157,157,157,157,157,157,185,157,157,171,196,183,185,184,165,182,171,175,174,157,187,196,183,185,184,165,182,171,175,174,157,187,157,171,184,157,187,157,187,157,196,183,185,184,165,182,171,175,174,157,187,196,183,185,184,165,182,171,175,174,157,187,196,183,185,184,165,182,171,175,174,157,187,183,183,187,187,175,175,174,174,196,183,185,184,165,182,171,175,175,175,175,175,175,175,175,174,174,157,187,157,187,157,157,157,157,183,183,196,183,185,184,165,182,171,175,174,157,187,196,183,185,184,165,182,171,175,174,157,187,196,196,183,183,185,185,184,184,165,165,182,182,171,171,175,175,174,174,157,157,187,187,171,171,171,185,165,157,157,157,157,182,157,0,185,184,183,157,157,0,183,165,175,174,157,182,165,157,175,174,171,165,157,157,157,182,183,165,157,187,175,174,196,183,185,184,165,182,171,175,174,157,187,196,183,185,184,165,182,171,175,174,157,187,196,183,185,184,165,182,171,175,174,157,187,196,183,185,184,165,182,171,175,174,157,187,0,582,583,582,583,579,579,580,581,581,0,0,0,0,163,163,163,163,0,163,163,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,0,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,0,0,0,0,0,0,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,166,201,0,166,201,166,201,166,201,0,0,166,201,166,201,166,201,166,201,166,201,166,201,201,201,166,201,166,201,166,166,201,201,0,166,201,0,0,0,0,0,0,0,201,201,0,0,0,201,201,166,201,201,166,201,166,201,166,201,166,201,166,201,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,0,0,0,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,0,0,0,193,193,193,0,0,0,193,193,0,0,0,0,0,193,214,193,0,214,0,9,213,193,9,214,213,193,9,214,9,9,213,193,9,214,213,193,9,214,213,213,193,9,214,9,9,9,193,193,214,214,213,193,193,9,214,214,214,9,9,9,9,9,9,9,9,9,213,213,193,9,214,213,193,9,214,213,213,193,193,9,9,214,214,9,9,193,214,9,9,9,9,193,214,9,9,9,9,193,214,213,193,9,214,213,193,9,214,213,193,9,214,213,193,9,214,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,220,220,158,220,158,158,158,220,158,220,158,220,158,220,158,220,158,220,220,158,220,158,158,220,158,220,158,220,220,158,158,220,158,220,220,220,220,220,220,220,158,220,158,220,158,220,220,158,220,158,220,158,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,222,222,222,222,222,222,0,0,0,0,0,0,0,0,0,222,222,222,222,0,0,222,222,222,222,222,225,225,0,0,225,0,0,225,0,225,225,224,224,224,224,224,224,230,226,225,224,230,226,225,226,226,224,224,230,226,225,224,230,226,225,224,224,230,226,225,230,225,225,224,230,226,225,226,224,224,224,230,226,225,224,230,226,225,224,224,230,230,226,226,225,225,230,230,230,224,226,224,224,225,224,224,224,224,224,224,224,224,224,224,224,224,224,230,226,224,226,225,230,230,224,230,226,225,224,224,230,226,225,224,230,226,225,224,230,226,225,232,0,0,232,0,231,231,232,231,227,232,231,227,227,227,227,232,231,227,232,231,227,232,231,227,231,231,227,227,232,231,227,227,0,232,231,227,232,231,227,232,232,231,231,227,227,227,227,231,227,231,227,231,227,232,231,227,232,231,227,232,231,227,232,231,227,33,33,0,0,33,0,33,33,33,0,0,33,33,33,0,33,33,33,33,33,33,33,235,235,33,33,33,33,33,33,33,235,235,33,33,33,33,236,0,33,33,33,235,235,235,33,33,33,33,33,33,33,33,33,0,240,257,240,240,257,240,0,240,257,0,235,0,33,33,33,33,33,33,33,0,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,0,0,0,0,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,242,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,242,240,242,240,240,242,240,242,240,242,240,242,242,240,242,240,242,240,0,240,242,240,240,242,242,0,0,240,240,240,240,240,240,240,242,240,240,240,240,242,242,240,242,240,242,240,242,240,240,242,0,0,0,0,0,252,584,254,255,249,252,584,254,255,249,249,249,249,252,252,584,254,255,249,252,584,254,255,249,252,584,254,255,249,255,254,249,254,249,252,584,254,255,249,249,254,254,252,249,252,252,584,254,255,249,255,252,584,254,255,249,252,252,584,584,254,254,255,255,249,249,584,252,255,255,255,252,255,584,249,252,584,252,252,255,255,252,249,252,584,254,255,249,252,584,254,255,249,252,584,254,255,249,249,584,252,584,254,255,249,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,256,256,0,257,256,257,256,257,256,257,256,257,256,256,256,257,256,256,0,257,256,257,256,257,257,256,256,257,257,257,0,257,256,256,257,256,257,256,257,256,257,256,257,256,0,0,0,0,0,0,0,0,0,0,0,585,263,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247,585,263,585,585,0,263,585,586,258,263,262,247,585,586,258,263,262,247,586,258,585,586,258,263,262,247,585,586,258,263,262,247,585,586,258,263,262,247,247,585,586,258,263,262,247,585,586,258,263,262,247,585,586,258,263,262,247,585,585,586,586,258,258,263,263,262,262,247,247,586,262,258,586,587,258,262,0,585,586,258,263,262,247,585,586,258,263,262,247,585,586,258,263,262,247,585,586,258,263,262,247,588,589,388,168,270,0,190,0,0,0,0,0,0,168,0,388,0,270,223,223,202,223,190,202,190,270,168,388,388,388,0,0,0,0,0,0,168,0,206,206,202,388,202,0,223,223,223,202,190,0,0,0,0,0,0,0,0,0,0,0,190,190,0,0,0,388,0,275,276,189,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,217,189,189,265,265,189,189,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,189,189,267,267,223,189,189,269,216,216,217,265,205,190,270,202,273,267,275,276,277,272,223,168,388,206,189,189,189,269,216,217,265,205,190,270,202,265,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,277,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,273,275,267,273,273,267,267,275,275,276,276,277,277,272,272,223,223,168,168,388,388,206,206,189,189,269,269,216,216,217,217,265,265,205,205,190,190,270,270,202,202,267,205,276,276,277,277,189,267,275,217,272,189,273,275,272,265,276,277,272,265,276,277,272,265,265,267,189,216,273,276,205,269,217,205,269,217,269,272,269,265,267,189,272,265,217,0,0,265,267,189,216,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,273,275,276,277,265,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,0,189,276,273,267,275,276,277,272,223,168,388,206,189,269,216,217,265,205,190,270,202,590,590,590,591,591,592,592,591,591,592,592,592,0,279,0,279,0,279,279,279,279,279,279,279,279,279,281,279,281,279,281,279,281,279,281,279,279,279,281,279,279,279,279,279,279,279,281,279,281,279,281,281,279,279,281,279,279,0,279,281,279,281,279,281,279,281,279,282,0,0,0,0,0,0,0,293,300,293,300,0,293,300,283,287,0,293,300,287,293,300,0,293,300,293,293,300,293,300,293,0,282,0,0,0,0,282,283,282,283,282,283,282,283,282,283,282,283,282,283,282,282,282,283,282,283,282,283,283,282,283,282,282,283,283,283,282,283,283,283,282,283,282,282,283,282,283,282,283,282,283,0,0,0,0,0,0,0,0,288,0,0,0,288,288,286,287,288,286,287,288,286,287,288,286,287,288,288,286,287,288,286,287,288,288,286,287,288,288,288,288,286,287,288,286,287,288,288,288,286,287,288,286,0,287,286,287,288,286,286,287,287,288,288,286,287,286,287,286,287,286,288,288,286,287,286,287,288,286,287,288,286,287,288,286,287,288,286,287,288,593,593,593,594,0,0,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,294,294,294,0,294,0,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,293,293,293,293,293,293,293,293,300,293,300,296,293,300,294,296,293,300,294,293,293,296,293,300,294,296,293,300,294,296,293,300,294,293,300,293,293,296,293,293,293,294,294,296,293,300,294,294,294,296,293,300,294,296,296,293,300,294,296,296,293,293,300,300,294,294,296,293,300,293,293,300,0,294,293,300,293,293,293,300,293,293,294,293,293,300,293,294,0,296,293,300,294,296,293,300,294,296,293,300,294,296,293,300,294,293,293,595,596,0,0,0,0,0,0,302,303,207,303,207,303,207,303,207,303,207,0,207,302,207,302,207,302,302,207,207,207,302,207,302,207,302,207,302,207,302,207,207,302,207,302,207,207,302,302,0,0,303,207,303,207,303,207,303,207,303,207,303,207,303,207,207,207,302,207,302,207,302,207,302,0,305,305,305,305,305,305,0,305,305,305,305,305,305,0,0,0,305,305,305,305,305,597,597,597,305,597,305,597,305,597,0,597,597,597,305,305,597,305,597,305,597,305,597,305,597,305,597,305,597,305,305,597,597,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,597,305,0,305,597,305,597,305,305,305,597,305,305,597,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,316,319,0,0,0,318,318,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,316,0,0,310,311,0,0,312,308,311,310,321,327,308,317,318,319,312,316,311,310,321,327,308,317,318,319,312,316,0,317,327,0,311,310,311,312,311,312,0,310,0,310,321,0,310,311,310,321,327,308,317,318,319,312,316,311,310,321,327,308,317,318,319,312,316,310,311,310,321,327,308,317,318,319,312,316,0,317,317,318,318,319,319,316,316,311,310,321,327,308,317,318,318,318,319,312,316,311,312,321,327,0,0,0,310,311,310,321,327,308,317,318,319,312,316,308,327,311,310,321,327,308,317,318,319,312,316,311,311,310,310,321,321,327,327,308,308,317,317,318,318,319,319,312,312,316,316,0,310,0,310,321,0,310,310,0,321,310,0,317,318,319,316,0,0,0,317,317,318,310,321,310,321,310,0,0,321,311,312,317,318,319,316,311,312,311,0,311,310,321,327,308,317,318,319,312,316,311,310,321,327,308,317,318,319,312,316,311,310,321,327,308,317,318,319,312,316,311,310,321,327,308,317,318,319,312,316,327,598,0,0,0,309,309,0,0,0,0,309,309,309,0,309,309,0,0,0,0,0,309,309,309,309,309,0,309,309,309,309,309,309,309,309,309,309,309,309,309,0,309,309,309,309,309,309,309,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,329,329,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,328,328,333,335,335,335,332,333,328,329,335,332,333,328,329,335,332,335,329,329,0,0,335,332,333,328,329,335,332,333,328,329,335,332,333,328,329,335,333,335,332,333,328,329,329,335,333,335,335,335,335,335,332,333,328,329,335,335,332,333,328,329,335,335,335,332,332,333,333,328,328,329,329,335,333,335,335,335,335,335,335,335,335,335,335,335,332,329,335,332,333,328,329,335,332,333,328,329,335,332,333,328,329,335,335,332,333,328,329,338,0,0,0,338,338,0,0,0,0,338,338,338,338,0,0,0,338,338,338,340,339,338,340,339,338,0,340,339,338,340,339,338,340,339,338,338,338,340,339,338,340,339,338,340,339,338,339,340,340,339,339,338,338,0,339,338,340,339,338,339,338,340,340,339,338,340,339,338,339,340,339,338,0,340,339,338,599,599,0,0,0,0,344,380,0,380,344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,349,0,0,0,349,349,0,0,349,349,349,349,0,0,349,349,0,349,0,349,349,349,349,349,349,349,349,349,349,349,349,349,349,600,600,601,602,603,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,357,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,604,356,0,0,0,0,0,604,0,357,356,604,356,0,0,356,353,360,334,334,334,364,355,604,334,361,353,359,356,357,315,358,360,364,355,604,334,361,353,359,356,357,315,358,360,334,353,355,334,353,355,356,357,358,356,357,358,358,358,355,315,358,364,355,604,334,361,353,359,356,357,315,358,360,364,355,604,334,361,353,359,356,357,315,358,360,355,355,364,355,604,334,361,353,359,356,357,315,358,360,356,356,315,359,356,356,358,360,334,334,364,355,604,334,361,353,359,356,357,315,358,360,356,357,358,353,353,334,334,334,360,353,364,355,604,334,361,353,359,356,357,315,358,360,353,364,364,355,604,334,361,353,359,356,357,315,358,360,361,359,364,364,355,355,604,604,334,334,361,361,353,353,359,359,356,356,357,357,315,315,358,358,360,360,364,364,355,355,359,359,359,358,358,358,358,358,358,358,361,353,334,353,361,0,315,315,315,361,364,364,353,353,353,353,353,353,353,353,334,334,353,353,334,334,334,353,353,355,360,355,334,334,353,334,334,334,353,334,353,356,357,358,356,364,355,604,334,361,353,359,356,357,315,358,360,364,355,604,334,361,353,359,356,357,315,358,360,364,355,334,334,334,364,355,604,334,361,353,359,356,357,315,358,360,355,334,353,358,358,358,0,364,355,604,334,361,353,359,356,357,315,358,360,0,0,373,372,0,373,0,0,362,362,374,372,362,375,373,374,372,362,375,373,374,362,362,362,372,362,373,375,372,362,375,372,372,362,375,373,374,372,362,375,373,374,372,362,375,373,374,362,372,362,362,372,362,375,373,374,372,362,372,362,372,362,375,373,374,374,372,362,375,373,374,372,372,362,362,375,375,373,373,374,374,362,362,362,375,362,362,362,372,374,362,362,375,375,362,374,372,362,375,373,374,372,362,375,373,374,372,362,375,373,374,375,374,372,362,375,373,374,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,0,376,376,376,376,376,376,376,0,0,376,376,376,376,376,376,376,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,389,0,0,0,386,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,386,386,389,386,387,389,390,386,383,384,387,389,390,386,383,384,383,383,384,384,387,389,390,386,383,384,387,389,390,386,383,384,387,389,390,386,383,384,0,386,387,389,390,386,383,384,387,390,383,0,387,389,390,386,383,384,387,389,390,386,383,384,387,387,389,389,390,390,386,386,383,383,384,384,387,390,383,387,387,390,383,387,390,383,390,387,390,383,387,390,383,384,383,387,390,383,387,383,387,390,383,383,0,0,0,387,383,383,384,387,390,383,386,387,389,390,386,383,384,387,389,390,386,383,384,387,389,390,386,383,384,387,389,390,386,383,384,605,606,606,607,607,0,0,0,0,0,0,0,0,0,0,0,392,396,392,396,392,392,392,396,396,392,396,392,0,396,392,0,396,392,392,396,392,396,392,396,396,392,392,396,0,0,0,0,396,392,396,392,396,392,396,392,0,0,396,392,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,0,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,0,0,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,397,398,398,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,0,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,435,435,435,435,435,435,435,435,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,435,435,435,435,0,0,435,435,435,435,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,437,437,437,0,437,437,437,437,437,437,0,0,0,0,0,0,0,0,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,437,437,437,437,0,0,0,0,0,437,0,437,437,437,437,437,437,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,0,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,0,0,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,455,455,456,456,457,457,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,466,467,467,0,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,455,456,457,458,459,460,461,462,463,464,465,466,467,0,0,0,0,0,0,0,468,468,468,468,468,468,468,468,0,0,0,0,0,468,468,468,468,0,468,468,468,468,0,0,0,0,0,0,0,0,0,0,0,0,0,471,471,0,471,471,471,471,0,0,0,0,0,0,0,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,0,0,0,0,0,471,471,471,471,0,0,471,471,471,471,471,471,471,0,479,0,479,0,0,0,0,473,473,478,475,476,477,473,478,479,475,476,477,473,478,479,475,476,477,473,478,475,476,477,473,478,475,476,477,473,478,479,475,476,477,473,478,479,475,476,477,473,475,476,477,473,478,479,0,479,479,475,476,477,473,478,479,479,479,475,476,477,473,478,473,473,475,476,477,473,478,479,475,476,477,473,478,479,475,475,476,476,477,477,473,473,478,478,479,479,473,476,479,476,475,479,475,476,477,473,478,479,475,476,477,473,478,479,475,476,477,473,478,479,475,476,477,473,478,479,476,475,476,477,473,478,479,0,0,0,295,285,284,295,285,284,284,284,284,284,285,285,295,295,285,284,295,285,284,295,285,284,285,285,285,295,285,284,284,295,285,284,295,285,284,295,295,285,285,284,284,284,285,285,284,285,295,285,285,284,295,285,284,295,285,284,295,285,284,295,285,284,0,0,0,483,0,0,483,484,0,0,484,483,484,483,483,483,0,484,484,483,484,483,484,483,483,484,483,483,489,484,483,484,483,484,484,483,483,489,489,489,489,0,489,489,489,0,489,489,483,489,484,483,484,483,484,483,484,483,0,0,0,0,486,487,488,489,486,487,488,489,486,486,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,489,486,487,488,489,486,487,488,489,486,487,488,489,486,486,487,487,488,488,489,489,489,487,488,486,489,489,489,0,489,486,486,489,489,486,489,489,486,489,489,486,0,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,486,487,488,489,0,0,0,0,0,497,500,500,500,500,496,0,0,0,0,0,0,0,0,496,497,497,499,499,496,497,498,500,499,496,497,498,500,496,497,498,496,497,498,496,497,498,499,496,497,498,500,499,496,497,498,500,496,497,499,499,496,497,498,500,496,497,498,496,497,498,496,496,497,498,500,500,498,499,496,497,498,500,496,497,498,496,497,499,496,497,498,500,498,499,496,497,498,500,499,499,496,496,497,497,498,498,500,500,498,498,500,496,497,500,496,497,498,496,500,498,499,496,497,498,500,499,496,497,498,500,499,496,497,498,500,499,496,497,498,500,608,608,609,0,0,0,0,505,505,0,0,0,0,505,505,505,505,0,0,0,0,0,0,0,0,0,0,504,504,504,10,10,10,509,501,502,503,395,504,505,10,509,501,502,503,395,504,505,395,501,502,503,395,504,501,502,503,395,504,509,0,509,502,501,504,10,509,501,502,503,395,504,505,10,509,501,502,503,395,504,505,501,502,503,395,504,10,509,501,502,503,395,504,505,502,503,395,504,502,503,395,504,501,502,503,395,504,505,505,10,509,501,502,503,395,504,505,505,505,505,505,505,501,502,503,395,504,0,10,509,501,502,503,395,504,505,10,509,501,502,503,395,504,505,10,10,509,509,501,501,502,502,503,503,395,395,504,504,505,505,10,509,10,502,503,509,501,509,504,10,0,10,10,501,501,395,505,0,10,509,10,10,501,502,503,395,504,505,10,502,501,502,503,395,504,505,10,509,501,502,503,395,504,505,10,509,501,502,503,395,504,505,509,10,509,501,502,503,395,504,505,10,509,501,502,503,395,504,505,0,0,0,0,0,0,0,0,0,0,0,0,0,494,515,504,504,504,518,513,518,511,494,518,512,513,514,515,516,517,511,494,518,512,513,514,515,516,517,395,511,494,512,513,514,515,516,517,511,494,512,513,514,515,516,517,513,502,511,513,514,515,516,511,494,518,512,513,514,515,516,517,511,494,518,512,513,514,515,516,517,511,494,518,512,513,514,515,516,517,515,511,494,518,512,513,514,515,516,517,517,512,516,517,512,516,517,0,511,494,518,512,513,514,515,516,517,512,511,494,518,512,513,514,515,516,517,511,494,512,513,514,515,516,517,515,518,494,511,494,518,512,513,514,515,516,517,511,494,518,512,513,514,515,516,517,511,511,494,494,518,518,512,512,513,513,514,514,515,515,516,516,517,517,518,513,518,512,502,503,515,518,516,504,514,515,515,515,518,515,518,514,512,518,513,511,395,515,518,518,511,494,512,516,517,518,518,502,511,494,512,513,514,515,516,517,511,512,514,511,494,518,512,513,514,515,516,517,511,494,518,512,513,514,515,516,517,511,494,518,512,513,514,515,516,517,511,494,518,512,513,514,515,516,517,515,0,0,0,0,0,0,519,520,0,519,0,0,0,520,0,510,320,350,307,307,307,519,320,350,307,510,520,519,320,350,307,510,520,519,320,350,307,510,519,320,350,307,510,320,350,519,320,350,307,510,520,519,320,350,307,510,520,519,320,350,307,519,320,350,307,510,520,519,320,350,519,320,350,519,320,350,520,520,519,320,350,307,510,520,520,519,320,350,307,510,519,510,307,519,510,307,510,519,320,350,307,510,520,519,320,350,307,510,520,519,519,320,320,350,350,307,307,510,510,520,520,307,307,307,307,307,307,307,320,350,307,307,320,350,307,520,307,510,519,320,350,307,520,320,350,307,519,320,350,307,510,520,307,519,320,350,307,510,520,519,320,350,307,510,520,519,320,350,307,510,520,519,320,350,307,510,520,307,320,0,0,0,0,522,3,3,3,522,3,0,0,0,0,0,0,0,0,0,3,3,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,610,610,611,612,611,612,522,3,3,3,522,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,522,3,522,3,3,522,3,522,3,522,3,522,522,3,3,522,3,3,3,3,3,3,3,3,3,3,3,522,3,522,3,522,522,3,3,522,3,3,522,3,522,3,522,3,522,3,522,3,610,610,611,612,611,612,0,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,524,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,445,203,203,445,203,445,203,445,203,445,527,203,445,203,445,203,445,203,203,445,203,445,203,203,445,203,203,445,445,203,445,203,445,0,203,445,445,203,445,527,203,445,203,203,445,445,552,445,0,0,548,548,527,558,0,0,552,548,548,445,549,549,549,549,558,203,445,0,527,552,445,203,445,203,0,0,552,527,203,203,445,203,445,203,445,203,445,0,0,0,529,529,385,385,528,529,385,528,529,385,528,385,528,385,528,529,385,528,529,385,385,385,528,529,385,528,385,528,385,528,385,528,529,529,385,385,528,528,528,529,529,529,385,528,385,385,385,385,385,528,529,385,528,529,385,385,528,528,529,529,385,0,529,385,529,385,528,529,385,528,529,385,528,529,385,528,529,385,528,529,0,0,0,0,541,533,533,533,533,533,533,533,533,533,533,533,533,533,541,534,0,533,0,533,533,533,533,533,534,533,0,0,535,534,535,534,534,534,535,535,534,535,534,535,534,535,534,534,535,534,535,534,535,535,534,534,535,535,535,534,535,535,535,535,535,535,534,535,534,535,534,535,534,535,535,535,534,535,534,0,0,0,0,0,0,541,542,541,507,542,541,507,541,541,541,542,541,507,542,541,507,542,541,507,507,507,542,541,507,541,542,541,507,542,542,541,507,542,542,541,541,507,507,541,542,542,0,542,507,542,542,542,542,542,541,507,542,541,541,507,542,541,507,542,541,507,542,542,542,541,507,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,546,527,546,527,527,546,527,546,527,546,527,546,527,546,546,546,527,527,546,546,527,546,546,527,527,546,527,546,546,0,527,546,527,546,527,546,527,546,527,546,527,0,0,0,0,0,0,0,0,0,0,0,551,551,0,0,0,0,551,551,549,547,548,551,549,547,548,547,548,547,548,549,548,551,549,547,548,551,549,547,548,548,551,549,547,548,547,548,551,549,547,548,549,547,548,551,549,547,548,551,549,547,548,551,551,549,549,547,547,548,548,549,548,548,547,548,548,549,549,549,549,549,547,549,549,548,547,548,551,549,547,548,551,549,547,548,551,549,547,548,551,549,547,548,0,0,0,0,0,0,0,0,553,0,553,0,0,0,0,0,0,0,553,553,0,555,0,0,552,558,552,553,555,558,552,553,555,553,553,553,553,558,552,553,555,555,558,552,553,555,558,552,553,555,558,552,553,553,555,558,552,553,555,552,558,552,553,555,558,558,552,552,553,553,555,555,552,552,552,552,552,552,552,558,552,552,552,0,558,552,552,558,552,553,555,558,552,553,555,558,552,553,555,552,552,558,552,553,555,0,0,0,0,0,0,0,192,191,200,169,192,191,200,169,0,192,191,200,192,191,200,192,191,200,169,192,191,200,169,192,191,200,169,192,191,192,191,191,192,192,191,191,200,169,192,191,200,169,192,191,200,192,191,200,169,192,191,200,169,191,192,192,191,191,200,200,169,169,191,169,169,192,191,192,191,192,200,169,200,169,200,200,192,191,169,200,200,192,191,200,192,191,192,191,200,169,192,191,200,169,169,200,192,191,200,169,191,192,191,200,169,0,560,560,568,0,0,0,0,0,568,0,0,560,559,566,204,568,564,565,561,560,559,566,204,568,564,565,561,560,204,204,566,559,559,564,559,204,559,559,566,204,568,564,565,561,560,559,566,204,568,564,565,561,560,559,566,204,568,564,565,561,560,560,560,559,566,204,568,564,565,561,560,560,560,204,559,566,204,568,564,565,561,560,559,566,204,568,564,565,561,560,559,559,559,566,566,204,204,568,568,564,564,565,565,561,561,560,560,564,565,565,564,565,564,559,566,559,566,559,559,559,560,559,559,204,559,559,204,560,559,564,565,561,559,566,565,559,204,564,560,564,559,566,204,568,564,565,561,560,559,566,204,568,564,565,561,560,559,559,204,559,566,204,568,564,565,561,560,564,559,566,204,568,564,565,561,560,564,565,561,613,614,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,523,0,615,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,523,0,523,0,0,615,0,0,14,14,570,167,569,615,523,14,570,167,569,615,523,569,569,14,570,167,569,615,523,14,570,167,569,615,523,14,570,167,569,615,523,14,523,523,14,570,167,569,615,523,569,167,14,570,167,569,615,523,14,570,167,569,615,523,14,14,570,570,167,167,569,569,615,615,523,523,570,167,570,167,14,570,523,167,167,14,167,569,14,523,167,167,167,167,14,14,167,167,569,523,14,570,167,569,615,523,14,570,167,569,615,523,14,570,167,569,615,523,570,167,570,167,14,570,167,569,615,523,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,616,0,573,351,351,573,573,616,351,573,616,351,351,351,573,616,351,573,616,351,573,616,351,573,616,351,351,0,573,616,351,573,616,351,573,573,616,616,351,351,351,351,351,573,573,573,351,351,573,351,351,573,616,351,573,616,351,573,616,351,573,616,351,617,617],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[[[6,[5]],7,8,9,10,11],[[4,[12,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,[13],[13],[13],[13],[13],0,[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[14,11]],0,0,[[],[[4,[1,3]]]],0,[[]],[[]],[[]],[[]],[[]],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],0,0,0,[[]],0,0,[[17,11]],0,0,0,0,0,0,0,0,[[],[[4,[3]]]],[2,[[4,[3]]]],0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,20],0,0,[19,[[23,[21,22]]]],[[[24,[19]],25,19],[[26,[19]]]],[[27,27]],[[28,29,27]],[[19,30,31],[[4,[19,32]]]],[[19,33,34],[[4,[19,32]]]],[[35,33],[[4,[35,32]]]],[[19,36,37,38],[[4,[19,32]]]],[[19,39],[[4,[19,32]]]],[[19,39,40,41],[[4,[19,32]]]],[[19,42,40,41],[[4,[19,32]]]],[[19,43,40,41],[[4,[19,32]]]],[19,[[4,[19,32]]]],[[19,44],[[4,[19,32]]]],[[19,25,45],[[4,[32]]]],[[19,46],[[4,[19,32]]]],[[19,25,46,40,47,34],[[4,[19,32]]]],[[19,48,40,47],[[4,[19,32]]]],[[19,29,49],[[4,[19,32]]]],[[19,45,34,50,51],[[4,[19,32]]]],[[19,52,40,53],[[4,[19,32]]]],[[],8],[[],54],[[],55],[[],34],[[],56],[[],30],[[],57],[[],58],[[],19],[[],27],[[],59],[[]],[57],[27,60],[57],[[19,59,34],[[4,[35,32]]]],0,0,0,[[58,30,61],[[4,[8]]]],[57,25],[57,62],[57,34],[35,34],0,0,[57,25],[57,58],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27],[19,63],[8],[57],[57,59],[19,59],0,0,[[27,27],[[4,[27,64]]]],[[27,27],[[4,[27,64]]]],[8,8],[31,31],[54,54],[55,55],[34,34],[56,56],[30,30],[65,65],[66,66],[67,67],[57,57],[68,68],[58,58],[69,69],[19,19],[35,35],[70,70],[28,28],[27,27],[64,64],[59,59],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[34,34],71],[[27,27],71],[[59,59],71],[57,72],[30,25],[30],0,[73,74],0,[19,75],0,[8,30],0,[8],[57],[19,34],0,0,[[73,62],34],[[],24],[[],56],[[],65],[[],70],[[],27],[19,76],0,[19,76],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[57,68],[77,[[4,[8,78]]]],[77,[[4,[57,78]]]],[77,[[4,[27,78]]]],[77,[[4,[78]]]],[77,[[4,[54,78]]]],[77,[[4,[56,78]]]],[77,[[4,[78]]]],[77,[[4,[19,78]]]],[77,[[4,[78]]]],0,[[19,79,70],[[4,[32]]]],0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[],30],[80],[8],[57],[73,62],0,0,[[8,8],63],[[54,54],63],[[55,55],63],[[34,34],63],[[56,56],63],[[30,30],63],[[66,66],63],[[67,67],63],[[57,57],63],[[58,58],63],[[69,69],63],[[19,19],63],[[27,27],63],[[64,64],63],[[59,59],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[[],63],[73,81],[19,81],0,0,0,[[35,82],19],[[],34],[[83,84],85],[[83,84],85],[[86,84],85],[[86,84],85],[[8,84],[[4,[87]]]],[[31,84],[[4,[87]]]],[[54,84],[[4,[87]]]],[[55,84],[[4,[87]]]],[[34,84],[[4,[87]]]],[[34,84],[[4,[87]]]],[[56,84],[[4,[87]]]],[[30,84],[[4,[87]]]],[[57,84],[[4,[87]]]],[[68,84],[[4,[87]]]],[[68,84],[[4,[87]]]],[[58,84],[[4,[87]]]],[[69,84],[[4,[87]]]],[[19,84],[[4,[87]]]],[[35,84],[[4,[87]]]],[[70,84],[[4,[87]]]],[[28,84],[[4,[87]]]],[[27,84],[[4,[87]]]],[[27,84],[[4,[87]]]],[[64,84],[[4,[87]]]],[[64,84],[[4,[87]]]],[[59,84],[[4,[87]]]],[[59,84],[[4,[87]]]],[8,88],[8],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[90,[89]]],91],[[]],[[]],[[]],[92,83],[[]],[86,83],[[]],[[]],[[]],[93,54],[[]],[94,54],[95,54],[96,54],[97,54],[98,54],[99,54],[[]],[[]],[100,34],[101,34],[102,56],[103,56],[[]],[[]],[65,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,19],[[]],[[]],[[]],[[]],[105,27],[106,27],[[]],[107,27],[[]],[[]],[62,59],[[62,62],34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[57,108]]]],[109,4],[109,[[4,[34,110]]]],[111,[[6,[58]]]],[[24,62]],[66,57],[67,57],0,[[24,25],[[6,[112]]]],[58,113],[[[115,[114]]]],[[[116,[114]]]],[57,[[6,[117]]]],[57,82],[57,31],[[],60],[[],60],[[],60],[[24,25],[[6,[26]]]],[58,113],[19,79],[57,[[6,[[119,[118,39]]]]]],[19,69],[19,[[4,[27,32]]]],0,[34],[57,25],[27],[59],[8],[8,57],0,0,[8],[66,25],[67,25],[57],[57,25],0,[59,59],[[19,19],[[23,[120,22]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[8,[[4,[56,86]]]],0,[[24,59,25],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[122,[121]]],[[6,[[115,[123]]]]]],[[[122,[121]]],[[6,[[116,[123]]]]]],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[[122,[121]]],[[6,[124]]]],[30,63],[[73,91,34],125],[56,[[126,[54]]]],[30,88],[19,127],[30,[[126,[33]]]],0,0,0,[30,13],[[19,128],[[4,[19,32]]]],[[19,128],[[4,[19,32]]]],0,[[58,30],[[122,[129]]]],[[62,19],73],[[],24],[[],56],[[],65],[[25,130],[[4,[19,32]]]],[70,28],[[58,25,62],[[122,[129]]]],[[34,81],34],[59,59],[34,34],0,0,[24,13],[[59,62],[[6,[59]]]],0,0,[8],[57],[[34,34],[[6,[71]]]],[[27,27],[[6,[71]]]],[[59,59],[[6,[71]]]],0,[57,131],[132],[132],[132],[[56,54]],[[65,33]],[[65,130],65],[19,27],0,[[],70],0,[[27,27],27],[[27,62],[[4,[27,64]]]],[[8,77],[[4,[133]]]],[[54,77],[[4,[133]]]],[[56,77],[[4,[133]]]],[[57,77],[[4,[133]]]],[[19,77],[[4,[133]]]],[[27,77],[[4,[133]]]],[8,13],[54,13],[56,13],[57,13],[27,13],[[[115,[123]],117],[[115,[114]]]],[[[116,[123]],119,134],[[116,[114]]]],[[[122,[135]],34],[[122,[121]]]],[[[122,[129]]],[[122,[135]]]],[[[122,[129]],25,59],[[122,[135]]]],[[[115,[114]],136],67],[[[116,[114]],137],66],[[28,119,27,27]],[[28,27]],[19,138],[35,138],0,0,0,[[[115,[123]],90],67],[[[116,[114]],90],66],[57,113],[[],[[4,[139,83]]]],[8,[[4,[139,83]]]],0,[[],[[4,[62,83]]]],[8,[[4,[62,83]]]],[83,[[6,[140]]]],[[27,62],141],[73,[[6,[79]]]],0,[[],[[4,[142,83]]]],[8,[[4,[142,83]]]],0,0,0,[19,[[23,[120,22]]]],[[27,27]],[88,27],[88,[[4,[27,64]]]],[58,[[6,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,[[143,[22]]]],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[58,111],[19,144],[19,145],0,[28,27],0,[19,27],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],[[4,[27,64]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[19,146],0,[[19,25,111],[[6,[147]]]],[19,[[149,[148]]]],0,[[73,57],150],[8],[57],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],151],[[],152],[152,109],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[92,92],[151,151],[152,152],[153,153],[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[92,92],63],[[151,151],63],[[152,152],63],[[],63],[[],63],[[],63],[[92,84],[[4,[87]]]],[[92,84],[[4,[87]]]],[[151,84],[[4,[87]]]],[[152,84],[[4,[87]]]],[[]],[78,92],[[]],[154,151],[54,152],[[]],[[]],[[]],[[]],[[]],[[]],[109,[[4,[152]]]],[109,4],[155,[[6,[152]]]],0,[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],153],[153,13],0,[153,6],[153,6],[[153,13],6],[[],156],[132],[153],[[]],[[]],[[]],[[]],[[],120],[[],4],[[],4],[[],4],[109,[[4,[152]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[157,158,[0,[159,160]],11],[[4,[[6,[[112,[161]]]],162]]]],0,0,0,0,0,0,0,[[9,161,161],163],0,0,0,0,0,0,0,0,0,0,0,0,[[164,[112,[161]],63],165],0,0,0,0,0,0,0,0,0,0,0,[[166,167,[169,[168]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[157,158,[0,[159,160]],11],[[4,[[6,[[112,[161]]]],162]]]],[[]],[[]],[13],[13],[13],[[162,84],85],[[162,84],85],[[]],[78,162],[[],13],[[]],[[],16],[[],15],[170,120],[132],[171],[162,[[6,[140]]]],[[],120],[[],4],[[],4],[[],18],[[]],0,[[]],[[]],[172,172],[[]],[13],[13],[13],[[]],[[]],[172,[[112,[161]]]],[[],13],[[]],[172,[[112,[161]]]],[[],15],[[],16],[[[112,[161]]],172],0,[[]],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[157,[169,[57]]],[[4,[173]]]],[[]],[[]],[[]],[[]],0,0,[13],[13],[13],[13],[13],[13],[[173,84],85],[[173,84],85],[[]],[[]],[174,173],[175,173],0,[[],13],[[],13],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[157,[0,[159,160]]],[[4,[[6,[[176,[[0,[159,160]]]]]],173]]]],0,0,[[[176,[[0,[159,160]]]],177],[[179,[[4,[178,173]]]]]],[[[176,[[0,[159,160]]]],57],[[4,[173]]]],[132],[173,[[6,[140]]]],0,[[],120],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[]],[[]],0,0,0,[[]],[[]],[13],[13],[13],[[]],[[],13],[[]],[[],16],[[],15],[[],4],[[],4],[[],18],[[]],0,0,0,0,[[]],[[]],[13],[13],[13],[[]],0,[[],13],[[]],[[],15],[[],16],[[[180,[[0,[159,160]]]]],[[4,[6,173]]]],[[[0,[159,160]],157],[[4,[[180,[[0,[159,160]]]],173]]]],0,[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[182,[181]],8]],[[157,183,8],[[4,[184,175]]]],[[157,185],[[4,[184,175]]]],[[157,8],[[4,[172,175]]]],[[157,183,19],[[4,[175]]]],[[157,183,8],[[4,[19,175]]]],[[157,183,19],[[112,[161]]]],0,[157,186],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[157,[[4,[[23,[172]],175]]]],0,[184,[[112,[161]]]],[157,157],[187,187],[[]],[[]],[[157,186,57,19,[112,[188]],[112,[73]],[6,[[112,[28]]]],[6,[[112,[161]]]]],[[112,[161]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,0,[[187,187],63],[[],63],[[175,84],85],[[175,84],85],[[174,84],85],[[174,84],85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[189,175],[[[191,[190]]],175],[83,175],[[]],[192,175],[174,175],[32,175],[193,175],[[]],[194,174],[[]],[[]],[[]],[[]],[[157,[112,[161]]],[[4,[175]]]],[[157,172],195],[[157,186],[[4,[[6,[[112,[161]]]],175]]]],[[157,8,187],[[4,[[112,[161]],175]]]],[183,57],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],0,0,0,0,0,0,[[157,8],[[4,[158,175]]]],[[157,8],[[4,[158,175]]]],[[157,57,63],[[4,[196,175]]]],[181,[[182,[181]]]],[[186,9,13,63],157],[[164,[112,[161]],63],165],0,[184,[[6,[[112,[161]]]]]],0,[[157,57,[112,[161]],187],[[4,[183,175]]]],[[157,57,63],[[4,[196,175]]]],[[57,57],[[4,[174]]]],0,0,[132],[132],0,0,0,0,[175,[[6,[140]]]],[174,[[6,[140]]]],0,0,[157,9],0,[[157,183,8,19],[[4,[184,175]]]],0,0,0,[[]],[[]],[[],120],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[164,186,28],197],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[62,9,161,161],63],[163,163],[[]],[[9,161,161],163],[13],[13],[13],[[163,163],63],[[],63],[[163,84],85],[[]],[[]],[[],60],[163],[[],13],[[]],[[],15],[[],16],[[163,163],[[6,[71]]]],[[]],[[],4],[[],4],[[],18],[[]],0,0,[195],[195],[[]],[[]],[195,195],[[]],[13],[13],[13],[[195,195],63],[[],63],[[195,84],85],[[]],[[]],[[],13],[[]],[195],[[],16],[[],15],[195,88],[[[112,[161]]],195],[[]],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,[[]],[[]],[198,198],[[]],[[],198],[13],[13],[13],[[]],[[]],[[198,62]],[[[198,[199]],186],[[6,[199]]]],[[198,186],[[6,[26]]]],[[],13],0,[[198,59,186],26],[[]],[[],16],[[],15],[[],198],[[]],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[157,158],[[4,[175]]]],0,0,[[]],[[]],[[]],[[]],[173,189],[[157,[112,[161]],8,200],[[4,[[6,[[112,[161]]]],175]]]],[13],[13],[13],[13],[13],[13],0,0,[[]],[[]],0,0,0,[[201,168]],[[],13],[[],13],[[]],[[]],[[],15],[[],16],[[],15],[[],16],[175,189],0,0,[[[112,[161]],[200,[[112,[161]]]],[200,[202]]],[[4,[175]]]],[[157,158,57,203,[204,[186,203,195]],[204,[186,203]]],[[4,[175]]]],[[157,[205,[57]],[204,[186,203,195]],[200,[202]]]],[[157,[200,[[112,[161]]]],[200,[202]],[200,[206]],185],[[4,[175]]]],[[157,185],[[4,[[112,[161]],175]]]],[[157,8,200,204],[[4,[[6,[[112,[161]]]],175]]]],[[157,[200,[[112,[161]]]],[200,[202]],[200,[206]],[204,[186,203]],[205,[8]],207],[[4,[175]]]],0,0,[[[200,[202]],167],[[204,[186,203]]]],[[[200,[202]],167],[[204,[186,203,195]]]],[[166,167,[169,[168]]]],[[201,[169,[168]],[169,[[112,[161]]]]]],[[201,167]],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[]],[[]],0,0,0,[161,[[23,[21]]]],[161,34],[161,186],[[]],[[]],[161,59],[161,161],[[]],[13],[13],[13],[161,[[4,[139,208]]]],[161,112],0,[161,[[6,[112]]]],0,[[]],[[]],[161,186],[161,57],0,[[],13],[[]],[[],16],[[],15],[161,[[6,[112]]]],[161,[[112,[19]]]],0,[[[26,[19]],[112,[188]],[112,[73]],[6,[[112,[28]]]],57,[6,[[112,[161]]]]],161],0,[161,209],[161,142],[161,112],0,[[]],[[],4],[[],4],[[],18],[[]],0,0,0,[[]],[[]],[210,210],[[]],[13],[13],[13],[[]],[[]],[[210,186],[[6,[[112,[161]]]]]],[[],13],0,[[210,186,[112,[161]]]],[[]],[[],16],[[],15],[13,210],[[]],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,186],[[4,[63,193]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9,9],[[]],[13],[13],[13],[13],[13],[13],[13],[13],0,[13],[13],[13],[13],[[[212,[211]],7],[[4,[9,193]]]],[[9,[23,[186]],186],[[4,[[6,[213]],193]]]],[[9,186,186],[[4,[186,193]]]],[[193,84],85],[[193,84],85],[[214,84],85],[[214,84],85],[[]],[215,193],[[]],[[]],[[]],[216,214],[193,214],[[]],[[9,62],[[4,[193]]]],[[9,186],[[4,[[6,[8]],193]]]],[[9,62],[[4,[[23,[8]],193]]]],[9,[[4,[[23,[186]],193]]]],[[9,186],[[6,[62]]]],[[9,186,62],[[4,[[6,[8]],193]]]],[[9,186],[[4,[[6,[186]],193]]]],[[9,109],[[4,[[6,[186]],193]]]],0,[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[9,186,186],63],[7,[[4,[9,193]]]],[132],[132],[[9,8],[[4,[193]]]],[[9,109,186],[[4,[193]]]],[[9,186,[6,[62]],[217,[8]]],[[4,[216]]]],[[9,186,[6,[62]],[217,[218]],[0,[219,218]]],[[4,[216]]]],[193,[[6,[140]]]],[214,[[6,[140]]]],0,0,[[9,186,186],[[4,[159,193]]]],[[]],[[],120],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[158,172],0,[220,220],[158,158],[[]],[[]],[13],[13],[13],[13],[13],[13],0,[[]],[[]],[[]],[[]],[158,[[112,[161]]]],[[],13],[[],13],[[]],[[]],[[],15],[[],16],[[],15],[[],16],[[158,157,[6,[[200,[190]]]],[6,[[200,[206]]]],207],220],[172,158],[[220,[112,[161]]],[[4,[175]]]],[[157,[112,[161]],[200,[[112,[161]]]]],[[4,[175]]]],[[220,[169,[[112,[161]]]]]],0,[[220,[112,[161]],186],[[4,[175]]]],0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[220,[23,[221]],57],[[4,[[191,[190]]]]]],[[],18],[[],18],[[220,[112,[161]],8],[[4,[175]]]],[[158,[112,[161]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[13],[13],[13],[[]],[[130,217],[[4,[216]]]],[[9,186],[[4,[8,189]]]],[158,57],[[9,[23,[186]],[217,[8]]],[[4,[216]]]],[[9,[23,[186]],[217,[57]]],[[4,[216]]]],[[9,[23,[186]],186,[217,[57]]],[[4,[216]]]],[[167,222,223]],[[9,[23,[186]],186,[217,[8]]],[[4,[216]]]],[[9,158,[23,[186]],[217,[8]]],[[4,[216]]]],[[],13],[[]],[[],16],[[],15],[[9,[23,[186]],186,[0,[219,218]],[217,[218]]],[[4,[216]]]],[[167,222,[169,[223]]]],0,[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,[224,[[4,[157,225]]]],0,[224,[[4,[158,225]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[226,226],[[]],[[],224],[13],[13],[13],[13],[13],[13],[13],[13],0,[13],[13],[13],[13],0,[[225,84],85],[[225,84],85],[[]],[[]],[[]],[[]],[[]],0,[224,[[4,[227,225]]]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],0,0,0,[[],224],[228,226],[224,229],0,[132],[224],[224,[[4,[226,225]]]],0,[[224,157]],[[224,158]],[[224,11]],[[224,227]],[[224,230]],[[224,229]],[[224,226]],[[224,7]],[224,[[4,[7,225]]]],0,0,[226],[224],[[]],[[],120],0,0,[[],4],[[],4],[[],4],[[],4],[224,[[4,[230,225]]]],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[227,227],[[]],0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[[231,84],85],[[231,84],85],[[227,84],[[4,[87]]]],[[227,84],85],[[]],[[]],[[]],[[]],[232,[[4,[60,231]]]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],[[4,[227,231]]]],0,[132],[[227,233],4],[231,[[6,[140]]]],[[]],[[],120],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],33],[[]],[[]],[33,33],[[]],[13],[13],0,0,[77,[[4,[33,78]]]],[77,[[4,[78]]]],[13],[33],0,0,[[33,33],63],[[],63],[[33,84],[[4,[87]]]],0,0,0,[234,33],[[]],[[]],[33,25],[33],[[],13],[[]],[[],16],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,[[33,77],[[4,[133]]]],[33,13],[[]],[[],4],[[],4],[[],18],[[]],0,0,0,[[]],[[]],[13],[13],0,0,[13],[235,27],0,[235,221],0,[235,13],0,[[]],[[],13],[[]],[[],16],[[],15],[33,235],[235,142],0,[[],4],[[],4],[[],18],[[]],[235,[[4,[27,64]]]],[235,13],[235,[[4,[27,64]]]],[235,13],0,0,0,0,[[]],[[]],[13],[13],[13],0,[[236,130],[[23,[63]]]],[[236,221],63],[[]],[[],13],[[236,130],13],[[236,237],63],[[]],[[],15],[[],16],[236,88],[[236,130],[[238,[221,237]]]],[[236,221,239,100]],[[236,130,239,100]],[13,236],[[236,100]],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[240],[13],[13],[13],[13],[13],[13],[[240,33,221],[[4,[241]]]],[[242,84],85],[[242,84],85],[[]],[[]],[[],13],[[],13],[[240,243,[23,[33]],63],[[4,[244,242]]]],0,[[]],[[]],[[],16],[[],15],[[],15],[[],16],[33,63],[245,63],[240,236],0,0,0,[[13,236,[200,[202]],[6,[246]],207],240],0,0,[132],[[240,100]],[[240,[23,[221]],239]],[[240,35,247,248,248]],[[240,246]],[242,[[6,[140]]]],[[],120],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[240],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[249,249],[[]],[[249,249],71],[[[252,[[0,[250,251]]]]],63],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,[[[254,[253]],254],63],[[249,249],63],[[],63],[[],63],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[[254,[251]]]],0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[255,130],23],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],0,[[[252,[[0,[250,251]]]]],13],[255,13],[255,13],0,[[],[[252,[[0,[250,251]]]]]],[13,255],0,[[249,249],[[6,[71]]]],[[[252,[[0,[250,251]]]]],6],0,[[[252,[[0,[250,251]]]],[0,[250,251]]]],[[[252,[[0,[250,251]]]]],6],[[255,130]],[255,6],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[[256,84],85],[[256,84],85],[[]],[[]],[242,256],[63],[[],13],[[],13],[[]],[[]],[[],15],[[],16],[[],16],[[],15],0,0,[[13,13,[200,[202]]],257],[211,[[4,[246,256]]]],0,[132],[256,[[6,[140]]]],[[257,167,207,[169,[190]],[6,[[212,[211]]]]],[[4,[256]]]],[[],120],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],258],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[247,84],85],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],0,0,[[],258],0,[[35,236,255,248,248],[[260,[[143,[259]]]]]],[[258,35,236,255,248,248],[[260,[[143,[259]]]]]],0,[[33,35,[261,[248]],[261,[248]],62],[[4,[262,263]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[264,[[143,[140]]]]],189],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[264,[[143,[140]]]]],189],0,[265,265],[[]],[189,266],0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[[264,[[143,[140]]]]],189],[[[264,[[143,[140]]]]],189],[[267,84],85],[[267,84],85],[[223,84],85],[[189,84],85],[[189,84],85],[[[269,[268]],84],85],[[216,84],85],[[216,84],85],[[[217,[268]],84],85],[[[265,[268]],84],85],[[[205,[268,268]],84],85],[[190,84],85],[[270,84],85],[[202,84],85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[271,189],[[]],[193,189],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[267,[[4,[189]]]],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[267,216],[205],[[],15],[[],16],[[],15],[[],16],[[[264,[[143,[140]]]]],189],[267,63],0,0,[[272,192,109],189],[[[264,[[143,[140]]]]],189],[[[260,[273]],177],[[179,[[4,[189]]]]]],[[[260,[[275,[[274,[189]]]]]],177],179],[[[260,[272]],177],[[179,[[4,[189]]]]]],[[[260,[265]],177],[[179,[4]]]],[[260,177],[[179,[[6,[4]]]]]],[[260,177],[[179,[[6,[4]]]]]],[[[260,[272]],177],[[179,[[4,[189]]]]]],[[[260,[265]],177],[[179,[4]]]],[[[260,[[276,[[274,[189]]]]]],177],[[179,[6]]]],[[[260,[277]],177],[[179,[6]]]],[[[260,[272]],177],[[179,[[4,[189]]]]]],[[265,177],[[179,[[4,[216]]]]]],[[[260,[265]],177],[[179,[4]]]],[132],[132],[132],0,0,0,[[269,[4,[189]]]],[[217,[4,[[278,[[4,[189]]]],189]]]],0,[[269,189]],[[217,189]],[269],0,0,0,[267,[[6,[140]]]],[189,[[6,[140]]]],[[[260,[272]]],[[4,[189]]]],[[[260,[265]],[4,[189]]],4],[217,265],[13],[13],[[]],[[],120],[[],120],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[260,177],179],[[260,177],179],[[260,177],[[179,[[6,[4]]]]]],[[260,177],[[179,[[6,[4]]]]]],[[265,[4,[189]]],[[4,[267]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[[264,[120]]],189],[[[276,[189]]],277],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[[279,84],85],[[279,84],85],[[]],[189,279],[[[143,[32]]],279],[280,279],[[]],[225,279],[193,279],[[[143,[[191,[190]]]]],279],[[],13],[[],13],[[]],[[]],[[],15],[[],16],[[],15],[[],16],0,[132],[279,[[6,[140]]]],[[281,5]],[[],120],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[282,282],[283,283],[[]],[[]],[13],[13],[13],[13],[13],[13],[[282,84],85],[[282,84],85],[[]],[[]],[[]],[[]],[[],13],[[],13],0,[[]],[[]],[[],15],[[],16],[[],15],[[],16],[284,283],[132],[[283,[115,[114]]],[[4,[67,282]]]],[[283,[116,[114]]],[[4,[66,282]]]],[[283,[112,[73]],62,62],[[4,[285,282]]]],[[]],[[]],[[],120],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[286,286],[287,287],[288,288],[[]],[[]],[[]],[[288,288],71],[13],[13],[13],[13],[13],[13],[289,[[4,[288]]]],[13],[13],[13],[[288,288],63],[[],63],[[288,84],[[4,[87]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[288],[[],13],[[],13],[[],13],[[286,290],[[4,[287]]]],0,0,[[]],[[]],[[]],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[286,[[23,[290]]]],0,[[286,291]],[287],[[286,291]],[287],[13,286],[[288,288],[[6,[71]]]],[[288,233],4],[[286,291,288]],[[287,288]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[13],[13],[13],0,[[]],[[],13],[[292,290],291],[[]],[[],16],[[],15],[292,88],[[292,291]],[[292,291]],[13,292],[[292,291,288]],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[293,[[4,[293,294]]]],[[293,295],[[4,[293,294]]]],[[293,296],[[4,[293,294]]]],[[293,296,248,248],[[4,[294]]]],[[293,296,297,297],[[4,[293,294]]]],[[293,[112,[73]],62,62],[[4,[293,294]]]],[293,[[4,[293,294]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[293,[[4,[209,294]]]],[293,[[4,[101,294]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,0,[[293,298],[[4,[299,294]]]],[[293,298],[[4,[297,294]]]],0,[[293,295],297],[[293,295,62],297],[[293,295],297],[[294,84],85],[[294,84],85],[[]],[[]],[[]],[[]],[189,294],[[[143,[32]]],294],[[],13],[[],13],[[],13],[[],13],[[296,293],[[6,[299]]]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],0,0,0,[300,[[4,[293,294]]]],0,0,[[[200,[190]],35,248,248],[[4,[294]]]],[132],0,0,[293,[[4,[294]]]],0,0,0,[[293,298,301],[[6,[299]]]],[[293,298,301],297],[294,[[6,[140]]]],[293,[[4,[293,294]]]],0,0,0,[[],120],[[297,297],63],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[293,[[4,[293,294]]]],[293,[[4,[299,294]]]],0,0,0,0,0,0,0,0,[[302,[112,[303]]],302],[13],[[207,13]],[13],[[207,13]],[13],[[207,13]],[13],[[207,13]],[13],[[207,13]],0,0,0,[[]],[[]],[[]],[[]],[302,207],[[],302],[207,207],[[]],[[],302],[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[[],13],[[],13],[[]],[[]],[[],15],[[],16],[[],15],[[],16],0,0,[13],[[207,13]],[170],[[207,170]],[13],[[207,13]],[304],[[207,304]],[[8,161]],[[207,8,161]],[13],[[207,13]],[13],[[207,13]],[[]],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[305,13]],[[305,13]],[[305,13]],[[305,13]],[[305,13]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[170,170],170],0,0,0,[[],305],[13],[13],[13],[13],[13],[13],[[]],[[]],[305,306],0,[[],13],[[],13],[[]],[[]],[[],16],[[],15],[[],16],[[],15],0,0,[[],305],0,0,0,[[305,13]],[[305,170]],[[305,13]],[[305,304]],[[305,8,161]],0,0,[[305,13]],[[305,13]],0,0,[245,[[4,[64]]]],[[],4],[[],4],[[],4],[[],4],0,0,[[],18],[[],18],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[307,157,158,11,7],[[4,[308,309]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[310,13],[311,311],[312,312],[[]],[[]],0,0,[[313,203,314,311,315]],0,0,0,[310],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[307,186],[[4,[8,316]]]],[[317,84],85],[[317,84],85],[[318,84],85],[[318,84],85],[[319,84],85],[[319,84],85],[[316,84],85],[[316,84],85],[[]],[[]],[[]],[[]],[[]],[[]],[192,318],[[]],[189,318],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[169,[202]],314,311]],[[270,314,311],[[4,[318]]]],[310],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],0,0,[[307,7],312],[[186,307,207,7],[[4,[310,319]]]],[[314,320,7],321],[[[6,[313]]],[[4,[322,323]]]],[310,[[6,[313]]]],[310,13],0,[321,320],0,[[181,324,199,200],[[4,[[23,[325]],318]]]],[132],[132],[132],[132],[[],326],0,0,0,[317,[[6,[140]]]],[318,[[6,[140]]]],[310,7],[321,7],0,0,[[310,[0,[259,218]]]],[327],0,0,[[]],[[]],[[],120],[[],120],[[],120],[[],120],0,0,0,[307,[[23,[313]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[320,157,158,11],[[4,[309]]]],[[]],[[]],[13],[13],[13],[[309,84],85],[[309,84],85],[[[143,[162]]],309],[[]],[[],13],[[]],[[],16],[[],15],[320,[[4,[[23,[325]],309]]]],[132],[309,[[6,[140]]]],[[],120],[[],4],[[],4],[[],18],[[]],[[[0,[259,160]],11],[[4,[309]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[328,61]],[[[179,[[4,[329]]]]],328],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[329,329],[[]],0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[[331,[330]],332,314,333,334],335],0,[[[260,[335]],177],179],[[335,177],179],[[335,177],[[179,[[4,[329]]]]]],[[335,177],[[179,[[4,[329]]]]]],[[335,177],[[179,[[4,[329]]]]]],[[335,336]],[[335,336],4],0,[[335,337]],[335,7],0,0,[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[335,337],4],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[321,311,203]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[338,84],85],[[338,84],85],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[186,186],[[4,[338]]]],[[[260,[339]],177],179],[132],0,0,[338,[[6,[140]]]],0,[[],120],[340,[[4,[[6,[334]],271]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[260,177],179],[[],18],[[],18],[[],18],[341,[[4,[203,338]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],[[4,[342]]]],[[]],[[],[[4,[343,342]]]],[[[276,[344,342]]],[[345,[[276,[344,342]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[320,[[4,[[331,[330]],346]]]],[[320,347],[[4,[[331,[330]],346]]]],[13],[13],[313,348],[13],[[320,186],[[4,[8,349]]]],[[349,84],85],[[349,84],85],[[]],[[],13],[[]],[[],16],[[],15],[132],[349,[[6,[140]]]],[[],120],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,[[350,314,311,[352,[351]]],[[4,[317]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[353,203,354,340,315]],0,0,[334,63],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[353],[355],[334],[[353,354],[[6,[203]]]],[[],355],[356,356],[357,357],[358,358],[[]],[[]],[[]],[358,142],0,[[],355],[[],315],[[],358],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[355,357],0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[356,356],63],[[],63],0,[[[359,[268]],84],85],[[356,84],85],[[356,84],85],[[358,84],85],[[360,84],85],0,[334,63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[353,354]],[[353,203],361],0,[334,63],[334,63],0,[353,[[23,[360]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[353,[[363,[362]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[359],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[355,63],[355,63],0,[359,356],0,[358,142],[358,[[6,[142]]]],0,[358,[[6,[142]]]],0,[358,[[6,[142]]]],0,0,0,[354,334],[[13,207],353],0,0,0,0,0,[[[260,[361]],177],179],[[260,177],[[179,[[6,[4]]]]]],[[[260,[364]],177],[[179,[6]]]],[[353,203,365],[[4,[203]]]],[[353,203,366],[[4,[203]]]],[[353,203,367],[[4,[367]]]],[[353,203,181],[[4,[203]]]],[[353,203,337,368]],[[353,203],63],[[353,203],63],[[353,203],63],[334,354],0,[[353,203],[[6,[334]]]],[[353,354,203,61],[[4,[342]]]],[[334,365]],[[334,366]],[[334,367]],[[353,337]],[[353,203,337]],0,0,[355,364],[334,[[364,[365]]]],[334,369],[[353,203],[[6,[369]]]],[334,[[364,[337]]]],[334,[[364,[336]]]],[334,370],[[353,203],[[6,[370]]]],[334,371],[[353,203],[[6,[371]]]],[[]],[[]],[[]],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[260,177],[[179,[[6,[4]]]]]],[355,[[4,[359]]]],[[334,365],[[4,[[359,[365]]]]]],[[334,366],[[4,[[359,[366]]]]]],[[334,367],[[4,[[359,[367]]]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[355,355]],[[334,334]],[[353,203]],[[358,142]],[[358,142]],[[358,142]],[[6,142]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[362,203,354],334],[[362,203,354,340],334],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[362],0,[[372,354],[[6,[203]]]],[[362,354],[[6,[203]]]],[373,334],0,[[372,354,203,61],[[4,[342]]]],[[362,354,203,61],[[4,[342]]]],0,[[],372],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[362,203],[[6,[374]]]],0,[[362,13]],[362],[[]],[[]],[[]],[[]],[[]],[[372,354]],[[362,354]],0,[362,[[23,[360]]]],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[]],[[]],[[]],[[]],[[]],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[362,203,354],375],0,[[13,207],362],[354,375],[362,6],[[362,203],[[6,[334]]]],[[362,203],[[6,[358]]]],[[372,354],[[6,[203]]]],[374],[[362,203],[[6,[334]]]],[[362,203],[[6,[334]]]],[375,334],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[375,373],[374,373],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[376,6],[[376,377,[378,[365]]],[[260,[[143,[259]]]]]],[[]],[[]],0,[[376,377,341],[[260,[[143,[259]]]]]],[376,376],[[]],[13],[13],[13],[376,6],[[376,377,[378,[366]]],[[260,[[143,[259]]]]]],[[]],[[]],[[376,337],[[260,[[143,[259]]]]]],[[376,379],[[260,[[143,[259]]]]]],[[376,337],[[260,[[143,[259]]]]]],0,[376,6],[[376,377,[378,[367]]],[[260,[[143,[259]]]]]],[[376,377],[[260,[[143,[259]]]]]],[[],13],[[]],[[],16],[[],15],[[[378,[380]],272,259],[[4,[342]]]],[[311,314],376],[[376,354],[[4,[203,342]]]],[[376,62],[[260,[[143,[259]]]]]],[[376,337,368],[[260,[[143,[259]]]]]],[[376,337],[[260,[[143,[259]]]]]],[[376,337,368],[[260,[[143,[259]]]]]],[[376,[378,[365]]],[[260,[[143,[259]]]]]],[200,[[4,[342]]]],[[[6,[159]]],[[4,[[381,[159]],342]]]],[376,[[260,[[143,[259]]]]]],[[]],[[],4],[[],4],[[],18],[[376,[378,[382]]],[[260,[[143,[259]]]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[383,[[23,[33]]]],[384,63],[[],384],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[385,307],63],[[386,84],85],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[192,342],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],0,0,0,[387,[[200,[168]]]],[[[200,[168]],203,314],387],[[[200,[388]],203,314,389],390],[[[200,[190]],203,314],383],0,0,0,0,0,0,0,[[[260,[387]],177],[[179,[[4,[342]]]]]],[[[260,[390]],177],[[179,[[4,[342]]]]]],[[[260,[383]],177],[[179,[[4,[342]]]]]],[[384,177],179],[[383,177],179],[[[260,[387]],177],[[179,[[4,[342]]]]]],[[[260,[390]],177],[[179,[[4,[342]]]]]],[[[260,[383]],177],[[179,[[4,[342]]]]]],[[387,177],[[179,[[4,[342]]]]]],[[383,177],[[179,[[4,[342]]]]]],[[[260,[387]],177],[[179,[[4,[342]]]]]],[[[260,[390]],177],[[179,[[4,[342]]]]]],[[[260,[383]],177],[[179,[[4,[342]]]]]],[[383,177],[[179,[[4,[342]]]]]],[[391,[200,[168]],203,314]],[[391,[200,[190]],203,314]],[[391,[200,[388]],203,314]],[387],[383],0,[[384,[0,[259,218]]]],[[[260,[387]],365],[[4,[342]]]],[[[260,[390]],367],[[4,[342]]]],[[[260,[383]],366],[[4,[342]]]],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[392,109],[[]],[[]],[[]],[[]],[392,392],[[]],0,[13],[13],[13],[13],[[],120],[13],[13],[[],[[4,[120,87]]]],[[]],[[]],[[]],[[],13],[[],13],[[]],[[]],[[],15],[[],16],[[],15],[[],16],0,[[[0,[393,199,218,394]],313,[6,[395]],[0,[259,218]]]],[[[0,[393,199,218,394]],396,[0,[259,218]]]],[[[0,[393,199,218,394]],396,5,[0,[259,218]]]],[[396,5]],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[397,109],[398,109],[399,109],[400,109],[401,109],[402,109],[403,109],[404,109],[405,109],[406,109],[407,109],[408,109],[409,109],[410,109],[411,109],[412,109],[413,109],[414,109],[415,109],[416,109],[417,109],[418,109],[419,109],[420,109],[421,109],[422,109],[423,109],[424,109],[425,109],[426,109],[427,109],[428,109],[429,109],[430,109],[431,109],[432,109],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[397,397],[398,398],[399,399],[400,400],[401,401],[402,402],[403,403],[404,404],[405,405],[406,406],[407,407],[408,408],[409,409],[410,410],[411,411],[412,412],[413,413],[414,414],[415,415],[416,416],[417,417],[418,418],[419,419],[420,420],[421,421],[422,422],[423,423],[424,424],[425,425],[426,426],[427,427],[428,428],[429,429],[430,430],[431,431],[432,432],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[5,[[0,[393,199]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[433,[[4,[434,433]]]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[13],[13],[289,[[4,[435]]]],[13],[[]],[[120,5],[[4,[434,433]]]],[5,[[4,[434,433]]]],[[120,5],[[4,[434,433]]]],[[120,435,5],[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[[120,5],[[4,[434,433]]]],[5,[[4,[434,433]]]],[[62,5],[[4,[434,433]]]],[[13,5],[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[[62,5],[[4,[434,433]]]],[[120,5],[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[[120,111,5],[[4,[434,433]]]],[[],13],[[]],[[],16],[[],15],[[436,5],[[4,[434,433]]]],[5,[[4,[434,433]]]],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[13],[13],[13],[[437,84],85],[[437,84],85],[438,437],[192,437],[439,437],[[]],[189,437],[193,437],[440,437],[441,437],[64,437],[225,437],[442,437],[[[191,[190]]],437],[[224,109],[[4,[[6,[443]],437]]]],[224,[[4,[[23,[444]],437]]]],[[224,109],[[4,[[6,[[23,[111]]]],437]]]],[[224,109,13],[[4,[[6,[[23,[111]]]],437]]]],[224,[[4,[[23,[120]],437]]]],[224,[[4,[227,437]]]],[224,[[4,[[23,[290]],437]]]],[224,[[4,[[23,[237]],437]]]],[224,[[4,[[23,[445]],437]]]],[224,[[4,[[23,[445]],437]]]],[224,[[4,[[23,[445]],437]]]],[224,[[4,[[23,[313]],437]]]],[[224,109],[[4,[[23,[313]],437]]]],[224,[[4,[[23,[446]],437]]]],[[224,62],[[4,[[6,[447]],437]]]],[[224,13],[[4,[[23,[447]],437]]]],[224,[[4,[106,437]]]],[224,[[4,[448,437]]]],[224,[[4,[[6,[449]],437]]]],[[224,62],[[4,[[6,[449]],437]]]],[[224,109],[[4,[[6,[450]],437]]]],[224,[[4,[[23,[120]],437]]]],[224,[[4,[451,437]]]],[224,[[4,[120,437]]]],[[[200,[388]],324],[[4,[[23,[313]],437]]]],[224,[[4,[[238,[452,453]],437]]]],[[224,109,111],[[4,[[6,[454]],437]]]],[[],13],[[]],[[],16],[[],15],[109,[[4,[29,437]]]],[109,[[4,[25,437]]]],[109,[[4,[221,437]]]],[109,[[4,[324,437]]]],[224,[[4,[244,437]]]],[132],[224,[[4,[437]]]],[437,[[6,[140]]]],[[],120],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[455,109],[456,109],[457,109],[458,109],[459,109],[460,109],[461,109],[462,109],[463,109],[464,109],[465,109],[466,109],[467,109],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[455,455],[456,456],[457,457],[458,458],[459,459],[460,460],[461,461],[462,462],[463,463],[464,464],[465,465],[466,466],[467,467],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[5,[[0,[393,199]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[433,[[4,[434,433]]]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[13],[13],[289,[[4,[468]]]],[13],0,[[]],[[120,5],[[4,[434,433]]]],[[469,120,5],[[4,[434,433]]]],[5,[[4,[434,433]]]],[5,[[4,[434,433]]]],[[468,5],[[4,[434,433]]]],[[],13],[[]],[[],15],[[],16],[[470,5],[[4,[434,433]]]],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[13],[13],[13],[[471,84],85],[[471,84],85],[441,471],[440,471],[225,471],[[[191,[190]]],471],[[]],[192,471],[189,471],[438,471],[193,471],[442,471],[64,471],[[224,120],[[4,[[6,[[23,[472]]]],471]]]],[[224,469,120],[[4,[[6,[[23,[111]]]],471]]]],[224,[[4,[[238,[120,[23,[472]]]],471]]]],[224,[[4,[[23,[237]],471]]]],[[224,130],[[4,[[238,[120,239]],471]]]],[[],13],[[]],[[],16],[[],15],[109,[[4,[29,471]]]],[[224,470],[[4,[244,471]]]],[132],[471,[[6,[140]]]],[[],120],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,0,[473,[[6,[474]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[475,475],[476,476],[477,477],[473,473],[478,478],[[]],[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[289,[[4,[475]]]],[289,[[4,[476]]]],[289,[[4,[477]]]],[289,[[4,[473]]]],[13],[13],[13],[13],[13],[13],0,[[479,84],85],[[479,84],85],[[]],[[]],[[]],[[]],[[]],[480,479],[481,479],[[]],[[]],[[]],[[]],[[]],[[]],[473,[[6,[482]]]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[[212,[211]]],[[4,[473,479]]]],0,[132],0,0,[479,[[6,[140]]]],[[]],[[]],[[]],[[]],[[]],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[284,284],[[]],[[284,[115,[114]]],[[6,[67]]]],[[284,[116,[114]]],[[6,[66]]]],0,0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],0,[285,298],[285],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],0,0,[[[112,[284]],[112,[73]],62,62],285],[[[6,[91]]],284],[285,[[6,[295]]]],0,[285,[[6,[295]]]],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],23],[[],[[23,[109]]]],[[]],[[]],[[]],[[]],[483,483],[[]],0,[13],[484,23],[13],[13],[13],[13],[13],[[483,84],85],[[]],[[]],[[]],0,[[],13],[[],13],[[]],[[]],[[],15],[[],16],[[],15],[[],16],0,0,0,0,0,0,0,0,0,0,0,[[]],0,[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[]],[[]],0,0,0,0,[485,485],[485,485],[485,485],[485,485],[485,485],[485,485],[485,485],[485,485],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],485],[[],485],[[],485],[[],485],[[],485],[[],485],[[],485],[[],485],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[486,84],85],[[487,84],85],[[488,84],85],[[489,84],85],[[]],[[]],[[]],[[]],[490,[[4,[486,491]]]],[490,[[4,[487,491]]]],[490,[[4,[488,491]]]],[490,[[4,[489,491]]]],[490,[[4,[486,491]]]],[490,[[4,[487,491]]]],[490,[[4,[488,491]]]],[490,[[4,[489,491]]]],0,[[],[[6,[492]]]],[[],[[6,[492]]]],[[],[[6,[492]]]],[[],[[6,[492]]]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],0,0,0,0,[[],489],0,0,[109,[[4,[493,120]]]],0,0,0,0,0,0,0,0,0,0,0,0,[109,[[4,[494,495]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[486,490],[[4,[491]]]],[[487,490],[[4,[491]]]],[[488,490],[[4,[491]]]],[[489,490],[[4,[491]]]],[[486,490],[[4,[491]]]],[[487,490],[[4,[491]]]],[[488,490],[[4,[491]]]],[[489,490],[[4,[491]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[496,496],[497,497],[498,498],[[]],[[]],[[]],[[],496],[[],497],[[],498],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[289,[[4,[496]]]],[289,[[4,[497]]]],[499],[13],[13],[13],[13],[13],[[496,496],63],[[497,497],63],[[498,498],63],[[],63],[[],63],[[],63],[[496,84],85],[[496,84],85],[[497,84],85],[[498,84],85],[[500,84],85],[[500,84],85],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[109,[[4,[496]]]],[109,[[4,[497]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[498,[[4,[499,500]]]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],0,0,[132],[[496,233],4],[[497,233],4],[500,[[6,[140]]]],[[]],[[]],[[]],[[],120],[[],120],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[501,501],[502,502],[503,503],[395,395],[504,504],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],501],[[],504],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[289,[[4,[501]]]],[289,[[4,[502]]]],[289,[[4,[503]]]],[289,[[4,[395]]]],[289,[[4,[504]]]],[13],[13],[13],[13],[13],[13],[13],[13],[[502,502],63],[[503,503],63],[[395,395],63],[[504,504],63],[[],63],[[],63],[[],63],[[],63],[[501,84],[[4,[87]]]],[[502,84],[[4,[87]]]],[[503,84],[[4,[87]]]],[[395,84],[[4,[87]]]],[[504,84],[[4,[87]]]],[[505,84],85],[[505,84],85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[506,505],[507,505],[480,505],[[]],[508,505],[481,505],[[]],[[]],[[]],[[]],[[]],[[486,6],[[4,[307,505]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],0,[509,[[6,[503]]]],0,0,0,[489,[[4,[509,505]]]],0,[509,498],0,0,0,0,0,0,0,0,[132],[[],[[23,[510]]]],0,[509,[[6,[502]]]],0,0,[[501,233],4],[[502,233],4],[[503,233],4],[[395,233],4],[[504,233],4],[505,[[6,[140]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[509,[[4,[10,505]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[511,511],[494,494],[512,512],[513,513],[514,514],[515,515],[516,516],[517,517],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],511],[[],513],[[],514],[[],515],[[],516],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[289,[[4,[511]]]],[289,[[4,[494]]]],[289,[[4,[518]]]],[289,[[4,[512]]]],[289,[[4,[513]]]],[289,[[4,[514]]]],[289,[[4,[515]]]],[289,[[4,[516]]]],[289,[[4,[517]]]],0,[13],[13],[13],[13],[13],[13],[13],[13],[13],0,[[512,512],63],[[516,516],63],[[517,517],63],[[],63],[[],63],[[],63],0,[[511,84],[[4,[87]]]],[[494,84],[[4,[87]]]],[[518,84],85],[[512,84],85],[[513,84],85],[[514,84],85],[[515,84],85],[[516,84],85],[[517,84],85],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[511,233],4],[[494,233],4],[[512,233],4],[[516,233],4],[[517,233],4],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[289,[[4,[[6,[493]]]]]],[[6,233],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[320,313],[350,313],[307,[[6,[354]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[519,519],[320,320],[350,350],[307,307],[510,510],[[]],[[]],[[]],[[]],[[]],0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[289,[[4,[519]]]],[289,[[4,[320]]]],[289,[[4,[350]]]],0,[13],[13],[13],[13],[13],[13],[[519,519],63],[[320,320],63],[[350,350],63],[[],63],[[],63],[[],63],[[519,84],85],[[320,84],85],[[350,84],85],[[520,84],85],[[520,84],85],[[]],[[]],[[]],[[]],[[]],[508,520],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[],60],0,[519],[510],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[[],15],[[],16],0,[307,[[6,[350]]]],0,0,0,0,0,[313,320],[313,350],0,0,0,0,0,[132],0,[494,[[4,[510,520]]]],[[519,233],4],[[320,233],4],[[350,233],4],0,[520,[[6,[140]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[],120],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],[[]],[[]],0,[[313,139],320],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[80,[[6,[8]]]],[[80,109],[[4,[8,120]]]],[[8,9,13,63],[[4,[3]]]],[[10,9],[[4,[8,3]]]],[10,[[4,[9,3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[3,521],[13],[13],[13],[13],[13],[13],[[522,84],85],[[522,84],85],[[3,84],85],[[3,84],85],[[]],[505,3],[523,3],[479,3],[231,3],[193,3],[309,3],[316,3],[500,3],[83,3],[[]],[[[143,[175]]],3],[[],13],[[],13],[[]],[[]],[[],16],[[],15],[[],15],[[],16],[132],[132],[3,[[6,[140]]]],[[],120],[[],120],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[],524],[13],[13],[13],[[]],[[],13],[[]],[[],16],[[],15],[[],524],[[],4],[[],4],[[],18],[[]],0,0,0,0,0,0,0,[[158,139]],0,0,0,0,0,0,0,0,0,0,0,0,[203,525],[[]],[[]],[[]],[[]],[203,203],[445,445],[[]],[[]],0,[13],[13],[13],[13],[13],[13],[203],[[203,203],63],[[445,445],63],[[],63],[[],63],[[203,84],85],[[203,84],85],[[445,84],85],[[]],[526,203],[325,445],[[]],[[]],[[]],[[],60],[[],60],0,[203],[445],0,[[],13],[[],13],0,[[]],[[]],[[],15],[[],16],[[],16],[[],15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[203,233],4],[[445,233],4],[527],0,0,0,[[]],[[]],[[],120],0,0,0,0,[[],4],[[],[[4,[203]]]],[[],4],[[],4],[[],4],[[],18],[[],18],[[]],[[]],0,0,0,0,0,[385,354],[[]],[[]],[[]],[[]],[[]],[[]],[385,385],[528,528],[[]],[[]],[13],[13],[13],[13],[13],[13],[77,[[4,[385,78]]]],[77,[[4,[78]]]],[13],[13],[13],[385],[528],[[385,385],63],[[528,528],63],[[],63],[[],63],[[385,84],85],[[528,84],85],[[529,84],85],[[529,84],85],[530,385],[[]],[[]],[[[23,[530]]],528],[[[23,[385]]],528],[531,529],[78,529],[[]],[[]],[[]],[[],60],[385,63],[385],[385,203],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[385,63],[532,63],[132],[[385,77],[[4,[133]]]],[529,[[6,[140]]]],[[]],[[]],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[533,533],[[]],[13],[13],[13],[[]],[[]],[[],13],[[]],[[],16],[[],15],0,0,0,0,0,0,[[]],[[],4],[[],4],[[],18],0,[[]],0,0,[[]],[[]],[[]],[[]],[534,534],[[]],0,[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[[],13],[[],13],[[]],[[]],[[],16],[[],15],[[],15],[[],16],[535,109],[[534,536],535],0,0,[[535,537,537]],0,[[535,525]],[535],[[535,538]],[[535,539]],[[]],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[535,538]],[[535,540]],0,0,[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[541,541],[[]],[[],541],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[507,84],85],[[507,84],85],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],0,[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],0,[542,109],[[541,543],542],[120,[[4,[544,507]]]],[[542,537,537]],[132],[[542,525]],[542],0,[[542,538]],[[542,539]],[[]],[[],120],[[],4],[545,[[4,[541]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[542,538]],[[542,540]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[13],[13],[13],[13],[13],[13],[[]],[[]],0,[546],[[],13],[[],13],0,0,[[]],[[]],[[],15],[[],16],[[],15],[[],16],0,0,0,[[546,[23,[325]]]],[527],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[547,547],[548,548],[[]],[[]],[[],549],[[],548],[13],[13],[13],[13],[13],[13],[13],[13],[289,[[4,[548]]]],[13],[13],[13],[13],[[547,84],85],[[548,84],85],[[]],[[]],[[]],[[]],[548,549],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[549,[[23,[445]]]],0,0,0,0,0,[[549,203]],0,0,[[549,550,325],551],0,0,0,[549,[[23,[445]]]],[[548,233],4],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],313],[[],313],[[552,528]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[553,[[23,[[143,[554]]]]]],[553,[[23,[[143,[554]]]]]],[[553,111,13,13],[[23,[[143,[554]]]]]],0,[13],[13],[13],[555,313],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[533,553],[[]],[[],13],[[],13],[[],13],[[],13],[[552,203],528],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],0,[552,[[23,[325]]]],[552,88],[552,88],[552,[[23,[445]]]],[[307,207],552],[552,13],0,[[552,203]],0,[[552,203]],[[[556,[89]]],557],0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[552],[[552,324],558],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[192,192],[[[191,[199]]],[[191,[199]]]],[200,200],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[192,192],63],[[[191,[[253,[[253,[[253,[253]]]]]]]],191],63],[[],63],[[],63],0,[[192,84],[[4,[87]]]],[[192,84],[[4,[87]]]],[[191,84],[[4,[87]]]],[[191,84],[[4,[87]]]],[[[200,[268]],84],85],[[[169,[268]],84],85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[191],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[191,192],[[],15],[[],16],[192,63],[191,63],[192,63],[191,63],0,[[[260,[200]],177],[[179,[[4,[192]]]]]],[[260,177],[[179,[[6,[4]]]]]],[[[260,[200]],177],[[179,[[4,[192]]]]]],[[[260,[169]],177],[[179,[6]]]],[[200,177],[[179,[[4,[192]]]]]],[[[260,[200]],177],[[179,[[4,[192]]]]]],[132],[132],[169],[200,[[4,[192]]]],[[[260,[200]]],[[4,[192]]]],[[]],[[]],[[]],[[],120],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[260,177],[[179,[[6,[4]]]]]],[200,[[4,[191]]]],[[],18],[[],18],[[],18],[[],18],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[204,204],[[]],0,0,0,0,[[[559,[[0,[199,253]],[0,[199,253]],181]],[0,[199,253]]]],[204,[[4,[560]]]],[[[559,[[0,[199,253]],[0,[199,253]],181]],[561,[[0,[199,253]],[0,[199,253]]]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[560,84],85],[[560,84],85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[562,560],[563,560],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[[564,[[0,[199,253]],[0,[199,253]]]]],63],[[[565,[253,253]]],63],[[[565,[253,253]],564],63],[[[564,[[0,[199,253]],[0,[199,253]]]],[564,[[0,[199,253]],[0,[199,253]]]]],63],[[[565,[253,253]],561],63],[[[564,[[0,[199,253]],[0,[199,253]]]],181]],0,0,0,0,[[566,181],[[559,[[0,[199,253]],[0,[199,253]],181]]]],[[[260,[[559,[[0,[199,253,160]],[0,[199,253,160]],160,[0,[181,160]]]]]],177],179],[[[559,[[0,[199,253]],[0,[199,253]],181]]],[[6,[[564,[[0,[199,253]],[0,[199,253]]]]]]]],[132],0,[[[559,[[0,[199,253]],[0,[199,253]],181]],[564,[[0,[199,253]],[0,[199,253]]]]]],[204,[[4,[560]]]],0,[[[559,[[0,[199,253]],[0,[199,253]],181]]],[[204,[[0,[199,253]],[0,[199,253]]]]]],0,[560,[[6,[140]]]],[[[559,[[0,[199,253]],[0,[199,253]],181]],564],13],0,0,0,0,0,0,0,[[]],[[[564,[[0,[199,253]],[0,[199,253]]]],567],[[565,[[0,[199,253]],[0,[199,253]]]]]],[[],120],[[[564,[[0,[199,253]],[0,[199,253]]]]],[[561,[[0,[199,253]],[0,[199,253]]]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[260,177],179],[[[559,[[0,[199,253]],[0,[199,253]],181]]]],[[204,568],[[4,[560]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[[564,[[0,[199,253]],[0,[199,253]]]],[564,[[0,[199,253]],[0,[199,253]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[14,109,61]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[569,569],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,[[523,84],85],[[523,84],85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],16],[[],15],[[],15],[[],16],[[],16],[[],15],[570,109],[167,109],0,0,[571,14],[[109,299],570],[132],[[167,109,139,[0,[219,218]]]],[[167,109,139,[0,[219,218]]]],0,[167,572],[569],0,[523,[[6,[140]]]],[167,7],0,[[167,109,[0,[259,218]]]],[[167,109,[0,[218,259]]]],[[14,109,[0,[61,218]]]],[[14,109,[0,[61,218]]]],[[167,109,139,[0,[259,218]]]],[[167,109,139,[0,[218,259]]]],[[]],[[],120],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[570,139],[167,139],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[14,[[4,[523]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[351,[[260,[[143,[259]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[351,351],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[[]],[[337,157,9,265],[[4,[189]]]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],15],[[],16],[[],16],[[],15],[[],15],[[],16],[351,[[352,[351]]]],[[57,157]],0,0,[[573,167,[169,[206]]]],0,[[351,337],[[260,[[143,[259]]]]]],0,0,[351,[[260,[[143,[259]]]]]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],18],[[],18],[[],18],[[]],[[]],[[]],0,0],"c":[],"p":[[3,"InitializedNode"],[3,"BootstrappedNode"],[4,"Error"],[4,"Result"],[6,"ContextLock"],[4,"Option"],[3,"Span"],[3,"Block"],[3,"Storage"],[3,"Settings"],[3,"CancellationToken"],[3,"BootstrapData"],[15,"usize"],[3,"Services"],[3,"Request"],[3,"Request"],[3,"Signal"],[3,"TypeId"],[3,"Ledger"],[3,"Ledger"],[3,"VotePlanStatus"],[3,"Global"],[3,"Vec"],[3,"Multiverse"],[3,"Hash"],[3,"Ref"],[3,"Value"],[3,"EpochRewardsInfo"],[3,"Identifier"],[3,"Contents"],[3,"HeaderContentEvalContext"],[4,"Error"],[4,"Fragment"],[3,"BlockDate"],[3,"ApplyBlockLedger"],[3,"UnspecifiedAccountIdentifier"],[4,"Witness"],[3,"OwnerStakeDelegation"],[3,"PoolRegistration"],[3,"TransactionBindingAuthData"],[4,"PoolSignature"],[3,"PoolRetirement"],[3,"PoolUpdate"],[3,"StakeDelegation"],[3,"TransactionSlice"],[3,"UpdateProposal"],[3,"SingleAccountBindingSignature"],[3,"UpdateVote"],[3,"VoteCast"],[3,"VotePlan"],[3,"VotePlanProof"],[3,"VoteTally"],[4,"TallyProof"],[4,"ConfigParam"],[3,"Block0Date"],[3,"ConfigParams"],[4,"Header"],[4,"BlockVersion"],[3,"ChainLength"],[15,"u64"],[8,"FnOnce"],[15,"u32"],[15,"bool"],[4,"ValueError"],[3,"ContentsBuilder"],[3,"HeaderGenesisPraos"],[3,"HeaderBft"],[3,"HeaderDesc"],[3,"LedgerStaticParameters"],[3,"RewardsInfoParameters"],[4,"Ordering"],[3,"Common"],[3,"Leadership"],[4,"LeadershipConsensus"],[4,"ConsensusType"],[3,"PoolsState"],[3,"Codec"],[4,"ReadError"],[3,"StakeDistribution"],[6,"HeaderId"],[3,"TimeEra"],[4,"ConsensusEvalContext"],[4,"Block0Error"],[3,"Formatter"],[6,"Result"],[4,"Block0Malformed"],[3,"Error"],[8,"Iterator"],[3,"Ed25519"],[3,"SecretKey"],[3,"Leader"],[4,"Error"],[4,"ConfigParam"],[4,"FeesGoTo"],[3,"ConsensusLeaderId"],[3,"SlotDuration"],[3,"KesUpdateSpeed"],[3,"NumberOfSlotsPerEpoch"],[3,"ActiveSlotCoefficient"],[3,"BlockDate"],[3,"EpochPosition"],[3,"ConfigParams"],[3,"BlockchainConfiguration"],[3,"TestLedger"],[3,"NonZeroValue"],[3,"Value"],[3,"AverageValue"],[4,"HeaderError"],[15,"str"],[4,"BlockDateParseError"],[15,"u8"],[3,"Arc"],[3,"NonZeroUsize"],[4,"HeaderSetConsensusSignature"],[3,"HeaderBftBuilder"],[3,"HeaderGenesisPraosBuilder"],[3,"BftLeaderId"],[3,"Blake2b256"],[3,"DigestOf"],[3,"String"],[4,"HeaderCommonDone"],[3,"HeaderBuilder"],[4,"HeaderSetConsensusData"],[3,"HeaderUnsigned"],[4,"LeaderOutput"],[3,"Iter"],[3,"LedgerIterator"],[3,"MintToken"],[4,"HeaderSetParenting"],[8,"IntoIterator"],[4,"Proof"],[3,"Demand"],[4,"WriteError"],[3,"VrfProof"],[4,"HeaderSetDate"],[3,"BftSignature"],[3,"KesSignature"],[3,"Settings"],[3,"Duration"],[8,"Error"],[3,"SplitValueIn"],[3,"SystemTime"],[3,"Box"],[3,"TokenDistribution"],[3,"TokenTotals"],[3,"UpdateState"],[3,"Output"],[3,"Address"],[3,"Iter"],[4,"Verification"],[4,"RewardParams"],[4,"Tag"],[3,"TagIter"],[4,"RewardParams"],[15,"u16"],[3,"IterBridge"],[3,"Blockchain"],[3,"Tip"],[8,"Stream"],[8,"Unpin"],[3,"Ref"],[4,"Error"],[4,"ComparisonResult"],[6,"Epoch"],[3,"EpochLeadership"],[3,"TaskData"],[3,"TokioServiceInfo"],[4,"BlockMsg"],[3,"MessageQueue"],[15,"f64"],[3,"StreamInfo"],[3,"Branch"],[4,"Error"],[4,"HeaderChainVerifyError"],[4,"Error"],[3,"ChainAdvance"],[3,"Context"],[4,"Outcome"],[4,"Poll"],[3,"State"],[8,"Fn"],[3,"StreamReporter"],[3,"PostCheckedHeader"],[4,"AppliedBlock"],[3,"LeadershipBlock"],[6,"HeaderHash"],[4,"CheckHeaderProof"],[3,"TimeFrame"],[3,"Error"],[4,"TransactionMsg"],[3,"TrySendError"],[3,"SendError"],[4,"Error"],[3,"Error"],[3,"Checkpoints"],[4,"PreCheckedHeader"],[6,"Result"],[3,"Multiverse"],[8,"Clone"],[3,"MessageBox"],[3,"Process"],[4,"NetworkMsg"],[3,"NodeId"],[3,"FireForgetScheduler"],[3,"RequestStreamHandle"],[4,"WatchMsg"],[3,"Metrics"],[3,"SystemTimeError"],[3,"Slot"],[3,"RefCache"],[3,"Path"],[8,"AsRef"],[3,"Ancestor"],[4,"StreamingError"],[4,"Error"],[3,"ReplySendError"],[3,"ReplyStreamHandle"],[8,"Send"],[8,"FnMut"],[3,"TipUpdater"],[6,"FragmentId"],[3,"TaskData"],[4,"ClientMsg"],[3,"Context"],[4,"Error"],[3,"ServerStopper"],[3,"Diagnostic"],[3,"Sender"],[4,"NodeState"],[3,"FullContext"],[4,"DiagnosticError"],[4,"RlimitResource"],[8,"Serializer"],[3,"FragmentDef"],[3,"PoolEntry"],[3,"Logs"],[3,"FragmentLog"],[3,"HashMap"],[4,"FragmentStatus"],[3,"Pool"],[4,"FragmentRejectionReason"],[4,"Error"],[4,"FragmentOrigin"],[3,"FragmentsProcessingSummary"],[3,"Transaction"],[3,"File"],[4,"FragmentSelectionAlgorithmParams"],[3,"Receiver"],[3,"TimeoutQueueItem"],[8,"Eq"],[8,"Hash"],[3,"IndexedQueue"],[8,"PartialEq"],[3,"IndexedQueueKeyRef"],[3,"Pool"],[4,"Error"],[3,"Process"],[3,"OldestFirst"],[8,"Future"],[3,"Pin"],[3,"Shared"],[3,"NewLedgerState"],[4,"ApplyFragmentError"],[8,"Into"],[3,"ReplyStreamSink"],[4,"Code"],[3,"ReplyTrySendError"],[8,"Debug"],[3,"ReplyHandle"],[4,"PropagateMsg"],[3,"Canceled"],[3,"RequestSink"],[3,"ReplyFuture"],[8,"From"],[3,"ReplyStreamFuture"],[3,"ReplyStream"],[3,"UploadStream"],[3,"Receiver"],[4,"Error"],[4,"LedgerError"],[3,"Config"],[4,"EnclaveError"],[3,"Enclave"],[3,"Enclave"],[3,"Schedule"],[3,"Logs"],[3,"LeadershipLogHandle"],[4,"LeadershipLogStatus"],[8,"Deserializer"],[3,"LeadershipLog"],[3,"LeadershipLogId"],[3,"Logs"],[3,"Module"],[4,"LeadershipError"],[3,"LeaderEvent"],[3,"Entry"],[3,"SystemTime"],[3,"Epoch"],[3,"Instant"],[3,"ModuleConfig"],[3,"EpochSlotOffset"],[3,"MetricsBuilder"],[8,"MetricsBackend"],[3,"SecondsSinceUnixEpoch"],[3,"SimpleCounter"],[3,"NodeStats"],[3,"Configuration"],[3,"NetworkBootstrapResult"],[4,"Error"],[3,"GlobalState"],[3,"Channels"],[3,"BootstrapPeers"],[4,"SocketAddr"],[6,"GlobalStateR"],[3,"ConnectOptions"],[4,"FetchBlockError"],[3,"ListenError"],[4,"PropagateError"],[4,"NewGlobalStateError"],[3,"Peer"],[3,"ConnectionState"],[6,"TokioAsyncResolver"],[3,"ResolveError"],[4,"Selection"],[6,"Peer"],[4,"IpAddr"],[3,"TaskParams"],[3,"Progress"],[4,"ProcessingOutcome"],[3,"Channel"],[3,"Client"],[3,"ClientBuilder"],[3,"InboundSubscriptions"],[3,"PeerComms"],[3,"Client"],[3,"ChainPullRequest"],[6,"BlockIds"],[4,"ConnectError"],[3,"ConnectFuture"],[3,"ConnectHandle"],[3,"AuthenticatedNodeId"],[3,"Error"],[8,"DeserializeFromSlice"],[8,"Encode"],[3,"MapOk"],[3,"Error"],[3,"Builder"],[3,"Endpoint"],[4,"FetchBlockError"],[3,"Listen"],[3,"WatchClient"],[6,"Server"],[3,"Peers"],[6,"Address"],[3,"CommHandle"],[4,"ErrorKind"],[4,"SubscriptionDirection"],[3,"PeerStats"],[3,"PropagateError"],[3,"PeerInfo"],[3,"GetNodeAddress"],[3,"PeerMap"],[3,"OwnedMutexLockFuture"],[3,"OutboundSubscription"],[3,"Header"],[3,"Fragment"],[3,"Gossip"],[3,"BlockId"],[6,"BlockEventSubscription"],[6,"FragmentSubscription"],[6,"GossipSubscription"],[3,"ClientAuth"],[4,"CommStatus"],[3,"Entry"],[3,"PeerData"],[3,"NodeService"],[3,"Peer"],[6,"PushStream"],[6,"FragmentIds"],[8,"Decode"],[3,"Map"],[3,"Block"],[3,"FragmentProcessor"],[3,"PendingProcessing"],[3,"Gossip"],[4,"FragmentProcessorSendFragmentsState"],[3,"BlockAnnouncementProcessor"],[4,"TopologyMsg"],[4,"Direction"],[3,"GossipProcessor"],[8,"TryStream"],[3,"__StaticPath"],[8,"Filter"],[8,"Sync"],[3,"Tls"],[3,"Config"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"Rejection"],[8,"Reply"],[3,"GetBlockNextIdQuery"],[3,"Bytes"],[4,"Error"],[4,"PublicKeyFromStrError"],[4,"FromConfigParamError"],[4,"Error"],[4,"Error"],[4,"FromHexError"],[3,"AccountState"],[3,"VotePlanStatus"],[3,"PeerInfo"],[3,"PeerStats"],[3,"EpochRewardsInfo"],[3,"SettingsDto"],[3,"StakeDistributionDto"],[3,"StakePoolStats"],[3,"NodeStatsDto"],[3,"Hash"],[3,"UpdateProposalStateDef"],[3,"TransactionOutput"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"GetMessageStatusesQuery"],[6,"VotePlanId"],[3,"FragmentsBatch"],[4,"Error"],[3,"AccountVotes"],[3,"NodeSecret"],[3,"BftLeader"],[3,"Bft"],[3,"GenesisPraos"],[3,"OwnerKey"],[3,"NodePublic"],[4,"NodeSecretFromFileError"],[3,"Error"],[3,"Error"],[3,"GenesisLeader"],[4,"Block0Info"],[3,"LOG_FILTER_LEVEL_POSSIBLE_VALUES"],[3,"Command"],[3,"StartArguments"],[3,"RestArguments"],[3,"JRpcArguments"],[3,"CommandLine"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"LevelFilter"],[3,"TrustedPeer"],[3,"Error"],[4,"LogFormat"],[4,"LogOutput"],[3,"LogSettings"],[3,"LogGuard"],[4,"Error"],[3,"Mempool"],[3,"Rest"],[3,"JRpc"],[3,"Cors"],[4,"Error"],[4,"Error"],[3,"ParseError"],[4,"Error"],[3,"RawSettings"],[3,"TrustedPeer"],[3,"LayersConfig"],[3,"ConfigLogSettings"],[3,"P2pConfig"],[3,"Bootstrap"],[3,"Connection"],[3,"Leadership"],[3,"Prometheus"],[3,"Config"],[4,"Protocol"],[4,"PeerResolveError"],[15,"i32"],[4,"ErrorKind"],[4,"ServiceError"],[3,"State"],[3,"PublicKey"],[6,"NodeId"],[3,"TaskData"],[3,"Gossips"],[4,"GossipError"],[3,"Gossip"],[4,"GossipError"],[3,"Ipv4Addr"],[3,"LayersConfig"],[3,"PreferredListConfig"],[3,"PreferredListLayer"],[6,"ChaChaRng"],[3,"Profile"],[3,"Topic"],[3,"PriorityMap"],[3,"ViewBuilder"],[3,"RingsConfig"],[3,"Rings"],[3,"Rings"],[3,"InterestLevel"],[3,"TopicsOfInterest"],[3,"Process"],[3,"ReportRecord"],[3,"QuarantineConfig"],[3,"ReportRecords"],[3,"Topology"],[4,"ReportNodeStatus"],[3,"P2pTopology"],[3,"CustomLayerBuilder"],[8,"Layer"],[3,"LOCAL_ADDR"],[3,"SigningKey"],[3,"SecretKey"],[3,"View"],[3,"FireForgetSchedulerFuture"],[4,"Error"],[3,"TimedOutTask"],[4,"TrySendError"],[3,"Error"],[3,"ScheduledTask"],[3,"RunningTask"],[3,"FireForgetSchedulerConfig"],[3,"Key"],[4,"Command"],[3,"TaskMessageBox"],[3,"Service"],[3,"Runtime"],[3,"Handle"],[3,"MessageProcessor"],[4,"__PrivResult"],[4,"__PrivResult"],[8,"Block0DataSource"],[13,"Linear"],[13,"Halving"],[13,"AlreadyPresent"],[13,"MissingParent"],[13,"HeaderWithCache"],[13,"BlockDateBeforeParent"],[13,"ChainLengthNotIncremental"],[3,"IndexedQueueEntry"],[4,"SelectionOutput"],[3,"FragmentSelectionResult"],[8,"FragmentSelectionAlgorithm"],[13,"Commit"],[13,"Reject"],[13,"PullHeaders"],[13,"SendTransactions"],[13,"SelectTransactions"],[13,"Block"],[13,"Rejected"],[13,"CannotScheduleWithEnclave"],[13,"TooEarlyForTimeFrame"],[3,"BlockCounters"],[13,"CouldNotDownloadBlock"],[13,"Block0Mismatch"],[13,"UnexpectedBlock"],[13,"Connect"],[13,"GetBlocks"],[13,"GetBlocksStream"],[4,"SubscriptionState"],[13,"GetIngressAddress"],[13,"ReverseLookup"],[13,"SendFragments"],[13,"FileError"],[13,"FormatNotSupported"],[13,"Block0Mismatch"],[13,"Io"],[13,"ParseError"],[13,"Schedule"],[13,"DeclareCompleted"],[4,"Input"],[4,"RequestMsg"],[13,"SyncMultiverse"]]},\
"jormungandr_automation":{"doc":"","t":"","n":["cond_println","jcli","jormungandr","testing","utils","Account","CertificateBuilder","Error","FragmentCheck","FragmentSender","FragmentsCheck","JCli","JCliCommand","TransactionBuilder","TransactionNotInBlock","TransactionsNotInBlock","UTxO","Unknown","Witness","WitnessData","WitnessType","account_spending_counter","addr_type","addr_type","address","api","block_hash","borrow","borrow_mut","certificate","certificate_builder","clone","clone_into","command","command","data","default","deref","deref_mut","drop","exe","file","fmt","fragment_sender","fragments_checker","from","genesis","genesis_hash","id","init","into","into_request","jcli","jcli","jcli","jcli","jcli","jormungandr","jormungandr","jormungandr","key","new","path","private_key_path","rest","secret_bech32","services","spending_counter","staging_dir","summary","to_owned","transaction","transaction_builder","transaction_id","try_from","try_into","type_id","votes","vzip","log_content","log_content","message_log","message_log","transaction_id","Address","Certificate","Genesis","Key","Rest","Transaction","Votes","address","certificate","genesis","key","rest","transaction","votes","Address","account","account_expect_fail","address_command","borrow","borrow_mut","delegation","delegation_expect_fail","deref","deref_mut","drop","from","info","info_expect_fail","init","into","into_request","new","single","single_expect_fail","try_from","try_into","type_id","vzip","Certificate","borrow","borrow_mut","command","deref","deref_mut","drop","fmt","from","init","into","into_request","new","new_private_vote_cast","new_private_vote_tally","new_public_vote_cast","new_public_vote_tally","new_stake_delegation","new_stake_pool_registration","new_stake_pool_retirement","new_update_proposal","new_update_vote","new_vote_plan","sign","stake_pool_id","try_from","try_into","type_id","vote_plan_id","vzip","Genesis","borrow","borrow_mut","decode","deref","deref_mut","drop","encode","encode_expect_fail","from","genesis_command","hash","hash_expect_fail","init","init","into","into_request","new","try_from","try_into","type_id","vzip","DEFAULT_KEY_TYPE","Key","borrow","borrow_mut","convert_from_bytes_string","convert_from_bytes_string_expect_fail","convert_to_bytes_file","convert_to_bytes_file_expect_fail","convert_to_public_string","convert_to_public_string_expect_fail","deref","deref_mut","drop","dump_bytes_to_file","from","generate","generate_default","generate_expect_fail","generate_with_seed","generate_with_seed_expect_fail","init","into","into_request","key_command","new","try_from","try_into","type_id","vzip","Rest","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","rest_command","try_from","try_into","type_id","v0","v0","v1","v1","vzip","RestV0","account_stats","block","block","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","leadership_log","message","message","new","node","node","settings","shutdown","stake_pool","stake_pools","tip","tip_expect_fail","try_from","try_into","type_id","utxo","utxo","v0_command","vote","vote","vzip","Block","block_command","borrow","borrow_mut","deref","deref_mut","drop","from","get","get_expect_fail","init","into","into_request","new","next","next_expect_fail","try_from","try_into","type_id","vzip","Message","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","logs","message_command","new","post","try_from","try_into","type_id","vzip","Node","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","node_command","stats","try_from","try_into","type_id","vzip","UtxO","assert_contains","borrow","borrow_mut","deref","deref_mut","drop","expect_item_not_found","expect_not_found","from","get","get_by_item","init","into","into_request","new","try_from","try_into","type_id","utxo_command","vzip","Vote","active_vote_plans","active_voting_committees","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vote_command","vzip","RestV1","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","v1_command","vote","vote","vzip","Vote","account_votes","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vote_command","vzip","Transaction","add_account","add_account_expect_fail","add_account_from_legacy","add_certificate","add_input","add_input_expect_fail","add_input_from_utxo","add_input_from_utxo_with_value","add_output","add_witness","add_witness_expect_fail","auth","borrow","borrow_mut","command","convert_to_message","convert_to_message_expect_fail","create_witness","deref","deref_mut","drop","finalize","finalize_expect_fail","finalize_with_fee","fragment_id","from","id","info","init","into","into_request","make_transaction","make_witness","make_witness_expect_fail","new","new_transaction","seal","set_expiry_date","try_from","try_into","type_id","vzip","Committee","Crs","Tally","Votes","borrow","borrow_mut","committee","committee","crs","crs","deref","deref_mut","drop","election_public_key","from","init","into","into_request","new","tally","tally","try_from","try_into","type_id","update_proposal","update_vote","votes_command","vzip","Committee","CommunicationKey","MemberKey","borrow","borrow_mut","committee_command","communication_key","communication_key","deref","deref_mut","drop","from","init","into","into_request","member_key","member_key","new","try_from","try_into","type_id","vzip","CommunicationKey","borrow","borrow_mut","communication_key_command","deref","deref_mut","drop","from","generate","init","into","into_request","new","to_public","try_from","try_into","type_id","vzip","MemberKey","borrow","borrow_mut","deref","deref_mut","drop","from","generate","init","into","into_request","member_key_command","new","to_public","try_from","try_into","type_id","vzip","Crs","borrow","borrow_mut","crs_command","deref","deref_mut","drop","from","generate","init","into","into_request","new","try_from","try_into","type_id","vzip","Tally","borrow","borrow_mut","decrypt_results","decrypt_results_expect_fail","decryption_shares","deref","deref_mut","drop","from","init","into","into_request","merge_results","merge_shares","new","tally_command","try_from","try_into","type_id","vzip","AddressCommand","CertificateCommand","GenesisCommand","JCliCommand","KeyCommand","RestCommand","TransactionCommand","VotesCommand","address","address","borrow","borrow_mut","certificate","certificate","command","deref","deref_mut","drop","from","genesis","genesis","init","into","into_request","key","key","new","rest","rest","transaction","transaction","try_from","try_into","type_id","votes","votes","vzip","AccountCommand","AddressCommand","InfoCommand","SingleCommand","account","account","borrow","borrow_mut","command","deref","deref_mut","drop","from","info","info","init","into","into_request","new","single","single","try_from","try_into","type_id","vzip","AccountCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","prefix","public_key","test_discrimination","try_from","try_into","type_id","vzip","InfoCommand","address","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vzip","SingleCommand","borrow","borrow_mut","build","command","delegation_key","deref","deref_mut","drop","from","init","into","into_request","new","prefix","public_key","test_discrimination","try_from","try_into","type_id","vzip","CertificateCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","fmt","from","init","into","into_request","new","new_stake_delegation","payload_type_to_string","private_vote_cast","private_vote_tally","public_vote_cast","public_vote_tally","retire","sign","stake_pool_id","stake_pool_registration","try_from","try_into","type_id","update_proposal","update_vote","vote","vote_plan_id","vzip","GenesisCommand","GenesisDecodeCommand","GenesisEncodeCommand","GenesisHashCommand","borrow","borrow_mut","command","decode","decode","deref","deref_mut","drop","encode","encode","from","hash","hash","init","init","into","into_request","new","try_from","try_into","type_id","vzip","GenesisDecodeCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","new","output","try_from","try_into","type_id","vzip","GenesisEncodeCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","new","output","try_from","try_into","type_id","vzip","GenesisHashCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","new","try_from","try_into","type_id","vzip","KeyCommand","KeyFromBytesCommand","KeyGenerateCommand","KeyToBytesCommand","KeyToPublicCommand","borrow","borrow_mut","command","deref","deref_mut","drop","from","from_bytes","from_bytes","generate","generate","init","into","into_request","new","to_bytes","to_bytes","to_public","to_public","try_from","try_into","type_id","vzip","KeyFromBytesCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","key_type","new","try_from","try_into","type_id","vzip","KeyGenerateCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","key_type","new","seed","try_from","try_into","type_id","vzip","KeyToBytesCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","new","output","try_from","try_into","type_id","vzip","KeyToPublicCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","input","into","into_request","new","output","try_from","try_into","type_id","vzip","RestCommand","V0Command","V1Command","borrow","borrow_mut","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","v0","v0","v1","v1","vzip","BlockCommand","MessageCommand","NodeCommand","UtxOCommand","V0Command","VoteCommand","account_stats","block","block","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","leadership_log","message","message","new","node","node","settings","shutdown","stake_pool","stake_pools","tip","transaction","try_from","try_into","type_id","utxo","utxo","vote","vote","vzip","BlockCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","get","init","into","into_request","new","next","try_from","try_into","type_id","vzip","MessageCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","logs","new","post","try_from","try_into","type_id","vzip","NodeCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","stats","try_from","try_into","type_id","vzip","UtxOCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","fragment_id","from","get","host","init","into","into_request","new","output_index","try_from","try_into","type_id","vzip","VoteCommand","active_committees","active_vote_plans","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vzip","V1Command","VoteCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vote","vote","vzip","VoteCommand","account_votes","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vzip","TransactionCommand","add_account","add_certificate","add_input","add_output","add_witness","auth","borrow","borrow_mut","build","command","deref","deref_mut","drop","finalize","finalize_with_fee","fmt","from","id","info","init","into","into_request","make_transaction","make_witness","new","new_transaction","seal","set_expiry_date","to_message","try_from","try_into","type_id","vzip","CommitteeCommand","CrsCommand","ElectionPublicKeyCommand","TallyCommand","VotesCommand","borrow","borrow_mut","build","command","committee","committee","crs","crs","deref","deref_mut","drop","election_public_key","election_public_key","fmt","from","init","into","into_request","new","tally","tally","try_from","try_into","type_id","update_proposal","update_vote","vzip","CommitteeCommand","CommunicationKeyCommand","MemberKeyCommand","borrow","borrow_mut","command","communication_key","communication_key","deref","deref_mut","drop","from","init","into","into_request","member_key","member_key","new","try_from","try_into","type_id","vzip","CommunicationKeyCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","generate","init","into","into_request","new","to_public","try_from","try_into","type_id","vzip","MemberKeyCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","generate","init","into","into_request","new","to_public","try_from","try_into","type_id","vzip","CrsCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","generate","init","into","into_request","new","try_from","try_into","type_id","vzip","ElectionPublicKeyCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","generate","init","into","into_request","new","try_from","try_into","type_id","vzip","TallyCommand","borrow","borrow_mut","build","command","decrypt_results","decryption_shares","deref","deref_mut","drop","from","init","into","into_request","merge_results","merge_shares","new","try_from","try_into","type_id","vzip","Witness","WitnessData","WitnessType","witness","Account","UTxO","Unknown","Witness","WitnessData","WitnessType","account_spending_counter","addr_type","addr_type","block_hash","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","file","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","into_witness","new","new_account","new_utxo","private_key_path","secret_bech32","spending_counter","spending_counter","to_owned","to_string","transaction_id","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_witness_key","CertificateBuilder","Error","FragmentCheck","FragmentSender","FragmentsCheck","TransactionBuilder","TransactionNotInBlock","TransactionsNotInBlock","borrow","borrow_mut","certificate_builder","deref","deref_mut","drop","fmt","fmt","fragment_check","fragment_sender","fragments_check","from","init","into","into_request","provide","to_string","transaction_builder","try_from","try_into","type_id","vzip","log_content","log_content","message_log","message_log","transaction_id","CertificateBuilder","SignedStakePoolCertBuilder","borrow","borrow","borrow_mut","borrow_mut","build","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_request","into_request","jcli","jcli","management_threshold","management_threshold","new","new","new_signed_stake_pool_cert","new_signed_stake_pool_delegation","new_signed_vote_plan","owner_pk","owner_pk","pool_kes_pk","pool_kes_pk","pool_vrf_pk","pool_vrf_pk","stake_key_file","stake_key_file","start_validity","start_validity","tax_type","tax_type","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FragmentCheck","assert_in_block","assert_in_block_with_wait","assert_log_shows_in_block","assert_log_shows_rejected","assert_rejected","assert_rejected_summary","borrow","borrow_mut","deref","deref_mut","drop","fragment_id","from","id","init","into","into_request","jcli","jormungandr","new","summary","try_from","try_into","type_id","vzip","wait_until_processed","FragmentSender","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","jcli","jormungandr","new","send","send_many","try_from","try_into","type_id","vzip","FragmentsCheck","borrow","borrow_mut","check_log_shows_in_block","deref","deref_mut","drop","from","init","into","into_request","jcli","jormungandr","new","try_from","try_into","type_id","vzip","wait_until_all_processed","wait_until_in_block","TransactionBuilder","add_account","add_account_expect_fail","add_account_from_legacy","add_auth","add_certificate","add_input","add_input_expect_fail","add_input_from_utxo","add_input_from_utxo_with_value","add_output","add_witness","add_witness_expect_fail","borrow","borrow_mut","build_transaction_from_utxo","create_witness","create_witness_default","deref","deref_mut","drop","finalize","finalize_expect_fail","finalize_with_fee","fragment_id","from","genesis_hash","info","init","into","into_request","jcli","make_and_add_witness_default","make_witness","make_witness_expect_fail","new","new_transaction","seal","seal_with_witness","seal_with_witness_data","set_expiry_date","staging_dir","staging_dir","staging_file","staging_file_path","to_message","to_message_expect_fail","transaction_id","try_from","try_into","type_id","vzip","BackwardCompatibleRest","Block0","Block0ConfigurationBuilder","CannotDeserialize","CannotGetRestStatus","CannotSendFragment","CannotSendFragmentBatch","ConfigurableNodeConfig","ConfiguredStarter","DEBUG","ERROR","EitherHashOrBlock0","EntryNotFoundInLogs","ErrorInLogs","Exited","Explorer","ExplorerError","ExplorerProcess","FaketimeConfig","File","Fixture","FragmentNode","FragmentNodeError","FsFixture","Hash","Hash","HashParseError","INFO","InMemory","InvalidBlock0Hash","Jormungandr","JormungandrBootstrapper","JormungandrError","JormungandrError","JormungandrLogger","JormungandrNotLaunched","JormungandrParams","JormungandrProcess","JormungandrRest","JormungandrStateVerifier","Leader","LeadershipMode","LegacyConfig","LegacyConfigError","LegacyNodeConfig","LegacyNodeConfigBuilder","LegacyNodeConfigConverter","LegacyNodeConfigManager","ListFragmentError","Log","LogLevel","MemPoolCheck","NodeAlias","NodeBlock0","NodeConfigBuilder","NodeConfigManager","NonSuccessErrorCode","Params","Passive","PersistenceMode","Persistent","PollError","PortAlreadyInUse","ProcessExited","ProcessStillActive","RawRest","ReadBytes","RemoteJormungandr","RemoteJormungandrBuilder","RequestError","ReqwestError","Rest","RestError","RestSettings","Running","SecretModelFactory","SerdeYaml","ShutdownError","StartParamsNotDefined","Starter","Starting","StartupError","StartupVerificationMode","Status","StdErr","TRACE","Temp","TestingDirectory","Timeout","Timeout","TooManyAttempts","UnknownError","UnsupportedVersion","User","Version","WARN","alias","alias","alias","alias","alias","as_communication_params","assert_accepted_rejected","assert_bad_request","benchmark","bft","blockchain_configuration","bootstrap_from_trusted_peers","borrow","borrow","borrow_mut","borrow_mut","build","certificate","child","client","clone","clone_into","cmp","collected_logs","collected_panics","compare_explorer_schema","config","config","configuration","configured_starter","cors","deref","deref","deref_mut","deref_mut","deserialize","download_last_n_releases","drift","drop","drop","enable_debug","eq","equivalent","explorer","file","file","fmt","fmt","fmt","fmt","fragment_id","fragment_logs","fragment_node","from","from","from_str","from_str","genesis","genesis","genesis","get_available_port","get_hash","get_jormungandr_bin","grpc","grpc","grpc","grpc_client","hash","init","init","initial","inner","into","into","into_request","into_request","jormungandr_app","jormungandr_app_path","jrpc","jrpc","leadership","leadership_mode","legacy","log","log","log_content","log_file_path","log_in_block_fragment","log_pending_fragment","log_rejected_fragment","logger","logger","logger","logger","logs_collector","major","mempool","mempool","minimal_setup","minor","new","node_alias","node_config","node_config","node_config","node_config","node_config","node_config","node_config_path","offset","on_fail","p2p","p2p","p2p_listen_address","p2p_listen_address","p2p_public_address","p2p_public_address","panics_collector","parse","partial_cmp","patch","pre","process","provide","raw","remote","rest","rest","rest","rest","rest","rest","rest_socket_addr","rest_socket_addr","rewards_history","rewards_history","secret","secret_path","send_batch_fragments","send_fragment","serialize","set_node_config_path","set_p2p_public_address","set_rest_socket_addr","settings","single_log","skip_bootstrap","sleep","snapshot_before","starter","storage","storage","temp_dir","temp_dir","timeout","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","uri","uri_from_socket_addr","use_https","verbose","verbose","verification_mode","verifier","version","version","version_0_8_19","vzip","vzip","write_node_config","alias","alias","fragment_id","fragment_ids","logs","logs","reason","reason","error_lines","logs","stderr","checks","response","status","log_content","timeout","entry","log_content","log_content","timeout","Block0ConfigurationBuilder","EitherHashOrBlock0","LAZY","LAZY","NEXT_AVAILABLE_PORT_NUMBER","NodeConfigBuilder","NodeConfigManager","NodeSecretExtension","OCCUPIED_PORTS","SecretModelFactory","__private_field","__private_field","__stability","__stability","__static_ref_initialize","__static_ref_initialize","block0","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","drop","drop","from","from","get_available_port","init","init","into","into","into_request","into_request","jormungandr_config","node","secret","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Block0ConfigurationBuilder","block0_config_builder","Block0ConfigurationBuilder","DEFAULT_SLOT_DURATION","blockchain_configuration","borrow","borrow_mut","build","clone","clone_into","default","default_initial","default_leaders","deref","deref_mut","deserialize","drop","fmt","from","init","initial","into","into_request","minimal_setup","minimal_setup","serialize","to_owned","try_from","try_into","type_id","vzip","with_active_slot_coeff","with_block0_consensus","with_block_content_max_size","with_certs","with_committee_ids","with_committees","with_consensus_genesis_praos_active_slot_coeff","with_consensus_leaders_ids","with_discrimination","with_epoch_stability_depth","with_fees_go_to","with_funds","with_funds_split_if_needed","with_funds_split_if_needed_recursively","with_initial","with_kes_update_speed","with_leader","with_leader_key_pair","with_leader_signing_key","with_linear_fees","with_proposal_expiration","with_reward_parameters","with_signed_certs","with_slot_duration","with_slots_per_epoch","with_some_consensus_leader","with_token","with_total_rewards_supply","with_treasury","with_treasury_parameters","with_tx_max_expiry_epochs","with_utxo","with_utxos","Block0","EitherHashOrBlock0","Hash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","NodeConfigBuilder","NodeConfigManager","manager","node_config_builder","NodeConfigManager","as_communication_params","borrow","borrow_mut","deref","deref_mut","drop","file","fmt","from","init","into","into_request","log_file_path","node_config","node_config_path","p2p_listen_address","p2p_public_address","rest_socket_addr","set_node_config_path","set_p2p_public_address","set_rest_socket_addr","try_from","try_into","type_id","vzip","write_node_config","DEFAULT_HOST","DEFAULT_RPC_THREADS_AMOUNT","NodeConfigBuilder","borrow","borrow_mut","build","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_request","jrpc","log","mempool","p2p","rest","storage","to_owned","try_from","try_into","type_id","vzip","with_listen_address","with_log","with_log_level","with_mempool","with_policy","with_public_address","with_rest_cors_config","with_rest_tls_config","with_storage","with_trusted_peers","without_log","NodeSecretExtension","SecretModelFactory","bft","bft","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","from","genesis","genesis","init","into","into","into_request","is_defined","to_owned","try_from","try_into","type_id","vzip","write_to_file_if_defined","write_to_file_if_defined","Bootstrap","ClientError","Explorer","ExplorerError","ExplorerProcess","LastBlockResponse","ReqwestError","SerializationError","address","block","block_by_id","blocks","blocks_at_chain_length","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","client","client","client","client_mut","clone","clone_into","compare_schema","configuration","configuration","configuration","current_time","data","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","disable_logs","drop","drop","drop","drop","enable_logs","epoch","fmt","fmt","from","from","from","from","from","from","handler","init","init","init","into","into","into","into_request","into_request","into_request","is_up","last_block","new","new","print_log","print_log","print_request","provide","run","settings","shutdown","source","stake_pool","stake_pools","to_owned","to_string","transaction","transaction_certificates","transactions_address","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uri","verifiers","vote_plan","vote_plans","vzip","vzip","vzip","wait_to_be_up","wrappers","GraphQlClient","GraphQlClientError","ReqwestError","base_url","base_url","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","disable_print","drop","drop","enable_print","fmt","fmt","from","from","from","init","init","into","into","into_request","into_request","new","print_out","provide","run","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExplorerConfiguration","ExplorerConfigurationBuilder","ExplorerParams","address","address_bech32_prefix","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","config","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","explorer_listen_address","explorer_listen_http_address","explorer_port","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","log_dir","logs_dir","new","node_address","params","params","query_complexity_limit","query_depth_limit","serialize","serialize","storage_dir","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Address","AllBlocks","AllStakePools","AllVotePlans","Block","BlockById","BlocksByChainLength","ChainLength","Epoch","EpochNumber","ExternalProposalId","LastBlock","NonZero","PoolId","PublicKey","Settings","Slot","StakePool","TimeOffsetSeconds","TransactionById","TransactionByIdCertificates","TransactionsByAddress","Value","VotePlanById","VotePlanId","Weight","address","all_blocks","all_stake_pools","all_vote_plans","block","block_by_id","blocks_by_chain_length","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","build_query","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_block","settings","stake_pool","transaction_by_id","transaction_by_id_certificates","transactions_by_address","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_plan_by_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddressAddress","Boolean","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","Variables","__QUERY_WORKAROUND","address","bech32","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","fmt","fmt","from","from","from","id","init","init","init","into","into","into","into_request","into_request","into_request","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AddBftLeader","AddCommitteeId","AllBlocksTip","AllBlocksTipBlocks","AllBlocksTipBlocksEdges","AllBlocksTipBlocksEdgesNode","AllBlocksTipBlocksEdgesNodeBranches","AllBlocksTipBlocksEdgesNodeDate","AllBlocksTipBlocksEdgesNodeDateEpoch","AllBlocksTipBlocksEdgesNodeLeader","AllBlocksTipBlocksEdgesNodeLeaderOnBftLeader","AllBlocksTipBlocksEdgesNodeLeaderOnPool","AllBlocksTipBlocksEdgesNodePreviousBlock","AllBlocksTipBlocksEdgesNodeTransactions","AllBlocksTipBlocksEdgesNodeTransactionsEdges","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNode","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeBlocks","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeBlocksDate","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificate","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnEvmMapping","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnMintToken","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnOwnerStakeDelegation","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistration","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationPool","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewards","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRetirement","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolUpdate","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegation","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegationAccount","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegationPools","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposal","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalChanges","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalProposerId","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateVote","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateVoteVoterId","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVoteCast","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlan","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanProposals","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanVoteEnd","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanVoteStart","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVoteTally","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInitialConfigurationParams","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInitialConfigurationParamsConfigParams","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInputs","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInputsAddress","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeOutputs","AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeOutputsAddress","BFT","BftLeader","Block0Date","BlockContentMaxSize","BlockDateEpoch","Boolean","ChainLength","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusTypeEnum","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","LinearFee","LinearRewardParams","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerVoteCertificateFee","Pool","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","Slot","SlotDuration","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","block0_date","blockDate","block_content_max_size","blocks","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","chain_length","changes","coefficient","committee_end","configParam","config_params","config_params","consensus_type","constant","constant","constant","date","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","edges","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_configuration_params","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_confirmed","kes_update_speed","last","leader","management_threshold","max","max_limit","max_limit","milli","min","name","node","node","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","previous_block","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","remove_bft_leader","remove_committee_id","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot","slot_duration","slots_per_epoch","start_validity","start_validity","tip","total_count","total_count","total_count","total_input","total_output","transaction_max_expiry_epochs","transactions","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AllStakePoolsTip","AllStakePoolsTipAllStakePools","AllStakePoolsTipAllStakePoolsEdges","AllStakePoolsTipAllStakePoolsEdgesNode","AllStakePoolsTipAllStakePoolsEdgesNodeBlocks","AllStakePoolsTipAllStakePoolsEdgesNodeBlocksEdges","AllStakePoolsTipAllStakePoolsEdgesNodeBlocksEdgesNode","AllStakePoolsTipAllStakePoolsEdgesNodeRegistration","AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationPool","AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewardAccount","AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewards","AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewardsRatio","AllStakePoolsTipAllStakePoolsEdgesNodeRetirement","AllStakePoolsTipAllStakePoolsNodes","AllStakePoolsTipAllStakePoolsNodesBlocks","AllStakePoolsTipAllStakePoolsNodesBlocksEdges","AllStakePoolsTipAllStakePoolsNodesBlocksEdgesNode","AllStakePoolsTipAllStakePoolsNodesRegistration","AllStakePoolsTipAllStakePoolsNodesRegistrationPool","AllStakePoolsTipAllStakePoolsNodesRegistrationRewardAccount","AllStakePoolsTipAllStakePoolsNodesRegistrationRewards","AllStakePoolsTipAllStakePoolsNodesRegistrationRewardsRatio","AllStakePoolsTipAllStakePoolsNodesRetirement","Boolean","Float","ID","Int","NonZero","OPERATION_NAME","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PublicKey","QUERY","ResponseData","TimeOffsetSeconds","Value","Variables","__QUERY_WORKAROUND","all_stake_pools","blocks","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","edges","edges","first","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","management_threshold","management_threshold","max_limit","max_limit","node","node","node","nodes","numerator","numerator","operators","operators","owners","owners","pool","pool","pool","poolInfo","pool_id","pool_id","pool_id","ratio","ratio","registration","registration","registration","retirement","retirement","retirement","retirement_time","retirement_time","reward_account","reward_account","rewards","rewards","serialize","start_validity","start_validity","tip","total_count","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AllVotePlansTip","AllVotePlansTipAllVotePlans","AllVotePlansTipAllVotePlansEdges","AllVotePlansTipAllVotePlansEdgesNode","AllVotePlansTipAllVotePlansEdgesNodeCommitteeEnd","AllVotePlansTipAllVotePlansEdgesNodeProposals","AllVotePlansTipAllVotePlansEdgesNodeProposalsOptions","AllVotePlansTipAllVotePlansEdgesNodeProposalsTally","AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPrivateStatus","AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPrivateStatusOptions","AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPublicStatus","AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPublicStatusOptions","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotes","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdges","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNode","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodeAddress","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayload","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayloadOnVotePayloadPrivateStatus","AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayloadOnVotePayloadPublicStatus","AllVotePlansTipAllVotePlansEdgesNodeVoteEnd","AllVotePlansTipAllVotePlansEdgesNodeVoteStart","BlockDateEpoch","Boolean","EpochNumber","ExternalProposalId","Float","ID","Int","OPERATION_NAME","Other","PRIVATE","PUBLIC","PayloadType","QUERY","ResponseData","Slot","TallyPrivateStatus","TallyPublicStatus","Variables","VotePayloadPrivateStatus","VotePayloadPublicStatus","VotePlanId","Weight","__QUERY_WORKAROUND","address","all_vote_plans","blockDate","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","choice","committee_end","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","edges","encrypted_vote","end","end","end","epoch","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","node","node","options","options","options","payload","payload_type","proof","proposal_id","proposals","results","results","serialize","serialize","slot","start","start","start","tally","tip","total_count","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_end","vote_start","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockBlock","Boolean","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","Variables","__QUERY_WORKAROUND","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","fmt","fmt","from","from","from","id","id","init","init","init","into","into","into","into_request","into_request","into_request","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AddBftLeader","AddCommitteeId","BFT","BftLeader","Block0Date","BlockByIdBlock","BlockByIdBlockBranches","BlockByIdBlockDate","BlockByIdBlockDateEpoch","BlockByIdBlockLeader","BlockByIdBlockLeaderOnBftLeader","BlockByIdBlockLeaderOnPool","BlockByIdBlockPreviousBlock","BlockByIdBlockTransactions","BlockByIdBlockTransactionsEdges","BlockByIdBlockTransactionsEdgesNode","BlockByIdBlockTransactionsEdgesNodeBlocks","BlockByIdBlockTransactionsEdgesNodeBlocksDate","BlockByIdBlockTransactionsEdgesNodeCertificate","BlockByIdBlockTransactionsEdgesNodeCertificateOnEvmMapping","BlockByIdBlockTransactionsEdgesNodeCertificateOnMintToken","BlockByIdBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegation","BlockByIdBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistration","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationPool","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewards","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRetirement","BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolUpdate","BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegation","BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegationAccount","BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegationPools","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposal","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalChanges","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalProposerId","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateVote","BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateVoteVoterId","BlockByIdBlockTransactionsEdgesNodeCertificateOnVoteCast","BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlan","BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd","BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanProposals","BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanVoteEnd","BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanVoteStart","BlockByIdBlockTransactionsEdgesNodeCertificateOnVoteTally","BlockByIdBlockTransactionsEdgesNodeInitialConfigurationParams","BlockByIdBlockTransactionsEdgesNodeInitialConfigurationParamsConfigParams","BlockByIdBlockTransactionsEdgesNodeInputs","BlockByIdBlockTransactionsEdgesNodeInputsAddress","BlockByIdBlockTransactionsEdgesNodeOutputs","BlockByIdBlockTransactionsEdgesNodeOutputsAddress","BlockContentMaxSize","BlockDateEpoch","Boolean","ChainLength","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusTypeEnum","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","LinearFee","LinearRewardParams","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerVoteCertificateFee","Pool","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","Slot","SlotDuration","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","block","block0_date","blockDate","block_content_max_size","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","chain_length","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coefficient","committee_end","configParam","config_params","config_params","consensus_type","constant","constant","constant","date","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_configuration_params","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_confirmed","kes_update_speed","leader","management_threshold","max","max_limit","max_limit","milli","min","name","node","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","previous_block","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","remove_bft_leader","remove_committee_id","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot","slot_duration","slots_per_epoch","start_validity","start_validity","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_count","total_count","total_input","total_output","transaction_max_expiry_epochs","transactions","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddCommitteeId","BFT","BftLeader","Block0Date","BlockContentMaxSize","BlockDateEpoch","BlocksByChainLengthBlocksByChainLength","BlocksByChainLengthBlocksByChainLengthBranches","BlocksByChainLengthBlocksByChainLengthDate","BlocksByChainLengthBlocksByChainLengthDateEpoch","BlocksByChainLengthBlocksByChainLengthLeader","BlocksByChainLengthBlocksByChainLengthLeaderOnBftLeader","BlocksByChainLengthBlocksByChainLengthLeaderOnPool","BlocksByChainLengthBlocksByChainLengthPreviousBlock","BlocksByChainLengthBlocksByChainLengthTransactions","BlocksByChainLengthBlocksByChainLengthTransactionsEdges","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNode","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeBlocks","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeBlocksDate","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificate","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnEvmMapping","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnMintToken","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnOwnerStakeDelegation","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistration","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationPool","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewards","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRetirement","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolUpdate","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegation","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegationAccount","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegationPools","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposal","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalChanges","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalProposerId","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateVote","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateVoteVoterId","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVoteCast","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlan","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanProposals","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanVoteEnd","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanVoteStart","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVoteTally","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeInputs","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeInputsAddress","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeOutputs","BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeOutputsAddress","Boolean","ChainLength","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusTypeEnum","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","LinearFee","LinearRewardParams","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerVoteCertificateFee","Pool","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","Slot","SlotDuration","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","block0_date","blockDate","block_content_max_size","blocks","blocks","blocks_by_chain_length","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","chain_length","changes","coefficient","committee_end","configParam","config_params","consensus_type","constant","constant","constant","date","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_confirmed","kes_update_speed","leader","length","management_threshold","max","max_limit","max_limit","milli","min","name","node","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","previous_block","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","remove_bft_leader","remove_committee_id","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot","slot_duration","slots_per_epoch","start_validity","start_validity","total_count","total_count","total_input","total_output","transaction_max_expiry_epochs","transactions","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Boolean","EpochEpoch","EpochEpochFirstBlock","EpochEpochLastBlock","EpochNumber","EpochTip","EpochTipBlocksByEpoch","EpochTipBlocksByEpochEdges","EpochTipBlocksByEpochEdgesNode","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","Variables","__QUERY_WORKAROUND","blocks_by_epoch","blocks_limit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","epoch","first_block","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","id","id","id","id","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","last_block","node","serialize","tip","total_blocks","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddCommitteeId","BFT","BftLeader","Block0Date","BlockContentMaxSize","BlockDateEpoch","Boolean","ChainLength","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusTypeEnum","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","LastBlockTip","LastBlockTipBlock","LastBlockTipBlockBranches","LastBlockTipBlockDate","LastBlockTipBlockDateEpoch","LastBlockTipBlockLeader","LastBlockTipBlockLeaderOnBftLeader","LastBlockTipBlockLeaderOnPool","LastBlockTipBlockPreviousBlock","LastBlockTipBlockTransactions","LastBlockTipBlockTransactionsEdges","LastBlockTipBlockTransactionsEdgesNode","LastBlockTipBlockTransactionsEdgesNodeBlocks","LastBlockTipBlockTransactionsEdgesNodeBlocksDate","LastBlockTipBlockTransactionsEdgesNodeCertificate","LastBlockTipBlockTransactionsEdgesNodeCertificateOnEvmMapping","LastBlockTipBlockTransactionsEdgesNodeCertificateOnMintToken","LastBlockTipBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegation","LastBlockTipBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegationPools","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistration","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationPool","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewards","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRetirement","LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolUpdate","LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegation","LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegationAccount","LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegationPools","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposal","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalChanges","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalChangesConfigParams","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalProposerId","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateVote","LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateVoteVoterId","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVoteCast","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlan","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanCommitteeEnd","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanProposals","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanVoteEnd","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanVoteStart","LastBlockTipBlockTransactionsEdgesNodeCertificateOnVoteTally","LastBlockTipBlockTransactionsEdgesNodeInputs","LastBlockTipBlockTransactionsEdgesNodeInputsAddress","LastBlockTipBlockTransactionsEdgesNodeOutputs","LastBlockTipBlockTransactionsEdgesNodeOutputsAddress","LinearFee","LinearRewardParams","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerVoteCertificateFee","Pool","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","Slot","SlotDuration","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","block","block0_date","blockDate","block_content_max_size","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branches","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","chain_length","changes","coefficient","committee_end","configParam","config_params","consensus_type","constant","constant","constant","date","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","epoch","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_confirmed","kes_update_speed","leader","management_threshold","max","max_limit","max_limit","milli","min","name","node","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","previous_block","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","remove_bft_leader","remove_committee_id","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot","slot_duration","slots_per_epoch","start_validity","start_validity","tip","total_count","total_count","total_input","total_output","transaction_max_expiry_epochs","transactions","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Boolean","Float","ID","Int","OPERATION_NAME","QUERY","ResponseData","SettingsSettings","SettingsSettingsEpochStabilityDepth","SettingsSettingsFees","SettingsSettingsFeesPerCertificateFees","SettingsSettingsFeesPerVoteCertificateFees","Variables","__QUERY_WORKAROUND","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","coefficient","constant","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","epoch_stability_depth","epoch_stability_depth","fees","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","per_certificate_fees","per_vote_certificate_fees","serialize","settings","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Boolean","Float","ID","Int","NonZero","OPERATION_NAME","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PublicKey","QUERY","ResponseData","StakePoolStakePool","StakePoolStakePoolBlocks","StakePoolStakePoolBlocksEdges","StakePoolStakePoolBlocksEdgesNode","StakePoolStakePoolRegistration","StakePoolStakePoolRegistrationPool","StakePoolStakePoolRegistrationRewardAccount","StakePoolStakePoolRegistrationRewards","StakePoolStakePoolRegistrationRewardsRatio","StakePoolStakePoolRetirement","TimeOffsetSeconds","Value","Variables","__QUERY_WORKAROUND","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","first","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","management_threshold","max_limit","node","numerator","operators","owners","pool","pool","poolInfo","pool_id","pool_id","ratio","registration","registration","retirement","retirement","retirement_time","reward_account","rewards","serialize","stake_pool","start_validity","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddCommitteeId","BFT","Block0Date","BlockContentMaxSize","BlockDateEpoch","Boolean","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusTypeEnum","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","LinearFee","LinearRewardParams","Milli","NonZero","OPERATION_NAME","Other","Other","PRODUCTION","PerCertificateFee","PerVoteCertificateFee","PoolRewardParticipationCapping","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","Slot","SlotDuration","SlotsPerEpoch","TEST","TransactionByIdTransaction","TransactionByIdTransactionBlocks","TransactionByIdTransactionBlocksDate","TransactionByIdTransactionInitialConfigurationParams","TransactionByIdTransactionInitialConfigurationParamsConfigParams","TransactionByIdTransactionInputs","TransactionByIdTransactionInputsAddress","TransactionByIdTransactionOutputs","TransactionByIdTransactionOutputsAddress","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryParams","Value","Variables","__QUERY_WORKAROUND","add_bft_leader","add_committee_id","address","address","amount","amount","block0_date","blockDate","block_content_max_size","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coefficient","configParam","config_params","consensus_type","constant","constant","constant","date","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","fees_in_treasury","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initial_configuration_params","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kes_update_speed","max","max_limit","milli","min","numerator","numerator","numerator","numerator","outputs","per_certificate_fees","per_vote_certificate_fees","proposal_expiration","ratio","ratio","ratio","remove_bft_leader","remove_committee_id","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","serialize","serialize","serialize","slot","slot_duration","slots_per_epoch","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","transaction_max_expiry_epochs","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddCommitteeId","BFT","Block0Date","BlockContentMaxSize","BlockDateEpoch","Boolean","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusTypeEnum","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","LinearFee","LinearRewardParams","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerVoteCertificateFee","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","Slot","SlotDuration","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionByIdCertificatesTransaction","TransactionByIdCertificatesTransactionBlocks","TransactionByIdCertificatesTransactionBlocksDate","TransactionByIdCertificatesTransactionCertificate","TransactionByIdCertificatesTransactionCertificateOnEvmMapping","TransactionByIdCertificatesTransactionCertificateOnMintToken","TransactionByIdCertificatesTransactionCertificateOnOwnerStakeDelegation","TransactionByIdCertificatesTransactionCertificateOnOwnerStakeDelegationPools","TransactionByIdCertificatesTransactionCertificateOnPoolRegistration","TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationPool","TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewardAccount","TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewards","TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewardsRatio","TransactionByIdCertificatesTransactionCertificateOnPoolRetirement","TransactionByIdCertificatesTransactionCertificateOnPoolUpdate","TransactionByIdCertificatesTransactionCertificateOnStakeDelegation","TransactionByIdCertificatesTransactionCertificateOnStakeDelegationAccount","TransactionByIdCertificatesTransactionCertificateOnStakeDelegationPools","TransactionByIdCertificatesTransactionCertificateOnUpdateProposal","TransactionByIdCertificatesTransactionCertificateOnUpdateProposalChanges","TransactionByIdCertificatesTransactionCertificateOnUpdateProposalChangesConfigParams","TransactionByIdCertificatesTransactionCertificateOnUpdateProposalProposerId","TransactionByIdCertificatesTransactionCertificateOnUpdateVote","TransactionByIdCertificatesTransactionCertificateOnUpdateVoteVoterId","TransactionByIdCertificatesTransactionCertificateOnVoteCast","TransactionByIdCertificatesTransactionCertificateOnVotePlan","TransactionByIdCertificatesTransactionCertificateOnVotePlanCommitteeEnd","TransactionByIdCertificatesTransactionCertificateOnVotePlanProposals","TransactionByIdCertificatesTransactionCertificateOnVotePlanVoteEnd","TransactionByIdCertificatesTransactionCertificateOnVotePlanVoteStart","TransactionByIdCertificatesTransactionCertificateOnVoteTally","TransactionByIdCertificatesTransactionInputs","TransactionByIdCertificatesTransactionInputsAddress","TransactionByIdCertificatesTransactionOutputs","TransactionByIdCertificatesTransactionOutputsAddress","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","block0_date","blockDate","block_content_max_size","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coefficient","committee_end","configParam","config_params","consensus_type","constant","constant","constant","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kes_update_speed","management_threshold","max","max_limit","max_limit","milli","min","name","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","remove_bft_leader","remove_committee_id","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot_duration","slots_per_epoch","start_validity","start_validity","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_count","transaction","transaction_max_expiry_epochs","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddBftLeader","AddCommitteeId","BFT","Block0Date","BlockContentMaxSize","BlockDateEpoch","Boolean","ConfigParamOnAddBftLeader","ConfigParamOnAddBftLeaderAddBftLeader","ConfigParamOnAddCommitteeId","ConfigParamOnBlock0Date","ConfigParamOnBlockContentMaxSize","ConfigParamOnConsensusType","ConfigParamOnDiscrimination","ConfigParamOnEpochStabilityDepth","ConfigParamOnFeesInTreasury","ConfigParamOnKesUpdateSpeed","ConfigParamOnLinearFee","ConfigParamOnLinearFeePerCertificateFees","ConfigParamOnLinearFeePerVoteCertificateFees","ConfigParamOnMilli","ConfigParamOnPerCertificateFee","ConfigParamOnPerVoteCertificateFee","ConfigParamOnPoolRewardParticipationCapping","ConfigParamOnProposalExpiration","ConfigParamOnRemoveBftLeader","ConfigParamOnRemoveBftLeaderRemoveBftLeader","ConfigParamOnRemoveCommitteeId","ConfigParamOnRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake","ConfigParamOnRewardLimitNone","ConfigParamOnRewardParams","ConfigParamOnRewardParamsRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams","ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams","ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio","ConfigParamOnRewardPot","ConfigParamOnSlotDuration","ConfigParamOnSlotsPerEpoch","ConfigParamOnTransactionMaxExpiryEpochs","ConfigParamOnTreasuryAdd","ConfigParamOnTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParams","ConfigParamOnTreasuryParamsTreasuryParamsRatio","ConsensusType","ConsensusTypeEnum","Discrimination","DiscriminationEnum","EpochNumber","EpochStabilityDepth","EvmMapping","ExternalProposalId","FeesInTreasury","Float","GENESIS_PRAOS","HalvingRewardParams","ID","Int","KesUpdateSpeed","LinearFee","LinearRewardParams","Milli","MintToken","NonZero","OPERATION_NAME","Other","Other","Other","OwnerStakeDelegation","PRIVATE","PRODUCTION","PUBLIC","PayloadType","PerCertificateFee","PerVoteCertificateFee","PoolId","PoolInfoBlocks","PoolInfoRegistration","PoolInfoRegistrationPool","PoolInfoRetirement","PoolRegistration","PoolRetirement","PoolRewardParticipationCapping","PoolUpdate","ProposalExpiration","PublicKey","QUERY","RemoveBftLeader","RemoveCommitteeId","ResponseData","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","Slot","SlotDuration","SlotsPerEpoch","StakeDelegation","TEST","TimeOffsetSeconds","TransactionMaxExpiryEpochs","TransactionsByAddressTip","TransactionsByAddressTipTransactionsByAddress","TransactionsByAddressTipTransactionsByAddressEdges","TransactionsByAddressTipTransactionsByAddressEdgesNode","TransactionsByAddressTipTransactionsByAddressEdgesNodeBlocks","TransactionsByAddressTipTransactionsByAddressEdgesNodeBlocksDate","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificate","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnEvmMapping","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnMintToken","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnOwnerStakeDelegation","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnOwnerStakeDelegationPools","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistration","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationPool","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewardAccount","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewards","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewardsRatio","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRetirement","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolUpdate","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegation","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegationAccount","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegationPools","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposal","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalChanges","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalChangesConfigParams","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalProposerId","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateVote","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateVoteVoterId","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVoteCast","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlan","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanCommitteeEnd","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanProposals","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanVoteEnd","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanVoteStart","TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVoteTally","TransactionsByAddressTipTransactionsByAddressEdgesNodeInputs","TransactionsByAddressTipTransactionsByAddressEdgesNodeInputsAddress","TransactionsByAddressTipTransactionsByAddressEdgesNodeOutputs","TransactionsByAddressTipTransactionsByAddressEdgesNodeOutputsAddress","TreasuryAdd","TreasuryParams","UpdateProposal","UpdateVote","Value","Variables","VoteCast","VotePlan","VotePlanId","VoteTally","__QUERY_WORKAROUND","account","add_bft_leader","add_committee_id","address","address","address","amount","amount","bech32","block0_date","blockDate","block_content_max_size","blocks","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate","certificate_owner_stake_delegation","certificate_owner_stake_delegation","certificate_pool_registration","certificate_pool_registration","certificate_stake_delegation","certificate_stake_delegation","certificate_vote_cast","certificate_vote_cast","certificate_vote_plan","certificate_vote_plan","changes","coefficient","committee_end","configParam","config_params","consensus_type","constant","constant","constant","date","denominator","denominator","denominator","denominator","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","epoch","epoch_rate","epoch_rate","epoch_stability_depth","epoch_start","epoch_start","external_id","fees_in_treasury","fixed","fixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","id","id","id","id","id","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inputs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kes_update_speed","management_threshold","max","max_limit","max_limit","milli","min","name","node","numerator","numerator","numerator","numerator","numerator","operators","outputs","owners","payload_type","per_certificate_fees","per_vote_certificate_fees","pool","pool","poolInfo","pool_id","pool_id","pool_id","pools","pools","proposal_expiration","proposal_id","proposal_index","proposals","proposer_id","ratio","ratio","ratio","ratio","registration","remove_bft_leader","remove_committee_id","retirement","retirement_time","reward_account","reward_limit_by_absolute_stake","reward_limit_none","reward_params","reward_pot","rewards","serialize","serialize","serialize","serialize","slot","slot_duration","slots_per_epoch","start_validity","start_validity","tip","total_count","total_count","transaction_max_expiry_epochs","transactions_by_address","treasury_add","treasury_params","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_end","vote_plan","vote_plan","vote_start","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockDateEpoch","Boolean","EpochNumber","ExternalProposalId","Float","ID","Int","OPERATION_NAME","Other","PRIVATE","PUBLIC","PayloadType","QUERY","ResponseData","Slot","TallyPrivateStatus","TallyPublicStatus","Variables","VotePayloadPrivateStatus","VotePayloadPublicStatus","VotePlanByIdVotePlan","VotePlanByIdVotePlanCommitteeEnd","VotePlanByIdVotePlanProposals","VotePlanByIdVotePlanProposalsOptions","VotePlanByIdVotePlanProposalsTally","VotePlanByIdVotePlanProposalsTallyOnTallyPrivateStatus","VotePlanByIdVotePlanProposalsTallyOnTallyPrivateStatusOptions","VotePlanByIdVotePlanProposalsTallyOnTallyPublicStatus","VotePlanByIdVotePlanProposalsTallyOnTallyPublicStatusOptions","VotePlanByIdVotePlanProposalsVotes","VotePlanByIdVotePlanProposalsVotesEdges","VotePlanByIdVotePlanProposalsVotesEdgesNode","VotePlanByIdVotePlanProposalsVotesEdgesNodeAddress","VotePlanByIdVotePlanProposalsVotesEdgesNodePayload","VotePlanByIdVotePlanProposalsVotesEdgesNodePayloadOnVotePayloadPrivateStatus","VotePlanByIdVotePlanProposalsVotesEdgesNodePayloadOnVotePayloadPublicStatus","VotePlanByIdVotePlanVoteEnd","VotePlanByIdVotePlanVoteStart","VotePlanId","Weight","__QUERY_WORKAROUND","address","blockDate","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","choice","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","committee_end","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","edges","encrypted_vote","end","end","end","epoch","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","id","id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","node","options","options","options","payload","payload_type","proof","proposal_id","proposals","results","results","serialize","serialize","slot","start","start","start","tally","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_count","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vote_end","vote_plan","vote_start","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ExplorerVerifier","InvalidCertificate","Unimplemented","VerifierError","all_blocks_verifier","all_vote_plans_verifier","assert_address","assert_address_owner_delegation","assert_address_pool_registration","assert_address_pool_retirement","assert_address_pool_update","assert_address_stake_delegation","assert_address_update_proposal","assert_address_update_vote","assert_address_vote_cast","assert_address_vote_plan","assert_address_vote_tally","assert_all_block_config_param","assert_all_blocks","assert_all_blocks_owner_delegation","assert_all_blocks_pool_registration","assert_all_blocks_pool_retirement","assert_all_blocks_pool_update","assert_all_blocks_stake_delegation","assert_all_blocks_transaction_param","assert_all_blocks_update_proposal","assert_all_blocks_update_vote","assert_all_blocks_vote_cast","assert_all_blocks_vote_plan","assert_all_blocks_vote_tally","assert_all_stake_pools","assert_all_vote_plans","assert_block_by_chain_length","assert_block_by_chain_length_owner_delegation","assert_block_by_chain_length_pool_registration","assert_block_by_chain_length_pool_retirement","assert_block_by_chain_length_pool_update","assert_block_by_chain_length_stake_delegation","assert_block_by_chain_length_transaction_param","assert_block_by_chain_length_update_proposal","assert_block_by_chain_length_update_vote","assert_block_by_chain_length_vote_cast","assert_block_by_chain_length_vote_plan","assert_block_by_chain_length_vote_tally","assert_block_by_id","assert_block_config_param","assert_block_owner_delegation","assert_block_pool_registration","assert_block_pool_retirement","assert_block_pool_update","assert_block_stake_delegation","assert_block_transaction_param","assert_block_update_proposal","assert_block_update_vote","assert_block_vote_cast","assert_block_vote_plan","assert_block_vote_tally","assert_epoch_stability_depth","assert_fees","assert_last_block","assert_last_block_owner_delegation","assert_last_block_pool_registration","assert_last_block_pool_retirement","assert_last_block_pool_update","assert_last_block_stake_delegation","assert_last_block_transaction_param","assert_last_block_update_proposal","assert_last_block_update_vote","assert_last_block_vote_cast","assert_last_block_vote_plan","assert_last_block_vote_tally","assert_owner_delegation","assert_pool_registration","assert_pool_retirement","assert_pool_update","assert_stake_delegation","assert_stake_pool","assert_transaction_address_params","assert_transaction_certificates","assert_transaction_params","assert_transactions_address","assert_transactions_address_certificate","assert_update_proposal","assert_update_vote","assert_vote_cast","assert_vote_plan","assert_vote_plan_by_id","assert_vote_tally","block_by_id_verifier","blocks_by_chain_length_verifier","borrow","borrow","borrow_mut","borrow_mut","decode_bech32_pk","decode_block","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","last_block_verifier","provide","stake_pool_verifier","to_string","transaction_by_id_verifier","transactions_by_address_verify","try_from","try_from","try_into","try_into","type_id","type_id","vote_plan_verifier","vzip","vzip","received","LastBlockResponse","block","block_date","borrow","borrow_mut","data","deref","deref_mut","drop","fmt","from","init","into","into_request","new","try_from","try_into","type_id","vzip","","CannotSendFragment","CannotSendFragmentBatch","FragmentNode","FragmentNodeError","ListFragmentError","MemPoolCheck","ReqwestError","UnknownError","_DERIVE_core_fmt_Debug_FOR_FragmentNodeError","alias","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fragment_id","fragment_id","fragment_logs","from","from","from","from","init","init","into","into","into_request","into_request","log_content","log_in_block_fragment","log_pending_fragment","log_rejected_fragment","logs","new","provide","send_batch_fragments","send_fragment","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","alias","alias","fragment_id","fragment_ids","logs","logs","reason","reason","JormungandrClient","JormungandrServerImpl","client","node","read_into","server","types","watch","","","","CLIENT_RETRY_WAIT","InvalidAddressFormat","InvalidRequest","JormungandrClient","JormungandrWatchClient","MockClientError","WatchTipNotifier","addr","addr","block_stream_to_vec","block_subscription","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","client","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fragment_stream_to_vec","from","from","from","from_address","from_address","get_blocks","get_fragments","get_genesis_block_hash","handshake","hash_to_bin","hashes_to_bin_vec","headers","headers_stream_to_vec","init","init","init","inner_client","inner_client","into","into","into","into_request","into_request","into_request","message","new","new","provide","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","rt","rt","sync_multiverse","tip","tip_subscription","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upload_blocks","vzip","vzip","vzip","wait_for_chain_length","BlockEvent","ClientAuthRequest","ClientAuthResponse","Gossip","HandshakeRequest","HandshakeResponse","Inner","Inner","Inner","Inner","Inner","PeersRequest","PeersResponse","PullBlocksRequest","PullBlocksToTipRequest","PullHeadersRequest","PushHeadersResponse","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","TipRequest","TipResponse","UploadBlocksResponse","block0","block_event","block_header","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","item","limit","node_client","node_id","node_id","node_server","nodes","nonce","nonce","peers","signature","signature","to","to","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Announce","Item","Missing","Solicit","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","encode","encoded_len","eq","fmt","from","init","into","into_request","merge","to_owned","try_from","try_into","type_id","vzip","","","","","","","","","","","","","","","","","NodeClient","accept_gzip","block_subscription","borrow","borrow_mut","client_auth","clone","clone_into","connect","deref","deref_mut","drop","fmt","fragment_subscription","from","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","init","inner","into","into_request","new","peers","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","send_gzip","tip","to_owned","try_from","try_into","type_id","upload_blocks","vzip","with_interceptor","BlockSubscriptionStream","BlockSubscriptionSvc","ClientAuthSvc","FragmentSubscriptionStream","FragmentSubscriptionSvc","GetBlocksStream","GetBlocksSvc","GetFragmentsStream","GetFragmentsSvc","GetHeadersStream","GetHeadersSvc","GossipSubscriptionStream","GossipSubscriptionSvc","HandshakeSvc","Node","NodeServer","PeersSvc","PullBlocksStream","PullBlocksSvc","PullBlocksToTipStream","PullBlocksToTipSvc","PullHeadersStream","PullHeadersSvc","PushHeadersSvc","TipSvc","UploadBlocksSvc","_Inner","accept_compression_encodings","block_subscription","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","call","client_auth","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fragment_subscription","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","peers","poll_ready","poll_ready","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","send_compression_encodings","tip","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upload_blocks","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_interceptor","Bft","BlockSubscription","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ClientAuth","FragmentSubscription","GenesisPraos","GetBlocks","GetFragments","GetHeaders","GetPeers","GossipSubscription","Handshake","Init","JormungandrServerImpl","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","MethodType","MockBuilder","MockController","MockExitCode","MockLogger","MockServerData","MockVerifier","ProtocolVersion","PullBlocks","PullBlocksToTip","PullHeaders","PushHeaders","Success","Timeout","Tip","UploadBlocks","auth_nonce","block_subscription","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","client_auth","clone","clone","clone_into","clone_into","controller","data","data","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fragment_subscription","from","from","from","from","genesis_block","genesis_hash","get_blocks","get_fragments","get_headers","gossip_subscription","handshake","init","init","init","into","into","into","into_request","into_request","into_request","invalid_block0_hash","invalid_block0_hash","keypair","logger","logger","mock_port","new","peers","port","profile","protocol","protocol_version","pull_blocks","pull_blocks_to_tip","pull_headers","push_headers","start_thread","stop_signal","storage","tip","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upload_blocks","verifier","verifier","vzip","vzip","vzip","ChannelWriter","MockBuilder","borrow","borrow","borrow_mut","borrow_mut","build","build_data","default","deref","deref","deref_mut","deref_mut","drop","drop","flush","from","from","genesis_block","init","init","into","into","into_request","into_request","invalid_block0_hash","mock_port","protocol_version","start_thread","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_genesis_block","with_invalid_block0_hash","with_port","with_protocol_version","write","MockController","address","borrow","borrow_mut","data","deref","deref_mut","drop","finish_and_verify_that","from","genesis_hash","init","into","into_request","new","port","set_genesis","set_protocol","set_tip","set_tip_block","stop","stop_signal","try_from","try_into","type_id","verifier","vzip","AUTH_NONCE_LEN","Error","MockServerData","Read","Storage","TIP_TAG","Write","auth_nonce","block0","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","generate_auth_nonce","genesis_block","genesis_hash","genesis_hash","genesis_hash_mut","get_block","init","init","into","into","into_request","into_request","invalid_block0_hash","invalid_block0_hash","keypair","new","node_id","node_signature","profile","profile","protocol","protocol","protocol_mut","provide","put_block","set_tip","source","storage","storage","tip","to_string","try_from","try_from","try_into","try_into","type_id","type_id","validate_peer_node_id","vzip","vzip","BlockSubscription","ChannelReader","ClientAuth","FragmentSubscription","GetBlocks","GetFragments","GetHeaders","GetPeers","GossipSubscription","Handshake","Init","MethodType","MockLogger","PullBlocks","PullBlocksToTip","PullHeaders","PushHeaders","Tip","UploadBlocks","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","equivalent","executed_at_least_once","fmt","fmt","from","from","from","get_log_content","init","init","init","into","into","into","into_request","into_request","into_request","new","read","serialize","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MockVerifier","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","logger","method_executed_at_least_once","new","try_from","try_into","type_id","vzip","Block","BlockIds","Fragment","FragmentIds","Header","Inner","Inner","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","STRUCT_NAME","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","ScalarWrapper","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","content","content","content","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","ids","ids","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BlockSubscriptionRequest","Inner","MempoolSubscriptionRequest","STRUCT_NAME","ScalarWrapper","SyncMultiverseRequest","TipSubscriptionRequest","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","watch_client","watch_server","","","","","WatchClient","accept_gzip","block_subscription","borrow","borrow_mut","clone","clone_into","connect","deref","deref_mut","drop","fmt","from","init","inner","into","into_request","new","send_gzip","sync_multiverse","tip_subscription","to_owned","try_from","try_into","type_id","vzip","with_interceptor","BlockSubscriptionStream","BlockSubscriptionSvc","SyncMultiverseStream","SyncMultiverseSvc","TipSubscriptionStream","TipSubscriptionSvc","Watch","WatchServer","_Inner","accept_compression_encodings","block_subscription","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","call","call","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","init","init","init","init","init","inner","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","sync_multiverse","tip_subscription","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_interceptor","BackwardCompatibleRest","GITHUB_TOKEN","LAZY","LegacyConfigError","LegacyNodeConfig","LegacyNodeConfigBuilder","LegacyNodeConfigConverter","LegacyNodeConfigManager","Log","Mempool","NodeConfig","P2p","Policy","RELEASES","Rest","TopicsOfInterest","TrustedPeer","__private_field","__stability","__static_ref_initialize","address","blocks","bootstrap","bootstrap_from_trusted_peers","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","connection","cors","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","download_last_n_releases","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","file_path","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_jormungandr_bin","get_listen_addr","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jrpc","layers","listen","log","log_max_entries","mempool","messages","p2p","persistent_log","policy","pool_max_entries","quarantine_duration","quarantine_whitelist","rest","rest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","skip_bootstrap","storage","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","LegacyConfigError","LegacyNodeConfig","LegacyNodeConfigBuilder","LegacyNodeConfigConverter","LegacyNodeConfigManager","as_communication_params","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","file","fmt","from","init","into","into_request","log_file_path","node","node_config","node_config_path","p2p_listen_address","p2p_public_address","rest_socket_addr","serialize","set_node_config_path","set_p2p_public_address","set_rest_socket_addr","to_owned","try_from","try_into","type_id","vzip","write_node_config","Error","Fixture","LegacyNodeConfig","LegacyNodeConfigBuilder","LegacyNodeConfigConverter","SerdeYaml","UnsupportedVersion","based_on","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build_node_config_after_0_12_0","build_node_config_after_0_13_0","build_node_config_before_0_8_19","config","convert","data","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","generate_legacy_poldercast_id","init","init","init","into","into","into","into_request","into_request","into_request","new","new","provide","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","version","vzip","vzip","vzip","with_log","with_storage","with_trusted_peers","LegacyNodeConfig","Log","P2p","TrustedPeer","address","allow_private_addresses","bootstrap_from_trusted_peers","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","dns_server_address","drop","drop","drop","drop","file_path","fmt","fmt","fmt","fmt","from","from","from","from","id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","jrpc","layers","listen","log","max_connections","max_inbound_connections","mempool","p2p","policy","public_address","public_id","rest","serialize","serialize","serialize","serialize","single_log","skip_bootstrap","storage","to_owned","to_owned","to_owned","to_owned","topics_of_interest","trusted_peers","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","whitelist","BackwardCompatibleRest","account_state","account_state_by_pk","account_votes","account_votes_all","account_votes_with_plan_id","block_as_bytes","borrow","borrow_mut","clone","clone_into","deref","deref_mut","disable_logger","drop","enable_logger","epoch_reward_history","fmt","fragment_logs","fragments_logs","fragments_statuses","from","init","into","into_request","leaders_log","network_stats","new","p2p_available","p2p_non_public","p2p_quarantined","p2p_view","print_debug_response","print_response_text","raw","raw","remaining_rewards","rest_settings","reward_history","send_fragment","send_fragment_batch","send_raw_fragment","send_raw_fragments","set_origin","settings","shutdown","stake_distribution","stake_distribution_at","stake_pools","stats","tip","to_owned","try_from","try_into","type_id","updates","vote_plan_statuses","vzip","Version","build","major","minor","patch","pre","version_0_13_0","version_0_8_19","","","DEBUG","ERROR","INFO","JormungandrLogger","Level","LogEntry","LogEntryLegacy","MESSAGE","RawFields","SUCCESFULLY_CREATED_BLOCK_MSG","TRACE","WARN","as_ref","assert_no_errors","block_date","block_date","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","collect_available_input","collected_logs","collected_panics","contains_any_of","contains_error","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","entries","eq","equivalent","error","error_contains","fields","filter_entries_with_block_creation","flatten_fields","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","get_created_blocks_counter","get_created_blocks_hashes","get_created_blocks_hashes_after","get_error_indicators","get_lines","get_lines_as_string","get_log_content","get_log_lines_with_level","get_panic_content","get_panic_lines","hash","init","init","init","init","insert_if_some","into","into","into","into","into_request","into_request","into_request","into_request","is_later_than","last_validated_block_date","level","level","logs_collector","message","msg","new","panic_entries","panics_collector","partial_cmp","peer_addr","reason","reason_contains","serialize","serialize","serialize","span","spans","stringify_map","target","task","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_parse_line_as_entry","ts","ts","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Exited","Jormungandr","JormungandrProcess","ProcessStillActive","Running","ShutdownError","Starting","Status","Timeout","address","alias","alias","alias","alias","as_named_process","assert_no_errors_in_log","assert_no_errors_in_log_with_message","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_no_errors_in_log","check_startup_errors_in_logs","child","clone","clone_into","correct_state_verifier","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","explorer","fmt","fmt","fmt","fragment_logs","from","from","from","from","from","from","get_lines_with_error_and_invalid","grpc","grpc_client","init","init","init","into","into","into","into_request","into_request","into_request","is_running","last_block_height","log_content","log_content","log_in_block_fragment","log_pending_fragment","log_rejected_fragment","log_stats","log_stats","logger","new","p2p_listen_addr","p2p_listen_address","p2p_public_address","p2p_public_address","pid","port_opened","ports_are_opened","process_id","provide","rest","rest_address","rest_debug","rest_socket_addr","rest_uri","secure_rest","send_batch_fragments","send_fragment","shutdown","source","status","steal_temp_dir","stop","temp_dir","temp_dir","time_era","tip","to_owned","to_remote","to_string","to_trusted_peer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_for_bootstrap","wait_for_shutdown","log_content","timeout","RemoteJormungandr","RemoteJormungandrBuilder","alias","alias","alias","alias","borrow","borrow","borrow_mut","borrow_mut","build","clone_with_rest","deref","deref","deref_mut","deref_mut","drop","drop","fragment_logs","from","from","from_config","get_lines_with_error_and_invalid","grpc","grpc","grpc","init","init","into","into","into_request","into_request","is_running","last_block_height","log_content","log_content","log_in_block_fragment","log_pending_fragment","log_rejected_fragment","log_stats","logger","logger","new","new","node_alias","node_config","node_config","node_config","rest","rest","rest","send_batch_fragments","send_fragment","tip","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_grpc","with_logger","with_node_config","with_rest","with_rest_client","CannotDeserialize","HashParseError","JormungandrRest","NonSuccessErrorCode","PollError","RawRest","ReadBytes","RequestError","RestError","RestSettings","account_state","account_state_by_pk","account_state_by_pk_raw","account_votes","account_votes_all","account_votes_with_plan_id","address","block","block_as_bytes","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","disable_logger","drop","drop","enable_logger","epoch_reward_history","extract_certificate","fmt","fmt","fmt","fragment_logs","fragments_statuses","from","from","from","from","from","from","from","init","init","inner","inner","into","into","into_request","into_request","leaders_log","network_stats","new","new_with_cert","new_with_custom_settings","p2p_available","p2p_non_public","p2p_quarantined","p2p_view","provide","raw","raw","remaining_rewards","reward_history","send_fragment","send_fragment_batch","send_raw_fragment","send_raw_fragments","set_origin","settings","settings","shutdown","source","stake_distribution","stake_distribution_at","stake_pools","stats","tip","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","updates","uri_from_socket_addr","vote_plan_statuses","vzip","vzip","checks","response","status","ApiVersion","ORIGIN","RawRest","V0","V1","account_state","account_state_by_pk","account_votes","account_votes_all","account_votes_with_plan_id","block","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","construct_headers","deref","deref","deref_mut","deref_mut","disable_logger","drop","drop","enable_logger","epoch_reward_history","fmt","fmt","fragment_logs","fragments_logs","fragments_statuses","from","from","get","init","init","into","into","into_request","into_request","leaders_log","network_stats","new","p2p_available","p2p_non_public","p2p_quarantined","p2p_view","path","post","print_request_path","remaining_rewards","rest_settings","rest_settings_mut","reward_history","send_fragment","send_fragment_batch","send_raw_fragment","send_raw_fragments","send_until_ok","settings","settings","shutdown","stake_distribution","stake_distribution_at","stake_pools","stats","tip","to_owned","to_string","try_from","try_from","try_from_str","try_into","try_into","type_id","type_id","updates","uri","uri","vote_plan_statuses","vzip","vzip","RestSettings","borrow","borrow_mut","certificate","clone","clone_into","cors","default","deref","deref_mut","drop","enable_debug","fmt","from","init","into","into_request","new_use_https","to_owned","try_from","try_into","type_id","use_https","vzip","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CannotGetRestStatus","CommandBuilder","CommunicationParams","ConfigurableNodeConfig","ConfiguredStarter","EntryNotFoundInLogs","FaketimeConfig","File","File","FromGenesis","FsFixture","Hash","Hash","InMemory","InvalidBlock0Hash","JormungandrBootstrapper","JormungandrError","JormungandrNotLaunched","JormungandrParams","Leader","LeadershipMode","LegacyConfig","Log","META","META","META","META","META","META","META","NodeBlock0","OnFail","Panic","Params","Passive","PersistenceMode","Persistent","ProcessExited","Rest","RetryOnce","RetryUnlimitedOnPortOccupied","StartParamsNotDefined","Starter","StartupError","StartupVerificationMode","TestingDirectory","Timeout","TooManyAttempts","alias","alias","alias","benchmark","benchmark","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commands","config","config","configured_starter","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drift","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","finish_benchmark","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_command","get_jormungandr_app_path","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","jormungandr_app","jormungandr_app_option","jormungandr_app_path","new","offset","on_fail","on_fail","params","provide","sleep","source","start","start","start_async","start_async","start_benchmark_run","start_process","start_should_fail_with_message","start_with_fail_in_logs","start_with_fail_in_logs","start_with_fail_in_stderr","temp_dir","temp_dir","testing_dir","testing_directory","timeout","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verbose","verbose","verification_mode","verify_by","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","working_dir","entry","log_content","log_content","timeout","CommandBuilder","bin","borrow","borrow_mut","command","config","config","deref","deref_mut","drop","faketime","faketime","from","genesis_block","genesis_block_hash","genesis_block_path","get_command","init","into","into_request","leader_with_secret","log_file","new","rewards_history","rewards_history","secret","stderr_to_log_file","try_from","try_into","type_id","vzip","Block0SourceNotDefined","CannotApplyMinimalSetupDueToHash","CommunicationParams","ConfigurableNodeConfig","Error","Fixture","Io","JormungandrBootstrapper","JormungandrParams","Serde","Write","as_communication_params","borrow","borrow","borrow_mut","borrow_mut","builder","comm","communication","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","genesis","genesis","get_p2p_listen_port","init","init","into","into","into_request","into_request","leadership","leadership","log_file_path","new","node_config","node_config_path","node_config_path","p2p_listen_address","p2p_public_address","provide","recreate_log_file","refresh_instance_params","regenerate_ports","rest_socket_addr","rewards_history","rewards_history","secret_path","secret_path","set_node_config_path","set_p2p_public_address","set_rest_socket_addr","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_node_config","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","JormungandrBootstrapper","META","META","META","META","META","META","borrow","borrow_mut","build","create_new_leader_key","default","default_with_config","deref","deref_mut","drop","fmt","from","genesis","init","into","into_request","into_starter","jormungandr_app","leadership_mode","node_config","passive","rewards_history","secret","start","try_from","try_into","type_id","verbose","verbose","vzip","with_block0_configuration","with_block0_hash","with_jormungandr","with_leader_key","with_legacy_node_config","with_node_config","with_rewards_history","with_secret","CommunicationParams","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","p2p_listen_address","p2p_public_address","rest_socket_addr","to_owned","try_from","try_into","type_id","vzip","CannotConvertToTempDir","Error","Fixture","Temp","TestingDirectory","User","borrow","borrow","borrow_mut","borrow_mut","child","clone","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from_temp","init","init","into","into","into_persistent","into_request","into_request","new_temp","path","provide","serialize","source","to_owned","to_string","try_from","try_from","try_into","try_into","try_into","type_id","type_id","vzip","vzip","FragmentLogVerifier","JormungandrStateVerifier","NoSnapshot","NoWalletInSnapshot","RestError","StateSnapshot","StateVerifierError","ValueError","address_gained_value","address_has_the_same_value","address_lost_value","as_identifier","assert_accepted_rejected","assert_bad_request","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fragment_log","fragment_logs","from","from","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","new","new","no_changes","provide","record_address_state","rest","snapshot_before","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value_for","value_moved_between_addresses","vzip","vzip","vzip","wallets","FragmentLogVerifier","assert_accepted_rejected","assert_all_valid","assert_bad_request","assert_contains_only","assert_empty","assert_empty_ids","assert_in_block","assert_invalid","assert_invalid_id","assert_multiple_ids","assert_no_fragments","assert_not_exist","assert_not_in_block","assert_single_id","assert_size","assert_valid","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","rest","try_from","try_into","type_id","vzip","BranchCount","CachedReleases","CannotDeserialize","CannotFindReleaseWithVersion","ConsumptionBenchmarkError","ConsumptionBenchmarkRun","Download","EfficiencyBenchmarkDef","EfficiencyBenchmarkFinish","EfficiencyBenchmarkRun","Endurance","EnduranceBenchmarkDef","EnduranceBenchmarkFinish","EnduranceBenchmarkRun","GitHubApiBuilder","GitHubApiError","InvalidChecksum","Io","MeasurementReportInterval","MeasurementReporter","NamedProcess","NoProcessWitId","Openssl","RateLimitExceeded","Release","RequestError","ResourcesUsage","Speed","SpeedBenchmarkDef","SpeedBenchmarkFinish","SpeedBenchmarkRun","StopCriteria","StorageBuilder","SyncNode","SyncNodeError","SyncWaitParams","Thresholds","Timestamp","VerificationError","VoteCastCounter","VotePlanBuilder","VotePlanExtension","WrongChecksum","against","against","as_secs","as_secs","assert","assert_equals","asserts","assets","benchmark","benchmark_consumption","benchmark_efficiency","benchmark_endurance","benchmark_speed","block0","blockchain_config","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collector","configuration","convert_to_der","cpu_usage","cpu_usage","current_marker","decompress","default","default","definition","definition","definition","definition","definition","definition","definition","definition","definition","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","download_file","draft","draft","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","duration_since","efficiency","efficiency","elapsed","endurance","ensure_node_is_in_sync_with_others","ensure_nodes_are_in_sync","eq","eq","eq","eq","equivalent","equivalent","exception","exception","exception","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","genrsa","get_asset_for_current_os_by_version","get_hash","get_release_for_os","green_threshold","hash","id","id","increment","increment_by","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_thresholds","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","keys","markers","max","max","max","max","max_endurance_reached","memory_usage","memory_usage","name","name","name","name","name","name","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new_consumption","new_efficiency","new_endurance","new_speed","no_target","no_target","no_target","observer","panic","partial_cmp","partial_cmp","partial_cmp","pkcs8","prerelease","prerelease","print","print","print","print_with_thresholds","process","program","provide","provide","red_threshold","released_date","released_date","releases_per_os","releases_per_os","req","resources","settings","snapshot","source","speed","start","start","start","start_marker","start_marker","start_marker","status","stop","stop","stop","stop","storage","target","target","target","thresholds","thresholds","thresholds","thresholds","thresholds","thresholds","thresholds","time","timeout_exceeded","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","verify","version","version","version","version_str","virtual_memory_usage","virtual_memory_usage","vit","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_endpoint_url","with_thresholds","with_token","x509","yellow_threshold","error","response","InitialsAssert","VotePlanStatusAssert","assert_contains","assert_not_contain","assert_proposal_tally","node","speed_benchmark_from_log","storage_loading_benchmark_from_log","sync","speed_benchmark_from_log","storage_loading_benchmark_from_log","Long","MeasurementReportInterval","MeasurementReporter","Standard","Standard","SyncNode","SyncNodeError","SyncNodeRecord","SyncWaitParams","TimeoutWhenSyncingTargetNode","VerificationError","WithDisruption","ZeroWait","alias","alias","block_height","counter","ensure_node_is_in_sync_with_others","ensure_nodes_are_in_sync","get_lines_with_error_and_invalid","interval","is_running","last_block_height","log_content","log_stats","measure","measure_and_log_sync_time","measure_fragment_propagation_speed","measure_how_many_nodes_are_running","node","report","tip","wait","wait_for_nodes_sync","sync_nodes","target_node","timeout","longest_path_length","no_of_nodes","no_of_nodes","restart_coeff","measure_and_log_sync_time","measure_fragment_propagation_speed","measure_how_many_nodes_are_running","print_error_for_failed_leaders","SyncNode","SyncNodeError","SyncNodeRecord","TimeoutWhenSyncingTargetNode","VerificationError","alias","alias","block_height","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","fmt","from","from","from","get_lines_with_error_and_invalid","init","init","into","into","into_request","into_request","is_running","last_block_height","log_content","log_stats","new","provide","source","tip","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","sync_nodes","target_node","timeout","Long","MeasurementReportInterval","MeasurementReporter","Standard","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","counter","deref","deref","deref_mut","deref_mut","do_if_interval_reached","do_if_interval_reached_and_inc","drop","drop","fmt","from","from","increment","init","init","interval","into","into","into_request","into_request","is_interval_reached","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Standard","SyncWaitParams","WithDisruption","ZeroWait","borrow","borrow_mut","calculate_wait_time","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","large_network","network_size","nodes_restart","timeout","to_owned","try_from","try_into","two_nodes","type_id","vzip","wait_time","longest_path_length","no_of_nodes","no_of_nodes","restart_coeff","Bech32Error","Block0ConfigurationExtension","Block0Error","Block0ParseError","IapyxStatsCommandError","IoError","Ledger","Read","SerdeJson","SerdeYaml","Write","borrow","borrow_mut","decode_block0","deref","deref_mut","drop","encode_block0","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_block","init","into","into_request","provide","read_genesis_yaml","read_initials","settings","source","to_block_hash","to_string","try_from","try_into","type_id","utxo_for_address","utxos","vote_plans","vzip","write_genesis_yaml","BlockchainConfigurationExtension","reward_parameters","OutputCollector","borrow","borrow_mut","collected","deref","deref_mut","drop","from","get_available_input","init","into","into_request","new","read_input","rx","take_available_input","try_from","try_into","type_id","vzip","Block0ConfigurationBuilder","JORMUNGANDR_NAME","JOR_CLI_NAME","JOR_EXPLORER_NAME","SecretModelFactory","get_app_from_current_dir","get_explorer_app","get_jcli_app","get_jormungandr_app","get_openapi_path","get_working_directory","create_new_key_pair","Event","Observable","Observer","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","finish_all","finished","fmt","from","init","into","into_request","message","new","notify","notify_all","register","to_owned","try_from","try_into","type_id","vzip","persist_dir_on_panic","ProcessOutput","as_hash","root_dir","tls_ca_crt","tls_server_crt","tls_server_private_key","SettingsDtoExtension","genesis_block_hash","BLOCK_DATA_LENGTH","BlocksCount","BranchCount","Limited","SizeInMb","StopCriteria","StorageBuilder","Unlimited","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","branches","build","criterion_met","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","end","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","new","path","stop_criteria","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","get_current_date","is_it_due","wait_for_date","wait_for_epoch","Error","VerificationFailed","assert","assert_equals","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","into_request","provide","to_string","try_from","try_into","type_id","vzip","LoadCannotSendAnyMoreRequests","NoMoreRequestsToSentForWallet","VoteCastCounter","VoteCastCounterError","VotePlanBuilder","VotePlanExtension","VotePlanIsDrainedFromVotes","action","as_json","as_json_str","builder","member_keys","options_size","payload","proposals_builder","register","tally_end","tally_start","vote_cast_register","vote_start","voting_token","available_to_send","available_to_send","requested_batch_size","requested_batch_size","requested_batch_size","wallet_idx","ProposalsBuilder","VotePlanBuilder","action","action_type","borrow","borrow","borrow_mut","borrow_mut","build","build","count","default","default","deref","deref","deref_mut","deref_mut","drop","drop","external_ids","fmt","from","from","init","init","into","into","into_request","into_request","member_keys","member_public_key","member_public_keys","new","options_size","options_size","payload","private","proposals_builder","proposals_count","proposals_external_ids","public","tally_end","tally_end","tally_start","tally_start","try_from","try_from","try_into","try_into","type_id","type_id","vote_start","vote_start","voting_token","voting_token","vzip","vzip","with_count","with_ids","Error","LoadCannotSendAnyMoreRequests","NoMoreRequestsToSentForWallet","VoteCastCounter","VotePlanIsDrainedFromVotes","VotePlanVoteCastPosition","VotesToCast","WalletVoteCastPosition","advance_batch","advance_batch","advance_batch","advance_batch_force","advance_batch_force","advance_single","advance_single_force","advance_single_force","available_to_send","available_to_send","available_to_send","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_send_next_batch","can_send_next_batch","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","current","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","equivalent","first","fmt","fmt","fmt","fmt","from","from","from","from","from","from_vote_plan","id","id","id","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_drained","is_drained","is_drained","limit","new","new","new","new","provide","range","range","register","register","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","available_to_send","available_to_send","requested_batch_size","requested_batch_size","requested_batch_size","wallet_idx","MultiaddrExtension","StakePool","inner","leader","multiaddr","owner","stake_pool","to_http_addr","MultiaddrExtension","to_http_addr","StakePool","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","id","info","info_mut","init","inner","into","into_request","kes","leader","leader","new","owner","owner","to_owned","try_from","try_into","type_id","vrf","vzip"],"q":[[0,"jormungandr_automation"],[5,"jormungandr_automation::jcli"],[79,"jormungandr_automation::jcli::Error"],[84,"jormungandr_automation::jcli::api"],[98,"jormungandr_automation::jcli::api::address"],[122,"jormungandr_automation::jcli::api::certificate"],[152,"jormungandr_automation::jcli::api::genesis"],[174,"jormungandr_automation::jcli::api::key"],[203,"jormungandr_automation::jcli::api::rest"],[223,"jormungandr_automation::jcli::api::rest::v0"],[257,"jormungandr_automation::jcli::api::rest::v0::block"],[277,"jormungandr_automation::jcli::api::rest::v0::message"],[295,"jormungandr_automation::jcli::api::rest::v0::node"],[312,"jormungandr_automation::jcli::api::rest::v0::utxo"],[333,"jormungandr_automation::jcli::api::rest::v0::vote"],[351,"jormungandr_automation::jcli::api::rest::v1"],[369,"jormungandr_automation::jcli::api::rest::v1::vote"],[386,"jormungandr_automation::jcli::api::transaction"],[429,"jormungandr_automation::jcli::api::votes"],[457,"jormungandr_automation::jcli::api::votes::committee"],[479,"jormungandr_automation::jcli::api::votes::committee::communication_key"],[497,"jormungandr_automation::jcli::api::votes::committee::member_key"],[515,"jormungandr_automation::jcli::api::votes::crs"],[532,"jormungandr_automation::jcli::api::votes::tally"],[553,"jormungandr_automation::jcli::command"],[590,"jormungandr_automation::jcli::command::address"],[615,"jormungandr_automation::jcli::command::address::account"],[635,"jormungandr_automation::jcli::command::address::info"],[653,"jormungandr_automation::jcli::command::address::single"],[674,"jormungandr_automation::jcli::command::certificate"],[706,"jormungandr_automation::jcli::command::genesis"],[732,"jormungandr_automation::jcli::command::genesis::decode"],[751,"jormungandr_automation::jcli::command::genesis::encode"],[770,"jormungandr_automation::jcli::command::genesis::hash"],[788,"jormungandr_automation::jcli::command::key"],[816,"jormungandr_automation::jcli::command::key::from_bytes"],[835,"jormungandr_automation::jcli::command::key::generate"],[854,"jormungandr_automation::jcli::command::key::to_bytes"],[873,"jormungandr_automation::jcli::command::key::to_public"],[892,"jormungandr_automation::jcli::command::rest"],[914,"jormungandr_automation::jcli::command::rest::v0"],[954,"jormungandr_automation::jcli::command::rest::v0::block"],[973,"jormungandr_automation::jcli::command::rest::v0::message"],[992,"jormungandr_automation::jcli::command::rest::v0::node"],[1010,"jormungandr_automation::jcli::command::rest::v0::utxo"],[1031,"jormungandr_automation::jcli::command::rest::v0::vote"],[1050,"jormungandr_automation::jcli::command::rest::v1"],[1070,"jormungandr_automation::jcli::command::rest::v1::vote"],[1088,"jormungandr_automation::jcli::command::transaction"],[1122,"jormungandr_automation::jcli::command::votes"],[1154,"jormungandr_automation::jcli::command::votes::committee"],[1176,"jormungandr_automation::jcli::command::votes::committee::communication_key"],[1195,"jormungandr_automation::jcli::command::votes::committee::member_key"],[1214,"jormungandr_automation::jcli::command::votes::crs"],[1232,"jormungandr_automation::jcli::command::votes::election_public_key"],[1250,"jormungandr_automation::jcli::command::votes::tally"],[1271,"jormungandr_automation::jcli::data"],[1275,"jormungandr_automation::jcli::data::witness"],[1342,"jormungandr_automation::jcli::services"],[1372,"jormungandr_automation::jcli::services::Error"],[1377,"jormungandr_automation::jcli::services::certificate_builder"],[1427,"jormungandr_automation::jcli::services::fragment_check"],[1454,"jormungandr_automation::jcli::services::fragment_sender"],[1473,"jormungandr_automation::jcli::services::fragments_check"],[1493,"jormungandr_automation::jcli::services::transaction_builder"],[1545,"jormungandr_automation::jormungandr"],[1818,"jormungandr_automation::jormungandr::FragmentNodeError"],[1826,"jormungandr_automation::jormungandr::JormungandrError"],[1829,"jormungandr_automation::jormungandr::RestError"],[1832,"jormungandr_automation::jormungandr::ShutdownError"],[1834,"jormungandr_automation::jormungandr::StartupError"],[1838,"jormungandr_automation::jormungandr::configuration"],[1887,"jormungandr_automation::jormungandr::configuration::block0"],[1889,"jormungandr_automation::jormungandr::configuration::block0::block0_config_builder"],[1951,"jormungandr_automation::jormungandr::configuration::jormungandr_config"],[1971,"jormungandr_automation::jormungandr::configuration::node"],[1975,"jormungandr_automation::jormungandr::configuration::node::manager"],[2002,"jormungandr_automation::jormungandr::configuration::node::node_config_builder"],[2041,"jormungandr_automation::jormungandr::configuration::secret"],[2070,"jormungandr_automation::jormungandr::explorer"],[2171,"jormungandr_automation::jormungandr::explorer::client"],[2216,"jormungandr_automation::jormungandr::explorer::configuration"],[2293,"jormungandr_automation::jormungandr::explorer::data"],[2544,"jormungandr_automation::jormungandr::explorer::data::address"],[2601,"jormungandr_automation::jormungandr::explorer::data::all_blocks"],[4303,"jormungandr_automation::jormungandr::explorer::data::all_stake_pools"],[4823,"jormungandr_automation::jormungandr::explorer::data::all_vote_plans"],[5251,"jormungandr_automation::jormungandr::explorer::data::block"],[5308,"jormungandr_automation::jormungandr::explorer::data::block_by_id"],[7222,"jormungandr_automation::jormungandr::explorer::data::blocks_by_chain_length"],[8853,"jormungandr_automation::jormungandr::explorer::data::epoch"],[9018,"jormungandr_automation::jormungandr::explorer::data::last_block"],[10665,"jormungandr_automation::jormungandr::explorer::data::settings"],[10797,"jormungandr_automation::jormungandr::explorer::data::stake_pool"],[11098,"jormungandr_automation::jormungandr::explorer::data::transaction_by_id"],[12211,"jormungandr_automation::jormungandr::explorer::data::transaction_by_id_certificates"],[13890,"jormungandr_automation::jormungandr::explorer::data::transactions_by_address"],[15390,"jormungandr_automation::jormungandr::explorer::data::vote_plan_by_id"],[15823,"jormungandr_automation::jormungandr::explorer::verifiers"],[15950,"jormungandr_automation::jormungandr::explorer::verifiers::VerifierError"],[15951,"jormungandr_automation::jormungandr::explorer::wrappers"],[15970,"jormungandr_automation::jormungandr::fragment_node"],[16029,"jormungandr_automation::jormungandr::fragment_node::FragmentNodeError"],[16037,"jormungandr_automation::jormungandr::grpc"],[16045,"jormungandr_automation::jormungandr::grpc::client"],[16141,"jormungandr_automation::jormungandr::grpc::node"],[16595,"jormungandr_automation::jormungandr::grpc::node::block_event"],[16620,"jormungandr_automation::jormungandr::grpc::node::node_client"],[16675,"jormungandr_automation::jormungandr::grpc::node::node_server"],[16970,"jormungandr_automation::jormungandr::grpc::server"],[17122,"jormungandr_automation::jormungandr::grpc::server::builder"],[17164,"jormungandr_automation::jormungandr::grpc::server::controller"],[17191,"jormungandr_automation::jormungandr::grpc::server::data"],[17257,"jormungandr_automation::jormungandr::grpc::server::logger"],[17326,"jormungandr_automation::jormungandr::grpc::server::verifier"],[17343,"jormungandr_automation::jormungandr::grpc::types"],[17498,"jormungandr_automation::jormungandr::grpc::watch"],[17606,"jormungandr_automation::jormungandr::grpc::watch::watch_client"],[17637,"jormungandr_automation::jormungandr::grpc::watch::watch_server"],[17734,"jormungandr_automation::jormungandr::legacy"],[17954,"jormungandr_automation::jormungandr::legacy::config"],[17990,"jormungandr_automation::jormungandr::legacy::config::node"],[18060,"jormungandr_automation::jormungandr::legacy::config::node::data"],[18164,"jormungandr_automation::jormungandr::legacy::rest"],[18222,"jormungandr_automation::jormungandr::legacy::version"],[18230,"jormungandr_automation::jormungandr::logger"],[18369,"jormungandr_automation::jormungandr::process"],[18487,"jormungandr_automation::jormungandr::process::ShutdownError"],[18489,"jormungandr_automation::jormungandr::remote"],[18556,"jormungandr_automation::jormungandr::rest"],[18652,"jormungandr_automation::jormungandr::rest::RestError"],[18655,"jormungandr_automation::jormungandr::rest::raw"],[18739,"jormungandr_automation::jormungandr::rest::settings"],[18763,"jormungandr_automation::jormungandr::starter"],[19035,"jormungandr_automation::jormungandr::starter::StartupError"],[19039,"jormungandr_automation::jormungandr::starter::commands"],[19070,"jormungandr_automation::jormungandr::starter::params"],[19145,"jormungandr_automation::jormungandr::starter::params::builder"],[19195,"jormungandr_automation::jormungandr::starter::params::communication"],[19216,"jormungandr_automation::jormungandr::starter::testing_directory"],[19269,"jormungandr_automation::jormungandr::verifier"],[19340,"jormungandr_automation::jormungandr::verifier::fragment_log"],[19372,"jormungandr_automation::testing"],[19949,"jormungandr_automation::testing::GitHubApiError"],[19951,"jormungandr_automation::testing::asserts"],[19956,"jormungandr_automation::testing::benchmark"],[19960,"jormungandr_automation::testing::benchmark::node"],[19962,"jormungandr_automation::testing::benchmark::sync"],[19996,"jormungandr_automation::testing::benchmark::sync::SyncNodeError"],[19999,"jormungandr_automation::testing::benchmark::sync::SyncWaitParams"],[20003,"jormungandr_automation::testing::benchmark::sync::measure"],[20007,"jormungandr_automation::testing::benchmark::sync::node"],[20060,"jormungandr_automation::testing::benchmark::sync::node::SyncNodeError"],[20063,"jormungandr_automation::testing::benchmark::sync::report"],[20104,"jormungandr_automation::testing::benchmark::sync::wait"],[20132,"jormungandr_automation::testing::benchmark::sync::wait::SyncWaitParams"],[20136,"jormungandr_automation::testing::block0"],[20185,"jormungandr_automation::testing::blockchain_config"],[20187,"jormungandr_automation::testing::collector"],[20207,"jormungandr_automation::testing::configuration"],[20218,"jormungandr_automation::testing::keys"],[20219,"jormungandr_automation::testing::observer"],[20246,"jormungandr_automation::testing::panic"],[20247,"jormungandr_automation::testing::process"],[20249,"jormungandr_automation::testing::resources"],[20253,"jormungandr_automation::testing::settings"],[20255,"jormungandr_automation::testing::storage"],[20309,"jormungandr_automation::testing::time"],[20313,"jormungandr_automation::testing::verify"],[20334,"jormungandr_automation::testing::vit"],[20355,"jormungandr_automation::testing::vit::VoteCastCounterError"],[20361,"jormungandr_automation::testing::vit::builder"],[20420,"jormungandr_automation::testing::vit::vote_cast_register"],[20546,"jormungandr_automation::testing::vit::vote_cast_register::Error"],[20552,"jormungandr_automation::utils"],[20560,"jormungandr_automation::utils::multiaddr"],[20562,"jormungandr_automation::utils::stake_pool"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Legacy tolerant rest api This layer returns raw strings …","","","","","","","Abstraction over different versions of the node …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized rest api","","","","","","","Used to build configuration for legacy nodes. It uses …","","","","","","","","","","","","","","","","","","","","struct intends to return raw reqwest response can be used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>SemVer version</strong> as defined by https://semver.org.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clock drift (1 = no drift, 2 = double speed)","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Create <code>Version</code> with an empty pre-release and build …","","","","","","","","","Offset from the real clock in seconds","","","","","","","","","Create <code>Version</code> by parsing from string representation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","get an explorer client configured to use this instance.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Element of the subscription stream returned by …","Request message for method ClientAuth.","Response message for method ClientAuth.","Gossip message with information on nodes in the network.","Request message for method Handshake.","Response message for method Handshake.","","","","","","Request for peers","Responses as a bunch of peers, similar to Gossip","Request message for method PullBlocks","Request message for method PullBlocksToTip.","Request message for method PullHeaders. This message can …","Response message for method PushHeaders.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Request message for method Tip.","Response message for method Tip.","Response message for method UploadBlocks.","The identifier of the genesis block. This can be used by …","Nested message and enum types in <code>BlockEvent</code>.","Serialized content of the tip block headereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The identifiers of blocks to consider as the starting …","The identifiers of blocks to consider as the starting …","The identifiers of blocks to consider as the starting …","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Node ID of the server, the public key of a key pair.","Node ID of the client, the public key of a key pair.","Generated server implementations.","Serialized descriptions of nodes.","Nonce for the server to authenticate its node ID with.","Nonce for the client to authenticate its node ID with.","","Signature of the client’s nonce using the private key in …","Signature of the server’s nonce sent in …","The identifier of the end block.","The identifier of the end block","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Version of the protocol implemented by the server.","","","","","","","","","","","","","","","","","","","","","Announcement of a new block, carrying the block’s header.","","Solicitation to push the chain of block headers with a …","Solicitation to upload identified blocks with an …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","Establishes a bidirectional stream to exchange information …","","","Optional authentication of the client node. Called after …","","","Attempt to create a new client by connecting to a given …","","","","","Establishes a bidirectional stream to exchange information …","Returns the argument unchanged.","","","","Establishes a bidirectional stream to exchange information …","Initial handshake and authentication of the server node.","","","Calls <code>U::from(self)</code>.","","","Requests for some peers","Requests blocks in the chain in the chronological order, …","","Requests headers of blocks in the chain in the …","Sends headers of blocks to the service in response to a …","Compress requests with <code>gzip</code>.","","","","","","Uploads blocks to the service in response to a <code>solicit</code> item","","","Server streaming response type for the BlockSubscription …","","","Server streaming response type for the …","","Server streaming response type for the GetBlocks method.","","Server streaming response type for the GetFragments method.","","Server streaming response type for the GetHeaders method.","","Server streaming response type for the GossipSubscription …","","","Generated trait containing gRPC methods that should be …","","","Server streaming response type for the PullBlocks method.","","Server streaming response type for the PullBlocksToTip …","","Server streaming response type for the PullHeaders method.","","","","","","","Establishes a bidirectional stream to exchange information …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Optional authentication of the client node. Called after …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Establishes a bidirectional stream to exchange information …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Establishes a bidirectional stream to exchange information …","Initial handshake and authentication of the server node.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Requests for some peers","","","Requests blocks in the chain in the chronological order, …","","Requests headers of blocks in the chain in the …","Sends headers of blocks to the service in response to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Uploads blocks to the service in response to a <code>solicit</code> item","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","block_id must refer to a valid block already in the storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","block_id must refer to a valid block already in the storage","","Raw access to the storage. Can be used to play with raw …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Representation of a block.","A sequence of block identifiers used in fetch requests and …","Representation of a block fragment, that is, a transaction …","A sequence of fragment identifiers used in fetch requests.","Representation of a block header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The serialized content of the block.","The serialized content of the block header.","The serialized content of the fragment.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The identifiers of blocks for loading.","The identifiers of fragments.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Block IDs to start synchronization from.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","Enable decompressing responses with <code>gzip</code>.","get a stream of blocks succesfully processed by the node, …","","","","","Attempt to create a new client by connecting to a given …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","Compress requests with <code>gzip</code>.","Fetch all blocks from the blockchain storage that are …","get tip updates","","","","","","","Server streaming response type for the BlockSubscription …","","Server streaming response type for the SyncMultiverse …","","Server streaming response type for the TipSubscription …","","Generated trait containing gRPC methods that should be …","","","","get a stream of blocks succesfully processed by the node, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Fetch all blocks from the blockchain storage that are …","get tip updates","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","policy module","","","","Configuration item for a trusted peer.","","","","The peer’s routable host address and TCP port as a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables CORS if provided","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Node identifier as a bech32-encoded ed25519 public key.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","maximum number of entries in the fragment logs","","","","path to the persistent log of all incoming fragments","","maximum number of entries in the mempool","","","","","","","","","","","","","","","Enables TLS and disables plain HTTP if provided","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Used to build configuration for legacy nodes. It uses …","","","","","","","","","","","","","","","","0.8.19 is a breaking point where in trusted peer id was …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The public address to which other peers may connect to","","","","","","","","","","","","","","","the rendezvous points for the peer to connect to in order …","","","","","","","","","","","","","","","","","","Legacy tolerant rest api This layer returns raw strings …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<strong>SemVer version</strong> as defined by https://semver.org.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized rest api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","struct intends to return raw reqwest response can be used …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clock drift (1 = no drift, 2 = double speed)","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Offset from the real clock in seconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Abstraction over different versions of the node …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Collected available input up to the point in time when …","","Calls <code>U::from(self)</code>.","","","","","Collecte available input up to the point in time when this …","","","","","","","","","","Get executable from current environment","Get explorer executable from current environment","Get jcli executable from current environment","Get jormungandr executable from current environment","","Gets working directory Uses std::env::current_exe() for …","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","",""],"i":[0,0,0,0,0,105,0,0,0,0,0,0,0,0,108,108,105,105,0,0,0,70,72,70,1,0,70,1,1,1,1,1,1,0,91,0,1,1,1,1,1,70,1,1,1,1,1,19,111,1,1,1,4,111,9,10,19,111,9,10,1,1,1,70,1,72,0,72,19,111,1,1,1,70,1,1,1,1,1,1151,1152,1151,1152,1151,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,0,16,16,0,40,0,40,40,40,40,40,40,40,40,40,40,40,0,40,40,0,40,40,40,40,40,40,40,40,40,40,0,40,40,0,40,40,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,41,41,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,22,22,0,22,0,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,0,0,0,78,78,78,0,78,78,78,78,78,78,78,78,0,78,78,78,78,78,78,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,0,0,0,0,91,91,91,0,91,91,91,91,91,91,0,91,91,91,91,0,91,91,0,91,0,91,91,91,91,0,91,91,0,0,0,0,0,29,29,29,29,29,29,29,29,0,29,29,29,29,29,0,29,29,29,29,29,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,37,37,37,0,37,37,37,37,0,37,37,0,37,37,37,37,37,37,37,37,37,37,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,0,0,0,0,38,38,38,38,38,38,38,0,38,0,38,38,38,38,38,0,38,0,38,38,38,38,38,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,39,0,39,39,0,0,0,0,0,0,47,0,47,47,47,47,47,47,47,47,47,47,47,47,47,0,47,47,0,47,47,47,47,47,47,47,47,47,47,0,47,0,47,47,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,65,65,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,0,0,80,80,80,80,0,80,0,80,80,80,80,0,80,80,80,80,80,80,80,0,80,80,80,80,80,80,80,0,0,0,84,84,84,0,84,84,84,84,84,84,84,84,0,84,84,84,84,84,84,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,0,0,0,105,105,105,0,0,0,70,72,70,70,72,105,70,72,105,70,105,105,72,105,70,72,105,70,72,105,70,70,105,105,70,72,105,70,72,105,70,72,105,70,72,105,70,72,70,72,72,70,72,72,72,105,105,70,72,105,70,72,105,70,72,105,70,72,105,70,0,0,0,0,0,0,0,108,108,108,108,0,108,108,108,108,108,0,0,0,108,108,108,108,108,108,0,108,108,108,108,1151,1152,1151,1152,1151,0,0,4,110,4,110,110,4,110,4,110,4,110,4,110,4,110,4,110,4,110,4,110,110,110,4,110,4,4,4,110,110,110,110,110,110,110,110,110,110,110,110,4,110,4,110,4,110,4,110,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,156,0,116,1040,125,125,0,0,1025,1025,0,1040,123,1034,0,0,0,0,1064,1010,0,0,1040,156,1064,116,1025,1063,1040,1036,0,0,1040,0,1040,0,0,0,0,1062,0,1040,0,0,0,0,0,125,1042,0,0,0,0,0,0,116,1040,1062,0,1063,116,123,1040,1036,0,116,0,0,116,125,1042,0,0,1034,0,1010,0,1040,0,1034,0,0,0,123,1025,1039,0,1036,1040,1040,125,1010,1039,0,1025,1153,8,1044,1060,1071,1073,0,0,1060,166,136,1009,118,123,118,123,118,1023,8,1024,118,118,118,1026,1026,0,1008,1060,0,1060,1023,118,123,118,123,118,0,1061,118,123,1023,118,118,0,157,1007,118,118,123,123,117,1153,0,118,123,118,118,166,1074,1067,0,118,0,0,1044,1046,8,118,118,123,136,1041,118,123,118,123,1074,1060,158,1009,1067,1074,0,158,1009,1153,1073,1153,1153,1153,0,8,1044,1046,1026,118,158,1009,136,118,118,1046,157,1044,1046,1007,1074,1067,1073,1061,1071,158,1009,1073,8,1073,8,1026,118,118,118,118,0,123,1018,0,0,1044,1046,1035,158,1009,1073,8,1074,1067,1074,1067,1153,1153,118,1073,1073,1073,1024,1009,1009,1071,1035,0,158,1009,8,1060,1071,118,118,123,118,123,118,123,118,123,1024,0,1023,1071,1074,1071,0,1008,1011,0,118,123,1073,1154,1155,1154,1155,1154,1155,1154,1155,1156,1156,1157,1158,1158,1158,1159,1159,1160,1161,1160,1161,0,0,0,0,0,0,0,0,0,0,134,135,0,0,0,0,0,134,135,134,135,134,134,135,135,134,135,134,135,134,135,0,134,135,134,135,134,135,0,0,0,134,135,134,135,134,135,134,135,0,0,0,0,136,136,136,136,136,136,136,0,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,156,0,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,0,0,0,0,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,0,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,0,0,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,1162,166,173,173,0,0,0,0,173,173,170,170,170,170,170,179,173,170,179,173,170,0,179,179,170,179,170,170,0,0,179,179,170,0,184,179,173,170,179,173,170,170,179,179,173,170,170,170,173,173,179,173,173,173,173,170,179,179,173,170,179,173,170,179,173,170,179,170,179,170,170,170,170,173,170,170,179,173,170,170,170,173,170,170,170,179,173,170,179,173,170,179,173,170,170,0,170,170,179,173,170,179,0,0,0,182,199,199,199,182,199,182,199,199,199,182,199,182,199,199,182,199,182,182,199,182,182,199,182,199,182,199,182,199,199,182,199,182,199,182,199,182,199,182,199,182,199,182,0,0,0,200,201,200,180,201,200,180,201,200,200,180,201,200,180,201,200,200,180,201,200,180,201,200,180,201,180,201,200,180,201,180,180,180,200,180,201,200,180,201,200,180,201,200,180,201,200,180,201,200,180,201,180,200,180,201,201,180,201,180,200,180,201,200,180,201,200,180,201,200,180,201,200,180,201,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,0,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,0,0,0,0,0,0,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,0,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,0,0,0,0,0,0,0,0,0,0,171,203,202,171,203,202,171,203,202,171,203,202,171,203,202,171,202,171,203,202,171,202,171,203,202,202,171,203,202,171,203,202,171,203,203,202,171,203,202,171,203,202,171,203,202,171,203,286,286,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,204,241,286,286,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,286,0,286,0,0,286,227,0,286,0,204,262,0,0,286,286,262,286,227,0,0,204,205,206,227,206,205,206,0,286,286,241,0,0,0,0,0,227,227,286,227,286,0,0,286,286,0,286,286,286,286,0,286,286,227,205,0,286,286,286,227,227,0,0,227,227,0,227,0,226,277,251,207,230,232,230,232,285,0,278,234,247,293,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,244,234,273,257,272,257,272,257,272,249,271,249,271,244,213,273,217,0,212,228,283,259,261,273,233,244,221,253,258,260,265,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,284,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,236,246,243,288,259,261,280,259,261,216,256,222,266,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,209,211,220,225,229,231,233,234,237,238,239,240,242,244,274,276,287,290,293,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,234,234,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,244,269,294,244,223,252,222,266,279,252,208,235,245,221,253,258,260,265,223,234,223,217,273,273,223,291,0,218,219,289,224,226,244,270,210,215,217,213,222,259,261,266,293,275,250,293,219,223,254,255,263,264,223,204,205,206,294,243,288,281,282,218,223,177,236,246,292,244,244,248,244,268,267,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,217,214,215,217,210,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,177,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,315,303,312,320,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,300,309,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,297,306,314,321,301,310,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,295,299,303,304,308,312,317,320,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,302,311,301,310,296,305,313,314,300,309,302,311,302,311,302,311,318,0,298,307,316,301,310,303,312,320,303,312,320,298,307,302,311,302,311,321,302,311,193,314,319,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,193,316,317,318,319,320,321,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,322,322,322,0,0,0,0,334,334,0,325,325,0,0,0,327,340,0,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,324,337,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,329,339,323,330,332,335,342,343,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,326,337,341,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,328,338,331,333,336,327,337,323,336,337,331,333,322,343,342,330,332,335,336,198,329,339,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,337,337,336,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,198,341,342,343,0,0,0,0,0,0,0,0,0,0,174,344,174,345,344,174,345,344,174,345,344,174,345,344,174,344,174,345,344,174,344,174,345,344,345,344,174,345,344,174,345,344,174,345,345,344,174,345,344,174,345,344,174,345,344,174,345,425,425,346,383,425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,0,425,0,0,425,369,0,425,0,346,401,0,0,425,425,401,425,369,0,0,346,347,348,369,348,347,348,0,425,425,383,0,0,0,0,0,369,369,425,369,425,0,0,425,425,0,425,425,425,425,0,425,425,369,347,0,425,425,425,369,369,0,0,369,369,0,369,0,368,416,390,349,372,374,372,374,175,424,0,417,376,432,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,386,376,412,396,411,396,411,396,411,388,410,388,410,386,355,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,412,359,0,354,370,422,398,400,412,375,386,363,392,397,399,404,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,423,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,378,385,427,398,400,419,398,400,358,395,364,405,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,351,353,362,367,371,373,375,376,379,380,381,382,384,386,413,415,426,429,432,433,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,376,376,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,386,408,386,365,391,364,405,418,391,350,377,363,392,397,399,404,365,376,365,359,412,412,365,430,0,360,361,428,366,368,386,409,352,357,359,355,364,398,400,405,432,414,389,432,361,365,393,394,402,403,365,346,347,348,433,385,427,420,421,360,365,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,378,431,386,386,387,386,407,406,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,359,356,357,359,352,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,175,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,512,512,434,470,512,512,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,512,0,512,0,0,512,457,0,512,0,434,488,0,0,512,512,488,512,457,0,0,434,435,436,457,436,435,436,0,512,512,470,0,0,0,0,0,457,457,512,457,512,0,0,512,512,0,512,512,512,512,0,512,512,457,435,0,512,512,512,457,457,0,0,457,457,0,457,0,456,503,477,437,459,461,459,461,511,0,504,463,519,178,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,473,463,499,483,498,483,498,483,498,475,497,475,497,473,443,499,447,0,442,509,485,487,499,462,473,451,479,484,486,491,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,510,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,465,472,514,485,487,506,485,487,446,482,452,492,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,439,441,450,455,458,460,462,463,466,467,468,469,471,473,500,502,513,516,519,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,463,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,473,495,473,520,453,478,452,492,505,478,438,464,451,479,484,486,491,453,463,453,447,499,499,453,517,0,448,449,515,454,456,473,496,440,445,447,443,452,485,487,492,519,501,476,519,449,453,480,481,489,490,453,434,435,436,520,472,514,507,508,448,453,465,518,473,473,474,473,494,493,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,447,444,445,447,440,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,178,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,524,528,521,522,523,524,525,526,527,181,528,521,522,523,524,525,526,527,181,528,521,522,523,524,525,526,527,181,528,521,522,523,524,525,526,527,181,528,521,522,523,524,525,526,527,181,521,522,523,524,525,526,527,181,528,523,181,527,521,522,523,524,525,526,527,181,521,522,523,524,525,526,527,181,528,521,525,526,527,528,521,522,523,524,525,526,527,181,528,521,522,523,524,525,526,527,181,528,521,522,523,524,525,526,527,181,528,527,522,528,181,527,521,522,523,524,525,526,527,181,528,521,522,523,524,525,526,527,181,528,521,522,523,524,525,526,527,181,528,521,522,523,524,525,526,527,181,528,609,609,529,565,609,609,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,609,0,609,0,0,609,552,0,609,0,529,585,0,0,609,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,609,585,609,552,0,0,529,530,531,552,531,530,531,0,609,609,565,0,0,0,0,0,552,552,609,552,609,0,0,609,609,0,609,609,609,609,0,609,609,552,530,0,609,609,609,552,552,0,0,552,552,0,552,0,551,600,574,532,554,556,554,556,569,608,0,601,558,616,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,568,558,596,580,595,580,595,580,595,572,594,572,594,568,538,596,542,0,537,606,582,584,596,557,568,546,576,581,583,588,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,607,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,560,567,611,582,584,603,582,584,541,579,547,589,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,534,536,545,550,553,555,557,558,561,562,563,564,566,568,597,599,610,613,616,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,558,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,568,592,568,548,575,547,589,602,575,533,559,546,576,581,583,588,548,558,548,542,596,596,548,614,0,543,544,612,549,551,568,593,535,540,542,538,547,582,584,589,616,598,573,616,544,548,577,578,586,587,548,529,530,531,617,567,611,604,605,543,548,570,560,615,568,568,571,568,591,590,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,542,539,540,542,535,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,0,0,0,0,0,0,0,0,0,0,0,0,0,0,618,619,620,621,622,188,623,618,619,620,621,622,188,623,620,619,619,619,618,618,620,620,618,619,620,621,622,188,623,618,619,620,621,622,188,623,618,619,620,621,622,188,618,619,620,621,622,188,623,621,622,622,618,619,620,621,622,188,618,619,620,621,622,188,623,618,619,620,621,622,188,623,618,619,620,621,622,188,623,618,619,620,621,622,188,623,620,620,623,188,618,619,620,621,622,188,623,618,619,620,621,622,188,623,618,619,620,621,622,188,623,618,619,620,621,622,188,623,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,632,637,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,629,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,626,638,630,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,624,628,632,634,637,638,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,631,630,625,629,631,631,631,635,0,627,633,630,632,637,632,637,627,631,631,638,192,631,636,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,624,625,626,627,628,629,630,631,632,192,633,634,635,636,637,638,686,686,639,686,686,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,686,0,686,0,0,686,686,0,639,662,0,0,686,686,662,686,0,0,639,640,640,686,686,686,686,0,0,686,686,0,686,686,686,686,0,686,686,640,0,0,0,0,0,0,0,0,0,686,686,686,0,0,0,677,651,642,644,642,644,685,0,678,647,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,673,657,672,657,672,657,672,649,671,649,671,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,673,0,646,683,659,661,673,645,653,658,660,665,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,684,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,688,659,661,680,659,661,656,666,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,641,643,645,647,674,676,687,689,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,647,647,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,669,652,666,679,652,653,658,660,665,647,673,673,670,659,661,666,675,650,654,655,663,664,639,640,689,688,681,682,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,194,648,668,667,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,639,640,641,642,643,644,645,646,647,194,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,758,758,690,758,758,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,758,0,758,0,0,758,713,0,758,0,690,734,0,0,758,758,734,758,713,0,0,690,691,692,713,692,691,692,0,758,758,0,0,0,0,0,713,713,758,713,758,0,0,758,758,0,758,758,758,758,0,758,758,713,691,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,758,758,758,713,713,0,0,713,713,0,713,0,712,749,723,693,715,717,715,717,757,0,750,719,765,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,719,745,729,744,729,744,729,744,721,743,721,743,699,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,745,703,0,698,755,731,733,745,718,707,725,730,732,737,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,756,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,760,731,733,752,731,733,702,728,708,738,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,695,697,706,711,714,716,718,719,746,748,759,762,765,766,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,719,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,741,709,724,708,738,751,724,694,707,725,730,732,737,709,719,709,703,745,745,709,763,0,704,705,761,710,712,742,696,701,703,699,708,731,733,738,765,747,722,765,705,709,726,727,735,736,709,690,691,692,766,760,753,754,704,709,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,764,195,720,740,739,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,703,700,701,703,696,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,195,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,838,838,767,838,838,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,838,0,838,0,0,838,790,0,838,0,767,814,0,0,838,838,814,838,790,0,0,767,768,769,790,769,768,769,0,838,838,0,0,0,0,0,790,790,838,790,838,0,0,838,838,0,838,838,838,838,0,838,838,790,768,0,838,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,838,838,790,790,0,0,790,790,0,790,0,789,829,803,770,792,794,792,794,846,837,0,830,796,845,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,796,825,809,824,809,824,809,824,801,823,801,823,776,825,780,0,775,835,811,813,825,795,784,805,810,812,817,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,836,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,798,840,811,813,832,811,813,779,808,785,818,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,772,774,783,788,791,793,795,796,826,828,839,842,845,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,796,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,821,786,804,785,818,831,804,771,797,784,805,810,812,817,786,796,786,780,825,825,786,843,0,781,782,841,787,789,822,773,778,780,776,785,811,813,818,845,827,802,845,782,786,806,807,815,816,786,767,768,769,846,840,833,834,781,786,196,798,844,800,799,820,819,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,780,777,778,780,773,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,196,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,0,0,0,0,0,0,0,0,847,847,847,0,0,0,0,859,859,0,850,850,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,852,0,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,849,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,862,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,854,848,855,857,860,864,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,851,862,863,865,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,853,856,858,861,852,862,848,861,862,856,858,847,865,864,855,857,860,861,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,854,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,862,197,862,861,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,197,863,864,865,0,867,867,0,0,0,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,1178,0,0,1178,867,1178,867,1178,1178,1178,867,1178,867,1178,867,867,867,1178,867,1178,867,1178,867,1178,867,0,867,0,867,0,0,1178,867,1178,867,1178,867,0,1178,867,1179,0,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,0,125,125,0,0,125,0,125,125,0,1153,125,117,125,117,117,117,125,117,125,117,125,117,125,125,117,117,117,1153,125,125,117,117,125,117,125,117,125,117,1153,1153,1153,1153,125,117,125,1153,1153,125,117,125,125,117,125,117,125,117,125,117,1154,1155,1154,1155,1154,1155,1154,1155,0,0,0,0,0,0,0,0,0,0,0,0,888,888,0,0,0,0,885,889,885,889,885,889,888,885,889,888,885,889,885,889,885,889,885,889,888,885,889,888,885,889,888,888,888,885,889,888,888,885,885,889,888,885,889,885,885,885,885,885,885,885,885,885,889,888,885,889,885,889,888,885,889,888,888,885,889,888,885,885,885,885,885,889,889,885,889,885,889,888,885,889,888,885,889,888,885,889,888,885,885,889,888,885,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,897,0,907,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,903,897,904,905,906,907,908,909,910,911,912,913,914,915,916,903,897,904,905,906,907,908,909,910,911,912,913,914,915,916,903,897,904,905,906,907,908,909,910,911,912,913,914,915,916,903,897,904,905,906,907,908,909,910,911,912,913,914,915,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,903,897,904,905,906,907,908,909,910,911,912,913,914,915,916,903,897,904,905,906,907,908,909,910,911,912,913,914,915,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,910,911,912,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,916,908,0,897,904,0,915,903,897,909,897,904,910,912,903,897,904,905,906,907,908,909,910,911,912,913,914,915,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,897,903,897,904,905,906,907,908,909,917,910,918,911,919,912,920,913,914,915,921,916,922,0,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,922,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,893,944,0,0,944,0,944,0,944,0,944,0,944,0,0,0,0,0,944,0,944,0,944,0,0,0,0,0,960,944,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,960,944,963,960,963,960,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,963,960,944,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,944,944,944,944,944,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,960,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,960,944,960,960,944,944,944,944,960,944,963,960,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,944,963,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,960,968,985,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,985,985,968,985,985,985,985,985,985,985,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,985,985,985,985,967,967,985,985,969,966,966,967,968,966,967,968,0,966,967,968,967,968,0,0,972,966,966,967,968,966,967,968,966,967,968,967,967,967,968,968,966,966,967,968,968,973,969,966,966,966,966,966,966,967,968,966,967,968,966,967,968,973,969,969,0,988,973,966,966,972,969,969,973,966,966,966,966,0,972,969,966,967,968,968,966,967,968,966,967,968,966,967,968,966,0,972,966,967,968,0,0,973,974,973,974,973,973,973,973,974,973,974,973,974,974,973,974,973,973,974,973,974,973,974,973,973,973,0,973,974,973,974,973,974,973,974,973,973,973,973,974,0,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,972,0,0,0,979,979,969,979,969,0,969,979,969,979,969,979,969,979,969,979,979,979,969,979,979,979,979,969,969,969,969,969,969,969,979,969,979,969,979,969,969,969,969,969,969,969,969,969,969,969,979,969,969,979,969,969,969,979,969,979,969,979,969,979,969,969,979,985,0,985,985,985,985,985,985,985,985,985,0,0,985,985,985,985,985,985,977,987,985,977,987,985,977,987,985,977,987,985,985,977,987,985,985,985,977,985,985,977,987,985,977,977,987,985,977,987,985,977,987,985,977,987,985,985,977,987,985,977,987,985,977,987,985,977,987,985,0,988,988,988,988,988,988,988,988,988,988,988,988,988,988,988,988,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,886,899,895,935,989,936,990,886,899,895,935,989,936,990,886,899,895,935,936,886,899,895,935,936,886,899,895,935,936,886,899,895,886,899,895,935,936,886,899,895,935,989,936,990,886,899,895,935,989,936,990,886,899,895,935,989,936,990,886,899,895,935,936,886,899,895,935,936,886,899,895,935,989,936,990,886,899,895,935,989,936,990,935,936,886,899,895,935,989,936,990,886,899,895,935,989,936,990,886,899,895,935,989,936,990,886,899,895,935,936,886,899,895,935,989,936,990,886,899,895,935,989,936,990,886,899,895,935,989,936,990,886,899,895,935,989,936,990,0,0,0,0,0,0,0,991,992,993,994,995,991,992,993,994,995,991,992,993,994,991,992,993,994,991,992,993,994,991,992,993,994,991,992,993,994,995,991,992,993,994,995,991,992,993,994,995,991,992,993,994,991,992,993,994,991,992,993,994,995,991,992,993,994,995,994,991,992,993,994,995,991,992,993,994,995,991,992,993,994,995,991,992,993,994,991,992,993,994,995,991,992,993,994,995,991,992,993,994,995,991,992,993,994,995,0,0,0,0,0,0,0,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,894,996,0,996,0,996,0,0,0,0,1000,996,1001,997,998,999,1000,1001,997,998,999,1000,997,998,999,1000,1000,1001,1000,1001,1000,1001,997,998,999,1000,1001,997,998,999,1000,1001,997,998,999,1000,1001,1000,1001,997,998,999,1000,1001,997,998,999,1000,1000,1001,997,998,999,1000,1001,997,998,999,1000,1000,1000,1000,1000,996,996,1001,1000,1001,997,998,999,1000,1001,997,998,999,1000,1001,997,998,999,1000,1001,997,998,999,1000,1000,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1006,0,0,165,1005,1004,159,160,161,1003,1004,1005,162,165,159,1006,160,161,1003,1004,1005,162,165,159,1006,160,161,1003,1004,1005,162,165,159,160,161,1003,1004,1005,162,165,159,0,1004,1003,161,160,161,1003,1004,1005,162,165,159,1006,1006,160,161,1003,1004,1005,162,165,159,1006,160,161,1003,1004,1005,162,165,159,0,160,161,1003,1004,1005,162,165,159,1006,1003,1003,160,160,161,1003,1004,1005,162,165,159,160,161,1003,1004,1005,162,165,159,1006,0,1004,165,160,161,1003,1004,1005,162,165,159,1006,160,161,1003,1004,1005,162,165,159,1006,160,161,1003,1004,1005,162,165,159,1006,159,1004,1003,159,161,159,1005,159,161,1004,161,162,162,0,159,160,161,1003,1004,1005,162,165,159,159,159,1003,160,161,1003,1004,1005,162,165,159,160,161,1003,1004,1005,162,165,159,1006,160,161,1003,1004,1005,162,165,159,1006,160,161,1003,1004,1005,162,165,159,1006,0,160,161,1003,1004,1005,162,165,159,1006,0,0,0,0,0,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,0,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,1007,0,1010,0,0,0,1010,1010,1008,1008,1011,1010,1008,1011,1010,1008,1011,1011,1011,1008,1011,0,1008,1008,1011,1010,1008,1011,1010,1008,1011,1010,1010,1010,1008,1011,1010,1010,1010,1011,1008,1011,1010,1008,1011,1010,1008,1011,1010,1008,1011,1010,1010,1010,1008,1011,1010,1008,1011,1010,1008,1011,1010,1008,1011,1008,1011,1010,1008,1008,1008,0,0,0,0,1016,1015,1009,1015,1016,1017,1009,1015,1016,1017,1009,1015,1016,1017,1009,1015,1016,1017,1009,1015,1016,1017,1009,1015,1016,1017,1009,1015,1016,1017,1009,1015,1015,1016,1017,1009,1017,1015,1016,1017,1009,1015,1016,1017,1009,1016,1015,1016,1017,1009,1015,1016,1017,1009,1015,1016,1017,1009,1009,1015,1015,1009,1015,1015,1009,1009,1015,1015,1015,1009,1015,1016,1017,1009,1009,1009,1009,1015,1016,1017,1009,1015,1015,1015,1016,1017,1009,1015,1016,1017,1009,1015,1016,1017,1009,1015,1016,1017,1009,1015,0,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,1018,0,118,118,118,118,118,0,0,0,0,1025,1025,1025,0,0,0,0,1027,0,0,1025,1025,1025,1026,1027,1028,1026,1025,1027,1028,1026,1025,1027,1028,1025,1027,1025,1027,1026,1026,1026,1026,1026,1025,1026,1025,1027,1028,1026,1025,1027,1028,1025,1027,1028,1026,1025,1027,1028,1026,1025,1025,1028,1027,1027,1026,0,1025,1025,1027,1027,1028,1026,1025,1027,1027,1028,1025,1026,1026,1026,1026,1026,1026,1026,1026,1026,1026,1028,1026,1025,1027,1028,0,1026,1025,1027,1028,1026,1025,1027,1028,1027,1026,1027,1028,1026,1027,1028,1026,1026,1026,1025,1028,1028,1027,1025,1027,1028,1027,1027,0,1027,1028,1025,1027,1025,1027,1026,1025,1027,1028,1026,1025,1027,1028,1026,1027,1028,1026,1025,1027,1028,1026,1025,1027,1028,1034,1036,0,1036,1034,0,1034,0,1036,8,8,8,8,8,8,8,8,8,1034,1036,8,1034,1036,8,8,8,1034,1034,8,8,1034,1036,8,1034,1036,8,8,1034,1036,1034,8,1034,1036,1036,8,8,1034,1034,1036,1036,1036,8,8,8,8,1034,1036,8,1034,1036,8,1034,1036,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1036,8,8,8,8,8,8,8,8,8,1036,8,8,8,8,8,8,8,1034,8,1036,8,8,1034,1036,8,1034,1036,8,1034,1036,8,1034,1036,8,8,1159,1159,0,0,1044,1044,1044,1044,1044,1046,1044,1046,1046,1044,1044,1046,1044,1046,1044,1046,1044,1044,1046,1046,1044,1044,1044,1046,1044,1046,1044,1046,1044,1046,1044,1044,1044,1044,1044,1044,1044,1044,1044,1046,1044,1046,1046,1044,1044,1046,1044,1044,1046,1044,1044,1044,1044,1046,1044,1046,1044,1046,1044,1046,1046,1046,1046,1046,1046,116,116,0,116,116,0,116,116,0,0,1041,1041,1041,1041,1041,1041,1041,1041,1041,116,1041,116,1041,1041,1041,116,1041,116,1041,1041,116,1041,1041,1041,1041,116,116,1041,1041,1041,116,116,116,116,116,116,1041,116,1041,1041,1041,116,1041,116,1041,1041,1041,1041,1041,1041,1041,1041,1041,1041,116,0,1041,1041,1041,1041,1041,1041,1041,1041,0,1041,1041,116,1041,1041,1041,1041,1041,1041,116,116,1041,116,1041,116,1041,1041,0,1041,116,1041,1158,1158,1158,0,0,0,1058,1058,1024,1024,1024,1024,1024,1024,1058,1024,1058,1024,1024,1024,1024,1024,1058,1024,1058,1024,1024,1058,1024,1024,1024,1058,1024,1024,1024,1024,1058,1024,1024,1058,1024,1058,1024,1058,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1024,1058,1058,1024,1024,1058,1024,1058,1024,1024,1024,1024,1024,1058,1024,0,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,1023,0,0,0,0,0,0,0,1040,0,0,0,0,1040,0,1064,1065,0,1040,1064,1065,1063,1040,0,1040,1040,0,1062,0,1040,1042,0,0,0,0,0,0,0,0,0,1066,1040,1062,0,1063,1040,1042,1066,1066,1040,0,0,0,0,1040,1040,1060,1060,1071,1060,1060,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1061,1062,1063,1064,1065,1066,1061,1062,1063,1064,1065,1066,0,1060,1060,1060,1060,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1061,1062,1063,1061,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1062,1063,1062,1063,0,1040,1040,1061,1062,1063,1064,1065,1066,1042,1060,1071,1040,1040,1040,1040,1040,1040,1040,1040,1061,1062,1063,1064,1065,1066,0,1060,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1060,1060,1060,1071,1061,1060,1071,0,1040,1071,1040,1060,1071,1060,1071,1060,1071,1060,1060,1071,1071,1060,1060,1060,0,1060,1071,1061,1062,1063,1064,1065,1066,1040,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1060,1071,1071,1060,1042,1060,1071,1040,1061,1062,1063,1064,1065,1066,1060,1160,1161,1160,1161,0,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,0,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,1072,1070,1070,0,0,0,1070,1070,0,0,1070,1070,1073,1067,1070,1067,1070,0,1067,0,1067,1070,1067,1070,1067,1070,1067,1070,1070,1067,1070,1070,1070,1070,1070,1067,1067,1067,1067,1070,1067,1070,1067,1070,1067,1067,1073,1067,1067,1073,1067,1073,1073,1070,1067,1067,1067,1073,1067,1067,1067,1067,1073,1073,1073,1070,1070,1067,1070,1067,1070,1067,1070,1067,1070,1073,0,0,0,0,0,0,0,0,0,0,0,0,0,1074,1074,1074,0,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,1074,0,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,1075,0,1075,1039,0,1039,1039,1075,1039,1075,1039,1039,1039,1039,1039,1075,1039,1075,1039,1039,1075,1039,1075,1075,1039,1039,1039,1075,1075,1039,1039,1075,1039,1075,1039,1039,1075,1039,1039,1075,1039,1075,1039,1075,1039,1075,1039,1039,1075,1039,1075,1039,1075,0,0,1076,1076,1076,0,0,1076,1035,1035,1035,0,0,0,1035,1079,1076,1035,1079,1076,1035,1079,1076,1035,1079,1076,1035,1079,1076,1076,1076,0,1035,1035,1079,1076,1076,1076,1035,1079,1076,1035,1079,1076,1035,1079,1076,1035,1079,1035,1076,1035,1035,1035,1076,1076,1035,1079,1076,1035,1079,1076,1035,1079,1076,1079,1035,1035,1079,1076,1079,0,0,1077,0,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,1077,0,0,1105,1105,0,0,1105,0,0,0,0,0,0,0,0,0,1105,1105,0,0,0,1106,0,1105,0,1105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1105,1080,1083,1080,1083,0,0,0,121,0,0,0,0,0,0,0,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,1090,121,1033,1080,1083,1092,1087,1088,1093,1089,1094,1095,1081,121,1033,1080,1083,1092,1087,1088,1093,1089,1094,1095,1081,1094,0,0,1096,1094,1094,1101,0,1090,1095,1098,1068,1101,1098,1102,1068,1104,1092,1093,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,0,121,121,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,1095,1098,1098,1095,1093,0,0,1033,1080,1083,1094,1033,1094,1101,1102,1092,1098,1104,1105,1105,121,1033,1033,1080,1080,1083,1083,1106,1106,1093,1094,1094,1095,1081,1081,1002,1090,1101,1098,1102,1068,1104,1096,1105,1105,1105,1105,1105,121,1033,1080,1080,1083,1083,1106,1092,1087,1088,1093,1089,1094,1095,1095,1095,1081,1081,1095,1095,1096,1002,1033,121,1081,1033,1033,1033,1101,1101,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,1002,1081,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1083,1106,1092,1087,1088,1093,1089,1094,1095,1095,1081,1002,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,0,1092,1087,1081,1087,1081,1102,1094,1094,1033,1087,1088,1089,1033,1087,1088,1089,1002,1090,1104,1096,1033,1080,1083,1087,1088,1089,1094,1095,1081,1081,1081,1081,1081,1087,1088,1089,0,0,1080,1083,1094,1096,121,121,1098,1104,1093,1093,0,1096,1105,1106,1081,121,121,121,121,1096,0,0,1092,1105,1104,1087,1088,1089,1101,1102,1068,1098,1101,1102,1068,1092,0,1087,1088,1089,1087,1088,1089,1081,1087,1088,1089,0,1068,121,1033,1080,1083,1092,1087,1088,1093,1089,1094,1095,1081,1098,1104,1105,1033,1080,1083,1106,1093,1094,1081,1090,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,1090,0,1096,121,121,121,1094,1094,0,1002,1090,1101,1098,1102,1068,1104,1096,1105,121,1033,1080,1083,1106,1092,1087,1088,1093,1089,1094,1095,1081,1090,1089,1090,1096,1081,1180,1180,0,0,1181,1181,1182,0,0,0,0,0,0,1118,0,0,1118,1111,0,0,0,0,1116,1116,1111,1111,1183,1119,1119,1120,0,0,1183,1120,1183,1183,1183,1183,0,0,0,0,0,0,1183,0,0,1184,1184,1184,1185,1185,1186,1186,0,0,0,0,0,0,0,1116,1116,1183,1119,1119,1119,1116,1119,1116,1119,1119,1119,1116,1119,1116,1119,1116,1119,1119,1116,1116,1119,1116,1116,1183,1119,1116,1119,1116,1119,1116,1183,1183,1183,1183,1119,1116,1116,1183,1119,1119,1116,1119,1116,1119,1116,1119,1116,1119,1116,1184,1184,1184,1118,0,0,1118,1120,1118,1120,1118,1118,1118,1120,1120,1118,1120,1118,1120,1120,1120,1118,1118,1120,1118,1120,1120,1118,1120,1120,1118,1120,1118,1120,1120,1118,1120,1118,1120,1118,1120,1118,1120,1118,1111,0,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1111,1185,1185,1186,1186,1121,0,0,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,0,1121,1121,1121,0,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,1121,0,1121,1121,1121,1121,0,0,1187,1121,1187,1121,1121,1121,1121,1187,1187,1187,1121,0,0,1188,0,1126,1126,1126,1126,1126,1126,1126,1126,1126,1126,1126,1126,1126,1126,1126,1126,1126,1126,1126,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1128,1128,1128,1128,1128,1128,1128,1189,1190,1128,1128,1128,1128,1128,1128,1128,1190,1189,1189,1128,1128,1128,1128,1128,0,0,1191,0,0,0,0,0,1192,0,1131,0,1132,1131,0,0,1132,1132,1131,1130,1132,1131,1130,1130,1130,1131,1132,1131,1130,1132,1131,1130,1132,1131,1130,1131,1132,1131,1130,1132,1131,1130,1132,1131,1130,1132,1131,1130,1130,1130,1130,1132,1131,1130,1132,1131,1130,1132,1131,1130,1132,1131,1130,0,0,0,0,0,1117,0,0,1117,1117,1117,1117,1117,1117,1117,1117,1117,1117,1117,1117,1117,1117,1117,1117,1117,1144,1144,0,0,0,0,1144,1134,1193,1193,0,1134,1134,1134,1134,1142,1134,1134,0,1134,1134,1194,1195,1194,1196,1195,1196,0,0,1134,1134,1134,1136,1134,1136,1134,1136,1136,1134,1136,1134,1136,1134,1136,1134,1136,1136,1136,1134,1136,1134,1136,1134,1136,1134,1136,1134,1134,1134,1134,1134,1134,1134,1134,1134,1134,1134,1134,1134,1134,1134,1134,1134,1136,1134,1136,1134,1136,1134,1134,1134,1134,1134,1136,1136,1136,0,1144,1144,0,1144,0,0,0,1142,1145,1146,1145,1146,1142,1145,1146,1142,1145,1146,1142,1145,1146,1143,1144,1142,1145,1146,1143,1144,1145,1146,1142,1145,1146,1143,1142,1145,1146,1143,1143,1146,1142,1145,1146,1143,1144,1142,1145,1146,1143,1144,1142,1145,1146,1143,1144,1143,1143,1143,1146,1143,1144,1144,1142,1145,1146,1143,1144,1142,1146,1143,1146,1143,1142,1145,1146,1143,1144,1142,1145,1146,1143,1144,1142,1145,1146,1143,1144,1142,1145,1146,1146,1142,1145,1146,1143,1144,1143,1143,1142,1145,1142,1145,1146,1143,1144,1142,1145,1146,1143,1144,1142,1145,1146,1143,1144,1142,1145,1146,1143,1144,1142,1145,1146,1143,1144,1194,1195,1194,1196,1195,1196,0,0,870,870,0,870,0,1197,0,1197,0,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870,870],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[[]],[[]],[1,3],[1,4],[1,1],[[]],0,0,0,[[],1],[5],[5],[5],0,0,[[1,6],7],[[1,8],9],[[1,8],10],[[]],[1,11],0,0,[[],5],[[]],[[],12],0,0,0,0,0,0,0,0,[1,13],[14,1],[1,15],0,[1,16],0,0,0,0,0,[[]],[1,17],[[1,18],19],0,[[],20],[[],20],[[],21],[1,22],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,[24,[23]],[25,[[24,[23]]]],26],23],[[2,[24,[23]],[25,[[24,[23]]]],26,27]],0,[[]],[[]],[[2,[24,[23]],[24,[23]],26],23],[[2,[24,[23]],[24,[23]],26,27]],[5],[5],[5],[[]],[[2,[24,[23]]],[[28,[23,23]]]],[[2,[24,[23]],27]],[[],5],[[]],[[],12],[29,2],[[2,[24,[23]],[25,[[24,[23]]]],26],23],[[2,[24,[23]],[25,[[24,[23]]]],26,27]],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],0,[5],[5],[5],[[3,6],7],[[]],[[],5],[[]],[[],12],[30,3],[[3,[24,[23]],5,31,5,[24,[23]]],23],[[3,[32,[15]],[24,[23]],[32,[15]]],23],[[3,[24,[23]],5,31],23],[[3,[24,[23]]],23],[[3,[24,[23]],[24,[23]]],23],[[3,27,27,33,33,27,[25,[34]]],23],[[3,27],23],[[3,27,[32,[15]]],23],[[3,27,27],23],[[3,[32,[15]]],23],[[3,[32,[15]],[32,[15]],[32,[15]]],23],[[3,[32,[15]]],[[20,[23,35]]]],[[],20],[[],20],[[],21],[[3,[24,[23]]],[[20,[23,35]]]],[[]],0,[[]],[[]],[[11,[32,[15]],36]],[5],[5],[5],[[11,[32,[15]],36]],[[11,[32,[15]],27]],[[]],0,[[11,[32,[15]]],18],[[11,[32,[15]],27]],[[],5],[11,23],[[]],[[],12],[37,11],[[],20],[[],20],[[],21],[[]],0,0,[[]],[[]],[[13,[24,[23]],[32,[15]]],23],[[13,[24,[23]],[32,[15]],27]],[[13,[32,[15]],[32,[15]]]],[[13,[32,[15]],[32,[15]],27]],[[13,[24,[23]]],23],[[13,[24,[23]],27]],[5],[5],[5],[[13,[24,[23]],[32,[15]]]],[[]],[[13,[24,[23]]],23],[13,23],[[13,[24,[23]],27]],[[13,[24,[23]],[24,[23]]],23],[[13,[24,[23]],[24,[23]],27]],[[],5],[[]],[[],12],0,[38,13],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[5],[5],[5],[[]],[[],5],[[]],[[],12],[39,16],0,[[],20],[[],20],[[],21],0,[16,40],0,[16,41],[[]],0,[[40,[24,[23]],[24,[23]]],42],0,[40,43],[[]],[[]],[5],[5],[5],[[]],[[],5],[[]],[[],12],[[40,[24,[23]]],[[45,[44]]]],0,[40,46],[47,40],0,[40,48],[[40,[24,[23]]],49],[[40,[24,[23]]]],[[40,[24,[23]],[24,[23]]],50],[[40,[24,[23]]],[[45,[23]]]],[[40,[24,[23]]],23],[[40,[24,[23]],27]],[[],20],[[],20],[[],21],0,[40,51],0,0,[40,52],[[]],0,0,[[]],[[]],[5],[5],[5],[[]],[[43,[24,[23]],[24,[23]]],23],[[43,[24,[23]],[24,[23]],27]],[[],5],[[]],[[],12],[53,43],[[43,[24,[23]],33,[24,[23]]],[[45,[18]]]],[[43,[24,[23]],33,[24,[23]],27]],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[5],[5],[5],[[]],[[],5],[[]],[[],12],[[46,[24,[23]]],[[45,[54]]]],0,[55,46],[[46,27,[24,[23]]],56],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[5],[5],[5],[[]],[[],5],[[]],[[],12],[57,48],0,[[48,[24,[23]]],[[28,[23,23]]]],[[],20],[[],20],[[],21],[[]],0,[[51,58,[24,[23]]]],[[]],[[]],[5],[5],[5],[[51,58,[24,[23]]]],[[51,[24,[23]],59,[24,[23]]]],[[]],[[51,[0,[60,[24,[23]]]],59,[0,[60,[24,[23]]]]],58],[[51,58,[24,[23]]],58],[[],5],[[]],[[],12],[61,51],[[],20],[[],20],[[],21],0,[[]],0,[[52,[24,[23]]],[[45,[62]]]],[[52,[24,[23]]],[[45,[63]]]],[[]],[[]],[5],[5],[5],[[]],[[],5],[[]],[[],12],[64,52],[[],20],[[],20],[[],21],0,[[]],0,[[]],[[]],[5],[5],[5],[[]],[[],5],[[]],[[],12],[65,41],[[],20],[[],20],[[],21],0,0,[41,66],[[]],0,[[66,[24,[23]],[24,[23]],[24,[23]]],[[45,[59]]]],[[]],[[]],[5],[5],[5],[[]],[[],5],[[]],[[],12],[67,66],[[],20],[[],20],[[],21],0,[[]],0,[[17,27,27,[32,[15]]]],[[17,27,27,[32,[15]],27]],[[17,68,[32,[15]]]],[[17,[24,[23]],[32,[15]]]],[[17,18,59,27,[32,[15]]]],[[17,18,59,27,[32,[15]],27]],[[17,58,[32,[15]]]],[[17,58,69,[32,[15]]]],[[17,27,69,[32,[15]]]],[[17,70,[32,[15]]]],[[17,70,[32,[15]],27]],[[17,[32,[15]],[32,[15]]]],[[]],[[]],0,[[17,[32,[15]]],23],[[17,[32,[15]],27]],[[17,71,18,72,[32,[15]]],70],[5],[5],[5],[[17,[32,[15]]]],[[17,[32,[15]],27]],[[17,27,73,[32,[15]]]],[[17,[32,[15]]],18],[[]],[[17,[32,[15]]],18],[[17,27,[32,[15]]],23],[[],5],[[]],[[],12],[[17,23,74,[25,[74]],69,23,75,[32,[15]],[32,[15]],76]],[[17,70]],[[17,70,27]],[77,17],[[17,[32,[15]]]],[[17,[32,[15]]]],[[17,75,[32,[15]]]],[[],20],[[],20],[[],21],[[]],0,0,0,0,[[]],[[]],0,[22,78],0,[22,79],[5],[5],[5],[[22,[24,[23]]],[[20,[23,35]]]],[[]],[[],5],[[]],[[],12],[80,22],0,[22,81],[[],20],[[],20],[[],21],[[22,[32,[15]],[32,[15]]],23],[[22,[24,[23]],[32,[15]]],23],0,[[]],0,0,0,[[]],[[]],0,0,[78,82],[5],[5],[5],[[]],[[],5],[[]],[[],12],0,[78,83],[84,78],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],0,[5],[5],[5],[[]],[82,23],[[],5],[[]],[[],12],[85,82],[[82,23],[[20,[23,35]]]],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[5],[5],[5],[[]],[[83,[32,[15]],[24,[23]],33,33,[25,[23]]],23],[[],5],[[]],[[],12],0,[86,83],[[83,[24,[23]]],[[20,[23,35]]]],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],0,[5],[5],[5],[[]],[79,23],[[],5],[[]],[[],12],[87,79],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[[81,[32,[15]],[24,[23]],[32,[15]],33],23],[[81,[32,[15]],[24,[23]],[32,[15]],33,27]],[[81,[32,[15]],[24,[23]],[32,[15]]],23],[5],[5],[5],[[]],[[],5],[[]],[[],12],[[81,[32,[15]]],[[20,[[45,[88]],89]]]],[[81,[45,[[32,[15]]]]],23],[90,81],0,[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,0,0,[91,29],[[]],[[]],0,[91,30],0,[5],[5],[5],[[]],0,[91,37],[[],5],[[]],[[],12],0,[91,38],[92,91],0,[91,39],0,[91,77],[[],20],[[],20],[[],21],0,[91,80],[[]],0,0,0,0,0,[29,93],[[]],[[]],0,[5],[5],[5],[[]],0,[29,94],[[],5],[[]],[[],12],[92,29],0,[29,95],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[93,92],0,[5],[5],[5],[[]],[[],5],[[]],[[],12],[92,93],[[93,[24,[23]]],93],[[93,[24,[23]]],93],[93,93],[[],20],[[],20],[[],21],[[]],0,[[94,[24,[23]]],94],[[]],[[]],[94,92],0,[5],[5],[5],[[]],[[],5],[[]],[[],12],[92,94],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[95,92],0,[[95,[24,[23]]],95],[5],[5],[5],[[]],[[],5],[[]],[[],12],[92,95],[[95,[24,[23]]],95],[[95,[24,[23]]],95],[95,95],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[30,92],0,[5],[5],[5],[[30,6],7],[[]],[[],5],[[]],[[],12],[92,30],[[30,[24,[23]],[24,[23]]],30],[96,27],[[30,59,5,5,23,[32,[15]]],30],[[30,[32,[15]],[24,[23]],[32,[15]]],30],[[30,23,5,59],30],[[30,[24,[23]]],30],[[30,[24,[23]],97],30],[[30,[32,[15]],[32,[15]],[32,[15]]],30],[[30,[32,[15]],[32,[15]]],30],[[30,[24,[23]],[24,[23]],33,33,[24,[23]],[25,[34]]],30],[[],20],[[],20],[[],21],[[30,[24,[23]],[32,[15]]],30],[[30,[24,[23]],[24,[23]]],30],[[30,[32,[15]]],30],[[30,[32,[15]],[32,[15]]],30],[[]],0,0,0,0,[[]],[[]],0,0,[37,98],[5],[5],[5],0,[37,99],[[]],0,[37,100],[[],5],[37,92],[[]],[[],12],[92,37],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[98,92],0,[5],[5],[5],[[]],[[],5],[[98,[32,[15]]],98],[[]],[[],12],[92,98],[[98,[32,[15]]],98],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[99,92],0,[5],[5],[5],[[]],[[],5],[[99,[32,[15]]],99],[[]],[[],12],[92,99],[[99,[32,[15]]],99],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[100,92],0,[5],[5],[5],[[]],[[],5],[[100,[32,[15]]],100],[[]],[[],12],[92,100],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,[[]],[[]],0,[5],[5],[5],[[]],0,[38,101],0,[38,102],[[],5],[[]],[[],12],[92,38],0,[38,103],0,[38,104],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[101,92],0,[5],[5],[5],[[]],[[],5],[[101,[32,[15]]],101],[[]],[[],12],[[101,[24,[23]]],101],[92,101],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[102,92],0,[5],[5],[5],[[]],[[],5],[[]],[[],12],[[102,[24,[23]]],102],[92,102],[[102,[24,[23]]],102],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[103,92],0,[5],[5],[5],[[]],[[],5],[[103,[32,[15]]],103],[[]],[[],12],[92,103],[[103,[32,[15]]],103],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[104,92],0,[5],[5],[5],[[]],[[],5],[[104,[32,[15]]],104],[[]],[[],12],[92,104],[[104,[32,[15]]],104],[[],20],[[],20],[[],21],[[]],0,0,0,[[]],[[]],0,[5],[5],[5],[[]],[[],5],[[]],[[],12],[92,39],[[],20],[[],20],[[],21],0,[39,47],0,[39,65],[[]],0,0,0,0,0,0,[[47,[24,[23]],[24,[23]]],47],0,[47,53],[[]],[[]],[47,92],0,[5],[5],[5],[[]],[[],5],[[]],[[],12],[[47,[24,[23]]],47],0,[47,55],[92,47],0,[47,57],[[47,[24,[23]]],47],[[47,[24,[23]]],47],[[47,[24,[23]],[24,[23]]],47],[[47,[24,[23]]],47],[[47,[24,[23]]],47],[47,77],[[],20],[[],20],[[],21],0,[47,61],0,[47,64],[[]],0,[[]],[[]],[53,92],0,[5],[5],[5],[[]],[[53,[24,[23]],[24,[23]]],53],[[],5],[[]],[[],12],[92,53],[[53,[24,[23]],33,[24,[23]]],53],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[55,92],0,[5],[5],[5],[[]],[[],5],[[]],[[],12],[[55,[24,[23]]],55],[92,55],[[55,[32,[15]],[24,[23]]],55],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[57,92],0,[5],[5],[5],[[]],[[],5],[[]],[[],12],[92,57],[[57,[24,[23]]],57],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[61,92],0,[5],[5],[5],[[61,[24,[23]]],61],[[]],[61,61],[[61,[24,[23]]],61],[[],5],[[]],[[],12],[92,61],[[61,59],61],[[],20],[[],20],[[],21],[[]],0,[[64,[24,[23]]],64],[[64,[24,[23]]],64],[[]],[[]],[64,92],0,[5],[5],[5],[[]],[[],5],[[]],[[],12],[92,64],[[],20],[[],20],[[],21],[[]],0,0,[[]],[[]],[65,92],0,[5],[5],[5],[[]],[[],5],[[]],[[],12],[92,65],[[],20],[[],20],[[],21],0,[65,67],[[]],0,[[67,[24,[23]],[24,[23]],[24,[23]]],67],[[]],[[]],[67,92],0,[5],[5],[5],[[]],[[],5],[[]],[[],12],[92,67],[[],20],[[],20],[[],21],[[]],0,[[77,27,27,[32,[15]]],77],[[77,[24,[23]],[32,[15]]],77],[[77,27,59,27,[32,[15]]],77],[[77,27,27,[32,[15]]],77],[[77,[32,[15]],[32,[15]]],77],[[77,[32,[15]],[32,[15]]],77],[[]],[[]],[77,92],0,[5],[5],[5],[[77,[32,[15]]],77],[[77,27,73,[32,[15]]],77],[[77,6],7],[[]],[[77,[32,[15]]],77],[[77,27,[32,[15]]],77],[[],5],[[]],[[],12],[[77,23,74,[25,[74]],69,23,75,[32,[15]],[32,[15]],76],77],[[77,27,27,105,[25,[106]],[32,[15]],[32,[15]]],77],[92,77],[[77,[32,[15]]],77],[[77,[32,[15]]],77],[[77,27,[32,[15]]],77],[[77,[32,[15]]],77],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,[[]],[[]],[80,92],0,0,[80,84],0,[80,87],[5],[5],[5],0,[[80,[24,[23]],[32,[15]]],80],[[80,6],7],[[]],[[],5],[[]],[[],12],[92,80],0,[80,90],[[],20],[[],20],[[],21],[[80,[32,[15]],[32,[15]]],80],[[80,[24,[23]],[32,[15]]],80],[[]],0,0,0,[[]],[[]],0,0,[84,85],[5],[5],[5],[[]],[[],5],[[]],[[],12],0,[84,86],[92,84],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[85,92],0,[5],[5],[5],[[]],[85,85],[[],5],[[]],[[],12],[92,85],[[85,[32,[15]],[32,[15]]],85],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[86,92],0,[5],[5],[5],[[]],[[86,[32,[15]],[24,[23]],33,33,[25,[23]]],86],[[],5],[[]],[[],12],[92,86],[[86,[32,[15]],[32,[15]]],86],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[87,92],0,[5],[5],[5],[[]],[87,87],[[],5],[[]],[[],12],[92,87],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[107,92],0,[5],[5],[5],[[]],[107,107],[[],5],[[]],[[],12],[92,107],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[90,92],0,[[90,[32,[15]],[24,[23]],[32,[15]],33],90],[[90,[32,[15]],[24,[23]],[32,[15]]],90],[5],[5],[5],[[]],[[],5],[[]],[[],12],[[90,[32,[15]]],90],[[90,[45,[[32,[15]]]]],90],[92,90],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[105,105],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,[[105,6],7],[[105,6],7],[[70,6],7],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[72,71,18,18],70],[[18,18,105,27,[25,[106]]],70],[[27,106],72],[27,72],0,0,[72,[[25,[106]]]],0,[[]],[[],23],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],[27,14],0,0,0,0,0,0,0,0,[[]],[[]],0,[5],[5],[5],[[108,6],7],[[108,6],7],0,0,0,[[]],[[],5],[[]],[[],12],[109],[[],23],0,[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[110],[5],[5],[5],[5],[5],[5],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],12],[[],12],0,0,[[110,33],110],0,[1,4],[1,110],[4,110],[[4,27,27,15],[[20,[23,35]]]],[[4,[32,[15]],[32,[15]]],14],[[110,[24,[23]]],110],0,[[110,[24,[23]]],110],0,[[110,[24,[23]]],110],0,[[110,[32,[15]]],110],0,[[110,33],110],0,[[110,34],110],0,[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,[111,112],[[111,113],112],[111,112],[[111,27]],[[111,27]],[111],[[]],[[]],[5],[5],[5],[111,112],[[]],0,[[],5],[[]],[[],12],0,0,[[1,8,112,56],111],0,[[],20],[[],20],[[],21],[[]],[[111,113],[[20,[112,108]]]],0,[[]],[[]],[5],[5],[5],[[]],[[],5],[[]],[[],12],0,0,[[1,8],9],[[9,27],111],[9,10],[[],20],[[],20],[[],21],[[]],0,[[]],[[]],[10,[[20,[108]]]],[5],[5],[5],[[]],[[],5],[[]],[[],12],0,0,[[1,8],10],[[],20],[[],20],[[],21],[[]],[[10,113],[[20,[108]]]],[10,[[20,[108]]]],0,[[19,27,69],19],[[19,27,27,27],19],[[19,68],19],[[19,[32,[15]]],19],[[19,27],19],[[19,18,59,27],19],[[19,18,59,27,27],19],[[19,58],19],[[19,58,69],19],[[19,27,69],19],[[19,70],19],[[19,70,27]],[[]],[[]],[[19,58,69,72,69,74,75],23],[[19,72],70],[[19,105,[25,[106]]],70],[5],[5],[5],[19,19],[[19,27]],[[19,27,73],19],[19,18],[[]],0,[[19,27],23],[[],5],[[]],[[],12],0,[[19,72],19],[[19,70],19],[[19,70,27],19],[[1,18],19],[19,19],[19,19],[[19,70],19],[[19,72],19],[[19,75],19],[19,71],0,[19,36],[19,14],[19,23],[[19,27]],[19,18],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],114],0,0,0,0,[[],115],[[[45,[112]],45,[20,[56,116]]],[[45,[117]]]],[[[20,[56,116]]],[[45,[117]]]],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[118,118],[[]],[[118,118],119],0,0,0,0,0,0,0,0,[5],[5],[5],[5],[120,[[20,[118]]]],[33,[[45,[121]]]],0,[5],[5],0,[[118,118],76],[[],76],0,0,0,[[118,6],[[20,[122]]]],[[118,6],[[20,[122]]]],[[123,6],7],[[123,6],7],0,[[],[[20,[[124,[112,54]],125]]]],0,[[]],[[]],[27,20],[27,[[20,[118]]]],0,0,0,[[],126],[[],97],[121,14],0,0,0,0,[118],[[],5],[[],5],0,0,[[]],[[]],[[],12],[[],12],0,0,0,0,0,0,0,0,0,[[],[[45,[23]]]],[[],[[25,[15]]]],[[112,75,18]],[112],[[112,23]],0,0,0,0,0,0,0,0,0,0,[[97,97,97],118],0,0,0,0,0,0,0,[[],14],0,0,0,0,[[],127],0,[[],128],0,0,[27,[[20,[118,129]]]],[[118,118],[[25,[119]]]],0,0,0,[109],0,0,0,0,0,0,0,0,[[],127],0,0,0,0,0,[[[45,[130]],76],[[20,[56,125]]]],[130,[[20,[117,125]]]],[[118,131],20],[14],[128],[127],0,0,0,0,0,0,0,0,0,0,0,[[]],[[],23],[[],23],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],0,[127,23],0,0,0,0,0,0,0,[[],118],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],132],[[],133],[[],132],[[],[[133,[126]]]],0,[[]],[[]],[[]],[[]],[5],[134,132],[135,133],[5],[5],[5],[5],[5],[[]],[[]],[[],126],[[],5],[[],5],[[]],[[]],[[],12],[[],12],0,0,0,[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,0,0,[[]],[[]],[136,137],[136,136],[[]],[[],136],[26,[[45,[138]]]],[[],[[45,[139]]]],[5],[5],[120,[[20,[136]]]],[5],[[136,6],7],[[]],[[],5],0,[[]],[[],12],[[],136],0,[[136,131],20],[[]],[[],20],[[],20],[[],21],[[]],[[136,140],136],[[136,141],136],[[136,142],136],[[136,[45,[138]]],136],[[136,[45,[63]]],136],[136,136],[[136,140],136],[[136,[45,[139]]],136],[[136,26],136],[[136,143],136],[[136,[25,[144]]],136],[[136,[45,[138]]],136],[[136,[45,[145]]],136],[136,136],[[136,[45,[138]]],136],[[136,146],136],[[136,139],136],[[136,147],136],[[136,[149,[148]]],136],[[136,73],136],[[136,150],136],[[136,[25,[151]]],136],[[136,[45,[152]]],136],[[136,153],136],[[136,154],136],[136,136],[[136,155],136],[[136,[25,[69]]],136],[[136,69],136],[[136,[25,[34]]],136],[[136,59],136],[[136,145],136],[[136,[45,[145]]],136],0,0,0,[[]],[[]],[156,156],[[]],[5],[5],[5],[[156,6],7],[[]],[[],5],[[]],[[],12],[[]],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,[157,115],[[]],[[]],[5],[5],[5],0,[[157,6],7],[[]],[[],5],[[]],[[],12],[157,[[25,[15]]]],0,[157,14],[157,127],[157,128],[157,127],[[157,14]],[[157,128]],[[157,127]],[[],20],[[],20],[[],21],[[]],[157],0,0,0,[[]],[[]],[158,159],[158,158],[[]],[[],158],[5],[5],[5],[[158,6],7],[[]],[[],5],[[]],[[],12],0,0,0,0,0,0,[[]],[[],20],[[],20],[[],21],[[]],[[158,23],158],[[158,160],158],[[158,[24,[23]]],158],[[158,161],158],[[158,162],158],[[158,23],158],[[158,163],158],[[158,164],158],[[158,14],158],[[158,[45,[165]]],158],[158,158],0,0,[[[149,[148]]],166],0,[[]],[[]],[166,166],[[]],[[],166],[5],[5],[5],[[166,6],7],[[[147,[148]]],166],[[]],[[[149,[167]],[149,[168]],27],166],0,[[],5],[[]],[166,169],[[],12],[166,76],[[]],[[],20],[[],20],[[],21],[[]],[[],[[25,[14]]]],[166,[[25,[14]]]],0,0,0,0,0,0,0,0,[[170,[24,[23]]],[[20,[[172,[171]],173]]]],[[170,18],[[20,[[172,[174]],173]]]],[[170,23],[[20,[[172,[175]],173]]]],[[170,176],[[20,[[172,[177]],173]]]],[[170,33],[[20,[[172,[178]],173]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[179,170],0,0,[179,170],[170,170],[[]],[[[32,[15]]]],0,[179,180],0,[170,75],0,0,[5],[5],[5],[5],[5],[5],[170],[179],[5],[5],[5],[170],[[170,33,176],[[20,[[172,[181]],173]]]],[[173,6],7],[[173,6],7],[[]],[182,173],[183,173],[[]],[89,173],[[]],0,[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],[179,76],[170,[[20,[184,173]]]],[180,[[20,[179,173]]]],[23,170],[170],0,[[170,185]],[109],[[170,[185,[186]]],[[20,[187,173]]]],[170,[[20,[[172,[188]],173]]]],[179,[[25,[189]]]],[173,[[25,[190]]]],[[170,191,176],[[20,[[172,[192]],173]]]],[[170,176],[[20,[[172,[193]],173]]]],[[]],[[],23],[[170,18],[[20,[[172,[194]],173]]]],[[170,18],[[20,[[172,[195]],173]]]],[[170,[24,[23]]],[[20,[[172,[196]],173]]]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[170,23],0,[[170,23],[[20,[[172,[197]],173]]]],[[170,176],[[20,[[172,[198]],173]]]],[[]],[[]],[[]],[[179,97,97],76],0,0,0,0,[199,23],0,[[]],[[]],[[]],[[]],[199,199],[[]],[5],[5],[5],[5],[199],[5],[5],[199],[[182,6],7],[[182,6],7],[[]],[[]],[183,182],[[],5],[[],5],[[]],[[]],[[],12],[[],12],[[[24,[23]]],199],0,[109],[[199,[185,[186]]],[[20,[187,182]]]],[182,[[25,[190]]]],[[]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,[[200,23],200],0,[[]],[[]],[[]],[[]],[[]],[[]],[200,180],[200,200],[180,180],[201,201],[[]],[[]],[[]],0,[[],200],[[],180],[[],201],[5],[5],[5],[5],[5],[5],[120,[[20,[180]]]],[120,[[20,[201]]]],[5],[5],[5],0,[180,23],0,[[200,6],7],[[180,6],7],[[201,6],7],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[200,[25,[14]]],200],0,[[[24,[[25,[97]]]],[24,[[25,[97]]]],[24,[[25,[23]]]]],201],0,[[200,201],200],0,0,0,[[180,131],20],[[201,131],20],0,[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],185],[[],185],[[],185],[[],185],[[],185],[[],185],[[],185],[[],185],[[],185],[[],185],[[],185],[[],185],[[],185],[[],185],[[],185],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[120,[[20,[202]]]],[120,[[20,[171]]]],[5],[5],[5],[[202,6],7],[[171,6],7],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[203,131],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[204]]]],[120,[[20,[205]]]],[120,[[20,[206]]]],[120,[[20,[207]]]],[120,[[20,[208]]]],[120,[[20,[209]]]],[120,[[20,[210]]]],[120,[[20,[211]]]],[120,[[20,[212]]]],[120,[[20,[213]]]],[120,[[20,[214]]]],[120,[[20,[215]]]],[120,[[20,[216]]]],[120,[[20,[217]]]],[120,[[20,[218]]]],[120,[[20,[219]]]],[120,[[20,[220]]]],[120,[[20,[221]]]],[120,[[20,[222]]]],[120,[[20,[223]]]],[120,[[20,[224]]]],[120,[[20,[225]]]],[120,[[20,[226]]]],[120,[[20,[227]]]],[120,[[20,[228]]]],[120,[[20,[229]]]],[120,[[20,[230]]]],[120,[[20,[231]]]],[120,[[20,[232]]]],[120,[[20,[233]]]],[120,[[20,[234]]]],[120,[[20,[235]]]],[120,[[20,[236]]]],[120,[[20,[237]]]],[120,[[20,[238]]]],[120,[[20,[239]]]],[120,[[20,[240]]]],[120,[[20,[241]]]],[120,[[20,[242]]]],[120,[[20,[243]]]],[120,[[20,[244]]]],[120,[[20,[245]]]],[120,[[20,[246]]]],[120,[[20,[247]]]],[120,[[20,[177]]]],[120,[[20,[248]]]],[120,[[20,[249]]]],[120,[[20,[250]]]],[120,[[20,[251]]]],[120,[[20,[252]]]],[120,[[20,[253]]]],[120,[[20,[254]]]],[120,[[20,[255]]]],[120,[[20,[256]]]],[120,[[20,[257]]]],[120,[[20,[258]]]],[120,[[20,[259]]]],[120,[[20,[260]]]],[120,[[20,[261]]]],[120,[[20,[262]]]],[120,[[20,[263]]]],[120,[[20,[264]]]],[120,[[20,[265]]]],[120,[[20,[266]]]],[120,[[20,[267]]]],[120,[[20,[268]]]],[120,[[20,[269]]]],[120,[[20,[270]]]],[120,[[20,[271]]]],[120,[[20,[272]]]],[120,[[20,[273]]]],[120,[[20,[274]]]],[120,[[20,[275]]]],[120,[[20,[276]]]],[120,[[20,[277]]]],[120,[[20,[278]]]],[120,[[20,[279]]]],[120,[[20,[280]]]],[120,[[20,[281]]]],[120,[[20,[282]]]],[120,[[20,[283]]]],[120,[[20,[284]]]],[120,[[20,[285]]]],[120,[[20,[286]]]],[120,[[20,[287]]]],[120,[[20,[288]]]],[120,[[20,[289]]]],[120,[[20,[290]]]],[120,[[20,[291]]]],[120,[[20,[292]]]],[120,[[20,[293]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,0,0,0,0,0,0,0,0,0,0,[[204,6],7],[[205,6],7],[[206,6],7],[[207,6],7],[[208,6],7],[[209,6],7],[[210,6],7],[[211,6],7],[[212,6],7],[[213,6],7],[[214,6],7],[[215,6],7],[[216,6],7],[[217,6],7],[[218,6],7],[[219,6],7],[[220,6],7],[[221,6],7],[[222,6],7],[[223,6],7],[[224,6],7],[[225,6],7],[[226,6],7],[[227,6],7],[[228,6],7],[[229,6],7],[[230,6],7],[[231,6],7],[[232,6],7],[[233,6],7],[[234,6],7],[[235,6],7],[[236,6],7],[[237,6],7],[[238,6],7],[[239,6],7],[[240,6],7],[[241,6],7],[[242,6],7],[[243,6],7],[[244,6],7],[[245,6],7],[[246,6],7],[[247,6],7],[[177,6],7],[[248,6],7],[[249,6],7],[[250,6],7],[[251,6],7],[[252,6],7],[[253,6],7],[[254,6],7],[[255,6],7],[[256,6],7],[[257,6],7],[[258,6],7],[[259,6],7],[[260,6],7],[[261,6],7],[[262,6],7],[[263,6],7],[[264,6],7],[[265,6],7],[[266,6],7],[[267,6],7],[[268,6],7],[[269,6],7],[[270,6],7],[[271,6],7],[[272,6],7],[[273,6],7],[[274,6],7],[[275,6],7],[[276,6],7],[[277,6],7],[[278,6],7],[[279,6],7],[[280,6],7],[[281,6],7],[[282,6],7],[[283,6],7],[[284,6],7],[[285,6],7],[[286,6],7],[[287,6],7],[[288,6],7],[[289,6],7],[[290,6],7],[[291,6],7],[[292,6],7],[[293,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[204,131],20],[[205,131],20],[[206,131],20],[[294,131],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[295]]]],[120,[[20,[296]]]],[120,[[20,[297]]]],[120,[[20,[298]]]],[120,[[20,[299]]]],[120,[[20,[300]]]],[120,[[20,[301]]]],[120,[[20,[302]]]],[120,[[20,[303]]]],[120,[[20,[304]]]],[120,[[20,[305]]]],[120,[[20,[306]]]],[120,[[20,[307]]]],[120,[[20,[308]]]],[120,[[20,[309]]]],[120,[[20,[310]]]],[120,[[20,[311]]]],[120,[[20,[312]]]],[120,[[20,[313]]]],[120,[[20,[314]]]],[120,[[20,[315]]]],[120,[[20,[193]]]],[120,[[20,[316]]]],[120,[[20,[317]]]],[120,[[20,[318]]]],[120,[[20,[319]]]],[120,[[20,[320]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,0,0,0,[[295,6],7],[[296,6],7],[[297,6],7],[[298,6],7],[[299,6],7],[[300,6],7],[[301,6],7],[[302,6],7],[[303,6],7],[[304,6],7],[[305,6],7],[[306,6],7],[[307,6],7],[[308,6],7],[[309,6],7],[[310,6],7],[[311,6],7],[[312,6],7],[[313,6],7],[[314,6],7],[[315,6],7],[[193,6],7],[[316,6],7],[[317,6],7],[[318,6],7],[[319,6],7],[[320,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[321,131],20],0,0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[322]]]],[120,[[20,[323]]]],[120,[[20,[324]]]],[120,[[20,[325]]]],[120,[[20,[326]]]],[120,[[20,[327]]]],[120,[[20,[328]]]],[120,[[20,[329]]]],[120,[[20,[330]]]],[120,[[20,[331]]]],[120,[[20,[332]]]],[120,[[20,[333]]]],[120,[[20,[334]]]],[120,[[20,[335]]]],[120,[[20,[336]]]],[120,[[20,[337]]]],[120,[[20,[338]]]],[120,[[20,[339]]]],[120,[[20,[340]]]],[120,[[20,[198]]]],[120,[[20,[341]]]],[120,[[20,[342]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,0,0,0,0,0,[[322,6],7],[[323,6],7],[[324,6],7],[[325,6],7],[[326,6],7],[[327,6],7],[[328,6],7],[[329,6],7],[[330,6],7],[[331,6],7],[[332,6],7],[[333,6],7],[[334,6],7],[[335,6],7],[[336,6],7],[[337,6],7],[[338,6],7],[[339,6],7],[[340,6],7],[[198,6],7],[[341,6],7],[[342,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,[[322,131],20],[[343,131],20],0,0,0,0,0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[120,[[20,[344]]]],[120,[[20,[174]]]],[5],[5],[5],[[344,6],7],[[174,6],7],[[]],[[]],[[]],0,0,[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[345,131],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[346,346],[347,347],[348,348],[349,349],[350,350],[351,351],[352,352],[353,353],[354,354],[355,355],[356,356],[357,357],[358,358],[359,359],[360,360],[361,361],[362,362],[363,363],[364,364],[365,365],[366,366],[367,367],[368,368],[369,369],[370,370],[371,371],[372,372],[373,373],[374,374],[375,375],[376,376],[377,377],[378,378],[379,379],[380,380],[381,381],[382,382],[383,383],[384,384],[385,385],[386,386],[175,175],[387,387],[388,388],[389,389],[390,390],[391,391],[392,392],[393,393],[394,394],[395,395],[396,396],[397,397],[398,398],[399,399],[400,400],[401,401],[402,402],[403,403],[404,404],[405,405],[406,406],[407,407],[408,408],[409,409],[410,410],[411,411],[412,412],[413,413],[414,414],[415,415],[416,416],[417,417],[418,418],[419,419],[420,420],[421,421],[422,422],[423,423],[424,424],[425,425],[426,426],[427,427],[428,428],[429,429],[430,430],[431,431],[432,432],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[346]]]],[120,[[20,[347]]]],[120,[[20,[348]]]],[120,[[20,[349]]]],[120,[[20,[350]]]],[120,[[20,[351]]]],[120,[[20,[352]]]],[120,[[20,[353]]]],[120,[[20,[354]]]],[120,[[20,[355]]]],[120,[[20,[356]]]],[120,[[20,[357]]]],[120,[[20,[358]]]],[120,[[20,[359]]]],[120,[[20,[360]]]],[120,[[20,[361]]]],[120,[[20,[362]]]],[120,[[20,[363]]]],[120,[[20,[364]]]],[120,[[20,[365]]]],[120,[[20,[366]]]],[120,[[20,[367]]]],[120,[[20,[368]]]],[120,[[20,[369]]]],[120,[[20,[370]]]],[120,[[20,[371]]]],[120,[[20,[372]]]],[120,[[20,[373]]]],[120,[[20,[374]]]],[120,[[20,[375]]]],[120,[[20,[376]]]],[120,[[20,[377]]]],[120,[[20,[378]]]],[120,[[20,[379]]]],[120,[[20,[380]]]],[120,[[20,[381]]]],[120,[[20,[382]]]],[120,[[20,[383]]]],[120,[[20,[384]]]],[120,[[20,[385]]]],[120,[[20,[386]]]],[120,[[20,[175]]]],[120,[[20,[387]]]],[120,[[20,[388]]]],[120,[[20,[389]]]],[120,[[20,[390]]]],[120,[[20,[391]]]],[120,[[20,[392]]]],[120,[[20,[393]]]],[120,[[20,[394]]]],[120,[[20,[395]]]],[120,[[20,[396]]]],[120,[[20,[397]]]],[120,[[20,[398]]]],[120,[[20,[399]]]],[120,[[20,[400]]]],[120,[[20,[401]]]],[120,[[20,[402]]]],[120,[[20,[403]]]],[120,[[20,[404]]]],[120,[[20,[405]]]],[120,[[20,[406]]]],[120,[[20,[407]]]],[120,[[20,[408]]]],[120,[[20,[409]]]],[120,[[20,[410]]]],[120,[[20,[411]]]],[120,[[20,[412]]]],[120,[[20,[413]]]],[120,[[20,[414]]]],[120,[[20,[415]]]],[120,[[20,[416]]]],[120,[[20,[417]]]],[120,[[20,[418]]]],[120,[[20,[419]]]],[120,[[20,[420]]]],[120,[[20,[421]]]],[120,[[20,[422]]]],[120,[[20,[423]]]],[120,[[20,[424]]]],[120,[[20,[425]]]],[120,[[20,[426]]]],[120,[[20,[427]]]],[120,[[20,[428]]]],[120,[[20,[429]]]],[120,[[20,[430]]]],[120,[[20,[431]]]],[120,[[20,[432]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,0,0,0,0,0,0,0,0,0,[[346,6],7],[[347,6],7],[[348,6],7],[[349,6],7],[[350,6],7],[[351,6],7],[[352,6],7],[[353,6],7],[[354,6],7],[[355,6],7],[[356,6],7],[[357,6],7],[[358,6],7],[[359,6],7],[[360,6],7],[[361,6],7],[[362,6],7],[[363,6],7],[[364,6],7],[[365,6],7],[[366,6],7],[[367,6],7],[[368,6],7],[[369,6],7],[[370,6],7],[[371,6],7],[[372,6],7],[[373,6],7],[[374,6],7],[[375,6],7],[[376,6],7],[[377,6],7],[[378,6],7],[[379,6],7],[[380,6],7],[[381,6],7],[[382,6],7],[[383,6],7],[[384,6],7],[[385,6],7],[[386,6],7],[[175,6],7],[[387,6],7],[[388,6],7],[[389,6],7],[[390,6],7],[[391,6],7],[[392,6],7],[[393,6],7],[[394,6],7],[[395,6],7],[[396,6],7],[[397,6],7],[[398,6],7],[[399,6],7],[[400,6],7],[[401,6],7],[[402,6],7],[[403,6],7],[[404,6],7],[[405,6],7],[[406,6],7],[[407,6],7],[[408,6],7],[[409,6],7],[[410,6],7],[[411,6],7],[[412,6],7],[[413,6],7],[[414,6],7],[[415,6],7],[[416,6],7],[[417,6],7],[[418,6],7],[[419,6],7],[[420,6],7],[[421,6],7],[[422,6],7],[[423,6],7],[[424,6],7],[[425,6],7],[[426,6],7],[[427,6],7],[[428,6],7],[[429,6],7],[[430,6],7],[[431,6],7],[[432,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[346,131],20],[[347,131],20],[[348,131],20],[[433,131],20],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[434]]]],[120,[[20,[435]]]],[120,[[20,[436]]]],[120,[[20,[437]]]],[120,[[20,[438]]]],[120,[[20,[439]]]],[120,[[20,[440]]]],[120,[[20,[441]]]],[120,[[20,[442]]]],[120,[[20,[443]]]],[120,[[20,[444]]]],[120,[[20,[445]]]],[120,[[20,[446]]]],[120,[[20,[447]]]],[120,[[20,[448]]]],[120,[[20,[449]]]],[120,[[20,[450]]]],[120,[[20,[451]]]],[120,[[20,[452]]]],[120,[[20,[453]]]],[120,[[20,[454]]]],[120,[[20,[455]]]],[120,[[20,[456]]]],[120,[[20,[457]]]],[120,[[20,[458]]]],[120,[[20,[459]]]],[120,[[20,[460]]]],[120,[[20,[461]]]],[120,[[20,[462]]]],[120,[[20,[463]]]],[120,[[20,[464]]]],[120,[[20,[465]]]],[120,[[20,[466]]]],[120,[[20,[467]]]],[120,[[20,[468]]]],[120,[[20,[469]]]],[120,[[20,[470]]]],[120,[[20,[471]]]],[120,[[20,[472]]]],[120,[[20,[473]]]],[120,[[20,[178]]]],[120,[[20,[474]]]],[120,[[20,[475]]]],[120,[[20,[476]]]],[120,[[20,[477]]]],[120,[[20,[478]]]],[120,[[20,[479]]]],[120,[[20,[480]]]],[120,[[20,[481]]]],[120,[[20,[482]]]],[120,[[20,[483]]]],[120,[[20,[484]]]],[120,[[20,[485]]]],[120,[[20,[486]]]],[120,[[20,[487]]]],[120,[[20,[488]]]],[120,[[20,[489]]]],[120,[[20,[490]]]],[120,[[20,[491]]]],[120,[[20,[492]]]],[120,[[20,[493]]]],[120,[[20,[494]]]],[120,[[20,[495]]]],[120,[[20,[496]]]],[120,[[20,[497]]]],[120,[[20,[498]]]],[120,[[20,[499]]]],[120,[[20,[500]]]],[120,[[20,[501]]]],[120,[[20,[502]]]],[120,[[20,[503]]]],[120,[[20,[504]]]],[120,[[20,[505]]]],[120,[[20,[506]]]],[120,[[20,[507]]]],[120,[[20,[508]]]],[120,[[20,[509]]]],[120,[[20,[510]]]],[120,[[20,[511]]]],[120,[[20,[512]]]],[120,[[20,[513]]]],[120,[[20,[514]]]],[120,[[20,[515]]]],[120,[[20,[516]]]],[120,[[20,[517]]]],[120,[[20,[518]]]],[120,[[20,[519]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,0,0,0,0,0,0,0,0,0,[[434,6],7],[[435,6],7],[[436,6],7],[[437,6],7],[[438,6],7],[[439,6],7],[[440,6],7],[[441,6],7],[[442,6],7],[[443,6],7],[[444,6],7],[[445,6],7],[[446,6],7],[[447,6],7],[[448,6],7],[[449,6],7],[[450,6],7],[[451,6],7],[[452,6],7],[[453,6],7],[[454,6],7],[[455,6],7],[[456,6],7],[[457,6],7],[[458,6],7],[[459,6],7],[[460,6],7],[[461,6],7],[[462,6],7],[[463,6],7],[[464,6],7],[[465,6],7],[[466,6],7],[[467,6],7],[[468,6],7],[[469,6],7],[[470,6],7],[[471,6],7],[[472,6],7],[[473,6],7],[[178,6],7],[[474,6],7],[[475,6],7],[[476,6],7],[[477,6],7],[[478,6],7],[[479,6],7],[[480,6],7],[[481,6],7],[[482,6],7],[[483,6],7],[[484,6],7],[[485,6],7],[[486,6],7],[[487,6],7],[[488,6],7],[[489,6],7],[[490,6],7],[[491,6],7],[[492,6],7],[[493,6],7],[[494,6],7],[[495,6],7],[[496,6],7],[[497,6],7],[[498,6],7],[[499,6],7],[[500,6],7],[[501,6],7],[[502,6],7],[[503,6],7],[[504,6],7],[[505,6],7],[[506,6],7],[[507,6],7],[[508,6],7],[[509,6],7],[[510,6],7],[[511,6],7],[[512,6],7],[[513,6],7],[[514,6],7],[[515,6],7],[[516,6],7],[[517,6],7],[[518,6],7],[[519,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[434,131],20],[[435,131],20],[[436,131],20],[[520,131],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[521]]]],[120,[[20,[522]]]],[120,[[20,[523]]]],[120,[[20,[524]]]],[120,[[20,[525]]]],[120,[[20,[526]]]],[120,[[20,[527]]]],[120,[[20,[181]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,[[521,6],7],[[522,6],7],[[523,6],7],[[524,6],7],[[525,6],7],[[526,6],7],[[527,6],7],[[181,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[[528,131],20],0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[529]]]],[120,[[20,[530]]]],[120,[[20,[531]]]],[120,[[20,[532]]]],[120,[[20,[533]]]],[120,[[20,[534]]]],[120,[[20,[535]]]],[120,[[20,[536]]]],[120,[[20,[537]]]],[120,[[20,[538]]]],[120,[[20,[539]]]],[120,[[20,[540]]]],[120,[[20,[541]]]],[120,[[20,[542]]]],[120,[[20,[543]]]],[120,[[20,[544]]]],[120,[[20,[545]]]],[120,[[20,[546]]]],[120,[[20,[547]]]],[120,[[20,[548]]]],[120,[[20,[549]]]],[120,[[20,[550]]]],[120,[[20,[551]]]],[120,[[20,[552]]]],[120,[[20,[553]]]],[120,[[20,[554]]]],[120,[[20,[555]]]],[120,[[20,[556]]]],[120,[[20,[557]]]],[120,[[20,[558]]]],[120,[[20,[559]]]],[120,[[20,[560]]]],[120,[[20,[561]]]],[120,[[20,[562]]]],[120,[[20,[563]]]],[120,[[20,[564]]]],[120,[[20,[565]]]],[120,[[20,[566]]]],[120,[[20,[567]]]],[120,[[20,[568]]]],[120,[[20,[569]]]],[120,[[20,[570]]]],[120,[[20,[571]]]],[120,[[20,[572]]]],[120,[[20,[573]]]],[120,[[20,[574]]]],[120,[[20,[575]]]],[120,[[20,[576]]]],[120,[[20,[577]]]],[120,[[20,[578]]]],[120,[[20,[579]]]],[120,[[20,[580]]]],[120,[[20,[581]]]],[120,[[20,[582]]]],[120,[[20,[583]]]],[120,[[20,[584]]]],[120,[[20,[585]]]],[120,[[20,[586]]]],[120,[[20,[587]]]],[120,[[20,[588]]]],[120,[[20,[589]]]],[120,[[20,[590]]]],[120,[[20,[591]]]],[120,[[20,[592]]]],[120,[[20,[593]]]],[120,[[20,[594]]]],[120,[[20,[595]]]],[120,[[20,[596]]]],[120,[[20,[597]]]],[120,[[20,[598]]]],[120,[[20,[599]]]],[120,[[20,[600]]]],[120,[[20,[601]]]],[120,[[20,[602]]]],[120,[[20,[603]]]],[120,[[20,[604]]]],[120,[[20,[605]]]],[120,[[20,[606]]]],[120,[[20,[607]]]],[120,[[20,[608]]]],[120,[[20,[609]]]],[120,[[20,[610]]]],[120,[[20,[611]]]],[120,[[20,[612]]]],[120,[[20,[613]]]],[120,[[20,[614]]]],[120,[[20,[615]]]],[120,[[20,[616]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,0,0,0,0,0,0,0,0,0,[[529,6],7],[[530,6],7],[[531,6],7],[[532,6],7],[[533,6],7],[[534,6],7],[[535,6],7],[[536,6],7],[[537,6],7],[[538,6],7],[[539,6],7],[[540,6],7],[[541,6],7],[[542,6],7],[[543,6],7],[[544,6],7],[[545,6],7],[[546,6],7],[[547,6],7],[[548,6],7],[[549,6],7],[[550,6],7],[[551,6],7],[[552,6],7],[[553,6],7],[[554,6],7],[[555,6],7],[[556,6],7],[[557,6],7],[[558,6],7],[[559,6],7],[[560,6],7],[[561,6],7],[[562,6],7],[[563,6],7],[[564,6],7],[[565,6],7],[[566,6],7],[[567,6],7],[[568,6],7],[[569,6],7],[[570,6],7],[[571,6],7],[[572,6],7],[[573,6],7],[[574,6],7],[[575,6],7],[[576,6],7],[[577,6],7],[[578,6],7],[[579,6],7],[[580,6],7],[[581,6],7],[[582,6],7],[[583,6],7],[[584,6],7],[[585,6],7],[[586,6],7],[[587,6],7],[[588,6],7],[[589,6],7],[[590,6],7],[[591,6],7],[[592,6],7],[[593,6],7],[[594,6],7],[[595,6],7],[[596,6],7],[[597,6],7],[[598,6],7],[[599,6],7],[[600,6],7],[[601,6],7],[[602,6],7],[[603,6],7],[[604,6],7],[[605,6],7],[[606,6],7],[[607,6],7],[[608,6],7],[[609,6],7],[[610,6],7],[[611,6],7],[[612,6],7],[[613,6],7],[[614,6],7],[[615,6],7],[[616,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[529,131],20],[[530,131],20],[[531,131],20],[[617,131],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[618]]]],[120,[[20,[619]]]],[120,[[20,[620]]]],[120,[[20,[621]]]],[120,[[20,[622]]]],[120,[[20,[188]]]],[5],[5],[5],[5],[5],[5],[5],0,0,0,[[618,6],7],[[619,6],7],[[620,6],7],[[621,6],7],[[622,6],7],[[188,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[[623,131],20],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[624]]]],[120,[[20,[625]]]],[120,[[20,[626]]]],[120,[[20,[627]]]],[120,[[20,[628]]]],[120,[[20,[629]]]],[120,[[20,[630]]]],[120,[[20,[631]]]],[120,[[20,[632]]]],[120,[[20,[192]]]],[120,[[20,[633]]]],[120,[[20,[634]]]],[120,[[20,[635]]]],[120,[[20,[636]]]],[120,[[20,[637]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,[[624,6],7],[[625,6],7],[[626,6],7],[[627,6],7],[[628,6],7],[[629,6],7],[[630,6],7],[[631,6],7],[[632,6],7],[[192,6],7],[[633,6],7],[[634,6],7],[[635,6],7],[[636,6],7],[[637,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[638,131],20],0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[639,639],[640,640],[641,641],[642,642],[643,643],[644,644],[645,645],[646,646],[647,647],[194,194],[648,648],[649,649],[650,650],[651,651],[652,652],[653,653],[654,654],[655,655],[656,656],[657,657],[658,658],[659,659],[660,660],[661,661],[662,662],[663,663],[664,664],[665,665],[666,666],[667,667],[668,668],[669,669],[670,670],[671,671],[672,672],[673,673],[674,674],[675,675],[676,676],[677,677],[678,678],[679,679],[680,680],[681,681],[682,682],[683,683],[684,684],[685,685],[686,686],[687,687],[688,688],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[639]]]],[120,[[20,[640]]]],[120,[[20,[641]]]],[120,[[20,[642]]]],[120,[[20,[643]]]],[120,[[20,[644]]]],[120,[[20,[645]]]],[120,[[20,[646]]]],[120,[[20,[647]]]],[120,[[20,[194]]]],[120,[[20,[648]]]],[120,[[20,[649]]]],[120,[[20,[650]]]],[120,[[20,[651]]]],[120,[[20,[652]]]],[120,[[20,[653]]]],[120,[[20,[654]]]],[120,[[20,[655]]]],[120,[[20,[656]]]],[120,[[20,[657]]]],[120,[[20,[658]]]],[120,[[20,[659]]]],[120,[[20,[660]]]],[120,[[20,[661]]]],[120,[[20,[662]]]],[120,[[20,[663]]]],[120,[[20,[664]]]],[120,[[20,[665]]]],[120,[[20,[666]]]],[120,[[20,[667]]]],[120,[[20,[668]]]],[120,[[20,[669]]]],[120,[[20,[670]]]],[120,[[20,[671]]]],[120,[[20,[672]]]],[120,[[20,[673]]]],[120,[[20,[674]]]],[120,[[20,[675]]]],[120,[[20,[676]]]],[120,[[20,[677]]]],[120,[[20,[678]]]],[120,[[20,[679]]]],[120,[[20,[680]]]],[120,[[20,[681]]]],[120,[[20,[682]]]],[120,[[20,[683]]]],[120,[[20,[684]]]],[120,[[20,[685]]]],[120,[[20,[686]]]],[120,[[20,[687]]]],[120,[[20,[688]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,0,0,0,0,0,[[639,6],7],[[640,6],7],[[641,6],7],[[642,6],7],[[643,6],7],[[644,6],7],[[645,6],7],[[646,6],7],[[647,6],7],[[194,6],7],[[648,6],7],[[649,6],7],[[650,6],7],[[651,6],7],[[652,6],7],[[653,6],7],[[654,6],7],[[655,6],7],[[656,6],7],[[657,6],7],[[658,6],7],[[659,6],7],[[660,6],7],[[661,6],7],[[662,6],7],[[663,6],7],[[664,6],7],[[665,6],7],[[666,6],7],[[667,6],7],[[668,6],7],[[669,6],7],[[670,6],7],[[671,6],7],[[672,6],7],[[673,6],7],[[674,6],7],[[675,6],7],[[676,6],7],[[677,6],7],[[678,6],7],[[679,6],7],[[680,6],7],[[681,6],7],[[682,6],7],[[683,6],7],[[684,6],7],[[685,6],7],[[686,6],7],[[687,6],7],[[688,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[639,131],20],[[640,131],20],[[689,131],20],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[690,690],[691,691],[692,692],[693,693],[694,694],[695,695],[696,696],[697,697],[698,698],[699,699],[700,700],[701,701],[702,702],[703,703],[704,704],[705,705],[706,706],[707,707],[708,708],[709,709],[710,710],[711,711],[712,712],[713,713],[714,714],[715,715],[716,716],[717,717],[718,718],[719,719],[195,195],[720,720],[721,721],[722,722],[723,723],[724,724],[725,725],[726,726],[727,727],[728,728],[729,729],[730,730],[731,731],[732,732],[733,733],[734,734],[735,735],[736,736],[737,737],[738,738],[739,739],[740,740],[741,741],[742,742],[743,743],[744,744],[745,745],[746,746],[747,747],[748,748],[749,749],[750,750],[751,751],[752,752],[753,753],[754,754],[755,755],[756,756],[757,757],[758,758],[759,759],[760,760],[761,761],[762,762],[763,763],[764,764],[765,765],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[690]]]],[120,[[20,[691]]]],[120,[[20,[692]]]],[120,[[20,[693]]]],[120,[[20,[694]]]],[120,[[20,[695]]]],[120,[[20,[696]]]],[120,[[20,[697]]]],[120,[[20,[698]]]],[120,[[20,[699]]]],[120,[[20,[700]]]],[120,[[20,[701]]]],[120,[[20,[702]]]],[120,[[20,[703]]]],[120,[[20,[704]]]],[120,[[20,[705]]]],[120,[[20,[706]]]],[120,[[20,[707]]]],[120,[[20,[708]]]],[120,[[20,[709]]]],[120,[[20,[710]]]],[120,[[20,[711]]]],[120,[[20,[712]]]],[120,[[20,[713]]]],[120,[[20,[714]]]],[120,[[20,[715]]]],[120,[[20,[716]]]],[120,[[20,[717]]]],[120,[[20,[718]]]],[120,[[20,[719]]]],[120,[[20,[195]]]],[120,[[20,[720]]]],[120,[[20,[721]]]],[120,[[20,[722]]]],[120,[[20,[723]]]],[120,[[20,[724]]]],[120,[[20,[725]]]],[120,[[20,[726]]]],[120,[[20,[727]]]],[120,[[20,[728]]]],[120,[[20,[729]]]],[120,[[20,[730]]]],[120,[[20,[731]]]],[120,[[20,[732]]]],[120,[[20,[733]]]],[120,[[20,[734]]]],[120,[[20,[735]]]],[120,[[20,[736]]]],[120,[[20,[737]]]],[120,[[20,[738]]]],[120,[[20,[739]]]],[120,[[20,[740]]]],[120,[[20,[741]]]],[120,[[20,[742]]]],[120,[[20,[743]]]],[120,[[20,[744]]]],[120,[[20,[745]]]],[120,[[20,[746]]]],[120,[[20,[747]]]],[120,[[20,[748]]]],[120,[[20,[749]]]],[120,[[20,[750]]]],[120,[[20,[751]]]],[120,[[20,[752]]]],[120,[[20,[753]]]],[120,[[20,[754]]]],[120,[[20,[755]]]],[120,[[20,[756]]]],[120,[[20,[757]]]],[120,[[20,[758]]]],[120,[[20,[759]]]],[120,[[20,[760]]]],[120,[[20,[761]]]],[120,[[20,[762]]]],[120,[[20,[763]]]],[120,[[20,[764]]]],[120,[[20,[765]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,0,0,0,0,0,0,0,[[690,6],7],[[691,6],7],[[692,6],7],[[693,6],7],[[694,6],7],[[695,6],7],[[696,6],7],[[697,6],7],[[698,6],7],[[699,6],7],[[700,6],7],[[701,6],7],[[702,6],7],[[703,6],7],[[704,6],7],[[705,6],7],[[706,6],7],[[707,6],7],[[708,6],7],[[709,6],7],[[710,6],7],[[711,6],7],[[712,6],7],[[713,6],7],[[714,6],7],[[715,6],7],[[716,6],7],[[717,6],7],[[718,6],7],[[719,6],7],[[195,6],7],[[720,6],7],[[721,6],7],[[722,6],7],[[723,6],7],[[724,6],7],[[725,6],7],[[726,6],7],[[727,6],7],[[728,6],7],[[729,6],7],[[730,6],7],[[731,6],7],[[732,6],7],[[733,6],7],[[734,6],7],[[735,6],7],[[736,6],7],[[737,6],7],[[738,6],7],[[739,6],7],[[740,6],7],[[741,6],7],[[742,6],7],[[743,6],7],[[744,6],7],[[745,6],7],[[746,6],7],[[747,6],7],[[748,6],7],[[749,6],7],[[750,6],7],[[751,6],7],[[752,6],7],[[753,6],7],[[754,6],7],[[755,6],7],[[756,6],7],[[757,6],7],[[758,6],7],[[759,6],7],[[760,6],7],[[761,6],7],[[762,6],7],[[763,6],7],[[764,6],7],[[765,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[690,131],20],[[691,131],20],[[692,131],20],[[766,131],20],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[767]]]],[120,[[20,[768]]]],[120,[[20,[769]]]],[120,[[20,[770]]]],[120,[[20,[771]]]],[120,[[20,[772]]]],[120,[[20,[773]]]],[120,[[20,[774]]]],[120,[[20,[775]]]],[120,[[20,[776]]]],[120,[[20,[777]]]],[120,[[20,[778]]]],[120,[[20,[779]]]],[120,[[20,[780]]]],[120,[[20,[781]]]],[120,[[20,[782]]]],[120,[[20,[783]]]],[120,[[20,[784]]]],[120,[[20,[785]]]],[120,[[20,[786]]]],[120,[[20,[787]]]],[120,[[20,[788]]]],[120,[[20,[789]]]],[120,[[20,[790]]]],[120,[[20,[791]]]],[120,[[20,[792]]]],[120,[[20,[793]]]],[120,[[20,[794]]]],[120,[[20,[795]]]],[120,[[20,[796]]]],[120,[[20,[797]]]],[120,[[20,[798]]]],[120,[[20,[799]]]],[120,[[20,[196]]]],[120,[[20,[800]]]],[120,[[20,[801]]]],[120,[[20,[802]]]],[120,[[20,[803]]]],[120,[[20,[804]]]],[120,[[20,[805]]]],[120,[[20,[806]]]],[120,[[20,[807]]]],[120,[[20,[808]]]],[120,[[20,[809]]]],[120,[[20,[810]]]],[120,[[20,[811]]]],[120,[[20,[812]]]],[120,[[20,[813]]]],[120,[[20,[814]]]],[120,[[20,[815]]]],[120,[[20,[816]]]],[120,[[20,[817]]]],[120,[[20,[818]]]],[120,[[20,[819]]]],[120,[[20,[820]]]],[120,[[20,[821]]]],[120,[[20,[822]]]],[120,[[20,[823]]]],[120,[[20,[824]]]],[120,[[20,[825]]]],[120,[[20,[826]]]],[120,[[20,[827]]]],[120,[[20,[828]]]],[120,[[20,[829]]]],[120,[[20,[830]]]],[120,[[20,[831]]]],[120,[[20,[832]]]],[120,[[20,[833]]]],[120,[[20,[834]]]],[120,[[20,[835]]]],[120,[[20,[836]]]],[120,[[20,[837]]]],[120,[[20,[838]]]],[120,[[20,[839]]]],[120,[[20,[840]]]],[120,[[20,[841]]]],[120,[[20,[842]]]],[120,[[20,[843]]]],[120,[[20,[844]]]],[120,[[20,[845]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,0,0,0,0,0,0,0,0,[[767,6],7],[[768,6],7],[[769,6],7],[[770,6],7],[[771,6],7],[[772,6],7],[[773,6],7],[[774,6],7],[[775,6],7],[[776,6],7],[[777,6],7],[[778,6],7],[[779,6],7],[[780,6],7],[[781,6],7],[[782,6],7],[[783,6],7],[[784,6],7],[[785,6],7],[[786,6],7],[[787,6],7],[[788,6],7],[[789,6],7],[[790,6],7],[[791,6],7],[[792,6],7],[[793,6],7],[[794,6],7],[[795,6],7],[[796,6],7],[[797,6],7],[[798,6],7],[[799,6],7],[[196,6],7],[[800,6],7],[[801,6],7],[[802,6],7],[[803,6],7],[[804,6],7],[[805,6],7],[[806,6],7],[[807,6],7],[[808,6],7],[[809,6],7],[[810,6],7],[[811,6],7],[[812,6],7],[[813,6],7],[[814,6],7],[[815,6],7],[[816,6],7],[[817,6],7],[[818,6],7],[[819,6],7],[[820,6],7],[[821,6],7],[[822,6],7],[[823,6],7],[[824,6],7],[[825,6],7],[[826,6],7],[[827,6],7],[[828,6],7],[[829,6],7],[[830,6],7],[[831,6],7],[[832,6],7],[[833,6],7],[[834,6],7],[[835,6],7],[[836,6],7],[[837,6],7],[[838,6],7],[[839,6],7],[[840,6],7],[[841,6],7],[[842,6],7],[[843,6],7],[[844,6],7],[[845,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[767,131],20],[[768,131],20],[[769,131],20],[[846,131],20],0,0,0,0,0,0,0,0,0,0,0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[847,847],[848,848],[849,849],[850,850],[851,851],[852,852],[853,853],[854,854],[855,855],[856,856],[857,857],[858,858],[859,859],[860,860],[861,861],[862,862],[197,197],[863,863],[864,864],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[847]]]],[120,[[20,[848]]]],[120,[[20,[849]]]],[120,[[20,[850]]]],[120,[[20,[851]]]],[120,[[20,[852]]]],[120,[[20,[853]]]],[120,[[20,[854]]]],[120,[[20,[855]]]],[120,[[20,[856]]]],[120,[[20,[857]]]],[120,[[20,[858]]]],[120,[[20,[859]]]],[120,[[20,[860]]]],[120,[[20,[861]]]],[120,[[20,[862]]]],[120,[[20,[197]]]],[120,[[20,[863]]]],[120,[[20,[864]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,0,0,0,0,[[847,6],7],[[848,6],7],[[849,6],7],[[850,6],7],[[851,6],7],[[852,6],7],[[853,6],7],[[854,6],7],[[855,6],7],[[856,6],7],[[857,6],7],[[858,6],7],[[859,6],7],[[860,6],7],[[861,6],7],[[862,6],7],[[197,6],7],[[863,6],7],[[864,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,[[847,131],20],[[865,131],20],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[74,202]],[[866,787],[[20,[867]]]],[[866,786]],[[866,782]],[[866,781]],[[866,789],[[20,[867]]]],[[866,776]],[[866,773]],[[866,778]],[[866,780]],[[866,777]],[[868,45]],[[869,244],[[20,[867]]]],[[866,224],[[20,[867]]]],[[866,223]],[[866,219]],[[866,218]],[[866,226],[[20,[867]]]],[[866,234],[[20,[867]]]],[[866,213]],[[866,210]],[[866,215]],[[866,217]],[[866,214]],[[[45,[870]],314]],[[[45,[338]],[45,[62]],[124,[23,[124,[23,45]]]]]],[[869,473],[[20,[867]]]],[[866,454],[[20,[867]]]],[[866,453]],[[866,449]],[[866,448]],[[866,456],[[20,[867]]]],[[866,463],[[20,[867]]]],[[866,443]],[[866,440]],[[866,445]],[[866,447]],[[866,444]],[[869,386],[[20,[867]]]],[[868,45]],[[866,366],[[20,[867]]]],[[866,365]],[[866,361]],[[866,360]],[[866,368],[[20,[867]]]],[[866,376],[[20,[867]]]],[[866,355]],[[866,352]],[[866,357]],[[866,359]],[[866,356]],[[33,176]],[[73,620]],[[869,568],[[20,[867]]]],[[866,549],[[20,[867]]]],[[866,548]],[[866,544]],[[866,543]],[[866,551],[[20,[867]]]],[[866,558],[[20,[867]]]],[[866,538]],[[866,535]],[[866,540]],[[866,542]],[[866,539]],[[[866,[871]],710],[[20,[867]]]],[[[866,[872]],709]],[[[866,[873]],705]],[[[866,[874]],704]],[[[866,[875]],712],[[20,[867]]]],[[870,632,[25,[876]]]],[[866,796],[[20,[867]]]],[[130,719],[[20,[867]]]],[[866,719],[[20,[867]]]],[[[124,[23]],798]],[[796,130],[[20,[867]]]],[[[866,[877]],699]],[[[866,[878]],696]],[[[866,[879]],701]],[[[866,[880]],703]],[[862,62,[124,[23,45]]]],[[[866,[881]],700]],0,0,[[]],[[]],[[]],[[]],[27,[[882,[148]]]],[23,869],[5],[5],[5],[5],[5],[5],[[867,6],7],[[867,6],7],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],12],[[],12],0,[109],0,[[],23],0,0,[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],0,[[]],[[]],0,0,[184,568],[184,75],[[]],[[]],0,[5],[5],[5],[[184,6],7],[[]],[[],5],[[]],[[],12],[[[172,[570]]],184],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,[[],114],[[]],[[]],[[]],[[]],[117,117],[[]],[5],[5],[5],[5],[5],[5],[[125,6],7],[[125,6],7],[[117,6],7],[117,112],0,[[],[[20,[[124,[112,54]],125]]]],[[]],[183,125],[112,117],[[]],[[],5],[[],5],[[]],[[]],[[],12],[[],12],[[],[[45,[23]]]],[[112,75,18]],[112],[[112,23]],[125,883],[112,117],[109],[[[45,[130]],76],[[20,[56,125]]]],[130,[[20,[117,125]]]],[125,[[25,[190]]]],[[]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[],884],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[885,[887,[886]]],[[20,[[45,[869]],888]]]],[[889,[891,[[20,[869,890]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[885,[[893,[892]]]],[889,[[894,[892]]]],[885,885],[889,889],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[888,888],76],[[],76],[[885,6],7],[[889,6],7],[[888,6],7],[[888,6],7],[[885,[887,[895]]],[[20,[[45,[130]],888]]]],[[]],[[]],[[]],[27,[[20,[885,888]]]],[27,[[20,[889,888]]]],[885,[[20,[[45,[869]],888]]]],[[885,[45,[896]]],[[20,[[45,[130]],888]]]],[885,896],[885,897],[[885,896],[[45,[59]]]],[885,[[45,[[45,[59]]]]]],[885,[[20,[[45,[898]],888]]]],[[885,[887,[899]]],[[20,[[45,[898]],888]]]],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[],12],[[],12],[[],12],[888,23],[127,885],[127,889],[109],[[885,896],[[20,[[45,[869]],888]]]],[[885,896],[[20,[[45,[869]],888]]]],[[885,896],[[20,[[45,[898]],888]]]],[[885,898],[[20,[888]]]],0,0,[[889,[45,[896]]],[[45,[869]]]],[885,898],[889,900],[[]],[[]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[885,869],[[20,[888]]]],[[]],[[]],[[]],[[885,901,902]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[903],[897],[904],[905],[906],[907],[908],[909],[910],[911],[912],[913],[914],[915],[916],[903,903],[897,897],[904,904],[905,905],[906,906],[907,907],[908,908],[909,909],[910,910],[911,911],[912,912],[913,913],[914,914],[915,915],[916,916],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],903],[[],897],[[],904],[[],905],[[],906],[[],907],[[],908],[[],909],[[],910],[[],911],[[],912],[[],913],[[],914],[[],915],[[],916],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[903,5],[897,5],[904,5],[905,5],[906,5],[907,5],[908,5],[909,5],[910,5],[911,5],[912,5],[913,5],[914,5],[915,5],[916,5],[[903,903],76],[[897,897],76],[[904,904],76],[[905,905],76],[[906,906],76],[[907,907],76],[[908,908],76],[[909,909],76],[[910,910],76],[[911,911],76],[[912,912],76],[[913,913],76],[[914,914],76],[[915,915],76],[[916,916],76],[[903,6],7],[[897,6],7],[[904,6],7],[[905,6],7],[[906,6],7],[[907,6],7],[[908,6],7],[[909,6],7],[[917,6],7],[[910,6],7],[[918,6],7],[[911,6],7],[[919,6],7],[[912,6],7],[[920,6],7],[[913,6],7],[[914,6],7],[[915,6],7],[[921,6],7],[[916,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[922,922],[[]],[5],[5],[5],[922],[922,5],[[922,922],76],[[922,6],7],[[]],[[],5],[[]],[[],12],[[25,33,923,924],[[20,[925]]]],[[]],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[893,[[927,[926]]]]],[[893,[[927,[926]]]]]],[[[893,[[927,[926]]]],928],[[20,[[929,[[887,[916]]]],890]]]],[[]],[[]],[[[893,[[927,[926]]]],[930,[904]]],[[20,[[929,[905]],890]]]],[[[893,[60]]],[[893,[60]]]],[[]],[[[932,[931]]],[[20,[[893,[892]],933]]]],[5],[5],[5],[[[893,[934]],6],7],[[[893,[[927,[926]]]],928],[[20,[[929,[[887,[895]]]],890]]]],[[]],[[[893,[[927,[926]]]],[930,[935]]],[[20,[[929,[[887,[886]]]],890]]]],[[[893,[[927,[926]]]],[930,[936]]],[[20,[[929,[[887,[895]]]],890]]]],[[[893,[[927,[926]]]],[930,[935]]],[[20,[[929,[[887,[899]]]],890]]]],[[[893,[[927,[926]]]],928],[[20,[[929,[[887,[915]]]],890]]]],[[[893,[[927,[926]]]],[930,[903]]],[[20,[[929,[897]],890]]]],[[],5],0,[[]],[[],12],[[[927,[926]]],[[893,[[927,[926]]]]]],[[[893,[[927,[926]]]],[930,[908]]],[[20,[[929,[909]],890]]]],[[[893,[[927,[926]]]],[930,[912]]],[[20,[[929,[[887,[886]]]],890]]]],[[[893,[[927,[926]]]],[930,[911]]],[[20,[[929,[[887,[886]]]],890]]]],[[[893,[[927,[926]]]],[930,[910]]],[[20,[[929,[[887,[899]]]],890]]]],[[[893,[[927,[926]]]],928],[[20,[[929,[913]],890]]]],[[[893,[[927,[926]]]]],[[893,[[927,[926]]]]]],[[[893,[[927,[926]]]],[930,[906]]],[[20,[[929,[907]],890]]]],[[]],[[],20],[[],20],[[],21],[[[893,[[927,[926]]]],928],[[20,[[929,[914]],890]]]],[[]],[[[938,[[937,[926]]]],939],[[893,[[940,[[938,[[937,[926]]]],939]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[12,[[887,[899]]]]],[[943,[[942,[941]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[945,[944]],[12,[903]]]],[[[946,[944]],[12,[904]]]],[[[947,[944]],[12,[906]]]],[[[948,[944]],[12,[908]]]],[[[949,[944]],[12,[935]]]],[[[950,[944]],[12,[935]]]],[[[951,[944]],[12,[936]]]],[[[952,[944]],[12,[910]]]],[[[953,[944]],[12,[912]]]],[[[954,[944]],[12,[911]]]],[[[955,[944]],[12,[[887,[899]]]]]],[[[956,[944]],[12,[[887,[886]]]]]],[[[957,[944]],[12,[[887,[899]]]]]],[[[958,[944]],[12,[[887,[895]]]]]],[[[959,[944]],[12,[[887,[915]]]]]],[937],[[[960,[944]],[937,[[0,[961,962]]]]]],[[[12,[904]]],[[943,[[942,[941]]]]]],[[[963,[944]]],[[963,[944]]]],[[[960,[944]]],[[960,[944]]]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[[963,[934]],6],7],[[[960,[[0,[934,944]]]],6],7],[[[12,[[887,[895]]]]],[[943,[[942,[941]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[935]]],[[943,[[942,[941]]]]]],[[[12,[936]]],[[943,[[942,[941]]]]]],[[[12,[935]]],[[943,[[942,[941]]]]]],[[[12,[[887,[915]]]]],[[943,[[942,[941]]]]]],[[[12,[903]]],[[943,[[942,[941]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[944,[[960,[944]]]],[[[12,[908]]],[[943,[[942,[941]]]]]],[964,[[965,[20]]]],[[[960,[944]],964],[[965,[20]]]],[[[12,[912]]],[[943,[[942,[941]]]]]],[[[12,[911]]],[[943,[[942,[941]]]]]],[[[12,[910]]],[[943,[[942,[941]]]]]],[[[12,[[887,[899]]]]],[[943,[[942,[941]]]]]],0,[[[12,[906]]],[[943,[[942,[941]]]]]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[[12,[[887,[886]]]]],[[943,[[942,[941]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[944,939],[[940,[[960,[944]],939]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[966,[12,[[887,[899]]]]],[[943,[[942,[941]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[966,[12,[904]]],[[943,[[942,[941]]]]]],[967,967],[968,968],[[]],[[]],0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[[967,967],76],[[],76],[[967,6],7],[[968,6],7],[[968,6],7],[[966,[12,[[887,[895]]]]],[[943,[[942,[941]]]]]],[[]],[[]],[141,968],[[]],0,0,[[966,[12,[935]]],[[943,[[942,[941]]]]]],[[966,[12,[936]]],[[943,[[942,[941]]]]]],[[966,[12,[935]]],[[943,[[942,[941]]]]]],[[966,[12,[[887,[915]]]]],[[943,[[942,[941]]]]]],[[966,[12,[903]]],[[943,[[942,[941]]]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],0,0,0,0,0,0,[[[971,[[970,[969]]]]],966],[[966,[12,[908]]],[[943,[[942,[941]]]]]],0,0,0,0,[[966,[12,[912]]],[[943,[[942,[941]]]]]],[[966,[12,[911]]],[[943,[[942,[941]]]]]],[[966,[12,[910]]],[[943,[[942,[941]]]]]],[[966,[12,[[887,[899]]]]],[[943,[[942,[941]]]]]],[[[971,[[970,[969]]]]],972],0,0,[[966,[12,[906]]],[[943,[[942,[941]]]]]],[[]],[[]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[966,[12,[[887,[886]]]]],[[943,[[942,[941]]]]]],0,0,[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[973,972],[973,[[971,[[970,[969]]]]]],[[],973],[5],[5],[5],[5],[5],[5],[974,975],[[]],[[]],0,[[],5],[[],5],[[]],[[]],[[],12],[[],12],0,0,0,[[[971,[[970,[969]]]]],972],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],[[973,869],973],[[973,76],973],[[973,126],973],[[973,968],973],[974,[[975,[5]]]],0,[972,23],[[]],[[]],0,[5],[5],[5],[[972,[0,[976,962]]],967],[[]],[972,896],[[],5],[[]],[[],12],[[977,978,[971,[[970,[969]]]],126],972],0,[[972,896]],[[972,968]],[[972,898]],[[972,869]],[972],0,[[],20],[[],20],[[],21],0,[[]],0,0,0,0,0,0,0,0,[[],869],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[[979,6],7],[[979,6],7],[[]],[980,979],[[]],[981,979],[982,979],[969],[969,869],[969,896],0,[969,896],[[969,896],[[20,[869,979]]]],[[],5],[[],5],[[]],[[]],[[],12],[[],12],[969,76],0,0,[[896,968,127,983,76],969],[969],[969,[[45,[59]]]],[969,984],0,[969,968],0,[969,968],[109],[[969,869],[[20,[979]]]],[969,[[20,[979]]]],[979,[[25,[190]]]],[969,983],0,[969,[[20,[898,979]]]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[969,76],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[120,[[20,[985]]]],[5],[5],[5],[[985,985],76],[[],76],[[977,985],76],[[985,6],7],[[985,6],7],[[]],[[]],[[]],[977,23],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[[986,[[45,[59]]]]],977],[987,[[975,[5]]]],[[985,131],20],[[],23],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],0,[[]],[[]],[5],[5],[5],[[]],[[],5],[[]],[[],12],0,[[988,985],76],[977,988],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[886],[899],[895],[935],[936],[886,886],[899,899],[895,895],[935,935],[936,936],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],886],[[],899],[[],895],[[],935],[[],936],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[886,5],[899,5],[895,5],[935,5],[936,5],[[886,886],76],[[899,899],76],[[895,895],76],[[935,935],76],[[936,936],76],[[886,6],7],[[899,6],7],[[895,6],7],[[935,6],7],[[989,6],7],[[936,6],7],[[990,6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[991],[992],[993],[994],[991,991],[992,992],[993,993],[994,994],[[]],[[]],[[]],[[]],[[],991],[[],992],[[],993],[[],994],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[991,5],[992,5],[993,5],[994,5],[[991,991],76],[[992,992],76],[[993,993],76],[[994,994],76],[[991,6],7],[[992,6],7],[[993,6],7],[[994,6],7],[[995,6],7],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[[894,[[927,[926]]]]],[[894,[[927,[926]]]]]],[[[894,[[927,[926]]]],[930,[991]]],[[20,[[929,[[887,[886]]]],890]]]],[[]],[[]],[[[894,[60]]],[[894,[60]]]],[[]],[[[932,[931]]],[[20,[[894,[892]],933]]]],[5],[5],[5],[[[894,[934]],6],7],[[]],[[],5],0,[[]],[[],12],[[[927,[926]]],[[894,[[927,[926]]]]]],[[[894,[[927,[926]]]]],[[894,[[927,[926]]]]]],[[[894,[[927,[926]]]],[930,[994]]],[[20,[[929,[[887,[886]]]],890]]]],[[[894,[[927,[926]]]],[930,[992]]],[[20,[[929,[[887,[899]]]],890]]]],[[]],[[],20],[[],20],[[],21],[[]],[[[938,[[937,[926]]]],939],[[894,[[940,[[938,[[937,[926]]]],939]]]]]],0,0,0,0,0,0,0,0,0,0,[[[12,[991]]],[[943,[[942,[941]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[997,[996]],[12,[991]]]],[[[998,[996]],[12,[992]]]],[[[999,[996]],[12,[994]]]],[[[1000,[996]],[937,[[0,[961,962]]]]]],[937],[[[1001,[996]]],[[1001,[996]]]],[[[1000,[996]]],[[1000,[996]]]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[[1001,[934]],6],7],[[[1000,[[0,[934,996]]]],6],7],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[996,[[1000,[996]]]],[964,[[965,[20]]]],[[[1000,[996]],964],[[965,[20]]]],0,[[[12,[994]]],[[943,[[942,[941]]]]]],[[[12,[992]]],[[943,[[942,[941]]]]]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[996,939],[[940,[[1000,[996]],939]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1002],[[],1002],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[160,160],[161,161],[1003,1003],[1004,1004],[1005,1005],[162,162],[165,165],[159,159],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],161],[5],[5],[5],[5],[5],[5],[5],[5],[1006,1002],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[160]]]],[120,[[20,[161]]]],[120,[[20,[1003]]]],[120,[[20,[1004]]]],[120,[[20,[1005]]]],[120,[[20,[162]]]],[120,[[20,[165]]]],[120,[[20,[159]]]],[33,[[45,[121]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[1003,1003],76],[[],76],[160,[[25,[15]]]],[[160,6],[[20,[122]]]],[[161,6],[[20,[122]]]],[[1003,6],[[20,[122]]]],[[1004,6],[[20,[122]]]],[[1005,6],[[20,[122]]]],[[162,6],[[20,[122]]]],[[165,6],[[20,[122]]]],[[159,6],[[20,[122]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[121,14],[1004,[[25,[127]]]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[160,131],20],[[161,131],20],[[1003,131],20],[[1004,131],20],[[1005,131],20],[[162,131],20],[[165,131],20],[[159,131],20],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[1007,115],[[]],[[]],[1007,1007],[[]],[5],[5],[5],0,[[1007,6],7],[[]],[[],5],[[]],[[],12],[1007,[[25,[15]]]],0,0,[1007,14],[1007,127],[1007,128],[1007,127],[[1007,131],20],[[1007,14]],[[1007,128]],[[1007,127]],[[]],[[],20],[[],20],[[],21],[[]],[1007],0,0,0,0,0,0,0,[[1008,159],1008],[[]],[[]],[[]],[[]],[[]],[[]],[1008,[[20,[1009,1010]]]],[[1011,159],1009],[[1011,159],1009],[[1011,159],1009],0,[[1011,159],[[20,[1009,1010]]]],0,[[],1008],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[1010,6],7],[[1010,6],7],[[]],[[]],[1012,1010],[1013,1010],[[]],[1014,23],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],[118,1008],[118,1011],[109],[1010,[[25,[190]]]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],0,0,[[]],[[]],[[]],[[1008,160],1008],[[1008,14],1008],[[1008,[45,[165]]],1008],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1015,1015],[1016,1016],[1017,1017],[1009,1009],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[1015]]]],[120,[[20,[1016]]]],[120,[[20,[1017]]]],[120,[[20,[1009]]]],0,[5],[5],[5],[5],[1017,[[25,[15]]]],[[1015,6],7],[[1016,6],7],[[1017,6],7],[[1009,6],7],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,[[1015,131],20],[[1016,131],20],[[1017,131],20],[[1009,131],20],0,0,0,[[]],[[]],[[]],[[]],0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,[[1018,1019],[[20,[23,183]]]],[[1018,27],[[20,[23,183]]]],[[1018,74],[[20,[23,183]]]],[1018,[[20,[23,183]]]],[[1018,1020,74],[[20,[23,183]]]],[[1018,1021],[[20,[[45,[59]],116]]]],[[]],[[]],[1018,1018],[[]],[5],[5],[1018],[5],[1018],[[1018,33],[[20,[23,183]]]],[[1018,6],7],[1018,[[20,[[124,[112,54]],116]]]],[1018,[[20,[[124,[112,54]],116]]]],[[1018,[45,[23]]],[[20,[[124,[23,1022]],116]]]],[[]],[[],5],[[]],[[],12],[1018,[[20,[23,183]]]],[1018,[[20,[23,183]]]],[[23,1023],1018],[1018,[[20,[23,183]]]],[1018,[[20,[23,183]]]],[1018,[[20,[23,183]]]],[1018,[[20,[23,183]]]],[[1018,187]],[[1018,27]],[1018,1024],0,[1018,[[20,[23,183]]]],[1018,1023],[[1018,33],[[20,[23,183]]]],[[1018,130],[[20,[117,183]]]],[[1018,[45,[130]],76],[[20,[56,116]]]],[[1018,[45,[59]]],[[20,[187,183]]]],[[1018,[45,[[45,[59]]]]],[[20,[183]]]],[[1018,[24,[23]]]],[1018,[[20,[23,183]]]],[1018,[[20,[23,183]]]],[1018,[[20,[23,183]]]],[[1018,33],[[20,[23,183]]]],[1018,[[20,[23,183]]]],[1018,[[20,[23,183]]]],[1018,[[20,[18,116]]]],[[]],[[],20],[[],20],[[],21],[1018,[[20,[23,183]]]],[1018,[[20,[23,183]]]],[[]],0,0,0,0,0,0,[[],118],[[],118],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1025,27],[[1026,27]],[1027,[[25,[75]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1025,1025],[1027,1027],[[]],[[]],[1026],0,0,[1026,76],[1026,76],[[],1025],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[1025]]]],[120,[[20,[1027]]]],[120,[[20,[1028]]]],[5],[5],[5],[5],[1026,[[1029,[[45,[1027]]]]]],[[1025,1025],76],[[],76],0,[[1027,27],76],0,[1026,883],[[124,27],23],[[1025,6],7],[[1025,6],7],[[1027,6],7],[[1027,6],7],[[1028,6],7],[[]],[[]],[[]],[1028,1027],[[]],[27,[[20,[1025]]]],[1026,5],[1026,[[45,[896]]]],[[1026,1030],[[45,[896]]]],[[],[[45,[27]]]],[1026,[[45,[1027]]]],[1026,[[45,[23]]]],[1026,23],[[1026,1025],883],[1026,23],[1026,[[45,[23]]]],0,[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[1027,1030],76],[1026,[[25,[75]]]],0,0,0,[1027,23],0,[[[0,[1031,962]],[0,[1031,962]]],1026],[1026,[[1029,[[45,[23]]]]]],0,[[1025,1025],[[25,[119]]]],0,0,[[1027,27],76],[[1025,131],20],[[1027,131],20],[[1028,131],20],0,0,[[],1032],0,0,[[]],[[]],[[],23],[[],23],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[27,[[20,[1027,89]]]],0,0,[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[8,127],[8,114],[8,114],[8,114],0,[8,1033],[8],[[8,27]],[[]],[[]],[[]],[[]],[[]],[[]],[8,[[20,[123]]]],[8,[[20,[123]]]],0,[1034,1034],[[]],[8,1035],[5],[5],[5],[5],[5],[5],[5],[8],[5],[5],[[1034,1034],76],[[8,201],[[20,[179,173]]]],[[1034,6],7],[[1036,6],7],[[1036,6],7],[8,[[20,[[124,[112,54]],125]]]],[[]],[1037,1034],[[]],[35,1036],[[]],[123,1036],[8,[[45,[23]]]],[8,885],0,[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],[8,76],[8,33],[8,23],[8,[[45,[23]]]],[[8,112,75,18]],[[8,112]],[[8,112,23]],[8],[8],0,[[1038,115,[25,[1039]],23],[[20,[8,1040]]]],[8,127],0,[8,128],0,[8,33],[[8,126],76],[8,76],[8,33],[109],[8,1041],[8,127],[8,1041],0,[8,23],[[8,[32,[15]]],1041],[[8,[45,[130]],76],[[20,[56,125]]]],[[8,130],[[20,[117,125]]]],[8],[1036,[[25,[190]]]],[[8,1042],[[20,[1034,1040]]]],[8,[[25,[1039]]]],[8],[8,[[25,[14]]]],0,[8,1043],[8,18],[[]],[8,1044],[[],23],[8,165],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[8,1042,902],[[20,[1040]]]],[[8,902],[[20,[[25,[1045]],1036]]]],0,0,0,0,[1044,114],[1044,114],[1044,114],0,[[]],[[]],[[]],[[]],[1046,1044],[1044,1044],[5],[5],[5],[5],[5],[5],[1044,[[20,[[124,[112,54]],125]]]],[[]],[[]],[[1046,14],1046],[1044,[[45,[23]]]],[1044,885],0,0,[[],5],[[],5],[[]],[[]],[[],12],[[],12],[1044,76],[1044,33],[1044,[[45,[23]]]],[1044,23],[[1044,112,75,18]],[[1044,112]],[[1044,112,23]],[1044],0,0,[[[25,[1041]],[25,[885]],[25,[1026]],[25,[159]],114],1044],[114,1046],0,[1044,159],0,0,[1044,1041],0,0,[[1044,[45,[130]],76],[[20,[56,125]]]],[[1044,130],[[20,[117,125]]]],[1044,18],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],[[1046,[24,[23]]],1046],[[1046,1038],1046],[[1046,14],1046],[[1046,127],1046],[[1046,1041],1046],0,0,0,0,0,0,0,0,0,0,[[1041,1019],[[20,[42,116]]]],[[1041,27],[[20,[42,116]]]],[[1041,27],[[20,[23,116]]]],[[1041,74],[[20,[[25,[[45,[1047]]]],116]]]],[1041,[[20,[[124,[23,[45,[1047]]]],116]]]],[[1041,1020,74],[[20,[[25,[[45,[59]]]],116]]]],[1041,23],[[1041,1021],[[20,[869,116]]]],[[1041,1021],[[20,[[45,[59]],116]]]],[[]],[[]],[[]],[[]],[1041,1041],[[]],[5],[5],[5],[5],[1041],[5],[5],[1041],[[1041,33],[[20,[1048,116]]]],[[[32,[15]]],1049],[[116,6],7],[[116,6],7],[[1041,6],7],[1041,[[20,[[124,[112,54]],116]]]],[[1041,[45,[23]]],[[20,[[124,[23,1022]],116]]]],[[]],[89,116],[183,116],[1050,116],[1051,116],[981,116],[[]],[[],5],[[],5],[1041,1018],0,[[]],[[]],[[],12],[[],12],[1041,[[20,[[45,[44]],116]]]],[1041,[[20,[[45,[1052]],116]]]],[23,1041],[[23,[32,[15]]],1041],[[23,1023],1041],[1041,[[20,[[45,[1053]],116]]]],[1041,[[20,[[45,[1053]],116]]]],[1041,[[20,[[45,[1053]],116]]]],[1041,[[20,[[45,[23]],116]]]],[109],0,[1041,1024],[1041,[[20,[69,116]]]],[[1041,33],[[20,[[45,[1048]],116]]]],[[1041,130],[[20,[117,116]]]],[[1041,[45,[130]],76],[[20,[56,116]]]],[[1041,[45,[59]]],[[20,[116]]]],[[1041,[45,[[45,[59]]]]],[[20,[116]]]],[[1041,[24,[23]]]],0,[1041,[[20,[49,116]]]],[1041,[[20,[23,116]]]],[116,[[25,[190]]]],[1041,[[20,[1054,116]]]],[[1041,33],[[20,[1054,116]]]],[1041,[[20,[[45,[23]],116]]]],[1041,[[20,[1055,116]]]],[1041,[[20,[18,116]]]],[[]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[1041,[[20,[[124,[18,1056]],116]]]],[127,23],[1041,[[20,[[45,[62]],116]]]],[[]],[[]],0,0,0,0,0,0,0,0,[[1024,1019],[[20,[187,183]]]],[[1024,27],[[20,[187,183]]]],[[1024,74],[[20,[187,183]]]],[1024,[[20,[187,183]]]],[[1024,1020,74],[[20,[187,183]]]],[[1024,1021],[[20,[187,183]]]],[[]],[[]],[[]],[[]],0,[1024,1024],[[]],[1024,1057],[5],[5],[5],[5],[1024],[5],[5],[1024],[[1024,33],[[20,[187,183]]]],[[1058,6],7],[[1024,6],7],[1024,[[20,[187,183]]]],[1024,[[20,[187,183]]]],[[1024,[45,[23]]],[[20,[187,183]]]],[[]],[[]],[[1024,27],[[20,[187,183]]]],[[],5],[[],5],[[]],[[]],[[],12],[[],12],[1024,[[20,[187,183]]]],[1024,[[20,[187,183]]]],[[23,1023],1024],[1024,[[20,[187,183]]]],[1024,[[20,[187,183]]]],[1024,[[20,[187,183]]]],[1024,[[20,[187,183]]]],[[1024,1058,27],23],[[1024,27,[45,[59]]],[[20,[187,183]]]],[[1024,27]],[1024,[[20,[187,183]]]],[1024,1023],[1024,1023],[[1024,33],[[20,[187,183]]]],[[1024,130],[[20,[187,183]]]],[[1024,[45,[130]],76],[[20,[187,183]]]],[[1024,[45,[59]]],[[20,[187,183]]]],[[1024,[45,[[45,[59]]]]],[[20,[183]]]],[[1024,976,113],[[20,[116]]]],[1024,[[20,[187,183]]]],0,[1024,[[20,[187,183]]]],[1024,[[20,[187,183]]]],[[1024,33],[[20,[187,183]]]],[1024,[[20,[187,183]]]],[1024,[[20,[187,183]]]],[1024,[[20,[187,183]]]],[[]],[[],23],[[],20],[[],20],[27,1059],[[],20],[[],20],[[],21],[[],21],[1024,[[20,[187,183]]]],[1024,23],0,[1024,[[20,[187,183]]]],[[]],[[]],0,[[]],[[]],0,[1023,1023],[[]],0,[[],1023],[5],[5],[5],0,[[1023,6],7],[[]],[[],5],[[]],[[],12],[[],1023],[[]],[[],20],[[],20],[[],21],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1060,23],1060],0,0,[[1060,27],1060],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1061,1061],[1062,1062],[1063,1063],[1064,1064],[1065,1065],[1066,1066],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1060,1067],1060],0,0,[[],1060],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[120,[[20,[1061]]]],[120,[[20,[1062]]]],[120,[[20,[1063]]]],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[1062,1062],76],[[1063,1063],76],[[],76],[[],76],[[[25,[1068]]]],[[1040,6],7],[[1040,6],7],[[1061,6],7],[[1062,6],7],[[1063,6],7],[[1064,6],7],[[1065,6],7],[[1066,6],7],[[]],[[]],[[]],[1069,1040],[1050,1040],[1070,1040],[123,1040],[1010,1040],[1012,1040],[116,1040],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1060,14],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[1060,14],1060],[[1060,25],1060],0,[[[24,[23]]],1071],0,[[1060,1066],1060],0,0,[109],0,[1040,[[25,[190]]]],[1060,[[20,[8,1040]]]],[[1071,1067,[25,[1039]],92],[[20,[8,1040]]]],[1060,[[20,[8,1040]]]],[[1071,115,[25,[1039]],92],[[20,[8,1040]]]],[1060,[[25,[1068]]]],[[1071,92],1038],[[1060,27],[[20,[1040]]]],[[1060,27],[[20,[1040]]]],[[1071,115,[25,[1039]],27,92],[[20,[1040]]]],[[1071,92,27]],[[1060,71],1060],0,[[1060,1039],1060],0,[[1060,902],1060],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[1060,76],1060],0,0,[[1060,1042],1060],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1060,15],1060],0,0,0,0,0,0,[[]],[[]],[1072,92],[[1072,15],1072],0,[5],[5],[5],[[1072,1061],1072],0,[[]],0,[[1072,18],1072],[[1072,15],1072],[[1067,[32,[15]],1062],92],[[],5],[[]],[[],12],[[1072,15],1072],0,[15,1072],[[1072,76],1072],0,0,[[1072,15],1072],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],115],[[]],[[]],[[]],[[]],0,[1067,115],0,[5],[5],[5],[5],[5],[5],[[1067,6],7],[[1070,6],7],[[1070,6],7],[[]],[[]],[982,1070],[1012,1070],[35,1070],[1013,1070],[1067,1064],0,[1067,126],[[],5],[[],5],[[]],[[]],[[],12],[[],12],[1067,1062],0,[[],[[25,[15]]]],[[[942,[1073]],1064,[25,[14]],1062,76],1067],0,[[],14],[1067,14],[[],127],[[],128],[109],[1067],[1067],[1067],[[],127],[1067,76],0,[1067,25],0,[14],[128],[127],[1070,[[25,[190]]]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1074,[[20,[1067,1070]]]],[[],[[147,[148]]]],[[],1074],[159,1074],[5],[5],[5],[[1074,6],7],[[]],0,[[],5],[[]],[[],12],[[1074,71],[[20,[1060,1070]]]],0,0,0,[1074,1074],0,0,[[1074,71],[[20,[8,1040]]]],[[],20],[[],20],[[],21],[1074,1074],0,[[]],[[1074,137],1074],[[1074,18],1074],[[1074,[32,[15]]],1074],[[1074,147],1074],[[1074,1009],1074],[[1074,159],1074],[1074,1074],[[1074,166],1074],0,[[]],[[]],[115,115],[[]],[5],[5],[5],[[115,6],7],[[]],[[],5],[[]],[[],12],0,0,0,[[]],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1039,[32,[15]]],36],[1039,1039],[[]],[[],1039],[5],[5],[5],[5],[120,[[20,[1039]]]],[5],[5],[[1039,6],7],[[1075,6],7],[[1075,6],7],[14,1039],[[]],[[[25,[14]]],1039],[[]],[1012,1075],[71,1039],[[],5],[[],5],[[]],[[]],[1039,1039],[[],12],[[],12],[[],[[20,[1039,1012]]]],[1039,15],[109],[[1039,131],20],[1075,[[25,[190]]]],[[]],[[],23],[[],20],[[],20],[1039,[[20,[71]]]],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,0,[[1035,74,69],[[20,[1076]]]],[[1035,74],[[20,[1076]]]],[[1035,74,69],[[20,[1076]]]],[74,1019],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[1076,6],7],[[1076,6],7],0,[1035,1077],[[]],[[]],[116,1076],[[]],[1078,1076],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],[1041,1035],[[[124,[23,42]]],1079],[[1035,[45,[74]]],[[20,[1076]]]],[109],[[1035,[45,[74]]],1035],0,0,[1076,[[25,[190]]]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[1079,74],[[20,[69,1076]]]],[[1035,74,74,69],[[20,[1076]]]],[[]],[[]],[[]],0,0,[[[45,[112]],45,[20,[56,116]]],[[45,[117]]]],[1077,1077],[[[20,[56,116]]],[[45,[117]]]],[[1077,896],1077],[1077,1077],[[1077,[45,[23]],27],1077],[[1077,1022]],[[1077,117],1077],[[1077,23,27],1077],[[1077,[45,[23]],27],1077],[1077,1077],[[1077,117],1077],[[1077,1022]],[[1077,23,27],1077],[[1077,5],1077],[[1077,117],1077],[[]],[[]],[5],[5],[5],[[]],[[],5],[[]],[[],12],[1041,1077],0,[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1080,1081],1082],[[1083,1081],1082],[1080,97],[1083,97],0,0,0,[121,[[45,[1084,1085]]]],0,[[[24,[23]]],1086],[[[24,[23]]],1087],[[[24,[23]]],1088],[[[24,[23]]],1089],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1090,1091],[121,121],[1033,1033],[1080,1080],[1083,1083],[1092,1092],[1087,1087],[1088,1088],[1093,1093],[1089,1089],[1094,1094],[1095,1095],[[[1081,[60]]],[[1081,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1094,1094],119],0,0,[[1096,36,36],[[20,[23,35]]]],[1094,33],0,0,[[15,15],[[20,[1097]]]],[[],1090],[[],1095],[1098,1087],[1068,1089],0,0,0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[23,15],[[20,[1099]]]],[121,76],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[1095,1095],902],[1098,1100],0,[1095,902],0,0,0,[[1033,1033],76],[[1080,1080],76],[[1083,1083],76],[[1094,1094],76],[[],76],[[],76],[[1101,23],1098],[[1102,23],1093],[[1092,23],1103],[[1098,6],[[20,[122]]]],[[1104,6],[[20,[122]]]],[[1105,6],[[20,[122]]]],[[1105,6],[[20,[122]]]],[[121,6],[[20,[122]]]],[[1033,6],[[20,[122]]]],[[1033,6],[[20,[122]]]],[[1080,6],[[20,[122]]]],[[1080,6],[[20,[122]]]],[[1083,6],[[20,[122]]]],[[1083,6],[[20,[122]]]],[[1106,6],[[20,[122]]]],[[1106,6],[[20,[122]]]],[[1093,6],[[20,[122]]]],[[1094,6],[[20,[122]]]],[[1094,6],[[20,[122]]]],[[1095,6],[[20,[122]]]],[[[1081,[[0,[1107,60,934,[1108,[[0,[1107,60,934,[1108,[[0,[1107,60,934,[1108,[[0,[1107,60,934,1108]]]]]]]]]]]]]]]],6],[[20,[122]]]],[[[1081,[934]],6],[[20,[122]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1099,1105],[[]],[35,1105],[183,1105],[1109,1105],[[]],[[]],[[]],[902,1080],[902,1083],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1110,1095],[[]],[1027,1095],[1111,[[1081,[1083]]]],[[]],[27,20],[27,[[20,[1095]]]],[[1096,33,36],[[20,[23,35]]]],[[1002,23],[[20,[[25,[1084]],1105]]]],[[],97],[[121,1112],[[25,[1084]]]],[[[1081,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]]],[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]],60]]]],[1033],[1033,5],0,[1101,1101],[[1101,33],1101],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1083,902],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1095,1110],[[]],[[]],[1002,[[1113,[121]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,[1087,1114],[[[1081,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]]],[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]],60]]]],0,0,[1102,76],[1094,33],0,[1033,23],[1087,23],[1088,23],[1089,23],0,0,0,0,[[[45,[121,1085]]],1002],[[],1090],[[1089,1083],1104],[[],[[20,[1096,35]]]],[[23,5],1033],[[1095,1095],1080],[[1095,1095],1083],[23,1087],[23,1088],[23,1089],[[33,33,33],1094],[[],1095],[[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]],60]],[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]],60]],[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]],60]],[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]],60]]],[[1081,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]]]],[1094,[[1081,[1115]]]],[33,[[1081,[1100]]]],[902,[[1081,[1080]]]],[902,[[1081,[1083]]]],[1087,1087],[1088,1088],[1089,1089],0,0,[[1080,1080],[[25,[119]]]],[[1083,1083],[[25,[119]]]],[[1094,1094],[[25,[119]]]],[[1096,36,36],[[20,[23,35]]]],[121,76],0,[1098],[1104],[1093],[[1093,[1081,[1080]]]],0,0,[109],[109],[[[1081,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]]],[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]],60]]]],[121,25],0,[121,124],0,[[1096,36,36],[[20,[23,35]]]],0,0,[1092,[[20,[1106]]]],[1105,[[25,[190]]]],0,[1087,1101],[1088,1102],[1089,1068],0,0,0,[1098,1082],[1101,1098],[1102,1093],[1068,1104],[1092,1103],0,[[1087,33],1087],[[1088,902],1088],[[1089,902],1089],[1087,[[25,[1081]]]],[1088,[[25,[1081]]]],[1089,[[25,[1081]]]],[[[1081,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]]],45],0,0,0,0,[1068,76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,[1096,[[20,[23,35]]]],[121,118],0,[121,23],[1094,33],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1090,[24,[23]]],1090],[[1089,[1081,[1083]]],1089],[[1090,[25,[[24,[23]]]]],1090],[[1096,36,36,36],[[20,[23,35]]]],[[[1081,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]]],[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[[1108,[[0,[1108,60]]]],60]]]],60]]]],60]]]],60]]]],0,0,0,0,[145],[145],[[23,59,[45,[97]]]],0,0,0,0,[[1026,27,902,27,27],1104],[[1026,27,902],1104],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],114],0,0,0,[[45,[1081,[1083]],27],[[20,[1116]]]],[1111,[[20,[1117]]]],[[],[[45,[23]]]],0,[[],76],[[],33],[[],23],[[]],0,[[[1081,[1083]],27,1118],[[20,[1117]]]],[[112,[1081,[1083]],27,1118],[[20,[1117]]]],[27],0,0,[[],18],0,[1111],0,0,0,0,0,0,0,[[[1081,[1083]],27,1118],[[20,[1117]]]],[[112,[1081,[1083]],27,1118],[[20,[1117]]]],[27],[[[45,[33]]]],0,0,0,0,0,[[],114],0,0,[[]],[[]],[[]],[[]],[1119,1119],[[]],[5],[5],[5],[5],[5],[5],[[1119,6],7],[[1119,6],7],[[1116,6],7],[[1116,6],7],[[]],[1117,1116],[[]],[[],[[45,[23]]]],[[],5],[[],5],[[]],[[]],[[],12],[[],12],[[],76],[[],33],[[],23],[[]],[[23,33],1119],[109],[1116,[[25,[190]]]],[[],18],[[]],[[],23],[[],23],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1118,1118],[[]],0,[5],[5],[5],[5],[[1120,[0,[976,962]]]],[[1120,[0,[976,962]]]],[5],[5],[[1118,6],7],[[]],[[]],[1120],[[],5],[[],5],0,[[]],[[]],[[],12],[[],12],[1120,76],[1118,1120],[[]],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]],0,0,0,0,[[]],[[]],[1111,97],[1111,1111],[[]],[5],[5],[5],[[1111,6],7],[[]],[[],5],[[]],[[],12],[97,1111],[[97,97],1111],[97,1111],[1111,902],[[]],[[],20],[[],20],[[],1111],[[],21],[[]],[1111,902],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[45,[59]],[32,[15]]],[[20,[1121]]]],[5],[5],[5],[[[32,[15]],[32,[15]]],[[20,[1121]]]],[[1121,6],7],[[1121,6],7],[982,1121],[183,1121],[981,1121],[1013,1121],[35,1121],[[]],[1122,1121],[89,1121],[1123,1121],[1124,1121],[[[24,[23]]],[[20,[137,1121]]]],[[],5],[[]],[[],12],[109],[[[32,[15]]],[[20,[137,1121]]]],[[[32,[15]]],[[20,[[45,[138]],1121]]]],[[],49],[1121,[[25,[190]]]],[[],18],[[],23],[[],20],[[],20],[[],21],[74,58],[[],[[45,[58]]]],[[],[[45,[880]]]],[[]],[[137,[32,[15]]],[[20,[1121]]]],0,[[],[[25,[1125]]]],0,[[]],[[]],0,[5],[5],[5],[[]],[1126],[[],5],[[]],[[],12],[[[0,[1031,962]]],1126],[1126],0,[1126,[[45,[23]]]],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,[27,14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],[[147,[1127]]]],0,0,0,[[]],[[]],[1128,1128],[[]],[5],[5],[5],[[]],[[]],[[1128,6],7],[[]],[[],5],[[]],[[],12],0,[[[24,[23]]],1128],[1128],[1128],[1129],[[]],[[],20],[[],20],[[],21],[[]],[[[25,[1039]],45]],0,[[],18],[[],14],[[],14],[[],14],[[],14],0,[[],18],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[1130],[[1131,33],76],[5],[5],[5],[5],[5],[5],[5],[5],[5],[1131,33],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[1132,1131,[32,[15]]],1130],0,0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[]],[[]],[[]],[1041,75],[[75,75],76],[[75,1041]],[[33,1041]],0,0,[[76,27],[[20,[1117]]]],[27,[[20,[1117]]]],[[]],[[]],[5],[5],[5],[[1117,6],7],[[1117,6],7],[[]],[[],5],[[]],[[],12],[109],[[],23],[[],20],[[],20],[[],21],[[]],0,0,0,0,0,0,0,0,[[],1133],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1134,1135],1134],[[]],[[]],[[]],[[]],[1134,880],[[1136,59,1135],1137],0,[[],1134],[[],1136],[5],[5],[5],[5],[5],[5],0,[[1136,6],7],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],12],[[],12],0,[[1134,1138],1134],[[1134,[45,[1138]]],1134],[[],1134],[[1134,59],1134],0,0,[1134,1134],0,[[1134,5],1134],[[1134,[45,[1139]]],1134],[1134,1134],[[1134,1140],1134],0,[[1134,1140],1134],0,[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[1134,1140],1134],0,[[1134,1141],1134],0,[[]],[[]],[[1136,5],1136],[[1136,[45,[1139]]],1136],0,0,0,0,0,0,0,0,[[1142,5,5],[[20,[[45,[1143]],1144]]]],[[1145,5],[[20,[[45,[1143]],1144]]]],[[1146,5],1143],[[1145,5],[[20,[[45,[1143]],1144]]]],[[1146,5],[[20,[1143,1144]]]],[[1142,5],[[20,[[45,[1143]],1144]]]],[1145,[[20,[[45,[1143]],1144]]]],[1146,[[20,[1143,1144]]]],[1142,5],[1145,5],[1146,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1145,5],76],[[1146,5],76],[1142,1142],[1145,1145],[1146,1146],[1143,1143],[[]],[[]],[[]],[[]],[1143,5],0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[1143,1143],76],[[],76],[1143,59],[[1146,6],7],[[1143,6],7],[[1144,6],7],[[1144,6],7],[[]],[[]],[[]],[[]],[[]],[[5,880],1142],[1146,1147],[1143,1147],0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[1142,76],[1145,76],[1146,76],0,[[5,45],1142],[45,1145],[[1147,59],1146],[[1147,[1148,[5]]],1143],[109],[1143,[[1148,[5]]]],0,0,0,[[]],[[]],[[]],[[]],[[],23],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],23],0,[[],23],0,[[]],[[]],[870,870],[[]],[5],[5],[5],[[870,6],7],[[]],[870,1149],[870,872],[870,872],[[],5],0,[[]],[[],12],[870,[[147,[167]]]],[870,147],0,[1150,870],[870,1150],0,[[]],[[],20],[[],20],[[],21],[870,[[147,[168]]]],[[]]],"c":[],"p":[[3,"JCli"],[3,"Address"],[3,"Certificate"],[3,"CertificateBuilder"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"JormungandrProcess"],[3,"FragmentSender"],[3,"FragmentsCheck"],[3,"Genesis"],[3,"Request"],[3,"Key"],[3,"PathBuf"],[3,"Path"],[3,"Rest"],[3,"Transaction"],[3,"Hash"],[3,"TransactionBuilder"],[4,"Result"],[3,"TypeId"],[3,"Votes"],[3,"String"],[8,"Into"],[4,"Option"],[4,"Discrimination"],[15,"str"],[3,"BTreeMap"],[3,"AddressCommand"],[3,"CertificateCommand"],[3,"Choice"],[8,"AsRef"],[15,"u32"],[3,"TaxType"],[3,"Error"],[3,"ChildPath"],[3,"GenesisCommand"],[3,"KeyCommand"],[3,"RestCommand"],[3,"RestV0"],[3,"RestV1"],[3,"AccountState"],[3,"Block"],[3,"LeadershipLog"],[3,"Vec"],[3,"Message"],[3,"V0Command"],[3,"Node"],[3,"SettingsDto"],[3,"StakePoolStats"],[3,"UtxO"],[3,"Vote"],[3,"BlockCommand"],[3,"FragmentLog"],[3,"MessageCommand"],[3,"FragmentsProcessingSummary"],[3,"NodeCommand"],[3,"UTxOInfo"],[15,"u8"],[8,"Clone"],[3,"UtxOCommand"],[3,"VotePlanStatus"],[3,"CommitteeIdDef"],[3,"VoteCommand"],[3,"V1Command"],[3,"Vote"],[3,"VoteCommand"],[3,"LegacyUTxO"],[3,"Value"],[3,"Witness"],[3,"TempDir"],[3,"WitnessData"],[3,"LinearFee"],[3,"Address"],[3,"BlockDate"],[15,"bool"],[3,"TransactionCommand"],[3,"Committee"],[3,"Crs"],[3,"VotesCommand"],[3,"Tally"],[3,"CommunicationKey"],[3,"MemberKey"],[3,"CommitteeCommand"],[3,"CommunicationKeyCommand"],[3,"MemberKeyCommand"],[3,"CrsCommand"],[3,"MergedVotePlan"],[3,"Error"],[3,"TallyCommand"],[3,"JCliCommand"],[3,"Command"],[3,"AccountCommand"],[3,"InfoCommand"],[3,"SingleCommand"],[4,"PayloadType"],[15,"u64"],[3,"GenesisDecodeCommand"],[3,"GenesisEncodeCommand"],[3,"GenesisHashCommand"],[3,"KeyFromBytesCommand"],[3,"KeyGenerateCommand"],[3,"KeyToBytesCommand"],[3,"KeyToPublicCommand"],[4,"WitnessType"],[3,"SpendingCounter"],[3,"ElectionPublicKeyCommand"],[4,"Error"],[3,"Demand"],[3,"SignedStakePoolCertBuilder"],[3,"FragmentCheck"],[6,"FragmentId"],[3,"Wait"],[6,"NodeAlias"],[3,"CommunicationParams"],[4,"RestError"],[3,"MemPoolCheck"],[3,"Version"],[4,"Ordering"],[8,"Deserializer"],[3,"Release"],[3,"Error"],[4,"JormungandrError"],[3,"HashMap"],[4,"FragmentNodeError"],[15,"u16"],[4,"SocketAddr"],[3,"Multiaddr"],[3,"Error"],[4,"Fragment"],[8,"Serializer"],[3,"AtomicU16"],[3,"HashSet"],[3,"NEXT_AVAILABLE_PORT_NUMBER"],[3,"OCCUPIED_PORTS"],[3,"Block0ConfigurationBuilder"],[3,"Block0Configuration"],[4,"Initial"],[3,"ConsensusLeaderId"],[3,"ActiveSlotCoefficient"],[6,"ConsensusVersion"],[3,"BlockContentMaxSize"],[3,"EpochStabilityDepth"],[4,"FeesGoTo"],[3,"InitialUTxO"],[3,"KesUpdateSpeed"],[3,"KeyPair"],[3,"Ed25519"],[3,"SigningKey"],[3,"ProposalExpiration"],[4,"RewardParams"],[3,"SignedCertificate"],[3,"SlotDuration"],[3,"NumberOfSlotsPerEpoch"],[3,"InitialToken"],[4,"EitherHashOrBlock0"],[3,"NodeConfigManager"],[3,"NodeConfigBuilder"],[3,"NodeConfig"],[3,"Log"],[3,"Mempool"],[3,"Policy"],[3,"Cors"],[3,"Tls"],[3,"TrustedPeer"],[3,"SecretModelFactory"],[3,"SumEd25519_12"],[3,"RistrettoGroup2HashDh"],[3,"NodeSecret"],[3,"Explorer"],[3,"ResponseData"],[3,"Response"],[4,"ExplorerError"],[3,"ResponseData"],[3,"ResponseData"],[15,"i64"],[3,"ResponseData"],[3,"ResponseData"],[3,"ExplorerProcess"],[3,"ExplorerConfiguration"],[3,"ResponseData"],[4,"GraphQlClientError"],[3,"Error"],[3,"LastBlockResponse"],[3,"QueryBody"],[8,"Serialize"],[3,"Response"],[3,"ResponseData"],[3,"Output"],[8,"Error"],[6,"PoolId"],[3,"ResponseData"],[3,"ResponseData"],[3,"ResponseData"],[3,"ResponseData"],[3,"ResponseData"],[3,"ResponseData"],[3,"ResponseData"],[3,"GraphQlClient"],[3,"ExplorerConfigurationBuilder"],[3,"ExplorerParams"],[3,"AddressAddress"],[3,"Variables"],[4,"ConsensusTypeEnum"],[4,"DiscriminationEnum"],[4,"PayloadType"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnEvmMapping"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnMintToken"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateVoteVoterId"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateVote"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalProposerId"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposalChanges"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnUpdateProposal"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVoteTally"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVoteCast"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlanProposals"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnVotePlan"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolUpdate"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRetirement"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistrationRewards"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnPoolRegistration"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnOwnerStakeDelegation"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegationAccount"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificateOnStakeDelegation"],[4,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeCertificate"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInitialConfigurationParams"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeOutputsAddress"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeOutputs"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInputsAddress"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeInputs"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNodeBlocks"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdgesNode"],[3,"AllBlocksTipBlocksEdgesNodeTransactionsEdges"],[3,"AllBlocksTipBlocksEdgesNodeTransactions"],[3,"AllBlocksTipBlocksEdgesNodeBranches"],[3,"AllBlocksTipBlocksEdgesNodePreviousBlock"],[3,"AllBlocksTipBlocksEdgesNodeLeaderOnBftLeader"],[3,"AllBlocksTipBlocksEdgesNodeLeaderOnPool"],[4,"AllBlocksTipBlocksEdgesNodeLeader"],[3,"AllBlocksTipBlocksEdgesNodeDateEpoch"],[3,"AllBlocksTipBlocksEdgesNodeDate"],[3,"AllBlocksTipBlocksEdgesNode"],[3,"AllBlocksTipBlocksEdges"],[3,"AllBlocksTipBlocks"],[3,"AllBlocksTip"],[3,"ConfigParamOnTransactionMaxExpiryEpochs"],[3,"ConfigParamOnPerVoteCertificateFee"],[3,"ConfigParamOnRemoveCommitteeId"],[3,"ConfigParamOnAddCommitteeId"],[3,"ConfigParamOnPoolRewardParticipationCapping"],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitNone"],[3,"ConfigParamOnFeesInTreasury"],[3,"ConfigParamOnPerCertificateFee"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams"],[4,"ConfigParamOnRewardParamsRewardParams"],[3,"ConfigParamOnRewardParams"],[3,"ConfigParamOnRewardPot"],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio"],[3,"ConfigParamOnTreasuryParamsTreasuryParams"],[3,"ConfigParamOnTreasuryParams"],[3,"ConfigParamOnTreasuryAdd"],[3,"ConfigParamOnKesUpdateSpeed"],[3,"ConfigParamOnProposalExpiration"],[3,"ConfigParamOnLinearFeePerVoteCertificateFees"],[3,"ConfigParamOnLinearFeePerCertificateFees"],[3,"ConfigParamOnLinearFee"],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader"],[3,"ConfigParamOnRemoveBftLeader"],[3,"ConfigParamOnAddBftLeaderAddBftLeader"],[3,"ConfigParamOnAddBftLeader"],[3,"ConfigParamOnBlockContentMaxSize"],[3,"ConfigParamOnMilli"],[3,"ConfigParamOnEpochStabilityDepth"],[3,"ConfigParamOnSlotDuration"],[3,"ConfigParamOnSlotsPerEpoch"],[3,"ConfigParamOnConsensusType"],[3,"ConfigParamOnDiscrimination"],[3,"ConfigParamOnBlock0Date"],[4,"configParam"],[3,"BlockDateEpoch"],[3,"blockDate"],[3,"PoolInfoRetirement"],[3,"PoolInfoRegistrationPool"],[3,"PoolInfoRegistration"],[3,"PoolInfoBlocks"],[3,"poolInfo"],[3,"Variables"],[3,"AllStakePoolsTipAllStakePoolsNodesBlocksEdgesNode"],[3,"AllStakePoolsTipAllStakePoolsNodesBlocksEdges"],[3,"AllStakePoolsTipAllStakePoolsNodesBlocks"],[3,"AllStakePoolsTipAllStakePoolsNodesRetirement"],[3,"AllStakePoolsTipAllStakePoolsNodesRegistrationRewardAccount"],[3,"AllStakePoolsTipAllStakePoolsNodesRegistrationRewardsRatio"],[3,"AllStakePoolsTipAllStakePoolsNodesRegistrationRewards"],[3,"AllStakePoolsTipAllStakePoolsNodesRegistration"],[3,"AllStakePoolsTipAllStakePoolsNodes"],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeBlocksEdgesNode"],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeBlocksEdges"],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeBlocks"],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeRetirement"],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewardAccount"],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewardsRatio"],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeRegistrationRewards"],[3,"AllStakePoolsTipAllStakePoolsEdgesNodeRegistration"],[3,"AllStakePoolsTipAllStakePoolsEdgesNode"],[3,"AllStakePoolsTipAllStakePoolsEdges"],[3,"AllStakePoolsTipAllStakePools"],[3,"AllStakePoolsTip"],[3,"PoolInfoRetirement"],[3,"PoolInfoRegistrationPool"],[3,"PoolInfoRegistration"],[3,"PoolInfoBlocks"],[3,"poolInfo"],[3,"Variables"],[4,"PayloadType"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayloadOnVotePayloadPrivateStatus"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayloadOnVotePayloadPublicStatus"],[4,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodePayload"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNodeAddress"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdgesNode"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotesEdges"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsVotes"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPrivateStatusOptions"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPrivateStatus"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPublicStatusOptions"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsTallyOnTallyPublicStatus"],[4,"AllVotePlansTipAllVotePlansEdgesNodeProposalsTally"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposalsOptions"],[3,"AllVotePlansTipAllVotePlansEdgesNodeProposals"],[3,"AllVotePlansTipAllVotePlansEdgesNode"],[3,"AllVotePlansTipAllVotePlansEdges"],[3,"AllVotePlansTipAllVotePlans"],[3,"AllVotePlansTip"],[3,"BlockDateEpoch"],[3,"blockDate"],[3,"Variables"],[3,"BlockBlock"],[3,"Variables"],[4,"ConsensusTypeEnum"],[4,"DiscriminationEnum"],[4,"PayloadType"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnEvmMapping"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnMintToken"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateVoteVoterId"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateVote"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalProposerId"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposalChanges"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnUpdateProposal"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVoteTally"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVoteCast"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlanProposals"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnVotePlan"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolUpdate"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRetirement"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewards"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnPoolRegistration"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegation"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegationAccount"],[3,"BlockByIdBlockTransactionsEdgesNodeCertificateOnStakeDelegation"],[4,"BlockByIdBlockTransactionsEdgesNodeCertificate"],[3,"BlockByIdBlockTransactionsEdgesNodeInitialConfigurationParams"],[3,"BlockByIdBlockTransactionsEdgesNodeOutputsAddress"],[3,"BlockByIdBlockTransactionsEdgesNodeOutputs"],[3,"BlockByIdBlockTransactionsEdgesNodeInputsAddress"],[3,"BlockByIdBlockTransactionsEdgesNodeInputs"],[3,"BlockByIdBlockTransactionsEdgesNodeBlocks"],[3,"BlockByIdBlockTransactionsEdgesNode"],[3,"BlockByIdBlockTransactionsEdges"],[3,"BlockByIdBlockTransactions"],[3,"BlockByIdBlockBranches"],[3,"BlockByIdBlockPreviousBlock"],[3,"BlockByIdBlockLeaderOnBftLeader"],[3,"BlockByIdBlockLeaderOnPool"],[4,"BlockByIdBlockLeader"],[3,"BlockByIdBlockDateEpoch"],[3,"BlockByIdBlockDate"],[3,"BlockByIdBlock"],[3,"ConfigParamOnTransactionMaxExpiryEpochs"],[3,"ConfigParamOnPerVoteCertificateFee"],[3,"ConfigParamOnRemoveCommitteeId"],[3,"ConfigParamOnAddCommitteeId"],[3,"ConfigParamOnPoolRewardParticipationCapping"],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitNone"],[3,"ConfigParamOnFeesInTreasury"],[3,"ConfigParamOnPerCertificateFee"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams"],[4,"ConfigParamOnRewardParamsRewardParams"],[3,"ConfigParamOnRewardParams"],[3,"ConfigParamOnRewardPot"],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio"],[3,"ConfigParamOnTreasuryParamsTreasuryParams"],[3,"ConfigParamOnTreasuryParams"],[3,"ConfigParamOnTreasuryAdd"],[3,"ConfigParamOnKesUpdateSpeed"],[3,"ConfigParamOnProposalExpiration"],[3,"ConfigParamOnLinearFeePerVoteCertificateFees"],[3,"ConfigParamOnLinearFeePerCertificateFees"],[3,"ConfigParamOnLinearFee"],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader"],[3,"ConfigParamOnRemoveBftLeader"],[3,"ConfigParamOnAddBftLeaderAddBftLeader"],[3,"ConfigParamOnAddBftLeader"],[3,"ConfigParamOnBlockContentMaxSize"],[3,"ConfigParamOnMilli"],[3,"ConfigParamOnEpochStabilityDepth"],[3,"ConfigParamOnSlotDuration"],[3,"ConfigParamOnSlotsPerEpoch"],[3,"ConfigParamOnConsensusType"],[3,"ConfigParamOnDiscrimination"],[3,"ConfigParamOnBlock0Date"],[4,"configParam"],[3,"BlockDateEpoch"],[3,"blockDate"],[3,"PoolInfoRetirement"],[3,"PoolInfoRegistrationPool"],[3,"PoolInfoRegistration"],[3,"PoolInfoBlocks"],[3,"poolInfo"],[3,"Variables"],[4,"ConsensusTypeEnum"],[4,"DiscriminationEnum"],[4,"PayloadType"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnEvmMapping"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnMintToken"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateVoteVoterId"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateVote"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalProposerId"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposalChanges"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnUpdateProposal"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVoteTally"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVoteCast"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlanProposals"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnVotePlan"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolUpdate"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRetirement"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistrationRewards"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnPoolRegistration"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnOwnerStakeDelegation"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegationAccount"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificateOnStakeDelegation"],[4,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeCertificate"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeOutputsAddress"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeOutputs"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeInputsAddress"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeInputs"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNodeBlocks"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdgesNode"],[3,"BlocksByChainLengthBlocksByChainLengthTransactionsEdges"],[3,"BlocksByChainLengthBlocksByChainLengthTransactions"],[3,"BlocksByChainLengthBlocksByChainLengthBranches"],[3,"BlocksByChainLengthBlocksByChainLengthPreviousBlock"],[3,"BlocksByChainLengthBlocksByChainLengthLeaderOnBftLeader"],[3,"BlocksByChainLengthBlocksByChainLengthLeaderOnPool"],[4,"BlocksByChainLengthBlocksByChainLengthLeader"],[3,"BlocksByChainLengthBlocksByChainLengthDateEpoch"],[3,"BlocksByChainLengthBlocksByChainLengthDate"],[3,"BlocksByChainLengthBlocksByChainLength"],[3,"ConfigParamOnTransactionMaxExpiryEpochs"],[3,"ConfigParamOnPerVoteCertificateFee"],[3,"ConfigParamOnRemoveCommitteeId"],[3,"ConfigParamOnAddCommitteeId"],[3,"ConfigParamOnPoolRewardParticipationCapping"],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitNone"],[3,"ConfigParamOnFeesInTreasury"],[3,"ConfigParamOnPerCertificateFee"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams"],[4,"ConfigParamOnRewardParamsRewardParams"],[3,"ConfigParamOnRewardParams"],[3,"ConfigParamOnRewardPot"],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio"],[3,"ConfigParamOnTreasuryParamsTreasuryParams"],[3,"ConfigParamOnTreasuryParams"],[3,"ConfigParamOnTreasuryAdd"],[3,"ConfigParamOnKesUpdateSpeed"],[3,"ConfigParamOnProposalExpiration"],[3,"ConfigParamOnLinearFeePerVoteCertificateFees"],[3,"ConfigParamOnLinearFeePerCertificateFees"],[3,"ConfigParamOnLinearFee"],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader"],[3,"ConfigParamOnRemoveBftLeader"],[3,"ConfigParamOnAddBftLeaderAddBftLeader"],[3,"ConfigParamOnAddBftLeader"],[3,"ConfigParamOnBlockContentMaxSize"],[3,"ConfigParamOnMilli"],[3,"ConfigParamOnEpochStabilityDepth"],[3,"ConfigParamOnSlotDuration"],[3,"ConfigParamOnSlotsPerEpoch"],[3,"ConfigParamOnConsensusType"],[3,"ConfigParamOnDiscrimination"],[3,"ConfigParamOnBlock0Date"],[4,"configParam"],[3,"BlockDateEpoch"],[3,"blockDate"],[3,"PoolInfoRetirement"],[3,"PoolInfoRegistrationPool"],[3,"PoolInfoRegistration"],[3,"PoolInfoBlocks"],[3,"poolInfo"],[3,"Variables"],[3,"EpochTipBlocksByEpochEdgesNode"],[3,"EpochTipBlocksByEpochEdges"],[3,"EpochTipBlocksByEpoch"],[3,"EpochTip"],[3,"EpochEpochLastBlock"],[3,"EpochEpochFirstBlock"],[3,"EpochEpoch"],[3,"Variables"],[4,"ConsensusTypeEnum"],[4,"DiscriminationEnum"],[4,"PayloadType"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnEvmMapping"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnMintToken"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateVoteVoterId"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateVote"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalProposerId"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposalChanges"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnUpdateProposal"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVoteTally"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVoteCast"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlanProposals"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnVotePlan"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolUpdate"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRetirement"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardAccount"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewardsRatio"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistrationRewards"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnPoolRegistration"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnOwnerStakeDelegation"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegationAccount"],[3,"LastBlockTipBlockTransactionsEdgesNodeCertificateOnStakeDelegation"],[4,"LastBlockTipBlockTransactionsEdgesNodeCertificate"],[3,"LastBlockTipBlockTransactionsEdgesNodeOutputsAddress"],[3,"LastBlockTipBlockTransactionsEdgesNodeOutputs"],[3,"LastBlockTipBlockTransactionsEdgesNodeInputsAddress"],[3,"LastBlockTipBlockTransactionsEdgesNodeInputs"],[3,"LastBlockTipBlockTransactionsEdgesNodeBlocks"],[3,"LastBlockTipBlockTransactionsEdgesNode"],[3,"LastBlockTipBlockTransactionsEdges"],[3,"LastBlockTipBlockTransactions"],[3,"LastBlockTipBlockBranches"],[3,"LastBlockTipBlockPreviousBlock"],[3,"LastBlockTipBlockLeaderOnBftLeader"],[3,"LastBlockTipBlockLeaderOnPool"],[4,"LastBlockTipBlockLeader"],[3,"LastBlockTipBlockDateEpoch"],[3,"LastBlockTipBlockDate"],[3,"LastBlockTipBlock"],[3,"LastBlockTip"],[3,"ResponseData"],[3,"ConfigParamOnTransactionMaxExpiryEpochs"],[3,"ConfigParamOnPerVoteCertificateFee"],[3,"ConfigParamOnRemoveCommitteeId"],[3,"ConfigParamOnAddCommitteeId"],[3,"ConfigParamOnPoolRewardParticipationCapping"],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitNone"],[3,"ConfigParamOnFeesInTreasury"],[3,"ConfigParamOnPerCertificateFee"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams"],[4,"ConfigParamOnRewardParamsRewardParams"],[3,"ConfigParamOnRewardParams"],[3,"ConfigParamOnRewardPot"],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio"],[3,"ConfigParamOnTreasuryParamsTreasuryParams"],[3,"ConfigParamOnTreasuryParams"],[3,"ConfigParamOnTreasuryAdd"],[3,"ConfigParamOnKesUpdateSpeed"],[3,"ConfigParamOnProposalExpiration"],[3,"ConfigParamOnLinearFeePerVoteCertificateFees"],[3,"ConfigParamOnLinearFeePerCertificateFees"],[3,"ConfigParamOnLinearFee"],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader"],[3,"ConfigParamOnRemoveBftLeader"],[3,"ConfigParamOnAddBftLeaderAddBftLeader"],[3,"ConfigParamOnAddBftLeader"],[3,"ConfigParamOnBlockContentMaxSize"],[3,"ConfigParamOnMilli"],[3,"ConfigParamOnEpochStabilityDepth"],[3,"ConfigParamOnSlotDuration"],[3,"ConfigParamOnSlotsPerEpoch"],[3,"ConfigParamOnConsensusType"],[3,"ConfigParamOnDiscrimination"],[3,"ConfigParamOnBlock0Date"],[4,"configParam"],[3,"BlockDateEpoch"],[3,"blockDate"],[3,"PoolInfoRetirement"],[3,"PoolInfoRegistrationPool"],[3,"PoolInfoRegistration"],[3,"PoolInfoBlocks"],[3,"poolInfo"],[3,"Variables"],[3,"SettingsSettingsFeesPerVoteCertificateFees"],[3,"SettingsSettingsFeesPerCertificateFees"],[3,"SettingsSettingsFees"],[3,"SettingsSettingsEpochStabilityDepth"],[3,"SettingsSettings"],[3,"Variables"],[3,"StakePoolStakePoolBlocksEdgesNode"],[3,"StakePoolStakePoolBlocksEdges"],[3,"StakePoolStakePoolBlocks"],[3,"StakePoolStakePoolRetirement"],[3,"StakePoolStakePoolRegistrationRewardAccount"],[3,"StakePoolStakePoolRegistrationRewardsRatio"],[3,"StakePoolStakePoolRegistrationRewards"],[3,"StakePoolStakePoolRegistration"],[3,"StakePoolStakePool"],[3,"PoolInfoRetirement"],[3,"PoolInfoRegistrationPool"],[3,"PoolInfoRegistration"],[3,"PoolInfoBlocks"],[3,"poolInfo"],[3,"Variables"],[4,"ConsensusTypeEnum"],[4,"DiscriminationEnum"],[3,"TransactionByIdTransactionOutputsAddress"],[3,"TransactionByIdTransactionOutputs"],[3,"TransactionByIdTransactionInputsAddress"],[3,"TransactionByIdTransactionInputs"],[3,"TransactionByIdTransactionBlocks"],[3,"TransactionByIdTransactionInitialConfigurationParams"],[3,"TransactionByIdTransaction"],[3,"ConfigParamOnTransactionMaxExpiryEpochs"],[3,"ConfigParamOnPerVoteCertificateFee"],[3,"ConfigParamOnRemoveCommitteeId"],[3,"ConfigParamOnAddCommitteeId"],[3,"ConfigParamOnPoolRewardParticipationCapping"],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitNone"],[3,"ConfigParamOnFeesInTreasury"],[3,"ConfigParamOnPerCertificateFee"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams"],[4,"ConfigParamOnRewardParamsRewardParams"],[3,"ConfigParamOnRewardParams"],[3,"ConfigParamOnRewardPot"],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio"],[3,"ConfigParamOnTreasuryParamsTreasuryParams"],[3,"ConfigParamOnTreasuryParams"],[3,"ConfigParamOnTreasuryAdd"],[3,"ConfigParamOnKesUpdateSpeed"],[3,"ConfigParamOnProposalExpiration"],[3,"ConfigParamOnLinearFeePerVoteCertificateFees"],[3,"ConfigParamOnLinearFeePerCertificateFees"],[3,"ConfigParamOnLinearFee"],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader"],[3,"ConfigParamOnRemoveBftLeader"],[3,"ConfigParamOnAddBftLeaderAddBftLeader"],[3,"ConfigParamOnAddBftLeader"],[3,"ConfigParamOnBlockContentMaxSize"],[3,"ConfigParamOnMilli"],[3,"ConfigParamOnEpochStabilityDepth"],[3,"ConfigParamOnSlotDuration"],[3,"ConfigParamOnSlotsPerEpoch"],[3,"ConfigParamOnConsensusType"],[3,"ConfigParamOnDiscrimination"],[3,"ConfigParamOnBlock0Date"],[4,"configParam"],[3,"BlockDateEpoch"],[3,"blockDate"],[3,"Variables"],[4,"ConsensusTypeEnum"],[4,"DiscriminationEnum"],[4,"PayloadType"],[3,"TransactionByIdCertificatesTransactionCertificateOnEvmMapping"],[3,"TransactionByIdCertificatesTransactionCertificateOnMintToken"],[3,"TransactionByIdCertificatesTransactionCertificateOnUpdateVoteVoterId"],[3,"TransactionByIdCertificatesTransactionCertificateOnUpdateVote"],[3,"TransactionByIdCertificatesTransactionCertificateOnUpdateProposalProposerId"],[3,"TransactionByIdCertificatesTransactionCertificateOnUpdateProposalChanges"],[3,"TransactionByIdCertificatesTransactionCertificateOnUpdateProposal"],[3,"TransactionByIdCertificatesTransactionCertificateOnVoteTally"],[3,"TransactionByIdCertificatesTransactionCertificateOnVoteCast"],[3,"TransactionByIdCertificatesTransactionCertificateOnVotePlanProposals"],[3,"TransactionByIdCertificatesTransactionCertificateOnVotePlan"],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolUpdate"],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolRetirement"],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewardAccount"],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewardsRatio"],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolRegistrationRewards"],[3,"TransactionByIdCertificatesTransactionCertificateOnPoolRegistration"],[3,"TransactionByIdCertificatesTransactionCertificateOnOwnerStakeDelegation"],[3,"TransactionByIdCertificatesTransactionCertificateOnStakeDelegationAccount"],[3,"TransactionByIdCertificatesTransactionCertificateOnStakeDelegation"],[4,"TransactionByIdCertificatesTransactionCertificate"],[3,"TransactionByIdCertificatesTransactionOutputsAddress"],[3,"TransactionByIdCertificatesTransactionOutputs"],[3,"TransactionByIdCertificatesTransactionInputsAddress"],[3,"TransactionByIdCertificatesTransactionInputs"],[3,"TransactionByIdCertificatesTransactionBlocks"],[3,"TransactionByIdCertificatesTransaction"],[3,"ConfigParamOnTransactionMaxExpiryEpochs"],[3,"ConfigParamOnPerVoteCertificateFee"],[3,"ConfigParamOnRemoveCommitteeId"],[3,"ConfigParamOnAddCommitteeId"],[3,"ConfigParamOnPoolRewardParticipationCapping"],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitNone"],[3,"ConfigParamOnFeesInTreasury"],[3,"ConfigParamOnPerCertificateFee"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams"],[4,"ConfigParamOnRewardParamsRewardParams"],[3,"ConfigParamOnRewardParams"],[3,"ConfigParamOnRewardPot"],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio"],[3,"ConfigParamOnTreasuryParamsTreasuryParams"],[3,"ConfigParamOnTreasuryParams"],[3,"ConfigParamOnTreasuryAdd"],[3,"ConfigParamOnKesUpdateSpeed"],[3,"ConfigParamOnProposalExpiration"],[3,"ConfigParamOnLinearFeePerVoteCertificateFees"],[3,"ConfigParamOnLinearFeePerCertificateFees"],[3,"ConfigParamOnLinearFee"],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader"],[3,"ConfigParamOnRemoveBftLeader"],[3,"ConfigParamOnAddBftLeaderAddBftLeader"],[3,"ConfigParamOnAddBftLeader"],[3,"ConfigParamOnBlockContentMaxSize"],[3,"ConfigParamOnMilli"],[3,"ConfigParamOnEpochStabilityDepth"],[3,"ConfigParamOnSlotDuration"],[3,"ConfigParamOnSlotsPerEpoch"],[3,"ConfigParamOnConsensusType"],[3,"ConfigParamOnDiscrimination"],[3,"ConfigParamOnBlock0Date"],[4,"configParam"],[3,"BlockDateEpoch"],[3,"blockDate"],[3,"PoolInfoRetirement"],[3,"PoolInfoRegistrationPool"],[3,"PoolInfoRegistration"],[3,"PoolInfoBlocks"],[3,"poolInfo"],[3,"Variables"],[4,"ConsensusTypeEnum"],[4,"DiscriminationEnum"],[4,"PayloadType"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnEvmMapping"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnMintToken"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateVoteVoterId"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateVote"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalProposerId"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposalChanges"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnUpdateProposal"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVoteTally"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVoteCast"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlanProposals"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnVotePlan"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolUpdate"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRetirement"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewardAccount"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewardsRatio"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistrationRewards"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnPoolRegistration"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnOwnerStakeDelegation"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegationAccount"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificateOnStakeDelegation"],[4,"TransactionsByAddressTipTransactionsByAddressEdgesNodeCertificate"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeOutputsAddress"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeOutputs"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeInputsAddress"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeInputs"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNodeBlocks"],[3,"TransactionsByAddressTipTransactionsByAddressEdgesNode"],[3,"TransactionsByAddressTipTransactionsByAddressEdges"],[3,"TransactionsByAddressTipTransactionsByAddress"],[3,"TransactionsByAddressTip"],[3,"ConfigParamOnTransactionMaxExpiryEpochs"],[3,"ConfigParamOnPerVoteCertificateFee"],[3,"ConfigParamOnRemoveCommitteeId"],[3,"ConfigParamOnAddCommitteeId"],[3,"ConfigParamOnPoolRewardParticipationCapping"],[3,"ConfigParamOnRewardLimitByAbsoluteStakeRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitByAbsoluteStake"],[3,"ConfigParamOnRewardLimitNone"],[3,"ConfigParamOnFeesInTreasury"],[3,"ConfigParamOnPerCertificateFee"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnHalvingRewardParams"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParamsRatio"],[3,"ConfigParamOnRewardParamsRewardParamsOnLinearRewardParams"],[4,"ConfigParamOnRewardParamsRewardParams"],[3,"ConfigParamOnRewardParams"],[3,"ConfigParamOnRewardPot"],[3,"ConfigParamOnTreasuryParamsTreasuryParamsRatio"],[3,"ConfigParamOnTreasuryParamsTreasuryParams"],[3,"ConfigParamOnTreasuryParams"],[3,"ConfigParamOnTreasuryAdd"],[3,"ConfigParamOnKesUpdateSpeed"],[3,"ConfigParamOnProposalExpiration"],[3,"ConfigParamOnLinearFeePerVoteCertificateFees"],[3,"ConfigParamOnLinearFeePerCertificateFees"],[3,"ConfigParamOnLinearFee"],[3,"ConfigParamOnRemoveBftLeaderRemoveBftLeader"],[3,"ConfigParamOnRemoveBftLeader"],[3,"ConfigParamOnAddBftLeaderAddBftLeader"],[3,"ConfigParamOnAddBftLeader"],[3,"ConfigParamOnBlockContentMaxSize"],[3,"ConfigParamOnMilli"],[3,"ConfigParamOnEpochStabilityDepth"],[3,"ConfigParamOnSlotDuration"],[3,"ConfigParamOnSlotsPerEpoch"],[3,"ConfigParamOnConsensusType"],[3,"ConfigParamOnDiscrimination"],[3,"ConfigParamOnBlock0Date"],[4,"configParam"],[3,"BlockDateEpoch"],[3,"blockDate"],[3,"PoolInfoRetirement"],[3,"PoolInfoRegistrationPool"],[3,"PoolInfoRegistration"],[3,"PoolInfoBlocks"],[3,"poolInfo"],[3,"Variables"],[4,"PayloadType"],[3,"VotePlanByIdVotePlanProposalsVotesEdgesNodePayloadOnVotePayloadPrivateStatus"],[3,"VotePlanByIdVotePlanProposalsVotesEdgesNodePayloadOnVotePayloadPublicStatus"],[4,"VotePlanByIdVotePlanProposalsVotesEdgesNodePayload"],[3,"VotePlanByIdVotePlanProposalsVotesEdgesNodeAddress"],[3,"VotePlanByIdVotePlanProposalsVotesEdgesNode"],[3,"VotePlanByIdVotePlanProposalsVotesEdges"],[3,"VotePlanByIdVotePlanProposalsVotes"],[3,"VotePlanByIdVotePlanProposalsTallyOnTallyPrivateStatusOptions"],[3,"VotePlanByIdVotePlanProposalsTallyOnTallyPrivateStatus"],[3,"VotePlanByIdVotePlanProposalsTallyOnTallyPublicStatusOptions"],[3,"VotePlanByIdVotePlanProposalsTallyOnTallyPublicStatus"],[4,"VotePlanByIdVotePlanProposalsTally"],[3,"VotePlanByIdVotePlanProposalsOptions"],[3,"VotePlanByIdVotePlanProposals"],[3,"VotePlanByIdVotePlan"],[3,"BlockDateEpoch"],[3,"blockDate"],[3,"Variables"],[3,"Transaction"],[4,"VerifierError"],[3,"ConfigParams"],[3,"Block"],[3,"StakePool"],[3,"OwnerStakeDelegation"],[3,"PoolRegistration"],[3,"PoolRetirement"],[3,"PoolUpdate"],[3,"StakeDelegation"],[3,"TimeOffsetSeconds"],[3,"UpdateProposal"],[3,"UpdateVote"],[3,"VoteCast"],[3,"VotePlan"],[3,"VoteTally"],[3,"PublicKey"],[8,"Iterator"],[8,"DeserializeFromSlice"],[3,"JormungandrClient"],[3,"Block"],[3,"Streaming"],[4,"MockClientError"],[3,"JormungandrWatchClient"],[3,"Status"],[3,"Sender"],[3,"Channel"],[3,"NodeClient"],[3,"WatchClient"],[3,"Fragment"],[3,"Hash"],[3,"HandshakeResponse"],[4,"Header"],[3,"Header"],[6,"WatchTipNotifier"],[3,"ChainLength"],[3,"Duration"],[3,"HandshakeRequest"],[3,"ClientAuthRequest"],[3,"ClientAuthResponse"],[3,"TipRequest"],[3,"TipResponse"],[3,"PeersRequest"],[3,"PeersResponse"],[3,"PullHeadersRequest"],[3,"PullBlocksToTipRequest"],[3,"PullBlocksRequest"],[3,"PushHeadersResponse"],[3,"UploadBlocksResponse"],[3,"Gossip"],[3,"BlockEvent"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[4,"Item"],[4,"WireType"],[3,"DecodeContext"],[3,"DecodeError"],[6,"BoxBody"],[8,"GrpcService"],[8,"IntoStreamingRequest"],[3,"Response"],[8,"IntoRequest"],[3,"Endpoint"],[8,"TryInto"],[3,"Error"],[8,"Debug"],[3,"BlockIds"],[3,"FragmentIds"],[3,"Request"],[8,"Service"],[8,"Interceptor"],[3,"InterceptedService"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Node"],[3,"HandshakeSvc"],[3,"ClientAuthSvc"],[3,"TipSvc"],[3,"PeersSvc"],[3,"GetBlocksSvc"],[3,"GetHeadersSvc"],[3,"GetFragmentsSvc"],[3,"PullHeadersSvc"],[3,"PullBlocksSvc"],[3,"PullBlocksToTipSvc"],[3,"PushHeadersSvc"],[3,"UploadBlocksSvc"],[3,"BlockSubscriptionSvc"],[3,"FragmentSubscriptionSvc"],[3,"GossipSubscriptionSvc"],[3,"NodeServer"],[8,"Body"],[8,"Send"],[3,"_Inner"],[3,"Context"],[4,"Poll"],[3,"JormungandrServerImpl"],[4,"MockExitCode"],[4,"ProtocolVersion"],[3,"MockServerData"],[3,"RwLock"],[3,"Arc"],[3,"MockController"],[3,"MockBuilder"],[3,"ChannelWriter"],[6,"Result"],[8,"Fn"],[3,"MockLogger"],[3,"Sender"],[4,"Error"],[4,"Error"],[4,"ReadError"],[4,"WriteError"],[3,"BlockStore"],[3,"Profile"],[4,"MethodType"],[3,"Receiver"],[3,"ChannelReader"],[3,"MockVerifier"],[3,"ScalarWrapper"],[3,"ScalarWrapper"],[3,"BlockSubscriptionRequest"],[3,"TipSubscriptionRequest"],[3,"MempoolSubscriptionRequest"],[3,"SyncMultiverseRequest"],[3,"ScalarWrapper"],[8,"Watch"],[3,"BlockSubscriptionSvc"],[3,"TipSubscriptionSvc"],[3,"SyncMultiverseSvc"],[3,"WatchServer"],[3,"_Inner"],[3,"CachedReleases"],[3,"Rest"],[3,"P2p"],[3,"TopicsOfInterest"],[3,"RELEASES"],[3,"LegacyNodeConfigManager"],[3,"LegacyNodeConfigBuilder"],[3,"LegacyNodeConfig"],[4,"Error"],[3,"LegacyNodeConfigConverter"],[3,"FixtureError"],[3,"Error"],[3,"OsRng"],[3,"P2p"],[3,"TrustedPeer"],[3,"Log"],[3,"BackwardCompatibleRest"],[3,"Identifier"],[6,"VotePlanId"],[6,"HeaderId"],[4,"FragmentStatus"],[3,"RestSettings"],[3,"RawRest"],[4,"Level"],[3,"JormungandrLogger"],[3,"LogEntry"],[3,"LogEntryLegacy"],[3,"Ref"],[3,"SystemTime"],[8,"Read"],[4,"Value"],[3,"NamedProcess"],[4,"Status"],[3,"JormungandrStateVerifier"],[4,"ShutdownError"],[4,"NodeState"],[3,"Child"],[4,"TestingDirectory"],[4,"StartupError"],[3,"JormungandrRest"],[4,"StartupVerificationMode"],[3,"TimeEra"],[3,"RemoteJormungandr"],[3,"ExitStatus"],[3,"RemoteJormungandrBuilder"],[3,"AccountVotes"],[3,"EpochRewardsInfo"],[3,"Certificate"],[4,"Error"],[4,"Error"],[3,"PeerStats"],[3,"PeerRecord"],[3,"StakeDistributionDto"],[3,"NodeStatsDto"],[3,"UpdateProposalStateDef"],[3,"HeaderMap"],[4,"ApiVersion"],[3,"Identifier"],[3,"Starter"],[3,"FaketimeConfig"],[4,"LeadershipMode"],[4,"PersistenceMode"],[4,"NodeBlock0"],[4,"FromGenesis"],[4,"OnFail"],[3,"JormungandrParams"],[3,"SpeedBenchmarkRun"],[4,"ProcessError"],[4,"Error"],[3,"ConfiguredStarter"],[3,"CommandBuilder"],[8,"ConfigurableNodeConfig"],[3,"JormungandrBootstrapper"],[4,"Error"],[4,"StateVerifierError"],[3,"FragmentLogVerifier"],[4,"ValueError"],[3,"StateSnapshot"],[3,"Endurance"],[3,"Thresholds"],[4,"Status"],[3,"Speed"],[3,"Asset"],[3,"Global"],[3,"ConsumptionBenchmarkDef"],[3,"EfficiencyBenchmarkDef"],[3,"EnduranceBenchmarkDef"],[3,"SpeedBenchmarkDef"],[3,"GitHubApiBuilder"],[3,"GitHubApi"],[3,"ConsumptionBenchmarkRun"],[3,"EnduranceBenchmarkFinish"],[3,"ResourcesUsage"],[3,"Timestamp"],[3,"Openssl"],[4,"DecompressError"],[3,"EfficiencyBenchmarkFinish"],[4,"WebError"],[3,"Efficiency"],[3,"EfficiencyBenchmarkRun"],[3,"EnduranceBenchmarkRun"],[3,"ConsumptionBenchmarkFinish"],[3,"SpeedBenchmarkFinish"],[4,"GitHubApiError"],[4,"ConsumptionBenchmarkError"],[8,"Display"],[8,"PartialOrd"],[4,"FromHexError"],[3,"SystemTime"],[4,"SyncWaitParams"],[4,"Type"],[3,"Iter"],[3,"Counter"],[3,"Consumption"],[4,"SyncNodeError"],[4,"Error"],[4,"MeasurementReportInterval"],[3,"SyncNodeRecord"],[3,"MeasurementReporter"],[4,"Block0Error"],[4,"Error"],[4,"Block0ConfigurationError"],[4,"Error"],[3,"Parameters"],[3,"OutputCollector"],[8,"AsymmetricKey"],[3,"Event"],[3,"Rc"],[3,"StorageBuilder"],[4,"StopCriteria"],[4,"BranchCount"],[4,"JsonValue"],[3,"VotePlanBuilder"],[4,"VoteAction"],[3,"ProposalsBuilder"],[3,"Proposals"],[3,"MemberPublicKey"],[6,"ExternalProposalId"],[3,"BlockDate"],[3,"TokenIdentifier"],[3,"VoteCastCounter"],[3,"VotesToCast"],[4,"Error"],[3,"WalletVoteCastPosition"],[3,"VotePlanVoteCastPosition"],[6,"VotePlanId"],[3,"Range"],[6,"PoolId"],[3,"Identifier"],[13,"TransactionNotInBlock"],[13,"TransactionsNotInBlock"],[8,"FragmentNode"],[13,"CannotSendFragment"],[13,"CannotSendFragmentBatch"],[13,"ErrorInLogs"],[13,"StdErr"],[13,"NonSuccessErrorCode"],[13,"Timeout"],[13,"EntryNotFoundInLogs"],[13,"Timeout"],[8,"NodeSecretExtension"],[3,"Address"],[3,"TransactionsByAddress"],[3,"AllBlocks"],[3,"Block"],[3,"AllStakePools"],[3,"BlocksByChainLength"],[3,"Epoch"],[3,"LastBlock"],[3,"StakePool"],[3,"Settings"],[3,"TransactionById"],[3,"TransactionByIdCertificates"],[3,"AllVotePlans"],[3,"BlockById"],[3,"VotePlanById"],[3,"ExplorerVerifier"],[13,"InvalidCertificate"],[13,"CannotDeserialize"],[8,"InitialsAssert"],[8,"VotePlanStatusAssert"],[8,"SyncNode"],[13,"TimeoutWhenSyncingTargetNode"],[13,"Standard"],[13,"WithDisruption"],[8,"Block0ConfigurationExtension"],[8,"BlockchainConfigurationExtension"],[8,"Observable"],[8,"Observer"],[8,"ProcessOutput"],[8,"SettingsDtoExtension"],[8,"VotePlanExtension"],[13,"NoMoreRequestsToSentForWallet"],[13,"VotePlanIsDrainedFromVotes"],[13,"LoadCannotSendAnyMoreRequests"],[8,"MultiaddrExtension"]]},\
"jormungandr_integration_tests":{"doc":"","t":"AADDDLMLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLMMLLLLLMMLLLLLLLLLMLLLDDDMLLLMMMLLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLMLLLLLLMMMMMFLLLLLLLLLMLLLLLLLLLLLLLLL","n":["context","startup","ActorsTestContext","LegacyTestContext","TestContext","alice","alice","block0_config","block0_config","block0_config","block0_config","bob","bob","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","jormungandr_app","legacy_node_config","node_config","node_config","restart_node","reward_history","secret_factory","start_node","start_node","start_node","starter","starter","test_context","test_context","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","vzip","vzip","vzip","ActorsTestBootstrapper","LegacySingleNodeTestBootstrapper","SingleNodeTestBootstrapper","alice","as_bft_leader","as_bft_leader","as_genesis_praos_stake_pool","block0_builder","bob","bootstrapper","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","create_new_account_address","create_new_delegation_address","create_new_delegation_address_for","create_new_leader_key","create_new_utxo_address","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","from","init","init","init","inner","into","into","into","into_request","into_request","into_request","jormungandr_app","legacy_node_config","node_config_builder","reward_history","secret","start_stake_pool","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","vzip","vzip","vzip","with_alice","with_bft_leader_node","with_bft_secret","with_block0_config","with_block0_config","with_bob_without_funds","with_jormungandr_app","with_node_config","with_node_config","with_rewards_history","with_rewards_history","with_version"],"q":[[0,"jormungandr_integration_tests"],[2,"jormungandr_integration_tests::context"],[67,"jormungandr_integration_tests::startup"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,3,1,5,3,1,1,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,3,1,5,5,5,3,3,3,3,3,3,1,5,3,5,1,5,3,1,5,3,1,5,3,1,5,5,3,1,5,0,0,0,19,15,16,16,16,19,19,15,19,16,15,19,16,15,19,16,0,0,0,0,0,19,16,15,19,16,15,19,16,15,19,16,15,15,19,16,15,19,16,15,15,19,16,15,19,16,15,15,16,16,16,0,15,19,16,15,19,16,15,19,16,15,15,19,16,19,19,16,15,16,19,15,15,16,15,16,15],"f":[0,0,0,0,0,[1,2],0,[3,4],[1,4],[5,4],0,[1,2],0,[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[],7],[[],7],[[],7],0,0,[3,8],0,[[3,9],[[11,[9,10]]]],0,0,[[3,12],[[11,[9,10]]]],[[1,12],[[11,[9,10]]]],[[5,12],[[11,[9,10]]]],[[3,12],[[11,[13,10]]]],[[5,12],[[11,[13,10]]]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],0,0,0,0,[15,15],[16,16],[[16,17],16],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[15,[[11,[5,18]]]],[19,1],[16,3],[[],2],[[],2],[20,2],[[],[[22,[21]]]],[[],2],[[],19],[[],16],[6],[6],[6],[6],[6],[6],[6],[6],[6],[23,15],[[]],[[]],[[]],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[],7],[[],7],[[],7],0,0,0,0,0,[[24,25],[[11,[10]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[19,26],19],[19,19],[[16,[27,[21]]],16],[[15,24],15],[[16,24],16],[19,19],[[15,28],15],[[15,29],15],[[16,25],16],[15,15],[16,16],[[15,23],15]],"c":[],"p":[[3,"ActorsTestContext"],[4,"Wallet"],[3,"TestContext"],[3,"Block0Configuration"],[3,"LegacyTestContext"],[15,"usize"],[3,"Request"],[3,"NodeConfig"],[3,"JormungandrProcess"],[4,"StartupError"],[4,"Result"],[3,"TempDir"],[3,"Starter"],[3,"TypeId"],[3,"LegacySingleNodeTestBootstrapper"],[3,"SingleNodeTestBootstrapper"],[3,"StakePool"],[4,"Error"],[3,"ActorsTestBootstrapper"],[3,"Identifier"],[3,"Ed25519"],[3,"KeyPair"],[3,"Version"],[3,"Block0ConfigurationBuilder"],[3,"NodeConfigBuilder"],[3,"Value"],[3,"SigningKey"],[3,"PathBuf"],[3,"LegacyNodeConfigBuilder"]]},\
"jormungandr_lib":{"doc":"","t":"AAAAAAAADNNDENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDMMMMFLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLNDDDDNNNDNDNNDENDDNDDNDNRNNDEEEDEDDNDNEDDRRRRRRRNDNENDDNDENNNDNNDNDDEEEDDENDNNNNNNNENDDNNNNNNNNNNNDNDNNDDDENDNNDDDDERRRRRRRRDNNNDGDEDDNDNDDDEEDDNNDNDNDDDDNDNDNNNNNENDNNNDDNNDNNDNDNNENNDNNRDDDNNNDDDDDNNNNDEDDDDNDDNDDDENDDNNNDEDEEEDDDDNDDEDGDDDMAAMMAMMMMMMMMMMMMMMAFMAMMMMMMMMAMMMMMAMMMMMMMAMMMMMMMAAMFMMMMMMMMMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMAMMAAMAAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMAMAMMMMFMMMMMMMMMMMMMMAMMMMAMMMMMMMMMMAMMMMMMMMMMMMMMMMMMMMMMMMAMMFMMMMMMMMMMAMMMAMMAAAAAAMMMMMMMMMAMAAMMAMMMMMMMAMAMMMMMMMMMAAAMMMMMFMMMMMAMAAMMMMMMMMMMMAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDNRRNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLMLMLLLLLLLMLLLLLLLLLLMLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLCDECCNCCRCCCCNCNCCCCCCCCCCCCCCAFAMLLLLLLALLLLLLLALALLLLLLLLLLMAALLAAAALALALLLLLLCLLLLLLDDNNSSELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRDLLLLLLLLLLLLLLLLLLLLLLLLLLEDNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDEENENNNNNNNGNMMMLLLLLLLLLLMMMLLLLLLLLLLLMLLLLMLMLLLLLLLLLLLLLLLLLLLLLLMMLFMLMMLLLMMLLLMMMLLLLLLLLLMLLLLLLLLMMNNDENNEDDNDNNNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMLLLLLLMLLLLLLLMFLLLLLLFLLLLLLLLLLLLMMMLLLLLLNNDDSSELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNSSDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLNNSSDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLNRDEEENNNNNNRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMSDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCCCCCCCCCCCCCCCAAAANDDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLDDDDDRDDDDDDGDDDDDDDDDMMMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLMMMMMMMMLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLMMLLLLLLLLLLLLMLLLNNNNNEDNNNNNNENNNNNNNNNNNNNNNNNNNNLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLFLLLLDEENNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLLLLLLMLMLLLLMLLLLLLLLLLLLLLLMMMMDDDDLLLLLLLLMMLLLLLLLLLLLLLLLMMMMLLLMLLLLLLLLLLLLLLLFFLLLFMMLLMLLLLLLLLLLLLLLLLLDLLLLLLMLMLLLLLLLLNNEDNNDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMLLLLLLLLLLLLLLLLLLNDDENNLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLMLLLLMLLLLLLLLLLLLLLLLMMMMMDDDLLLLLLMMMMMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLFMFMLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLMLLLLLLLLLLLLLLLLMLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLMLLLMMMMMLLLMLLLMLLLLLLLLLLLLNNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNELLLLLLLLLLLLLLLLLLLLMMMMMMMMDLMLLLLLMLLMLMLLLLLLLMMLLLLFFFFFFFFFFNEENENNDNDDDDNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMMMMLLLLLLLLMMLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLMLLLLLLLLMLLLLLLLLLLMLLMLLLLLLLLMLLDDLLLLLLLLLLLLLLLLMLLLLLLLLLLMMMLLMLLMLLLLLLMMMLLNEDDNNNNNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLLLMMLLLLLLLLLMMLLLMMMLLLDLLLLLLLLLMLLLLLMMLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLNRDENLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLDLMLLLLLLLLLLLLLLLLLLLLLMLNRNNDEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDLLLLMLLLLLLLLLLLLLLLLMMMLLLLLLLLLLMLLDDLMMLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLMLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDNNDNNNNEENNNENNNNDEDNNEEEDGDDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMMMMLLMAAAAALLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMDDLLLLLLLLFLLLLLLLLLLLLFLLLLLLLLLLLDLLLLFLLLLLLFLLLLLDLLLLFLLLLLLFLLLLLDDLLLLLLLLFLLLLLLLLLLLLFLLLLLLLLLLDDLLLLLLLLFLLLLLLLLLLFLLLLLLLLLENNNNNLLLLLLLLLLLFLLFLLLLDDDDSDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["crypto","interfaces","multiaddr","time","account","hash","key","serde","Identifier","InvalidBech32Encoding","InvalidSecretKey","SigningKey","SigningKeyParseError","UnexpectedHrp","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bech32_str","from_bech32_str","from_hex","from_str","from_str","generate","generate_extended","hash","identifier","init","init","init","into","into","into","partial_cmp","provide","serialize","serialize","source","to_address","to_bech32_str","to_bech32_str","to_hex","to_inner","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","hrp","Hash","as_ref","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","deserialize","drop","eq","fmt","fmt","from","from","from","from","from","from_hex","from_str","from_str","hash","hash","init","into","into_digest","into_digest_of","into_hash","partial_cmp","serialize","serialize","to_hex","to_owned","to_string","try_from","try_into","type_id","vzip","Identifier","KeyPair","Signature","SigningKey","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","coerce","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bech32_str","from_bech32_str","from_bech32_str","from_hex","from_hex","from_str","from_str","generate","generate","hash","hash","identifier","identifier","init","init","init","init","into","into","into","into","into_public_key","into_secret_key","partial_cmp","public_key","serialize","serialize","serialize","sign","signing_key","to_account_address","to_bech32_str","to_bech32_str","to_bech32_str","to_group_address","to_hex","to_hex","to_owned","to_owned","to_owned","to_owned","to_single_address","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","HashVisitor","PublicKeyVisitor","SecretKeyVisitor","SignatureVisitor","_marker","_marker","_marker_1","_marker_2","bech32_error_to_serde","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_hash","deserialize_public","deserialize_secret","deserialize_signature","drop","drop","drop","drop","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","new","new","new","serialize_hash","serialize_public","serialize_secret","serialize_signature","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_bytes","visit_bytes","visit_str","visit_str","visit_str","visit_str","vzip","vzip","vzip","vzip","Account","AccountIdentifier","AccountState","AccountVotes","ActiveSlotCoefficient","ActiveSlotCoefficient","AddBftLeader","AddCommitteeId","Address","Bech32","Bft","Bft","Block","Block0Configuration","Block0ConfigurationError","Block0Date","Block0DateDef","BlockContentMaxSize","BlockContentMaxSize","BlockDate","BlockchainConfiguration","BlockchainConfiguration","Bootstrap","Bootstrapping","CERTIFICATE_HRP","CannotParseAddress","Cert","Certificate","CertificateFromBech32Error","CertificateFromStrError","CertificateToBech32Error","CommitteeIdDef","ConfigParam","ConfigParams","Connection","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusLeaderId","ConsensusVersion","ConsensusVersionDef","Cors","CorsOrigin","DEFAULT_ACTIVE_SLOT_COEFFICIENT","DEFAULT_BLOCK_CONTENT_MAX_SIZE","DEFAULT_EPOCH_STABILITY_DEPTH","DEFAULT_KES_SPEED_UPDATE","DEFAULT_NUMBER_OF_SLOTS_PER_EPOCH","DEFAULT_PROPOSAL_EXPIRATION","DEFAULT_SLOT_DURATION","Decrypted","Destination","Discrimination","DiscriminationDef","Encrypted","EpochRewardsInfo","EpochStabilityDepth","EpochStabilityDepth","EvmTransaction","FeesGoTo","FeesGoTo","FeesInTreasury","File","FileFragments","FirstBlock0MessageNotInit","FragmentAlreadyInLog","FragmentDef","FragmentInvalid","FragmentLog","FragmentLogDeserializeError","FragmentOrigin","FragmentRejectionReason","FragmentStatus","FragmentsBatch","FragmentsProcessingSummary","FromConfigParamError","Fund","GenesisPraos","GenesisPraos","Halving","InABlock","Incompatible","Incompatible","Incompatible","Incompatible","Initial","InitialFragments","InitialToken","InitialUTxO","Invalid","Invalid","Invalid","Invalid","InvalidBase32","InvalidBech32","InvalidCertificate","InvalidCertificate","InvalidHrp","InvalidInt","Io","JRpc","JRpc","KesUpdateSpeed","KesUpdateSpeed","KesUpdateSpeed","LayersConfig","LeadershipLog","LeadershipLogId","LeadershipLogStatus","LegacyFund","LegacyUTxO","Linear","LinearFee","LinearFeeDef","Log","LogEntry","LogMaxEntries","LogOutput","MAXIMUM_ACTIVE_SLOT_COEFFICIENT","MAXIMUM_KES_SPEED_UPDATE_IN_SECONDS","MAXIMUM_NUMBER_OF_SLOTS_PER_EPOCH","MAXIMUM_SLOT_DURATION","MINIMUM_ACTIVE_SLOT_COEFFICIENT","MINIMUM_KES_SPEED_UPDATE_IN_SECONDS","MINIMUM_NUMBER_OF_SLOTS_PER_EPOCH","MINIMUM_SLOT_DURATION","Mempool","MissingDenominator","MissingNumerator","Network","NodeConfig","NodeId","NodeSecret","NodeState","NodeStats","NodeStatsDto","NotAccountOrMulti","NumberOfSlotsPerEpoch","NumberOfSlotsPerEpoch","OldAddress","P2p","ParametersDef","ParseAccountIdentifierError","ParseRatioError","PeerRecord","PeerStats","Pending","Pending","PerCertificateFeeDef","PerCertificateFees","PerVoteCertificateFeeDef","PerVoteCertificateFees","PersistentFragmentLog","PersistentLog","Policy","PoolMaxEntries","PoolOverflow","PoolParticipationCapping","PoolRewardParticipationCapping","PreferredListConfig","PreparingBlock0","PreparingStorage","PreviousFragmentInvalid","Private","Private","PrivateTallyState","Production","ProposalExpiration","ProposalExpiration","Public","Public","Ratio","RatioDef","Rejected","Rejected","RejectedFragmentInfo","RemoveBftLeader","RemoveCommitteeId","Rest","Rest","RewardConstraints","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardParams","RewardPot","Rewards","Rewards","Running","SIGNED_CERTIFICATE_HRP","SettingsDto","SignedCertificate","SlotDuration","SlotDuration","SlotDuration","SlotsPerEpoch","Stake","StakeDef","StakeDistribution","StakeDistributionDto","StakePoolStats","StartingRestServer","StartingWorkers","Stderr","Stdout","Subscription","Tally","TallyResult","TaxType","TaxTypeDef","TaxTypeSerde","Test","TimeEraDef","Tls","Token","TokenIdentifier","TopicsOfInterest","TransactionInput","TransactionInputType","TransactionMaxExpiryEpochs","TransactionOutput","TransactionWitness","Treasury","TreasuryAdd","TreasuryParams","TrustedPeer","TryFromActiveSlotCoefficientError","TryFromFeesGoToError","TryFromKesUpdateSpeedError","TryFromNumberOfSlotsPerEpochError","TryFromSlotDurationError","UTxOInfo","UTxOOutputInfo","UpdateProposalDef","UpdateProposalStateDef","Utxo","Value","ValueDef","VotePayload","VotePlan","VotePlanId","VotePlanStatus","VotePrivacy","VoteProposalStatus","accepted","account_identifier","account_state","accounts","addr","address","address","address","address","address","address","address","address","address","allow_private_addresses","allowed_headers","allowed_methods","allowed_origins","associated_fund","bft","block0_configuration","block0_configuration_documented_example","block0_consensus","block0_date","block0_date","block0_hash","block0_time","block_content_max_size","block_content_max_size","block_content_size_avg","block_recv_cnt","blockchain_configuration","blockdate","blocks","bootstrap","bootstrap_from_trusted_peers","cause","cert_file","certificate","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","coefficient","committee","committee_end","committee_end","committee_member_keys","committee_member_public_keys","committees","compounding_ratio","compounding_type","config","config_params","config_params","config_params_documented_example","connection","consensus_genesis_praos_active_slot_coeff","consensus_leader_ids","consensus_version","constant","cors","counters","created_at_time","curr_slot_start_time","dangling","delegation","denominator","dir","discrimination","discrimination","dns_server_address","drawn","entry","epoch","epoch","epoch","epoch_rate","epoch_stability_depth","epoch_stability_depth","epoch_start","epoch_start","established_at","evm_transaction","fail_fast","fees","fees","fees_go_to","file","file_path","finished_at_time","fixed","fixed","format","fragment","fragment","fragment_id","fragment_log","fragment_log_persistent","fragments","fragments_batch","fragments_processing_summary","genesis","gossip_interval","id","id","id","id","index","index_in_transaction","initial","initial_value","input","interest","jrpc","kes_public_key","kes_update_speed","last_block_content_size","last_block_date","last_block_fees","last_block_hash","last_block_height","last_block_received","last_block_sum","last_block_time","last_block_tx","last_fragment_received","last_gossip_received","last_received_block_time","last_rewards","last_update","last_updated_at","layers","leadership_log","level","linear_fee","linear_fees","listen","listen","listen","load_persistent_fragments_logs_from_folder_path","log","log_max_entries","max","max_age_secs","max_bootstrap_attempts","max_connections","max_inbound_connections","max_limit","max_limit","mempool","mempool_tx_count","mempool_usage_ratio","messages","min","mint_token","network_stuck_check","node_id","node_key_file","numerator","old_address","options","options","output","owners","p2p","payload","payload_type","peer_available_cnt","peer_connected_cnt","peer_quarantined_cnt","peer_stats","peer_total_cnt","peers","per_certificate_fees","per_vote_certificate_fees","persistent_log","policy","policy","pool_max_entries","pool_participation_capping","pool_participation_capping","pools","preferred_list","priv_key_file","proposal","proposal_date","proposal_expiration","proposal_id","proposals","proposals","proposer_id","public_address","quarantine_duration","quarantine_whitelist","quarantined","ratio","ratio","ratio","read_persistent_fragment_logs_from_file_path","reader","reason","received_at","received_from","rejected","rest","results","reward_constraints","reward_drawing_limit_max","reward_drawing_limit_max","reward_parameters","reward_parameters","reward_params","rewards","rewards_info","scheduled_at_date","scheduled_at_time","serde_base64_bytes","serde_choices","serde_committee_member_public_keys","serde_external_proposal_id","serde_proposals","settings","sig_key","signing_key","skip_bootstrap","slot_duration","slot_duration","slot_start","slots_per_epoch","slots_per_epoch","slots_per_epoch","stake","stake","stake_distribution","stake_pool_stats","stake_pools","state","stats","stats","status","status","storage","subscriptions","tally","tax","tax_type","time","time_era","tls","to","token_id","tokens","topic","topics_of_interest","total_reward_supply","total_stake","transaction_id","transaction_input","transaction_output","transaction_witness","treasury","treasury","treasury_parameters","treasury_tax","trusted_peers","try_initial_fragment_from_message","tx_max_expiry_epochs","tx_max_expiry_epochs","tx_recv_cnt","tx_rejected_cnt","unassigned","updates","uptime","utxo_info","value","value","value","value","value","value","value","value","value_for_stakers","value_taxed","version","view_max","vote","vote_end","vote_end","vote_plan_id","vote_start","vote_start","votes","votes","votes_cast","votes_cast","voting_token","voting_token","vrf_key","vrf_public_key","wake_at_time","whitelist","actual","expected","addr","block","date","reason","block","chain_length","parent","reason","encrypted_tally","result","constant","constant","epoch_rate","epoch_rate","epoch_start","epoch_start","ratio","ratio","result","state","coefficient","speed","slots","duration","choice","encrypted_vote","proof","AccountIdentifier","CannotParseAddress","DEFAULT_DISCRIMINATION","DEFAULT_PREFIX","NotAccountOrMulti","ParseAccountIdentifierError","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_address","from_str","from_str","hash","init","init","into","into","into_address","provide","serialize","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccountState","DelegationType","LastRewards","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","counters","counters","delegation","delegation","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","epoch","epoch","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","init","init","init","into","into","into","last_rewards","last_rewards","partial_cmp","partial_cmp","pools","pools","reward","reward","serialize","serialize","serialize","to_owned","to_owned","to_owned","tokens","tokens","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","value","vzip","vzip","vzip","Address","as_ref","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","from","from_str","from_str","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ActiveSlotCoefficient","Block0Configuration","Block0ConfigurationError","BlockContentMaxSize","BlockchainConfiguration","BlockchainConfiguration","ConsensusLeaderId","ConsensusVersionDef","DISCRIMINATION","Destination","DiscriminationDef","EpochStabilityDepth","FeesGoTo","FirstBlock0MessageNotInit","Initial","InitialFragments","InitialToken","InitialUTxO","KesUpdateSpeed","LegacyUTxO","NumberOfSlotsPerEpoch","PoolParticipationCapping","ProposalExpiration","RewardConstraints","SlotDuration","TryFromActiveSlotCoefficientError","TryFromFeesGoToError","TryFromKesUpdateSpeedError","TryFromNumberOfSlotsPerEpochError","TryFromSlotDurationError","active_slot_coefficient","block0_configuration_documented_example","block_content_max_size","blockchain_configuration","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default_values","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","epoch_stability_depth","eq","fees_go_to","fmt","fmt","fmt","from","from","from","from","from_block","init","init","initial","initial_config","initial_fragment","into","into","kes_update_speed","leader_id","number_of_slots_per_epoch","proposal_expiration","provide","reward_constraint","serialize","slots_duration","source","to_block","to_owned","to_string","try_from","try_from","try_initial_fragment_from_message","try_into","try_into","type_id","type_id","vzip","vzip","ActiveSlotCoefficient","ActiveSlotCoefficientVisitor","Incompatible","Invalid","MAXIMUM","MINIMUM","TryFromActiveSlotCoefficientError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","expecting","fmt","fmt","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","new","partial_cmp","provide","serialize","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visit_f64","visit_str","visit_u64","vzip","vzip","vzip","coefficient","BlockContentMaxSize","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","from","hash","init","into","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DEFAULT_ACTIVE_SLOT_COEFFICIENT","DEFAULT_BLOCK_CONTENT_MAX_SIZE","DEFAULT_EPOCH_STABILITY_DEPTH","DEFAULT_KES_SPEED_UPDATE","DEFAULT_NUMBER_OF_SLOTS_PER_EPOCH","DEFAULT_PROPOSAL_EXPIRATION","DEFAULT_SLOT_DURATION","MAXIMUM_ACTIVE_SLOT_COEFFICIENT","MAXIMUM_KES_SPEED_UPDATE_IN_SECONDS","MAXIMUM_NUMBER_OF_SLOTS_PER_EPOCH","MAXIMUM_SLOT_DURATION","MINIMUM_ACTIVE_SLOT_COEFFICIENT","MINIMUM_KES_SPEED_UPDATE_IN_SECONDS","MINIMUM_NUMBER_OF_SLOTS_PER_EPOCH","MINIMUM_SLOT_DURATION","EpochStabilityDepth","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","from","hash","init","into","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","FeesGoTo","FromStrFeesGoToError","Rewards","Treasury","TryFromFeesGoToError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_str","from_str","hash","init","init","init","into","into","into","partial_cmp","provide","provide","serialize","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ActiveSlotCoefficient","Bft","BlockchainConfiguration","ConsensusVersionDef","DiscriminationDef","FeesGoTo","FromConfigParamsError","GenesisPraos","InitConfigParamDuplicate","InitConfigParamMissing","KesUpdateSpeed","NumberOfSlotsPerEpoch","Production","SlotDuration","StaticStr","Test","block0_consensus","block0_date","block_content_max_size","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","committees","consensus_genesis_praos_active_slot_coeff","consensus_leader_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","epoch_stability_depth","eq","fees_go_to","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_config_params","init","init","init","init","into","into","into","into","into_config_params","kes_update_speed","linear_fees","new","param_missing_error","proposal_expiration","provide","reward_constraints","reward_parameters","serialize","serialize","serialize","slot_duration","slots_per_epoch","source","to_owned","to_string","total_reward_supply","treasury","treasury_parameters","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_max_expiry_epochs","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","name","name","Block0MessageUnexpected","Cert","Destination","Error","Fund","InitUtxoHasInput","Initial","InitialToken","InitialUTxO","LegacyFund","LegacyUTxO","Token","TokenIdentifierMintingPolicyHashMismatch","TokenInvalidAddressType","address","address","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","empty_auth_tx","eq","eq","eq","eq","eq","extend_inits_with_legacy_utxo","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","pack_certificate_in_empty_tx_fragment","pack_legacy_utxo_in_message","pack_tokens_in_mint_token_fragments","pack_utxo_in_message","policy","provide","serialize","serialize","serialize","serialize","serialize","to","to_output","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","token_id","try_extend_inits_with_tx","try_from","try_from","try_from","try_from","try_from","try_from","try_initial_fragment_from_message","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","vzip","vzip","vzip","vzip","vzip","vzip","Incompatible","Invalid","KesUpdateSpeed","KesUpdateSpeedVisitor","MAXIMUM","MINIMUM","TryFromKesUpdateSpeedError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","expecting","fmt","fmt","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","partial_cmp","provide","serialize","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visit_str","visit_u64","vzip","vzip","vzip","speed","ConsensusLeaderId","ConsensusLeaderIdVisitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","expecting","fmt","fmt","from","from","from","from","from","hash","init","init","into","into","serialize","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","visit_str","vzip","vzip","Incompatible","Invalid","MAXIMUM","MINIMUM","NumberOfSlotsPerEpoch","NumberOfSlotsPerEpochVisitor","TryFromNumberOfSlotsPerEpochError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","expecting","fmt","fmt","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","partial_cmp","provide","serialize","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visit_u64","vzip","vzip","vzip","slots","ProposalExpiration","borrow","borrow_mut","clone","clone_into","cmp","default","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","from","hash","init","into","partial_cmp","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","PoolParticipationCapping","RewardConstraints","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","init","init","into","into","is_none","max","min","pool_participation_capping","reward_drawing_limit_max","serialize","serialize","set_pool_participation_capping","set_reward_drawing_limit_max","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Incompatible","Invalid","MAXIMUM","MINIMUM","SlotDuration","SlotDurationVisitor","TryFromSlotDurationError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","expecting","fmt","fmt","fmt","fmt","fmt","from","from","from","hash","init","init","init","into","into","into","new","partial_cmp","provide","serialize","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visit_str","visit_u64","vzip","vzip","vzip","duration","Block0DateDef","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","from","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","BlockDate","BlockDateStructural","StringOrStruct","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","epoch","epoch","eq","expecting","fmt","fmt","fmt","from","from","from","from","from_str","from_str","hash","init","init","init","into","into","into","new","next","next_epoch","partial_cmp","serialize","serialize","shift_epoch","shift_slot","slot","slot_id","time_era","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visit_map","visit_str","vzip","vzip","vzip","Bech32","CERTIFICATE_HRP","Certificate","CertificateFromBech32Error","CertificateFromStrError","CertificateToBech32Error","InvalidBase32","InvalidBech32","InvalidCertificate","InvalidCertificate","InvalidHrp","Io","SIGNED_CERTIFICATE_HRP","SignedCertificate","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_from_slice","deserialize_from_slice","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bech32","from_bech32","from_str","from_str","init","init","init","init","init","into","into","into","into","into","provide","provide","provide","serialize","serialize","serialize","serialize","source","source","source","strip_auth","to_bech32m","to_bech32m","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","actual","expected","COMMITTEE_ID_SIZE","CommitteeId","CommitteeIdDef","arbitrary","as_ref","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone","clone_into","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize_from_slice","drop","drop","encode_hex","encode_hex_upper","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from_hex","from_hex","from_str","from_str","get_bytes","hash","hash","init","init","into","into","partial_cmp","public_key","serialize","serialize","serialize","serialized_size","to_hex","to_hex","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","Bft","Bootstrap","Connection","Cors","CorsOrigin","GenesisPraos","JRpc","LayersConfig","Log","LogEntry","LogMaxEntries","LogOutput","Mempool","NodeConfig","NodeId","NodeSecret","P2p","PersistentLog","Policy","PoolMaxEntries","PreferredListConfig","Rest","Tls","TopicsOfInterest","TrustedPeer","log","mempool","node","secret","File","Log","LogEntry","LogOutput","Stderr","Stdout","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","file_path","fmt","fmt","fmt","format","from","from","from","init","init","init","into","into","into","level","output","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","LogMaxEntries","Mempool","PersistentLog","PoolMaxEntries","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","dir","drop","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","init","init","init","init","into","into","into","into","log_max_entries","partial_cmp","partial_cmp","persistent_log","pool_max_entries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Bootstrap","Connection","Cors","CorsOrigin","CorsOriginVisitor","DEFAULT_PREFERRED_VIEW_MAX","HeaderName","HeaderNameVisitor","HttpMethod","JRpc","LayersConfig","NodeConfig","NodeId","P2p","Policy","PreferredListConfig","PreferredViewMax","Rest","Tls","TopicsOfInterest","TrustedPeer","Visitor","address","allow_private_addresses","allowed_headers","allowed_methods","allowed_origins","as_ref","blocks","bootstrap","bootstrap_from_trusted_peers","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_file","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","connection","cors","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dns_server_address","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_listen_addr","gossip_interval","hash","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","jrpc","layers","listen","listen","listen","log","max_age_secs","max_bootstrap_attempts","max_connections","max_inbound_connections","mempool","messages","network_stuck_check","node_key_file","p2p","partial_cmp","peers","policy","preferred_list","priv_key_file","public_address","quarantine_duration","quarantine_whitelist","rest","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","skip_bootstrap","storage","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topics_of_interest","trusted_peers","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view_max","visit_str","visit_str","visit_str","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whitelist","Bft","GenesisPraos","NodeSecret","bft","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","genesis","init","init","init","into","into","into","node_id","serialize","serialize","serialize","sig_key","signing_key","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vrf_key","vzip","vzip","vzip","ActiveSlotCoefficient","AddBftLeader","AddCommitteeId","Block0Date","BlockContentMaxSize","ConfigParam","ConfigParams","ConsensusGenesisPraosActiveSlotsCoeff","ConsensusVersion","Discrimination","EpochStabilityDepth","FeesGoTo","FeesInTreasury","FromConfigParamError","KesUpdateSpeed","KesUpdateSpeed","LinearFee","NumberOfSlotsPerEpoch","PerCertificateFees","PerVoteCertificateFees","PoolRewardParticipationCapping","ProposalExpiration","RemoveBftLeader","RemoveCommitteeId","RewardLimitByAbsoluteStake","RewardLimitNone","RewardParams","RewardPot","SlotDuration","SlotDuration","SlotsPerEpoch","TransactionMaxExpiryEpochs","TreasuryAdd","TreasuryParams","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config_params_documented_example","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","into","into","into","new","provide","serialize","serialize","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","EvmTransaction","EvmTransactionFromStrError","InvalidEvmTransaction","InvalidHex","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","init","init","into","into","provide","serialize","source","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FragmentDef","borrow","borrow_mut","deref","deref_mut","deserialize","deserialize","deserialize_as","drop","fmt","from","from","init","into","serialize","serialize","serialize_as","serialize_fragment","try_from","try_into","type_id","vzip","FragmentLog","FragmentOrigin","FragmentStatus","InABlock","JRpc","Network","Pending","Rejected","Rest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fragment_id","fragment_id","from","from","from","hash","hash","hash","init","init","init","into","into","into","is_in_a_block","is_in_a_block","is_pending","is_pending","is_rejected","is_rejected","last_updated_at","last_updated_at","modify","new","partial_cmp","partial_cmp","partial_cmp","received_at","received_at","received_from","received_from","serialize","serialize","serialize","status","status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","addr","block","date","reason","DeserializeError","FileFragments","FileFragmentsIterator","PersistentFragmentLog","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cause","counter","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize_from_slice","drop","drop","drop","drop","entry","file","file_path","file_path","fmt","fmt","fmt","fragment","from","from","from","from","from_path","init","init","init","init","into","into","into","into","into_iter","into_iter","list_persistent_fragment_log_files_from_folder_path","load_persistent_fragments_logs_from_folder_path","next","par_bridge","provide","read_persistent_fragment_logs_from_file_path","reader","reader","serialize","serialize","time","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","FragmentsBatch","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fail_fast","fmt","fragments","from","init","into","serialize","try_from","try_into","type_id","vzip","FragmentAlreadyInLog","FragmentInvalid","FragmentRejectionReason","FragmentsProcessingSummary","PoolOverflow","PreviousFragmentInvalid","RejectedFragmentInfo","accepted","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fragment_ids","from","from","from","id","init","init","init","into","into","into","is_error","is_error","reason","rejected","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Block","LeadershipLog","LeadershipLogId","LeadershipLogStatus","Pending","Rejected","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","created_at_time","created_at_time","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","finished_at_time","finished_at_time","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","leadership_log_id","mark_finished","mark_wake","new","partial_cmp","partial_cmp","scheduled_at_date","scheduled_at_date","scheduled_at_time","scheduled_at_time","serialize","serialize","set_status","status","status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wake_at_time","wake_at_time","block","chain_length","parent","reason","LinearFeeDef","PerCertificateFeeDef","PerVoteCertificateFeeDef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","clone","clone","clone","clone_into","clone_into","clone_into","coefficient","constant","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","per_certificate_fee_is_zero","per_certificate_fees","per_vote_certificate_fee_is_zero","per_vote_certificate_fees","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MintToken","MintingPolicy","TokenIdentifier","TokenName","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","init","init","init","init","into","into","into","into","name","partial_cmp","policy","serialize","serialize","serialize","to","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","OldAddress","as_ref","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","from","from_str","from_str","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","PeerRecord","PeerStats","Subscription","addr","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","established_at","fmt","fmt","fmt","from","from","from","id","init","init","init","interest","into","into","into","last_block_received","last_fragment_received","last_gossip_received","last_update","quarantined","serialize","serialize","serialize","subscriptions","to_owned","to_owned","to_owned","topic","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","InvalidInt","MissingDenominator","MissingNumerator","ParseRatioError","Ratio","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","fmt","fmt","fmt","fmt","from","from","from","from","from_str","from_str","init","init","into","into","new","new_checked","provide","serialize","source","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Halving","Linear","RewardParams","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","from","from","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","constant","constant","epoch_rate","epoch_rate","epoch_start","epoch_start","ratio","ratio","EpochRewardsInfo","accounts","accounts","borrow","borrow_mut","deref","deref_mut","deserialize","drawn","drop","epoch","epoch","eq","fees","fmt","from","from","init","into","serialize","stake_pools","stake_pools","treasury","try_from","try_into","type_id","vzip","deserialize","serialize","deserialize","serialize","deserialize","serialize","deserialize","serialize","deserialize","serialize","ByStakeAbsolute","CompoundingTypeDef","DiscriminationDef","Halvening","LimitDef","Linear","None","ParametersDef","Production","RatioDef","SettingsDto","TaxTypeDef","TaxTypeSerde","Test","block0_hash","block0_time","block_content_max_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","compounding_ratio","compounding_type","consensus_version","curr_slot_start_time","denominator","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","epoch_rate","epoch_stability_depth","epoch_start","eq","eq","eq","eq","eq","fees","fixed","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","initial_value","into","into","into","into","into","into","into","into","max_limit","numerator","pool_participation_capping","ratio","reward_drawing_limit_max","reward_params","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","slot_duration","slots_per_epoch","to_owned","to_owned","to_owned","to_owned","to_owned","treasury_tax","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_max_expiry_epochs","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Stake","StakeDef","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","fmt","fmt","from","from","from","from","from_str","from_str","init","init","into","into","partial_cmp","serialize","serialize","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StakeDistribution","StakeDistributionDto","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","dangling","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","epoch","eq","eq","fmt","fmt","from","from","init","init","into","into","pools","serialize","serialize","stake","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unassigned","vzip","vzip","Rewards","StakePoolStats","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","epoch","eq","eq","fmt","fmt","from","from","init","init","into","into","kes_public_key","owners","rewards","serialize","serialize","tax","to_owned","to_owned","total_stake","try_from","try_from","try_into","try_into","type_id","type_id","value_for_stakers","value_taxed","vrf_public_key","vzip","vzip","Bootstrapping","NodeState","NodeStats","NodeStatsDto","PreparingBlock0","PreparingStorage","Running","StartingRestServer","StartingWorkers","block_content_size_avg","block_recv_cnt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","last_block_content_size","last_block_date","last_block_fees","last_block_hash","last_block_height","last_block_sum","last_block_time","last_block_tx","last_received_block_time","mempool_tx_count","mempool_usage_ratio","peer_available_cnt","peer_connected_cnt","peer_quarantined_cnt","peer_total_cnt","serialize","serialize","serialize","state","stats","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx_recv_cnt","tx_rejected_cnt","type_id","type_id","type_id","uptime","version","votes_cast","vzip","vzip","vzip","TaxType","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fixed","fmt","from","from","init","into","max_limit","ratio","serialize","to_owned","try_from","try_into","type_id","vzip","EpochDef","SlotDef","TimeEraDef","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","epoch_start","eq","eq","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","partial_cmp","partial_cmp","serialize","serialize","serialize","slot_start","slots_per_epoch","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Account","INPUT_PTR_SIZE","TransactionInput","TransactionInputType","Utxo","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","init","init","input","into","into","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","value","vzip","vzip","TransactionOutput","address","address","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","from","from","init","into","new","serialize","to_owned","try_from","try_into","type_id","value","value","vzip","Bech32","HRP","Invalid","InvalidHrp","TransactionWitness","TransactionWitnessFromStrError","TransactionWitnessVisitor","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","expecting","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bech32_str","from_str","from_str","init","init","init","into","into","into","provide","serialize","source","to_bech32_str","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visit_bytes","visit_str","vzip","vzip","vzip","expected","got","UpdateProposalDef","UpdateProposalStateDef","borrow","borrow","borrow_mut","borrow_mut","config_params","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","init","init","into","into","proposal","proposal_date","proposer_id","serialize","serialize","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","votes","vzip","vzip","UTxOInfo","UTxOOutputInfo","address","address","address","associated_fund","associated_fund","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","fmt","fmt","from","from","from","index_in_transaction","index_in_transaction","init","init","into","into","into_utxo_info","new","serialize","serialize","to_owned","to_owned","transaction_id","transaction_id","try_from","try_from","try_into","try_into","type_id","type_id","value","vzip","vzip","Value","ValueDef","as_ref","borrow","borrow","borrow_mut","borrow_mut","checked_add","clone","clone_into","cmp","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","fmt","fmt","from","from","from","from","from_str","from_str","hash","init","init","into","into","partial_cmp","saturating_add","serialize","serialize","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccountVotes","Bech32Visitor","BytesVisitor","Decrypted","Encrypted","EncryptedTally","NoOp","NoOp","OffChain","Parameters","ParametersGovernanceActionDef","PayloadTypeDef","Private","Private","Private","PrivateTallyState","Public","Public","Public","RewardAdd","SerdeMemberPublicKey","Tally","TallyResult","TransferToRewards","Treasury","TreasuryGovernanceActionDef","VoteActionDef","VotePayload","VotePlan","VotePlanId","VotePlanStatus","VotePrivacy","VotePrivacyFromStrError","VoteProposalDef","VoteProposalStatus","action","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","choice","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","committee_end","committee_end","committee_member_keys","committee_member_public_keys","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","expecting","expecting","external_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","id","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_bytes","merge","options","options","options","partial_cmp","payload","payload_type","proposal_id","proposals","proposals","provide","results","results","serde_base64_bytes","serde_choices","serde_committee_member_public_keys","serde_external_proposal_id","serde_proposals","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tally","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_bytes","visit_str","visit_string","vote_end","vote_end","vote_plan_id","vote_start","vote_start","votes","votes_cast","voting_token","voting_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","value","encrypted_tally","result","result","state","value","action","action","choice","encrypted_vote","proof","ByteArrayVisitor","ByteStringVisitor","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","expecting","expecting","fmt","fmt","from","from","init","init","into","into","serialize","try_from","try_from","try_into","try_into","type_id","type_id","visit_bytes","visit_str","visit_string","vzip","vzip","OptionsVisitor","borrow","borrow_mut","deref","deref_mut","deserialize","drop","expecting","fmt","from","init","into","serialize","try_from","try_into","type_id","visit_u64","vzip","PublicKeysSeqVisitor","borrow","borrow_mut","deref","deref_mut","deserialize","drop","expecting","fmt","from","init","into","serialize","try_from","try_into","type_id","visit_seq","vzip","BinaryVisitor","StringVisitor","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","expecting","expecting","fmt","fmt","from","from","init","init","into","into","serialize","try_from","try_from","try_into","try_into","type_id","type_id","visit_bytes","visit_str","vzip","vzip","ProposalInternal","ProposalsList","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","from","from","init","init","into","into","serialize","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Error","FailedToResolve","InvalidMultiaddr","NoIp4","NoIp6","NotFound","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","provide","resolve_dns","source","to_string","to_tcp_socket_addr","try_from","try_into","type_id","vzip","Duration","DurationVisitor","LocalDateTime","LocalDateTimeVisitor","MAX","SecondsSinceUnixEpoch","SecondsSinceUnixEpochVisitor","SystemTime","SystemTimeVisitor","as_micro","as_millis","as_nanos","as_ref","as_ref","as_ref","as_secs","as_secs_f64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_sub","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","duration_since","duration_since_epoch","eq","eq","eq","eq","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_millis","from_secs","from_secs_since_epoch","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","new","now","now","now","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_secs","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_str","visit_str","visit_str","visit_u64","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"jormungandr_lib"],[4,"jormungandr_lib::crypto"],[8,"jormungandr_lib::crypto::account"],[95,"jormungandr_lib::crypto::account::SigningKeyParseError"],[96,"jormungandr_lib::crypto::hash"],[136,"jormungandr_lib::crypto::key"],[252,"jormungandr_lib::crypto::serde"],[336,"jormungandr_lib::interfaces"],[883,"jormungandr_lib::interfaces::CertificateFromBech32Error"],[885,"jormungandr_lib::interfaces::FragmentOrigin"],[886,"jormungandr_lib::interfaces::FragmentStatus"],[889,"jormungandr_lib::interfaces::LeadershipLogStatus"],[893,"jormungandr_lib::interfaces::PrivateTallyState"],[895,"jormungandr_lib::interfaces::RewardParams"],[903,"jormungandr_lib::interfaces::Tally"],[905,"jormungandr_lib::interfaces::TryFromActiveSlotCoefficientError"],[906,"jormungandr_lib::interfaces::TryFromKesUpdateSpeedError"],[907,"jormungandr_lib::interfaces::TryFromNumberOfSlotsPerEpochError"],[908,"jormungandr_lib::interfaces::TryFromSlotDurationError"],[909,"jormungandr_lib::interfaces::VotePayload"],[912,"jormungandr_lib::interfaces::account_identifier"],[965,"jormungandr_lib::interfaces::account_state"],[1051,"jormungandr_lib::interfaces::address"],[1078,"jormungandr_lib::interfaces::block0_configuration"],[1165,"jormungandr_lib::interfaces::block0_configuration::active_slot_coefficient"],[1231,"jormungandr_lib::interfaces::block0_configuration::active_slot_coefficient::TryFromActiveSlotCoefficientError"],[1232,"jormungandr_lib::interfaces::block0_configuration::block_content_max_size"],[1259,"jormungandr_lib::interfaces::block0_configuration::default_values"],[1274,"jormungandr_lib::interfaces::block0_configuration::epoch_stability_depth"],[1301,"jormungandr_lib::interfaces::block0_configuration::fees_go_to"],[1365,"jormungandr_lib::interfaces::block0_configuration::initial_config"],[1475,"jormungandr_lib::interfaces::block0_configuration::initial_config::FromConfigParamsError"],[1477,"jormungandr_lib::interfaces::block0_configuration::initial_fragment"],[1621,"jormungandr_lib::interfaces::block0_configuration::kes_update_speed"],[1687,"jormungandr_lib::interfaces::block0_configuration::kes_update_speed::TryFromKesUpdateSpeedError"],[1688,"jormungandr_lib::interfaces::block0_configuration::leader_id"],[1728,"jormungandr_lib::interfaces::block0_configuration::number_of_slots_per_epoch"],[1794,"jormungandr_lib::interfaces::block0_configuration::number_of_slots_per_epoch::TryFromNumberOfSlotsPerEpochError"],[1795,"jormungandr_lib::interfaces::block0_configuration::proposal_expiration"],[1822,"jormungandr_lib::interfaces::block0_configuration::reward_constraint"],[1870,"jormungandr_lib::interfaces::block0_configuration::slots_duration"],[1937,"jormungandr_lib::interfaces::block0_configuration::slots_duration::TryFromSlotDurationError"],[1938,"jormungandr_lib::interfaces::block0_date"],[1958,"jormungandr_lib::interfaces::blockdate"],[2029,"jormungandr_lib::interfaces::certificate"],[2154,"jormungandr_lib::interfaces::certificate::CertificateFromBech32Error"],[2156,"jormungandr_lib::interfaces::committee"],[2227,"jormungandr_lib::interfaces::config"],[2256,"jormungandr_lib::interfaces::config::log"],[2320,"jormungandr_lib::interfaces::config::mempool"],[2413,"jormungandr_lib::interfaces::config::node"],[2849,"jormungandr_lib::interfaces::config::secret"],[2913,"jormungandr_lib::interfaces::config_params"],[3010,"jormungandr_lib::interfaces::evm_transaction"],[3057,"jormungandr_lib::interfaces::fragment"],[3079,"jormungandr_lib::interfaces::fragment_log"],[3172,"jormungandr_lib::interfaces::fragment_log::FragmentOrigin"],[3173,"jormungandr_lib::interfaces::fragment_log::FragmentStatus"],[3176,"jormungandr_lib::interfaces::fragment_log_persistent"],[3256,"jormungandr_lib::interfaces::fragments_batch"],[3274,"jormungandr_lib::interfaces::fragments_processing_summary"],[3345,"jormungandr_lib::interfaces::leadership_log"],[3428,"jormungandr_lib::interfaces::leadership_log::LeadershipLogStatus"],[3432,"jormungandr_lib::interfaces::linear_fee"],[3504,"jormungandr_lib::interfaces::mint_token"],[3594,"jormungandr_lib::interfaces::old_address"],[3620,"jormungandr_lib::interfaces::peer_stats"],[3692,"jormungandr_lib::interfaces::ratio"],[3745,"jormungandr_lib::interfaces::reward_parameters"],[3768,"jormungandr_lib::interfaces::reward_parameters::RewardParams"],[3776,"jormungandr_lib::interfaces::rewards_info"],[3803,"jormungandr_lib::interfaces::serde_base64_bytes"],[3805,"jormungandr_lib::interfaces::serde_choices"],[3807,"jormungandr_lib::interfaces::serde_committee_member_public_keys"],[3809,"jormungandr_lib::interfaces::serde_external_proposal_id"],[3811,"jormungandr_lib::interfaces::serde_proposals"],[3813,"jormungandr_lib::interfaces::settings"],[3989,"jormungandr_lib::interfaces::stake"],[4033,"jormungandr_lib::interfaces::stake_distribution"],[4078,"jormungandr_lib::interfaces::stake_pool_stats"],[4127,"jormungandr_lib::interfaces::stats"],[4217,"jormungandr_lib::interfaces::tax_type"],[4241,"jormungandr_lib::interfaces::time_era"],[4307,"jormungandr_lib::interfaces::transaction_input"],[4353,"jormungandr_lib::interfaces::transaction_output"],[4379,"jormungandr_lib::interfaces::transaction_witness"],[4448,"jormungandr_lib::interfaces::transaction_witness::TransactionWitnessFromStrError"],[4450,"jormungandr_lib::interfaces::updates"],[4489,"jormungandr_lib::interfaces::utxo_info"],[4542,"jormungandr_lib::interfaces::value"],[4589,"jormungandr_lib::interfaces::vote"],[5010,"jormungandr_lib::interfaces::vote::ParametersGovernanceActionDef"],[5011,"jormungandr_lib::interfaces::vote::PrivateTallyState"],[5013,"jormungandr_lib::interfaces::vote::Tally"],[5015,"jormungandr_lib::interfaces::vote::TreasuryGovernanceActionDef"],[5016,"jormungandr_lib::interfaces::vote::VoteActionDef"],[5018,"jormungandr_lib::interfaces::vote::VotePayload"],[5021,"jormungandr_lib::interfaces::vote::serde_base64_bytes"],[5056,"jormungandr_lib::interfaces::vote::serde_choices"],[5074,"jormungandr_lib::interfaces::vote::serde_committee_member_public_keys"],[5092,"jormungandr_lib::interfaces::vote::serde_external_proposal_id"],[5126,"jormungandr_lib::interfaces::vote::serde_proposals"],[5157,"jormungandr_lib::multiaddr"],[5182,"jormungandr_lib::time"]],"d":["This module provides wrapper around the different …","","","Time and related data structures","Account Signing Key and Identifier","Hash interface for all that is a hash","cryptographic keys and associated interfaces","","Account identifier, used to identify an account. …","","","account Singing key. Used to sign transaction. Any owner …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","generate a new <em>Account</em> <code>SigningKey</code>","generate a new <em>Account</em> <code>SigningKey</code>","","get the identifier associated to this key.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","get the address associated to this account identifier","","","","retrieve the underlying account identifer as used in the …","","","","","","","","","","","","","","","","","","wrapper around the Blake2b256 hash","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","a cryptographic identifier. Can be used to identify a …","A key pair of the given cryptographic algorithm","signature for the given cryptographic algorithm and …","A cryptographic signing key (or secret key). Can be used to","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","try to decode the given bech32 string into a valid signing …","try to decode the given bech32 string into a valid …","try to decode the given bech32 string into a valid …","try to decode the given hexadecimal string into a valid …","","","","generate a new signing key","generate a new key pair with the given Random Number …","","","get the identifier associated to this key.","retrieve the unique Identifier associated to this KeyPair","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","retrieve the SigningKey","create an account address.","encode the <code>SigningKey</code> into a bech32 string.","encode the <code>Identifier</code> into a bech32 string.","encode the <code>Signature</code> into a bech32 string.","create a group address.","encode the <code>Identifier</code> into an hexadecimal string","","","","","","construct a single address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An account identifier for the different kind of accounts …","represent the current state of an account in the ledger","","","","","","Address with the appropriate implementation for Serde API …","","hold the node’s bft secret setting","","","","","","","the block content max size","","","Initial blockchain configuration for block0","","Bootstrap contains meta data for initial startup","","","","","","","","","remove serde encoding for the CommitteeId","","","Miscellaneous network configuration","","","","","","","default active slot coefficient in milli <code>0.100</code>","the default value for block content max size","the default value for epoch stability depth","default KES Update speed (in seconds): 12hours","default number of slots per epoch","default proposal expiration in epochs","default slot duration in seconds","","","","","","","epoch stability depth","","","the settings for the fees to be redistributed to","","","","","","","","","the log associated to a given fragment","","identify the source of a fragment","This error is reserved for fragments that were rejected by …","status of the fragment within the blockchain or the pool","Submission of a batch of fragments to the node.","The summary of an attempt to add transactions to mempool …","","","the genesis praos setting","","","The fragment has been added in a block","","","","","","","","","","","","","","","","","","","","","This marks the fragment is coming from the JRpc interface …","","","","Jörmungandr provides multiple additional layers to the …","provides information regarding events in the leadership …","log identifier in the leadership log. Can be used to update","the status of a leadership log","","","","","","","","","","maximum active slot coefficient in milli <code>1.000</code>","maximum KES Update speed (in seconds): about one year","maximum number of slots per epoch","maximum slot duration in seconds (here is it max of u8: …","minimum active slot coefficient in milli <code>0.001</code>","minimum KES Update speed (in seconds): 1minute","minimum number of slots per epoch","minimum slot duration in seconds","","","","trace back the origin of a fragment to a given network …","","Identifier of a peer node.","","","","","","","","OldAddress with the appropriate implementation for Serde …","","","","","","","the fragment is yet to be processed","","","","","","Represents a persistent fragments log entry.","","policy module","","","","","","","","","","","","","","","","","Ratio in the blockchain.","","the fragment has been rejected and won’t be added in a …","","Information about a fragment rejected by the mempool. This …","","","","This marks the fragment is coming from the REST interface …","","","","","","","","the fees will be added to the epoch’s reward pot to then …","","","","","","","","","Stake in the blockchain, always printed as absolute …","","","","","","","","","","","","","","","","","","","","","","","","","a transaction witness","the pools don’t receive any rewards to add transactions …","","","Configuration item for a trusted peer.","","","","","","the Unspent Transaction Output information.","The UTxO data about output without its location in …","","","","Value in the blockchain, always printed as absolute …","","","","","","Serializable wrapper for the payload type enum.","","","","","","","","","","","The peer’s routable host address and TCP port as a …","","","","","Whether to allow non-public IP addresses in gossip","If none provided, the list is empty, and all preflight …","If none provided, the list is empty and all preflight …","If none provided, echos request origin","","","","","the type of consensus to utilise from the starting point …","","the number of seconds since UNIX Epoch","","","set the block content maximal size","","","","the initial configuration of the blockchain","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","the committee members for the voting management","","","","","","","","the active slot coefficient to determine the minimal stake …","the list of consensus leaders","","","Enables CORS if provided","","","","","","","","the address discrimination (test or production)","","","","","","","","","set the maximal depth from which a fork will no longer be …","","","","","","Fragments are processed in the sequential order. When this …","","","Fees go to settings, the default being <code>rewards</code>.","","","","","","","","full hex-encoded fragment body","","","","Fragments themselves.","","","","interval to start gossiping with new nodes, changing the …","Node identifier as a bech32-encoded ed25519 public key.","","","","","","the initial fragments of the blockchain:","","","","","","number of seconds between 2 required KES Key updates.","","","","","","","","","","","","","","","","","","","","the linear fee settings.","","","Listen address.","","","maximum number of entries in the fragment logs","","If none provided, CORS responses won’t be cached","","","","","","","","","","","","If no gossip has been received in the last interval, try …","","File with the secret key used to advertise and …","","","","","","","","","","","","","","","","","","path to the persistent log of all incoming fragments","","","maximum number of entries in the mempool","","","","","Path to server private key file, must be PKCS8 with single …","","","the proposal expiration settings. The default value is <code>100</code>.","","","","","The public address to which other peers may connect to","","","","","","","","","","","","","","","","","","","The reward settings for the reward policy. No reward …","","","","","","","","","","","","","","","the number of seconds between the creation of 2 slots. The …","","","number of slots in one given epoch. The default value is …","","","","","","","","","","","","","","","","","","the time this fragment was registered and accepted by the …","","Enables TLS and disables plain HTTP if provided","","","","","","Set the value of the reward pot. if omitted then the …","","","","","","Set the default value in the treasury. if omitted then the …","","set the treasure parameters, i.e. the first value the …","","the rendezvous points for the peer to connect to in order …","","set the maximum number of epochs a transaction can reside …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","contains addrs of nodes which we can accept fragments from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An account identifier for the different kind of accounts …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","represent the current state of an account in the ledger","","","","","","","","","","","","","","","","","The transaction counters for spending lanes. A counter in …","","retrieve the identifier to the stake pool this account is …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","the last rewards transfered to account","","","","","","","","","","","","","","the current tokens associated to this account","","","","","","","","","","","the current fund associated to this account","","","","","Address with the appropriate implementation for Serde API …","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","the initial configuration of the blockchain","","","","","","","this module defines all the different static values used …","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","the initial fragments of the blockchain:","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","maximal value for the active slot coefficient","minimal value for the active slot coefficient","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","the block content max size","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","default active slot coefficient in milli <code>0.100</code>","the default value for block content max size","the default value for epoch stability depth","default KES Update speed (in seconds): 12hours","default number of slots per epoch","default proposal expiration in epochs","default slot duration in seconds","maximum active slot coefficient in milli <code>1.000</code>","maximum KES Update speed (in seconds): about one year","maximum number of slots per epoch","maximum slot duration in seconds (here is it max of u8: …","minimum active slot coefficient in milli <code>0.001</code>","minimum KES Update speed (in seconds): 1minute","minimum number of slots per epoch","minimum slot duration in seconds","epoch stability depth","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","the settings for the fees to be redistributed to","","the fees will be added to the epoch’s reward pot to then …","the pools don’t receive any rewards to add transactions …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Initial blockchain configuration for block0","","","","","","","","","","","","","","the type of consensus to utilise from the starting point …","the number of seconds since UNIX Epoch","set the block content maximal size","","","","","","","","","","","the committee members for the voting management","the active slot coefficient to determine the minimal stake …","the list of consensus leaders","","","","","","","","","","","","the address discrimination (test or production)","","","","","set the maximal depth from which a fork will no longer be …","","Fees go to settings, the default being <code>rewards</code>.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","number of seconds between 2 required KES Key updates.","the linear fee settings.","","","the proposal expiration settings. The default value is <code>100</code>.","","","The reward settings for the reward policy. No reward …","","","","the number of seconds between the creation of 2 slots. The …","number of slots in one given epoch. The default value is …","","","","Set the value of the reward pot. if omitted then the …","Set the default value in the treasury. if omitted then the …","set the treasure parameters, i.e. the first value the …","","","","","","","","","","set the maximum number of epochs a transaction can reside …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","maximum value for the KES Update Speed","minimal value for the KES Update Speed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create a new KesUpdateSpeed value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","maximal value for the number of slots per epoch","minimal value for the number of slots per epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create a new <code>NumberOfSlotsPerEpoch</code> value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","maximum value for the slot duration","minimal value for the slot duration","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create a new SlotDuration value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","committee identifier","remove serde encoding for the CommitteeId","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","read the identifier from the hexadecimal string","read the identifier from the hexadecimal string","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","returns the identifier encoded in hexadecimal string","returns the identifier encoded in hexadecimal string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","maximum number of entries in the fragment logs","","","path to the persistent log of all incoming fragments","maximum number of entries in the mempool","","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap contains meta data for initial startup","Miscellaneous network configuration","","","","","","","","","Jörmungandr provides multiple additional layers to the …","","Identifier of a peer node.","","policy module","","","","","","Configuration item for a trusted peer.","","The peer’s routable host address and TCP port as a …","Whether to allow non-public IP addresses in gossip","If none provided, the list is empty, and all preflight …","If none provided, the list is empty and all preflight …","If none provided, echos request origin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables CORS if provided","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","interval to start gossiping with new nodes, changing the …","","Node identifier as a bech32-encoded ed25519 public key.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Listen address.","","If none provided, CORS responses won’t be cached","","","","","","If no gossip has been received in the last interval, try …","File with the secret key used to advertise and …","","","","","","Path to server private key file, must be PKCS8 with single …","The public address to which other peers may connect to","","","","","","","","","","","","","","","","","","","","","","","Enables TLS and disables plain HTTP if provided","","","","","","","","","","","","","","","","","","","the rendezvous points for the peer to connect to in order …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","contains addrs of nodes which we can accept fragments from","hold the node’s bft secret setting","the genesis praos setting","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","the log associated to a given fragment","identify the source of a fragment","status of the fragment within the blockchain or the pool","The fragment has been added in a block","This marks the fragment is coming from the JRpc interface …","trace back the origin of a fragment to a given network …","the fragment is yet to be processed","the fragment has been rejected and won’t be added in a …","This marks the fragment is coming from the REST interface …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Set the new status","create a new FragmentLog with the given values","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents a persistent fragments log entry.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","full hex-encoded fragment body","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","the time this fragment was registered and accepted by the …","","","","","","","","","","","","","","","","","","Submission of a batch of fragments to the node.","","","","","","","Fragments are processed in the sequential order. When this …","","Fragments themselves.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","This error is reserved for fragments that were rejected by …","The summary of an attempt to add transactions to mempool …","","","Information about a fragment rejected by the mempool. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Should this rejection be treated as an error","Whether any of rejected entries should be treated as an …","","","","","","","","","","","","","","","","","","","","","","provides information regarding events in the leadership …","log identifier in the leadership log. Can be used to update","the status of a leadership log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","retrieve a unique identifier to this log","make a leadership event as finished.","make a leadership event as triggered.","","","","","","","","","","set the leadership log status.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","OldAddress with the appropriate implementation for Serde …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ratio in the blockchain.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Stake in the blockchain, always printed as absolute …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","get the address component of the <code>TransactionOutput</code>","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","create a new Transaction output from the given values","","","","","","get the value component of the <code>TransactionOutput</code>","","","","","","","a transaction witness","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","the Unspent Transaction Output information.","The UTxO data about output without its location in …","the address to identify who can spend the UTxO. This is …","","","the associated funds in this UTxO. This will be used in a …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","the output index, will be needed as an input in a new …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","the Transaction identifier (its hash) that will be used to …","","","","","","","","","","","Value in the blockchain, always printed as absolute …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializable wrapper for the payload type enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Checks if the multiaddr is valid for contacting a p2p peer …","","","Extracts the TCP socket address if the multiaddr starts …","","","","","Length of time between 2 events.","","local date and time. While the <code>SystemTime</code> will give us a …","","maximum authorized Time in seconds since unix epoch","time in seconds since [UNIX Epoch]","","time in seconds and nanoseconds since UNIX Epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","get the current time in seconds since UNIX Epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,4],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[3,3],[[]],[[]],[[1,1],5],[6],[6],[6],[6],[6],[6],[7,[[8,[1]]]],[7,[[8,[3]]]],[6],[6],[6],[[1,1],9],[[1,10],11],[[1,10],11],[[3,10],11],[[12,10],11],[[12,10],11],[[]],[2,1],[13,1],[[[15,[14]]],1],[[]],[[[17,[16]]],3],[[[17,[18]]],3],[[]],[19,12],[20,12],[21,[[8,[1,20]]]],[21,[[8,[3,12]]]],[21,[[8,[1,22]]]],[21,8],[21,[[8,[1]]]],[[[0,[23,24]]],3],[[[0,[23,24]]],3],[1],[3,1],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[1,1],[[25,[5]]]],[26],[[1,27],8],[[3,27],8],[12,[[25,[28]]]],[[1,29],30],[1,31],[3,31],[1,31],[1,13],[[]],[[]],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,[33,34],[[]],[[]],[33,33],[[]],[[33,33],5],[6],[6],[7,[[8,[33]]]],[7,[[8,[35]]]],[6],[[33,33],9],[[33,10],11],[[33,10],11],[34,33],[35,33],[[],33],[[[36,[34]]],33],[[]],[21,[[8,[33,37]]]],[21,[[8,[33]]]],[21,8],[33],0,[[],6],[[]],[33,[[38,[34]]]],[33,[[36,[34]]]],[33,35],[[33,33],[[25,[5]]]],[[33,27],8],[[35,27],8],[33,31],[[]],[[],31],[[],8],[[],8],[[],32],[[]],0,0,0,0,[[[40,[39]]],17],[[[15,[41]]],42],[[[44,[43]]],45],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[40,[39]]],[[40,[39]]]],[[[46,[39]]],[[46,[39]]]],[[[15,[41]]],[[15,[41]]]],[[[44,[43]]],[[44,[43]]]],[[]],[[]],[[]],[[]],[[[15,[41]],[15,[41]]],5],[[[44,[43]]],[[44,[43]]]],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[[40,[39]]]]]],[7,[[8,[[15,[41]]]]]],[7,[[8,[[44,[43]]]]]],[6],[6],[6],[6],[[[15,[41]],[15,[41]]],9],[[[44,[43]],44],9],[[[40,[39]],10],11],[[[46,[39]],10],11],[[[15,[41]],10],11],[[[15,[41]],10],11],[[[44,[43]],10],11],[[[44,[43]],10],11],[[[17,[39]]],[[40,[39]]]],[[]],[[]],[[[42,[41]]],[[15,[41]]]],[[]],[[]],[[[45,[43]]],[[44,[43]]]],[21,[[8,[[40,[39]],20]]]],[21,[[8,[[15,[41]],20]]]],[21,[[8,[[44,[43]],20]]]],[21,[[8,[[15,[41]],22]]]],[21,[[8,[[44,[43]],47]]]],[21,[[8,[[15,[41]]]]]],[21,[[8,[[44,[43]]]]]],[[[0,[23,24]]],[[40,[39]]]],[[[0,[23,24]]],[[46,[39]]]],[[[15,[41]]]],[[[44,[43]]]],[[[40,[39]]],15],[[[46,[39]]],15],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[[15,[41]]],[[42,[41]]]],[[[40,[39]]],[[17,[39]]]],[[[15,[41]],[15,[41]]],[[25,[5]]]],[[[46,[39]]],42],[[[40,[39]],27],8],[[[15,[41]],27],8],[[[44,[43]],27],8],[[[40,[48]]],[[44,[49]]]],[[[46,[39]]],[[40,[39]]]],[[[15,[16]],29],30],[[[40,[39]]],31],[[[15,[41]]],31],[[[44,[43]]],31],[[[15,[16]],29,[42,[16]]],30],[[[15,[41]]],31],[[[44,[43]]],31],[[]],[[]],[[]],[[]],[[[15,[16]],29],30],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[],32],[[[44,[49,43]],15],50],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[20,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[34]]]],[7,[[8,[[42,[41]]]]]],[7,[[8,[[17,[39]]]]]],[7,[[8,[[45,[43]]]]]],[6],[6],[6],[6],[[52,10],11],[[[53,[39]],10],11],[[[54,[41]],10],11],[[[55,[43]],10],11],[10,[[8,[56]]]],[10,[[8,[56]]]],[10,[[8,[56]]]],[10,[[8,[56]]]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[],[[53,[39]]]],[[],[[54,[41]]]],[[],[[55,[43]]]],[[34,27],8],[[42,27],8],[[17,27],8],[[45,27],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[],32],[52,[[8,[51]]]],[[[53,[39]]],[[8,[51]]]],[[[54,[41]]],[[8,[51]]]],[[[55,[43]]],[[8,[51]]]],[[52,21],[[8,[51]]]],[[[53,[39]],21],[[8,[51]]]],[[[54,[41]],21],[[8,[51]]]],[[[55,[43]],21],[[8,[51]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],31],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[57,[[59,[58]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[58,[[59,[58]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[29,60],[[8,[61,62]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[63,64],[[]],[[]],[[]],[[]],[63,63],[[]],[6],[6],[6],[6],[7,[[8,[63]]]],[6],[6],[[63,63],9],[[63,10],11],[[63,10],11],[[65,10],11],[[65,10],11],[64,63],[[]],[66,63],[67,65],[[]],[68,[[8,[63,65]]]],[21,8],[21,[[8,[63]]]],[63],[[],6],[[],6],[[]],[[]],[[63,29,21],68],[26],[[63,27],8],[65,[[25,[28]]]],[[]],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[69,69],[70,70],[71,71],[[]],[[]],[[]],[[69,69],5],[[70,70],5],[71],0,[71,69],0,[6],[6],[6],[6],[6],[6],[7,[[8,[69]]]],[7,[[8,[70]]]],[7,[[8,[71]]]],[6],[6],[6],[70,72],0,[[69,69],9],[[70,70],9],[[71,71],9],[[69,10],11],[[70,10],11],[[71,10],11],[73,69],[[]],[74,70],[[]],[75,71],[[]],[75,71],[69],[70],[[],6],[[],6],[[],6],[[]],[[]],[[]],[71,70],0,[[69,69],[[25,[5]]]],[[70,70],[[25,[5]]]],[69,76],0,[70,77],0,[[69,27],8],[[70,27],8],[[71,27],8],[[]],[[]],[[]],[71,78],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[71,77],0,[[]],[[]],[[]],0,[68,30],[[]],[[]],[68,68],[[]],[6],[6],[7,[[8,[68]]]],[6],[[68,68],9],[[68,10],11],[[68,10],11],[30,68],[[]],[21,[[8,[68]]]],[21,8],[68],[[],6],[[]],[[68,27],8],[[]],[[],31],[[],8],[[],8],[[],32],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],31],0,0,[[]],[[]],[[]],[[]],[79,79],[[]],0,[6],[6],[6],[6],[7,[[8,[79]]]],[6],[6],0,[[79,79],9],0,[[79,10],11],[[80,10],11],[[80,10],11],[[]],[81,80],[[]],[62,80],[82,[[8,[79,80]]]],[[],6],[[],6],0,0,0,[[]],[[]],0,0,0,0,[26],0,[[79,27],8],0,[80,[[25,[28]]]],[79,82],[[]],[[],31],[[],8],[[],8],0,[[],8],[[],8],[[],32],[[],32],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[83,83],[[]],[[83,83],5],[[],83],[6],[6],[6],[6],[6],[6],[7,[[8,[83]]]],[6],[6],[6],[[83,83],9],[[84,10],11],[10,[[8,[56]]]],[[83,10],11],[[83,10],11],[[85,10],11],[[85,10],11],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[86,[[25,[83]]]],[[83,83],[[25,[5]]]],[26],[[83,27],8],[[]],[[],31],[[],31],[[],8],[87,[[8,[83]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[84,88],[[8,[51]]]],[[84,21],[[8,[51]]]],[[84,89],[[8,[51]]]],[[]],[[]],[[]],0,0,[[]],[[]],[90,90],[[]],[[90,90],5],[[],90],[6],[6],[7,[[8,[90]]]],[6],[[90,90],9],[[90,10],11],[[90,10],11],[91,90],[[]],[90],[[],6],[[]],[[90,90],[[25,[5]]]],[[90,27],8],[[]],[[],31],[[],8],[[],8],[[],32],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[92,92],[[]],[[92,92],5],[[],92],[6],[6],[7,[[8,[92]]]],[6],[[92,92],9],[[92,10],11],[[92,10],11],[93,92],[[]],[92],[[],6],[[]],[[92,92],[[25,[5]]]],[[92,27],8],[[]],[[],31],[[],8],[[],8],[[],32],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[94,94],[[]],[[94,94],5],[6],[6],[6],[6],[6],[6],[7,[[8,[94]]]],[6],[6],[6],[[94,94],9],[[94,10],11],[[94,10],11],[[95,10],11],[[95,10],11],[[96,10],11],[[96,10],11],[[]],[[]],[[]],[21,[[8,[94]]]],[21,8],[94],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[94,94],[[25,[5]]]],[26],[26],[[94,27],8],[[]],[[],31],[[],31],[[],31],[[],8],[87,[[8,[94]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[97,97],[[]],0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[97]]]],[7,[[8,[29]]]],[7,[[8,[98]]]],0,[6],[6],[6],[6],0,[[97,97],9],0,[[97,10],11],[[81,10],11],[[81,10],11],[[]],[99,81],[100,81],[96,81],[85,81],[101,81],[[]],[[]],[[]],[102,[[8,[97,81]]]],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[97,102],0,0,[[29,98,103],97],[21,81],0,[26],0,0,[[97,27],8],[[29,27],8],[[98,27],8],0,0,[81,[[25,[28]]]],[[]],[[],31],0,0,0,[[],8],[102,[[8,[97]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[104,104],[105,105],[106,106],[107,107],[[]],[[]],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[61]]]],[7,[[8,[104]]]],[7,[[8,[105]]]],[7,[[8,[106]]]],[7,[[8,[107]]]],[6],[6],[6],[6],[6],[6],[[],[[109,[108]]]],[[61,61],9],[[104,104],9],[[105,105],9],[[106,106],9],[[107,107],9],[110,61],[[61,10],11],[[104,10],11],[[105,10],11],[[62,10],11],[[62,10],11],[[106,10],11],[[107,10],11],[[]],[[]],[[]],[[]],[[]],[104,106],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[111,[[76,[60]]]],[[],[[76,[60]]]],[107,[[8,[[76,[60]],62]]]],[[],[[76,[60]]]],0,[26],[[61,27],8],[[104,27],8],[[105,27],8],[[106,27],8],[[107,27],8],0,[104,[[112,[30]]]],[[]],[[]],[[]],[[]],[[]],[[],31],0,[113,[[8,[61,62]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[29,60],[[8,[61,62]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[114,114],[[]],[[114,114],5],[[],114],[6],[6],[6],[6],[6],[6],[7,[[8,[114]]]],[6],[6],[6],[[114,114],9],[[115,10],11],[10,[[8,[56]]]],[[114,10],11],[[114,10],11],[[99,10],11],[[99,10],11],[[]],[[]],[[]],[114],[[],6],[[],6],[[],6],[[]],[[]],[[]],[93,[[25,[114]]]],[[114,114],[[25,[5]]]],[26],[[114,27],8],[[]],[[],31],[[],31],[[],8],[87,[[8,[114]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[115,21],[[8,[51]]]],[[115,89],[[8,[51]]]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[116,116],[[]],[6],[6],[6],[6],[7,[[8,[116]]]],[6],[6],[[116,116],9],[[117,10],11],[10,[[8,[56]]]],[[116,10],11],[[]],[[[42,[16]]],116],[[[15,[16]]],116],[118,116],[[]],[116],[[],6],[[],6],[[]],[[]],[[116,27],8],[[]],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[117,21],[[8,[51]]]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[119,119],[[]],[[119,119],5],[[],119],[6],[6],[6],[6],[6],[6],[7,[[8,[119]]]],[6],[6],[6],[[119,119],9],[[120,10],11],[10,[[8,[56]]]],[[119,10],11],[[119,10],11],[[100,10],11],[[100,10],11],[[]],[[]],[[]],[119],[[],6],[[],6],[[],6],[[]],[[]],[[]],[93,[[25,[119]]]],[[119,119],[[25,[5]]]],[26],[[119,27],8],[[]],[[],31],[[],31],[[],8],[93,[[8,[119]]]],[[],8],[87,[[8,[119]]]],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[120,89],[[8,[51]]]],[[]],[[]],[[]],0,0,[[]],[[]],[121,121],[[]],[[121,121],5],[[],121],[6],[6],[7,[[8,[121]]]],[6],[[121,121],9],[[121,10],11],[[121,10],11],[[]],[93,121],[121],[[],6],[[]],[[121,121],[[25,[5]]]],[[121,27],8],[[]],[[],31],[[],8],[[],8],[[],32],[[]],0,0,[[]],[[]],[[]],[[]],[122,122],[123,123],[[]],[[]],[[],123],[6],[6],[6],[6],[7,[[8,[122]]]],[7,[[8,[123]]]],[6],[6],[[122,122],9],[[123,123],9],[[122,10],11],[[123,10],11],[[]],[[]],[[],6],[[],6],[[]],[[]],[123,9],0,0,0,0,[[122,27],8],[[123,27],8],[[123,25]],[[123,[25,[124]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[125,125],[[]],[[125,125],5],[[],125],[6],[6],[6],[6],[6],[6],[7,[[8,[125]]]],[6],[6],[6],[[125,125],9],[[126,10],11],[10,[[8,[56]]]],[[125,10],11],[[125,10],11],[[101,10],11],[[101,10],11],[[]],[[]],[[]],[125],[[],6],[[],6],[[],6],[[]],[[]],[[]],[127,[[25,[125]]]],[[125,125],[[25,[5]]]],[26],[[125,27],8],[[]],[[],31],[[],31],[[],8],[127,[[8,[125]]]],[[],8],[87,[[8,[125]]]],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[126,21],[[8,[51]]]],[[126,89],[[8,[51]]]],[[]],[[]],[[]],0,0,[[]],[[]],[128,128],[[]],[6],[6],[7,[[8,[129]]]],[6],[[128,128],9],[[128,10],11],[[]],[[],6],[[]],[[129,27],8],[[]],[[],8],[[],8],[[],32],[[]],0,0,0,[130,131],[[]],[[]],[[]],[[]],[[]],[[]],[130,130],[[]],[[130,130],5],[6],[6],[6],[6],[6],[6],[7,[[8,[130]]]],[7,[[8,[131]]]],[6],[6],[6],[130,72],0,[[130,130],9],[[132,10],11],[10,[[8,[56]]]],[[130,10],11],[[130,10],11],[[]],[[]],[131,130],[[]],[21,[[8,[130]]]],[21,8],[130],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[72,133],130],[[130,134],130],[130,130],[[130,130],[[25,[5]]]],[[130,27],8],[[131,27],8],[[130,93],130],[[130,93,134],130],[130,133],0,[[130,93],134],[[]],[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[132,135],[[8,[130]]]],[[132,21],[[8,[130,51]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[136,136],[111,111],[[]],[[]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[136]]]],[7,[[8,[111]]]],[137,[[8,[136,138]]]],[137,[[8,[111,138]]]],[6],[6],[6],[6],[6],[[111,111],9],[[136,10],11],[[136,10],11],[[111,10],11],[[111,10],11],[[139,10],11],[[139,10],11],[[140,10],11],[[140,10],11],[[141,10],11],[[141,10],11],[142,136],[[]],[143,111],[[]],[19,139],[[]],[144,139],[138,140],[19,140],[[]],[140,141],[[]],[19,141],[21,[[8,[136,140]]]],[21,[[8,[111,140]]]],[21,[[8,[136]]]],[21,8],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[26],[26],[26],[[136,137],[[8,[144]]]],[[136,27],8],[[111,137],[[8,[144]]]],[[111,27],8],[139,[[25,[28]]]],[140,[[25,[28]]]],[141,[[25,[28]]]],[111,136],[136,[[8,[31,139]]]],[111,[[8,[31,139]]]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],145],[145],[[],6],[[]],[[]],[[]],[[]],[[],[[8,[[76,[146,147]]]]]],[148,148],[145,145],[[]],[[]],[[148,148],5],[6],[6],[6],[6],[7,[[8,[148]]]],[7,[[8,[145]]]],[137,[[8,[145,138]]]],[6],[6],[[],[[150,[149]]]],[[],[[150,[149]]]],[[148,148],9],[[145,145],9],[[148,10],11],[[145,10],[[8,[56]]]],[[145,10],[[8,[56]]]],[[],148],[145,148],[[]],[[[42,[16]]],145],[148,145],[[],145],[[]],[21,[[8,[148,151]]]],[21,[[8,[145,151]]]],[21,8],[21,[[8,[145]]]],[145],[148],[145],[[],6],[[],6],[[]],[[]],[[148,148],[[25,[5]]]],[145,[[42,[16]]]],[[145,27],8],[[148,27],8],[[145,137],[[8,[144]]]],[145,6],[148,31],[145,31],[[]],[[]],[[],31],[[],8],[[],8],[[],[[8,[145]]]],[[],8],[[],8],[[],32],[[],32],[[]],[[]],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[152,152],[153,153],[154,154],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[7,[[8,[152]]]],[7,[[8,[153]]]],[7,[[8,[154]]]],[6],[6],[6],[152,[[25,[57]]]],[[152,10],11],[[153,10],11],[[154,10],11],0,[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],0,0,[[152,27],8],[[153,27],8],[[154,27],8],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[155,155],[156,156],[157,157],[158,158],[[]],[[]],[[]],[[]],[[155,155],5],[[156,156],5],[[],155],[[],156],[[],158],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[155]]]],[7,[[8,[156]]]],[7,[[8,[157]]]],[7,[[8,[158]]]],0,[6],[6],[6],[6],[[155,155],9],[[156,156],9],[[155,10],11],[[156,10],11],[[157,10],11],[[158,10],11],[[]],[6,155],[[]],[6,156],[[]],[[]],[155],[156],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],0,[[155,155],[[25,[5]]]],[[156,156],[[25,[5]]]],0,0,[[155,27],8],[[156,27],8],[[157,27],8],[[158,27],8],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[159,21],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[160,160],[161,161],[162,162],[163,163],[159,159],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[172,172],5],0,0,[[],163],[[],159],[[],171],[[],172],[[],173],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[160]]]],[7,[[8,[161]]]],[7,[[8,[162]]]],[7,[[8,[163]]]],[7,[[8,[159]]]],[7,[[8,[164]]]],[7,[[8,[165]]]],[7,[[8,[166]]]],[7,[[8,[167]]]],[7,[[8,[168]]]],[7,[[8,[169]]]],[7,[[8,[170]]]],[7,[[8,[171]]]],[7,[[8,[172]]]],[7,[[8,[173]]]],[7,[[8,[174]]]],[7,[[8,[175]]]],0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[160,160],9],[[161,161],9],[[162,162],9],[[163,163],9],[[159,159],9],[[164,164],9],[[165,165],9],[[172,172],9],[[176,10],11],[[177,10],11],[[178,10],11],[10,[[8,[56]]]],[10,[[8,[56]]]],[10,[[8,[56]]]],[[160,10],11],[[161,10],11],[[162,10],11],[[163,10],11],[[159,10],11],[[164,10],11],[[165,10],11],[[166,10],11],[[167,10],11],[[168,10],11],[[169,10],11],[[170,10],11],[[171,10],11],[[172,10],11],[[173,10],11],[[174,10],11],[[175,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,159],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[166,[[25,[179]]]],0,[172],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[172,172],[[25,[5]]]],0,0,0,0,0,0,0,0,[[160,27],8],[[161,27],8],[[162,27],8],[[163,27],8],[[159,27],8],[[164,27],8],[[165,27],8],[[166,27],8],[[167,27],8],[[168,27],8],[[169,27],8],[[170,27],8],[[171,27],8],[[172,27],8],[[173,27],8],[[174,27],8],[[175,27],8],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],0,[[176,21],[[8,[51]]]],[[177,21],[[8,[51]]]],[[178,21],[[8,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[180,180],[181,181],[182,182],[[]],[[]],[[]],[[],180],[6],[6],[6],[6],[6],[6],[7,[[8,[180]]]],[7,[[8,[181]]]],[7,[[8,[182]]]],[6],[6],[6],[[180,10],11],[[181,10],11],[[182,10],11],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[]],[[]],[[]],0,[[180,27],8],[[181,27],8],[[182,27],8],0,0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[183,183],[184,184],[[]],[[]],[[],31],[6],[6],[6],[6],[6],[6],[7,[[8,[183]]]],[7,[[8,[184]]]],[6],[6],[6],[[183,183],9],[[184,184],9],[[183,10],11],[[184,10],11],[[185,10],11],[[185,10],11],[[]],[[]],[100,185],[96,185],[99,185],[85,185],[[]],[101,185],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[[76,[184]]],183],[26],[[183,27],8],[[184,27],8],[185,[[25,[28]]]],[[]],[[]],[[],31],[[],8],[87,[[8,[184]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[186,186],[[]],[6],[6],[6],[6],[7,[[8,[186]]]],[6],[6],[[186,186],9],[[186,10],11],[[186,10],11],[[187,10],11],[[187,10],11],[188,186],[[]],[138,187],[[]],[151,187],[21,[[8,[186]]]],[21,8],[[],6],[[],6],[[]],[[]],[26],[[186,27],8],[187,[[25,[28]]]],[[]],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[]],[[]],0,[[]],[[]],[6],[6],[7,[[8,[60]]]],[7,[[8,[189]]]],[7,[[8,[60]]]],[6],[[189,10],11],[60,189],[[]],[[],6],[[]],[[60,27],8],[[189,27],8],[[60,27],8],[[60,27],8],[[],8],[[],8],[[],32],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[190,190],[191,191],[192,192],[[]],[[]],[[]],[[190,190],5],[[191,191],5],[[192,192],5],[6],[6],[6],[6],[6],[6],[7,[[8,[190]]]],[7,[[8,[191]]]],[7,[[8,[192]]]],[6],[6],[6],[[190,190],9],[[191,191],9],[[192,192],9],[[190,10],11],[[191,10],11],[[192,10],11],[192,33],0,[[]],[[]],[[]],[190],[191],[192],[[],6],[[],6],[[],6],[[]],[[]],[[]],[191,9],[192,9],[191,9],[192,9],[191,9],[192,9],[192,193],0,[[192,191],9],[[35,190],192],[[190,190],[[25,[5]]]],[[191,191],[[25,[5]]]],[[192,192],[[25,[5]]]],[192,193],0,[192,190],0,[[190,27],8],[[191,27],8],[[192,27],8],[192,191],0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[194]]]],[137,[[8,[194,138]]]],[137,[[8,[138]]]],[6],[6],[6],[6],0,0,0,0,[[195,10],11],[[195,10],11],[[194,10],11],0,[[]],[[]],[[]],[[]],[196,[[59,[[197,[58]]]]]],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[198],[[]],[57,[[59,[58]]]],[57,[[59,[58]]]],[199,25],[[],200],[26],[58,[[59,[58]]]],0,0,[[194,137],[[8,[144]]]],[[194,27],8],0,[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],0,[[]],[[]],[6],[6],[7,[[8,[201]]]],[6],0,[[201,10],11],0,[[]],[[],6],[[]],[[201,27],8],[[],8],[[],8],[[],32],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[202,202],[203,203],[204,204],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[7,[[8,[202]]]],[7,[[8,[203]]]],[7,[[8,[204]]]],[6],[6],[6],[[202,202],9],[[203,203],9],[[204,204],9],[[202,10],11],[[203,10],11],[[204,10],11],[204,[[76,[205]]]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[]],[[]],[[]],[202,9],[204,9],0,0,[[202,27],8],[[203,27],8],[[204,27],8],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[206,206],[207,207],[208,208],[[]],[[]],[[]],[[206,206],5],[[207,207],5],[208,193],0,[6],[6],[6],[6],[6],[6],[7,[[8,[207]]]],[7,[[8,[208]]]],[6],[6],[6],[[206,206],9],[[207,207],9],[208,25],0,[[206,10],11],[[207,10],11],[[208,10],11],[[]],[[]],[[]],[206],[207],[[],6],[[],6],[[],6],[[]],[[]],[[]],[208,206],[208],[208],[[130,193],208],[[206,206],[[25,[5]]]],[[207,207],[[25,[5]]]],[208,130],0,[208,193],0,[[207,27],8],[[208,27],8],[[208,207]],[208,207],0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[]],[[]],[[]],[208,25],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[209,209],[210,210],[211,211],[[]],[[]],[[]],0,0,[6],[6],[6],[6],[6],[6],[7,[[8,[212]]]],[7,[[8,[213]]]],[7,[[8,[103]]]],[6],[6],[6],[[209,209],9],[[210,210],9],[[211,211],9],[[209,10],11],[[210,10],11],[[211,10],11],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[212,9],0,[213,9],0,[[212,27],8],[[213,27],8],[[103,27],8],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[214,214],[215,215],[216,216],[217,217],[[]],[[]],[[]],[[]],[[215,215],5],[[],216],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[214]]]],[7,[[8,[215]]]],[7,[[8,[217]]]],[6],[6],[6],[6],[[214,214],9],[[215,215],9],[[216,216],9],[[217,217],9],[[214,10],11],[[215,10],11],[[216,10],11],[[217,10],11],[218,214],[[]],[[]],[219,215],[[]],[220,216],[221,217],[[]],[215],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],0,[[215,215],[[25,[5]]]],0,[[214,27],8],[[215,27],8],[[217,27],8],0,[[]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[],32],0,[[]],[[]],[[]],[[]],0,[222,223],[[]],[[]],[222,222],[[]],[6],[6],[7,[[8,[222]]]],[6],[[222,222],9],[[222,10],11],[[222,10],11],[[]],[223,222],[21,[[8,[222]]]],[21,8],[[],6],[[]],[[222,27],8],[[]],[[],31],[[],8],[[],8],[[],32],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[224,224],[225,225],[226,226],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[7,[[8,[224]]]],[7,[[8,[225]]]],[7,[[8,[226]]]],[6],[6],[6],[[224,224],9],[[225,225],9],[[226,226],9],0,[[224,10],11],[[225,10],11],[[226,10],11],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],0,[[]],[[]],[[]],0,0,0,0,0,[[224,27],8],[[225,27],8],[[226,27],8],0,[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,0,0,0,[124,227],[[]],[[]],[[]],[[]],[124,124],[228,228],[[]],[[]],[6],[6],[6],[6],[7,[[8,[124]]]],[6],[6],[[124,124],9],[[124,10],11],[[124,10],11],[[228,10],11],[[228,10],11],[[]],[227,124],[229,228],[[]],[21,[[8,[124]]]],[21,8],[[],6],[[],6],[[]],[[]],[[89,230],124],[[89,89],[[25,[124]]]],[26],[[124,27],8],[228,[[25,[28]]]],[[]],[[]],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[]],[[]],0,0,0,[[]],[[]],[231,231],[[]],[6],[6],[7,[[8,[231]]]],[6],[[231,231],9],[[231,10],11],[[]],[232,231],[[],6],[[]],[[231,27],8],[[]],[[],8],[[],8],[[],32],[[]],0,0,0,0,0,0,0,0,0,[233,78],0,[[]],[[]],[6],[6],[7,[[8,[233]]]],0,[6],[233,72],0,[[233,233],9],0,[[233,10],11],[[]],[[72,234],233],[[],6],[[]],[[233,27],8],[233,78],0,0,[[],8],[[],8],[[],32],[[]],[7,[[8,[[76,[127]]]]]],[27,8],[7,[[8,[235]]]],[[235,27],8],[7,[[8,[[76,[236]]]]]],[27,8],[7,[[8,[237]]]],[[237,27],8],[7,[[8,[238]]]],[[238,27],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[239,239],[240,240],[241,241],[242,242],[243,243],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[239]]]],[7,[[8,[244]]]],[7,[[8,[241]]]],[7,[[8,[245]]]],[7,[[8,[227]]]],[7,[[8,[246]]]],[7,[[8,[247]]]],[7,[[8,[29]]]],0,[6],[6],[6],[6],[6],[6],[6],[6],0,0,0,[[239,239],9],[[240,240],9],[[241,241],9],[[242,242],9],[[243,243],9],0,0,[[239,10],11],[[240,10],11],[[241,10],11],[[242,10],11],[[243,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[239,27],8],[[244,27],8],[[241,27],8],[[245,27],8],[[227,27],8],[[246,27],8],[[247,27],8],[[29,27],8],0,0,[[]],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[248,249],[[]],[[]],[[]],[[]],[248,248],[[]],[[248,248],5],[6],[6],[6],[6],[7,[[8,[248]]]],[7,[[8,[249]]]],[6],[6],[[248,248],9],[[248,10],11],[[248,10],11],[[]],[249,248],[89,248],[[]],[21,8],[21,[[8,[248]]]],[[],6],[[],6],[[]],[[]],[[248,248],[[25,[5]]]],[[248,27],8],[[249,27],8],[[]],[[],31],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[250,250],[251,251],[[]],[[]],0,[6],[6],[6],[6],[7,[[8,[250]]]],[7,[[8,[251]]]],[6],[6],0,[[250,250],9],[[251,251],9],[[250,10],11],[[251,10],11],[[]],[[]],[[],6],[[],6],[[]],[[]],0,[[250,27],8],[[251,27],8],0,[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[252,252],[253,253],[[]],[[]],[6],[6],[6],[6],[7,[[8,[252]]]],[7,[[8,[253]]]],[6],[6],0,[[252,252],9],[[253,253],9],[[252,10],11],[[253,10],11],[[]],[[]],[[],6],[[],6],[[]],[[]],0,0,0,[[252,27],8],[[253,27],8],0,[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[254,254],[255,255],[256,256],[[]],[[]],[[]],[6],[6],[6],[6],[6],[6],[7,[[8,[254]]]],[7,[[8,[255]]]],[7,[[8,[256]]]],[6],[6],[6],[[254,254],9],[[255,255],9],[[256,256],9],[[254,10],11],[[255,10],11],[[256,10],11],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[254,27],8],[[255,27],8],[[256,27],8],0,0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,[[],32],[[],32],[[],32],0,0,0,[[]],[[]],[[]],0,[[]],[[]],[257,257],[[]],[6],[6],[7,[[8,[257]]]],[6],[[257,257],9],0,[[257,10],11],[[]],[244,257],[[],6],[[]],0,0,[[257,27],8],[[]],[[],8],[[],8],[[],32],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[258,258],[259,259],[260,260],[[]],[[]],[[]],[[258,258],5],[[259,259],5],[6],[6],[6],[6],[6],[6],[7,[[8,[261]]]],[7,[[8,[262]]]],[7,[[8,[134]]]],[6],[6],[6],0,[[258,258],9],[[259,259],9],[[258,10],11],[[259,10],11],[[260,10],11],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[258,258],[[25,[5]]]],[[259,259],[[25,[5]]]],[[261,27],8],[[262,27],8],[[134,27],8],0,0,[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[263,263],[264,264],[[]],[[]],[6],[6],[6],[6],[7,[[8,[263]]]],[7,[[8,[264]]]],[6],[6],[[263,263],9],[[264,264],9],[[263,10],11],[[264,10],11],[[]],[265,263],[[]],[[],6],[[],6],0,[[]],[[]],[[263,27],8],[[264,27],8],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],0,[[]],[[]],0,[266,68],0,[[]],[[]],[266,266],[[]],[6],[6],[7,[[8,[266]]]],[6],[[266,266],9],[[266,10],11],[[[112,[30]]],266],[[]],[[],6],[[]],[[68,77],266],[[266,27],8],[[]],[[],8],[[],8],[[],32],[266,77],0,[[]],0,0,0,0,0,0,0,[267,268],[[]],[[]],[[]],[[]],[[]],[[]],[267,267],[[]],[6],[6],[6],[6],[6],[6],[7,[[8,[267]]]],[6],[6],[6],[[267,267],9],[[269,10],11],[10,[[8,[56]]]],[[270,10],11],[[270,10],11],[[267,10],11],[[267,10],11],[[]],[[]],[138,270],[19,270],[[]],[268,267],[21,[[8,[267,270]]]],[21,[[8,[267]]]],[21,8],[[],6],[[],6],[[],6],[[]],[[]],[[]],[26],[[267,27],8],[270,[[25,[28]]]],[267,31],[[]],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[269,[[8,[51]]]],[[269,21],[[8,[51]]]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,[6],[6],[6],[6],[7,[[8,[271]]]],[7,[[8,[272]]]],[6],[6],[[271,10],11],[[272,10],11],[[]],[[]],[[],6],[[],6],[[]],[[]],0,0,0,[[271,27],8],[[272,27],8],[273,[[8,[271,185]]]],[[],8],[274,[[8,[272,185]]]],[[],8],[[],8],[[],8],[[],32],[[],32],0,[[]],[[]],0,0,[275,68],0,0,[275,77],0,[[]],[[]],[[]],[[]],[275,275],[276,276],[[]],[[]],[6],[6],[6],[6],[7,[[8,[275]]]],[7,[[8,[276]]]],[6],[6],[[275,275],9],[[276,276],9],[[275,10],11],[[276,10],11],[[[277,[30]]],275],[[]],[[]],[275,127],0,[[],6],[[],6],[[]],[[]],[[276,33,127],275],[[33,127,68,77],275],[[275,27],8],[[276,27],8],[[]],[[]],[275,33],0,[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],0,[[]],[[]],0,0,[77,278],[[]],[[]],[[]],[[]],[[77,77],[[8,[77,279]]]],[77,77],[[]],[[77,77],5],[6],[6],[6],[6],[7,[[8,[77]]]],[7,[[8,[278]]]],[6],[6],[[77,77],9],[[77,10],11],[[77,10],11],[278,77],[[]],[89,77],[[]],[21,8],[21,[[8,[77]]]],[77],[[],6],[[],6],[[]],[[]],[[77,77],[[25,[5]]]],[[77,77],77],[[77,27],8],[[278,27],8],[[]],[[],31],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[280],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[[76,[146,147]]]]]],[281,[[25,[127]]]],[282,282],[283,283],[284,284],[285,285],[286,286],[287,287],[288,288],[280,280],[289,289],[281,281],[290,290],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[283,283],5],0,0,0,0,[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[291]]]],[7,[[8,[282]]]],[7,[[8,[292]]]],[7,[[8,[284]]]],[7,[[8,[293]]]],[7,[[8,[294]]]],[7,[[8,[295]]]],[7,[[8,[296]]]],[7,[[8,[285]]]],[7,[[8,[286]]]],[7,[[8,[287]]]],[7,[[8,[288]]]],[7,[[8,[280]]]],[7,[[8,[289]]]],[7,[[8,[281]]]],[7,[[8,[290]]]],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[[],[[150,[149]]]],[[],[[150,[149]]]],[[282,282],9],[[283,283],9],[[284,284],9],[[285,285],9],[[286,286],9],[[287,287],9],[[288,288],9],[[280,280],9],[[289,289],9],[[281,281],9],[[290,290],9],[[297,10],11],[[298,10],11],0,[10,[[8,[56]]]],[10,[[8,[56]]]],[[282,10],11],[[282,10],11],[[283,10],11],[[299,10],11],[[299,10],11],[[284,10],11],[[285,10],11],[[286,10],11],[[287,10],11],[[288,10],11],[[280,10],11],[[289,10],11],[[281,10],11],[[290,10],11],[[]],[[]],[[]],[292,282],[[]],[[]],[[]],[300,284],[[]],[[]],[[]],[[]],[[]],[[]],[301,286],[[]],[302,287],[[]],[303,288],[304,288],[[]],[[]],[[]],[[]],[305,281],[306,290],[[]],[21,8],[21,[[8,[282]]]],[282],[283],[288],[281],0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[280,[[76,[127]]]],[[288,288],288],0,0,0,[[283,283],[[25,[5]]]],0,0,0,0,0,[26],[288,[[76,[89]]]],0,0,0,0,0,0,[[291,27],8],[[282,27],8],[[292,27],8],[[284,27],8],[[293,27],8],[[294,27],8],[[295,27],8],[[296,27],8],[[285,27],8],[[286,27],8],[[287,27],8],[[288,27],8],[[280,27],8],[[289,27],8],[[281,27],8],[[290,27],8],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[298,[[8,[51]]]],[[297,21],[[8,[51]]]],[[297,31],[[8,[51]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[6],[6],[6],[6],[7,[[8,[[76,[127]]]]]],[6],[6],[[307,10],11],[[308,10],11],[10,[[8,[56]]]],[10,[[8,[56]]]],[[]],[[]],[[],6],[[],6],[[]],[[]],[27,8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[308,[[8,[51]]]],[[307,21],[[8,[51]]]],[[307,31],[[8,[51]]]],[[]],[[]],0,[[]],[[]],[6],[6],[7,[[8,[235]]]],[6],[[309,10],11],[10,[[8,[56]]]],[[]],[[],6],[[]],[[235,27],8],[[],8],[[],8],[[],32],[[309,89],[[8,[235,51]]]],[[]],0,[[]],[[]],[6],[6],[7,[[8,[[76,[236]]]]]],[6],[[310,10],11],[10,[[8,[56]]]],[[]],[[],6],[[]],[27,8],[[],8],[[],8],[[],32],[[310,311],8],[[]],0,0,[[]],[[]],[[]],[[]],[6],[6],[6],[6],[7,[[8,[237]]]],[6],[6],[[312,10],11],[[313,10],11],[10,[[8,[56]]]],[10,[[8,[56]]]],[[]],[[]],[[],6],[[],6],[[]],[[]],[[237,27],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[313,[[8,[237,51]]]],[[312,21],[[8,[237,51]]]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[6],[6],[6],[6],[7,[[8,[238]]]],[7,[[8,[314]]]],[7,[[8,[315]]]],[6],[6],[[]],[[]],[[],6],[[],6],[[]],[[]],[[238,27],8],[[314,27],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[6],[6],[6],[[316,10],11],[[316,10],11],[[]],[[],6],[[]],[26],[317,[[8,[317,316]]]],[316,[[25,[28]]]],[[],31],[317,[[25,[179]]]],[[],8],[[],8],[[],32],[[]],0,0,0,0,0,0,0,0,0,[318,319],[318,319],[318,319],[193,320],[321,322],[318,323],[318,89],[318,88],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[318,318],[[25,[318]]]],[[318,318],[[25,[318]]]],[324,324],[193,193],[321,321],[318,318],[[]],[[]],[[]],[[]],[[324,324],5],[[193,193],5],[[321,321],5],[[318,318],5],[[],324],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7,[[8,[324]]]],[7,[[8,[193]]]],[7,[[8,[321]]]],[7,[[8,[318]]]],[6],[6],[6],[6],[6],[6],[6],[6],[[193,193],[[8,[318,325]]]],[193,318],[[324,324],9],[[193,193],9],[[321,321],9],[[318,318],9],[[326,10],11],[[327,10],11],[[328,10],11],[[329,10],11],[10,[[8,[56]]]],[10,[[8,[56]]]],[10,[[8,[56]]]],[10,[[8,[56]]]],[[324,10],11],[[324,10],11],[[193,10],11],[[193,10],11],[[321,10],11],[[321,10],11],[[318,10],11],[[318,10],11],[[]],[[]],[[]],[[]],[193,324],[[]],[320,324],[324,193],[[]],[320,193],[[]],[[]],[323,318],[89,318],[89,324],[89,193],[21,[[8,[324]]]],[21,8],[21,[[8,[193]]]],[21,8],[21,[[8,[321]]]],[21,8],[21,[[8,[318]]]],[21,8],[324],[193],[321],[318],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[89,93],318],[[],324],[[],193],[[],321],[[324,324],[[25,[5]]]],[[193,193],[[25,[5]]]],[[321,321],[[25,[5]]]],[[318,318],[[25,[5]]]],[[324,27],8],[[193,27],8],[[321,27],8],[[318,27],8],[[]],[[]],[[]],[[]],[324,89],[[],31],[[],31],[[],31],[[],31],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[193,[[8,[321]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[327,21],[[8,[51]]]],[[328,21],[[8,[51]]]],[[329,21],[[8,[51]]]],[[326,89],[[8,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Identifier"],[6,"AccountPublicKey"],[3,"SigningKey"],[4,"EitherEd25519SecretKey"],[4,"Ordering"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"SigningKeyParseError"],[3,"Identifier"],[6,"AccountAlg"],[3,"Identifier"],[3,"Ed25519"],[3,"SecretKey"],[3,"Ed25519Extended"],[4,"Error"],[4,"Error"],[15,"str"],[4,"PublicKeyFromStrError"],[8,"RngCore"],[8,"CryptoRng"],[4,"Option"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[4,"Discrimination"],[3,"Address"],[3,"String"],[3,"TypeId"],[3,"Hash"],[3,"Blake2b256"],[3,"Hash"],[3,"DigestOf"],[4,"Error"],[3,"Digest"],[8,"AsymmetricKey"],[3,"SigningKey"],[8,"AsymmetricPublicKey"],[3,"PublicKey"],[8,"VerificationAlgorithm"],[3,"Signature"],[3,"Signature"],[3,"KeyPair"],[4,"SignatureFromStrError"],[8,"SigningAlgorithm"],[8,"AsRef"],[4,"Verification"],[8,"Error"],[3,"HashVisitor"],[3,"SecretKeyVisitor"],[3,"PublicKeyVisitor"],[3,"SignatureVisitor"],[3,"Error"],[3,"Path"],[8,"Iterator"],[6,"Result"],[4,"Fragment"],[4,"Initial"],[4,"Error"],[3,"AccountIdentifier"],[4,"AccountIdentifier"],[4,"ParseAccountIdentifierError"],[3,"UnspecifiedAccountIdentifier"],[4,"Error"],[3,"Address"],[3,"DelegationType"],[3,"LastRewards"],[3,"AccountState"],[6,"Epoch"],[4,"DelegationType"],[3,"LastRewards"],[3,"AccountState"],[3,"Vec"],[3,"Value"],[3,"BTreeMap"],[3,"Block0Configuration"],[4,"Block0ConfigurationError"],[4,"FromConfigParamsError"],[3,"Block"],[3,"ActiveSlotCoefficient"],[3,"ActiveSlotCoefficientVisitor"],[4,"TryFromActiveSlotCoefficientError"],[3,"Milli"],[4,"ConfigParam"],[15,"f64"],[15,"u64"],[3,"BlockContentMaxSize"],[6,"BlockContentSize"],[3,"EpochStabilityDepth"],[15,"u32"],[4,"FeesGoTo"],[3,"FromStrFeesGoToError"],[3,"TryFromFeesGoToError"],[3,"BlockchainConfiguration"],[6,"ConsensusVersion"],[4,"TryFromKesUpdateSpeedError"],[4,"TryFromNumberOfSlotsPerEpochError"],[4,"TryFromSlotDurationError"],[3,"ConfigParams"],[3,"LinearFee"],[3,"InitialUTxO"],[3,"LegacyUTxO"],[3,"Destination"],[3,"InitialToken"],[8,"Payload"],[3,"Transaction"],[3,"UtxoDeclaration"],[3,"SignedCertificate"],[3,"Output"],[3,"TransactionSlice"],[3,"KesUpdateSpeed"],[3,"KesUpdateSpeedVisitor"],[3,"ConsensusLeaderId"],[3,"ConsensusLeaderIdVisitor"],[3,"BftLeaderId"],[3,"NumberOfSlotsPerEpoch"],[3,"NumberOfSlotsPerEpochVisitor"],[3,"ProposalExpiration"],[3,"PoolParticipationCapping"],[3,"RewardConstraints"],[3,"Ratio"],[3,"SlotDuration"],[3,"SlotDurationVisitor"],[15,"u8"],[3,"Block0DateDef"],[3,"Block0Date"],[3,"BlockDate"],[3,"BlockDate"],[3,"StringOrStruct"],[6,"SlotId"],[3,"TimeEra"],[8,"MapAccess"],[3,"Certificate"],[3,"Codec"],[4,"ReadError"],[4,"CertificateToBech32Error"],[4,"CertificateFromBech32Error"],[4,"CertificateFromStrError"],[4,"Certificate"],[4,"SignedCertificate"],[4,"WriteError"],[3,"CommitteeId"],[3,"u5"],[3,"Global"],[3,"CommitteeIdDef"],[15,"char"],[8,"FromIterator"],[4,"FromHexError"],[3,"Log"],[3,"LogEntry"],[4,"LogOutput"],[3,"PoolMaxEntries"],[3,"LogMaxEntries"],[3,"PersistentLog"],[3,"Mempool"],[3,"CorsOrigin"],[3,"Rest"],[3,"JRpc"],[3,"Tls"],[3,"Cors"],[3,"HeaderName"],[3,"HttpMethod"],[3,"P2p"],[3,"Bootstrap"],[3,"Connection"],[3,"TopicsOfInterest"],[3,"Policy"],[3,"LayersConfig"],[3,"PreferredViewMax"],[3,"PreferredListConfig"],[3,"TrustedPeer"],[3,"NodeConfig"],[3,"CorsOriginVisitor"],[3,"HeaderNameVisitor"],[3,"Visitor"],[4,"SocketAddr"],[3,"NodeSecret"],[3,"Bft"],[3,"GenesisPraos"],[3,"ConfigParams"],[4,"ConfigParam"],[4,"FromConfigParamError"],[3,"EvmTransaction"],[4,"EvmTransactionFromStrError"],[3,"EvmTransaction"],[3,"FragmentDef"],[4,"FragmentOrigin"],[4,"FragmentStatus"],[3,"FragmentLog"],[3,"SystemTime"],[3,"PersistentFragmentLog"],[3,"DeserializeError"],[3,"PathBuf"],[3,"Box"],[3,"FileFragments"],[3,"FileFragmentsIterator"],[3,"IterBridge"],[3,"FragmentsBatch"],[4,"FragmentRejectionReason"],[3,"RejectedFragmentInfo"],[3,"FragmentsProcessingSummary"],[6,"FragmentId"],[3,"LeadershipLogId"],[4,"LeadershipLogStatus"],[3,"LeadershipLog"],[3,"PerCertificateFeeDef"],[3,"PerVoteCertificateFeeDef"],[3,"LinearFeeDef"],[3,"PerCertificateFee"],[3,"PerVoteCertificateFee"],[3,"TokenName"],[3,"TokenIdentifier"],[3,"MintingPolicy"],[3,"MintToken"],[3,"TokenName"],[3,"TokenIdentifier"],[3,"MintingPolicy"],[3,"MintToken"],[3,"OldAddress"],[3,"Addr"],[3,"PeerStats"],[3,"PeerRecord"],[3,"Subscription"],[3,"Ratio"],[4,"ParseRatioError"],[3,"ParseIntError"],[3,"NonZeroU64"],[4,"RewardParams"],[4,"RewardParams"],[3,"EpochRewardsInfo"],[3,"EpochRewardsInfo"],[3,"Options"],[3,"MemberPublicKey"],[6,"ExternalProposalId"],[3,"Proposals"],[3,"SettingsDto"],[3,"TaxTypeDef"],[3,"TaxTypeSerde"],[4,"LimitDef"],[3,"RatioDef"],[3,"TaxType"],[4,"Limit"],[3,"Parameters"],[4,"CompoundingType"],[3,"Stake"],[3,"Stake"],[3,"StakeDistributionDto"],[3,"StakeDistribution"],[3,"StakePoolStats"],[3,"Rewards"],[3,"NodeStatsDto"],[3,"NodeStats"],[4,"NodeState"],[3,"TaxType"],[3,"EpochDef"],[3,"SlotDef"],[3,"TimeEraDef"],[3,"Epoch"],[3,"Slot"],[3,"TransactionInput"],[4,"TransactionInputType"],[3,"Input"],[3,"TransactionOutput"],[3,"TransactionWitness"],[4,"Witness"],[3,"TransactionWitnessVisitor"],[4,"TransactionWitnessFromStrError"],[3,"UpdateProposalStateDef"],[3,"UpdateProposalDef"],[3,"UpdateProposalState"],[3,"UpdateProposal"],[3,"UTxOInfo"],[3,"UTxOOutputInfo"],[3,"Entry"],[3,"Value"],[4,"ValueError"],[3,"EncryptedTally"],[4,"VotePayload"],[3,"VotePrivacy"],[4,"PayloadTypeDef"],[3,"VotePlan"],[3,"AccountVotes"],[3,"VotePlanStatus"],[4,"Tally"],[3,"TallyResult"],[4,"PrivateTallyState"],[3,"VoteProposalStatus"],[3,"SerdeMemberPublicKey"],[4,"PayloadType"],[3,"Proposal"],[4,"VoteAction"],[4,"ParametersGovernanceAction"],[4,"TreasuryGovernanceAction"],[3,"Bech32Visitor"],[3,"BytesVisitor"],[3,"VotePrivacyFromStrError"],[3,"VotePlan"],[3,"VotePlanStatus"],[4,"Tally"],[3,"Tally"],[3,"TallyResult"],[4,"Payload"],[3,"VoteProposalStatus"],[3,"ByteStringVisitor"],[3,"ByteArrayVisitor"],[3,"OptionsVisitor"],[3,"PublicKeysSeqVisitor"],[8,"SeqAccess"],[3,"StringVisitor"],[3,"BinaryVisitor"],[3,"ProposalInternal"],[3,"ProposalsList"],[4,"Error"],[3,"Multiaddr"],[3,"Duration"],[15,"u128"],[3,"SystemTime"],[3,"LocalDateTime"],[3,"OffsetDateTime"],[3,"Duration"],[3,"SecondsSinceUnixEpoch"],[3,"SystemTimeError"],[3,"SecondsSinceUnixEpochVisitor"],[3,"SystemTimeVisitor"],[3,"DurationVisitor"],[3,"LocalDateTimeVisitor"],[13,"UnexpectedHrp"],[4,"ConsensusVersionDef"],[4,"DiscriminationDef"],[3,"ParametersDef"],[13,"InvalidHrp"],[13,"Network"],[13,"InABlock"],[13,"Rejected"],[13,"Block"],[13,"Rejected"],[13,"Encrypted"],[13,"Decrypted"],[13,"Linear"],[13,"Halving"],[13,"Public"],[13,"Private"],[13,"Invalid"],[13,"Invalid"],[13,"Invalid"],[13,"Invalid"],[13,"Public"],[13,"Private"],[13,"InitConfigParamMissing"],[13,"InitConfigParamDuplicate"],[3,"BlockDateStructural"],[4,"CompoundingTypeDef"],[4,"DiscriminationDef"],[3,"StakeDef"],[13,"InvalidHrp"],[3,"ValueDef"],[4,"ParametersGovernanceActionDef"],[4,"TreasuryGovernanceActionDef"],[4,"VoteActionDef"],[3,"VoteProposalDef"],[13,"RewardAdd"],[13,"TransferToRewards"],[13,"Treasury"],[13,"Parameters"]]},\
"jormungandrwallet":{"doc":"","t":"DGDGDGDGDGDDGMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFFFFFFFFFFLLLAMAMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFF","n":["EncryptingVoteKey","EncryptingVoteKeyPtr","Error","ErrorPtr","Fragment","FragmentPtr","Proposal","ProposalPtr","Settings","SettingsPtr","SettingsRust","Wallet","WalletPtr","block0_date","block0_initial_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","discrimination","discrimination","drop","drop","drop","drop","drop","drop","drop","eq","fees","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","iohk_jormungandr_delete_fragment","iohk_jormungandr_delete_spending_counters","iohk_jormungandr_fragment_from_raw","iohk_jormungandr_fragment_id","iohk_jormungandr_symmetric_cipher_decrypt","iohk_jormungandr_vote_proposal_new_private","iohk_jormungandr_vote_proposal_new_public","iohk_jormungandr_wallet_delete_buffer","iohk_jormungandr_wallet_delete_error","iohk_jormungandr_wallet_delete_proposal","iohk_jormungandr_wallet_delete_settings","iohk_jormungandr_wallet_delete_string","iohk_jormungandr_wallet_delete_wallet","iohk_jormungandr_wallet_error_details","iohk_jormungandr_wallet_error_to_string","iohk_jormungandr_wallet_id","iohk_jormungandr_wallet_import_keys","iohk_jormungandr_wallet_set_state","iohk_jormungandr_wallet_spending_counters","iohk_jormungandr_wallet_total_value","iohk_jormungandr_wallet_vote_cast","is_input_worth","new","serialize","settings","slot_duration","time","time_era","to_owned","transaction_max_expiry_epochs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","iohk_jormungandr_wallet_settings_block0_hash","iohk_jormungandr_wallet_settings_discrimination","iohk_jormungandr_wallet_settings_fees","iohk_jormungandr_wallet_settings_new","iohk_jormungandr_block_date_from_system_time","iohk_jormungandr_max_expiration_date"],"q":[[0,"jormungandrwallet"],[137,"jormungandrwallet::settings"],[141,"jormungandrwallet::time"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","delete the pointer","delete the inner buffer that was allocated by this library","deserialize a fragment from bytes","get the ID of the provided fragment","decrypt payload of the wallet transfer protocol","build the proposal object","build the proposal object","Delete a binary buffer that was returned by this library …","delete the pointer and free the allocated memory","delete the pointer","delete the pointer and free the allocated memory","Delete a null terminated string that was allocated by this …","delete the pointer, zero all the keys and free the …","Get a string describing the error, this will return an …","Get a string describing the error, this will return an …","get the wallet id","recover a wallet from an account and a list of utxo keys","update the wallet account state","get the current spending counters for the (only) account …","get the total value in the wallet","build the vote cast transaction","convenient function to check if a given input is covering …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","Safety","Safety","Safety","This function dereference raw pointers. Even though the …","This function dereference raw pointers. Even though the …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,29,28,30,31,32,33,1,29,28,30,31,32,33,1,1,1,29,28,30,31,32,33,1,29,28,30,31,32,33,1,1,1,1,29,28,30,31,32,33,1,1,1,1,29,28,30,31,32,33,1,29,28,30,31,32,33,1,29,28,30,31,32,33,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,1,1,1,29,28,30,31,32,33,1,29,28,30,31,32,33,1,29,28,30,31,32,33,1,29,28,30,31,32,33,1,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[3,[[4,[1]]]],[1,5],0,[2],[2],[2],[2],[2],[2],[2],[[1,1],6],0,[[1,7],[[4,[8]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[10],[[11,2,9],12],[[9,11],12],[[11,2,11,2,11,2],12],[[11,11,11,13,14],12],[[11,11,11,14],12],[[11,2]],[12],[14],[15],[13],[16],[12,13],[12,13],[[16,11],12],[[11,16],12],[[16,17,10],12],[[16,10],12],[[16,17],12],[[16,15,14,11,18,11,19],12],[[1,20],6],[21,[[4,[1,22]]]],[[1,23],4],0,0,0,0,[[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[15,11],12],[[15,25],12],[[15,26],12],[[27,15],12],[[28,17,18],12],[[28,17,18],12]],"c":[],"p":[[3,"SettingsRust"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[4,"Discrimination"],[15,"bool"],[3,"Formatter"],[3,"Error"],[6,"FragmentPtr"],[3,"SpendingCounters"],[15,"u8"],[6,"ErrorPtr"],[6,"c_char"],[6,"ProposalPtr"],[6,"SettingsPtr"],[6,"WalletPtr"],[15,"u64"],[3,"BlockDate"],[3,"TransactionOut"],[3,"Input"],[3,"Block"],[4,"Error"],[8,"Serializer"],[3,"TypeId"],[4,"Discrimination"],[3,"LinearFee"],[3,"SettingsInit"],[3,"Settings"],[3,"Wallet"],[3,"Proposal"],[3,"Fragment"],[3,"Error"],[3,"EncryptingVoteKey"]]},\
"jortestkit":{"doc":"","t":"AAAAAAAAAAAAAANNENNNNLLFLLLLLLLLLLLLLLLLLDEINCNDMMMMMAKCAMAMDEINNDMLLLLLLLLMMLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLKMLLLLLLMLLLLLLLLLLLLLLNNENLLLLLLLLLLLLLLFLLLLLLHHHHHHRMMMMMMFFFFFFFFFFFFDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLADLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLGHHHHHHHHHHHHMMMMMMMMMMMMFFFFFFFFFFFFFFFFFFFFFFFFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLMLLLMLLMLLLLLLLLLFFFFFFFFFFFFFDDDNNENDDENNNDDNNNNMLMLMLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLMMLMALMLMLMLLLLMMLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLMMDDLMLLLLMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLMLMLLALMLLLLLLLLLLFFNDDDNNNNGEDDNNNNDDNDEIEEIDNDDDENNLLLLLLLLLLLALLLLLLLLLLLLMMMMLMMMMLLLLLLLLLKMMLMMMLLLLLLLLLLLLLMLAMMMLLLKLLAAAMLLLAMMFMLLLLLLLLLMMKMFFFFMMALAMMMMMMMMMMMMLLLLLLLLMLLLFFLLLLLLLLLLMDDNNENNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMLLLLLLLMMLLMMLLMMLMMLLMMLLLLLLLLLLLLLLLLLLLLDLLLLLLMLLLLLMLLLLFFDDDDDGLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLFMMLLMMLLLLLMMMLLLLLLLLLLLLLLLMMLLLLLMLLLLLLNNNGNDNDEIEEIDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLLLLLLLKLLMMLLLLLLLLLLLLLLLLLLLLLLLKLLKLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMSDSLLLLLLMLLLMLLMLLLLDLLLLLLLLMLLLLLLLLLMLLLLLLLLLIRDDDLLLLLLLLLLLLLLLLLLMLLLLLLKMLMLLLLLLLLMLLLLMMMLLLLMLLLLLLLLLLFLLLEDDDDDDDDDDNDNNDDDDDEDDNAAFFFFMMMMMMMMMMMMMMAMMMMMMMMMMMMMAAMMMMCCCCCAAAADDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLDLLLLLMLLLLLLLLLMLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCCCCCCCFFFFAAAADEDDDNLMLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLMLLMLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLMLMMLLLLLLLLLLMLLLLLLLLLLLLLLMLMLLLLMLLLLMLLLLLLLLLLLLLLDDDLLLLLLLLLLMMLLLLLLLLLMLLLLLLLLLLLLLMLLLLLMLLLMLLLLLLLLLLLLLLLDDDLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMLLLLMLMLLLMLLLLLLLLLLLLLLLLCCCAAADLLLLLLLLLLLLLLLLLLLLLLDLLLLLLMLLLLLLLLLLLMLLLLLLLLMLDLLLLLLLLLLLLLLLLLLLLLLLNNENLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLGDLLLLLLLFLLLLFLMLLLLLLLWWWFFFCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCENNDDEMMLLMLLLLLLLLALFFFFMMLLLLLAMMIKKKKKKKKENDDLLMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLMIFKNNNEALLLLFLLLLLLLLLLLLLLLDDRNNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLL","n":["archive","console","csv","env","file","github","load","measurement","openssl","predicates","prelude","process","string","web","CannotOpenArchiveFile","CannotWriteOutputFile","DecompressError","IntenralZipError","UnpackError","UnsafeFileName","UnsupportedFormat","borrow","borrow_mut","decompress","deref","deref_mut","drop","fmt","fmt","from","from","from","init","into","provide","source","to_string","try_from","try_into","type_id","vzip","ConsoleWriter","InteractiveCommandError","InteractiveCommandExec","IoError","ProgressBarMode","UserError","UserInteraction","app_name","command_prefix","console_writer","description","exit_phrase","interactive","parse_and_exec","parse_progress_bar_mode_from_str","progress_bar","prompt","style","title","ConsoleWriter","InteractiveCommandError","InteractiveCommandExec","IoError","UserError","UserInteraction","app_name","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command_prefix","console_writer","deref","deref","deref","deref_mut","deref_mut","deref_mut","description","drop","drop","drop","exit_phrase","fmt","fmt","fmt","fmt","format_error","from","from","from","from","init","init","init","interact","into","into","into","is_exit_command","new","new","parse_and_exec","prompt","provide","read_line","show_help","show_info","show_prompt","source","title","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Monitor","None","ProgressBarMode","Standard","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","init","into","parse_progress_bar_mode_from_str","to_owned","to_string","try_from","try_into","type_id","vzip","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","TICKER","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__stability","__stability","__stability","__stability","__stability","__stability","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","binary","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","error","from","from","from","from","from","from","icons","info","init","init","init","init","init","init","into","into","into","into","into","into","scenario_title","seed","success","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Icon","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__stability","__stability","__stability","__stability","__stability","__stability","__stability","__stability","__stability","__stability","__stability","__stability","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","account","block","blockchain","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","failure","from","from","from","from","from","from","from","from","from","from","from","from","ignored","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","jcli","jormungandr","scenario","seed","success","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","CsvFileBuilder","borrow","borrow_mut","build","content","deref","deref_mut","drop","file","from","from_path","header","init","into","try_from","try_into","type_id","vzip","with_content_line","with_contents","with_header","enhance_exe_name","find_exec","append","copy_file","copy_folder","find_file","get_file_as_byte_vec","have_the_same_content","make_readonly","read_file","read_file_as_vector","trim_new_line_at_end","write_lines","Asset","AssetDto","CachedReleases","CannotDeserialize","CannotFindReleaseWithVersion","ChecksumType","Download","GitHubApi","GitHubApiBuilder","GitHubApiError","InvalidChecksum","Io","RateLimitExceeded","Release","ReleaseDto","RequestError","Sha1","Sha256","WrongChecksum","asset","assets","assets","assets_from_dtos","base_url","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","browser_download_url","build","check","checksum","clone","clone","clone","clone_into","clone_into","clone_into","compact_os_types","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_releases","download_to","download_url","draft","draft","draft","drop","drop","drop","drop","drop","drop","drop","extension","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_filename","get","get_asset_for_current_os_by_version","get_release_for_os","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","into_iter","name","name","new","new","new","os_type","prerelease","prerelease","prerelease","provide","published_at","release","released_date","released_date","releases_per_os","releases_per_os","source","tag_name","to_owned","to_owned","to_owned","to_string","token","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","version","version","version_str","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_endpoint_url","with_token","without_first","error","response","AssetDto","ReleaseDto","assets","assets","borrow","borrow","borrow_mut","borrow_mut","browser_download_url","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","download_url","draft","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","init","init","into","into","into","is_apple","is_generic","is_unix","is_windows","is_x86_64","name","name","os_type","prerelease","prerelease","published_at","published_at","serialize","serialize","serializer","tag_name","tag_name","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","deserialize","serialize","Async","BackgroundLoadProcess","Configuration","ConfigurationBuilder","Disabled","Duration","Failed","General","Id","Monitor","MonitorThread","MultiProgress","Overall","Pending","PerThread","Progress","ProgressBar","RayonWrapper","Rejected","Request","RequestFailure","RequestGenerator","RequestSendMode","RequestStatus","RequestStatusProvider","Response","Standard","Stats","Status","StatusUpdaterThread","Strategy","Success","Sync","abandon","abandon_with_message","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","config","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","disable_steady_tick","downgrade","drop","drop","drop","duration","duration","duration","duration","enable_steady_tick","executor","failure","fetch_limit","fetch_limit","finish","finish_and_clear","finish_at_current_pos","finish_with_message","fmt","fmt","from","from","from","get_statuses","handle","handle","hidden","id","id","ids","inc","inc_length","init","init","init","insert","into","into","into","is_finished","is_hidden","join","join_and_clear","joining","length","monitor","monitor","monitor","monitor","new","new","new_spinner","next","position","println","progress","rayon","request","requests","reset","reset_elapsed","reset_eta","response","response_collector","response_status","run_load","rx","set_draw_delta","set_draw_target","set_draw_target","set_length","set_message","set_move_cursor","set_position","set_prefix","set_style","shutdown_grace_period","shutdown_grace_period","split","start","start_async","start_background_async","start_multi_sync","start_sync","state","state","stats","stats","status","status","status_pace","status_pace","status_updater","step_delay","step_delay","stop_signal","stop_signal","strategy","strategy","thread_no","thread_no","tick","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tx","type_id","type_id","type_id","use_as_monitor_progress_bar","use_as_status_progress_bar","vzip","vzip","vzip","wait_for_finish","with_draw_target","with_draw_target","with_style","wrap_iter","wrap_read","wrap_write","message","Configuration","ConfigurationBuilder","Disabled","Duration","Monitor","Overall","PerThread","Progress","Standard","Strategy","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","duration","fetch_limit","fetch_limit","fetch_limit","fetch_limit","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","monitor","monitor","monitor","monitor","overall_requests","requests_per_thread","serialize","serialize","serialize","shutdown_grace_period","shutdown_grace_period","shutdown_grace_period","shutdown_grace_period","status_pace","status_pace","status_pace","status_pace","step_delay","step_delay","step_delay","step_delay","strategy","strategy","strategy","thread_no","thread_no","thread_no","thread_no","to_owned","to_owned","to_owned","total_votes","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","MonitorThread","borrow","borrow_mut","deref","deref_mut","drop","from","handle","init","into","start","start_multi","stop","stop_signal","try_from","try_into","type_id","vzip","use_as_monitor_progress_bar","use_as_status_progress_bar","DurationRequestConsumer","Executor","FixedCountRequestConsumer","NoopReducer","RateLimiter","Req","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","complete","complete","consume","consume","count","delay","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","from","from","from","from","from","full","full","full","full","init","init","init","init","init","into","into","into","into","into","into_folder","into_folder","last_tick","new","new","new","new","process_request","rate","rate","rate_adjust","reduce","request_mode","request_mode","spawn","split_at","split_at","split_off_left","split_off_left","task_completed","task_spawned","thread_pool","to_owned","to_owned","to_owned","to_reducer","to_reducer","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx","tx","type_id","type_id","type_id","type_id","type_id","until","vzip","vzip","vzip","vzip","vzip","wait_for_finish","Async","Failed","General","Id","Pending","RayonWrapper","Rejected","Request","RequestFailure","RequestGenerator","RequestSendMode","RequestStatus","RequestStatusProvider","Response","Success","Sync","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","duration","duration","duration","err","failure","failure","fmt","fmt","fmt","fmt","fmt","fold_with","from","from","from","from","from","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_socketlike","get_status","has_id","id","id","ids","init","init","init","init","init","init","into","into","into","into","into","into","into_failure","into_success","is_err","is_failed","is_failed","is_ok","is_pending","is_pending","is_success","is_success","new_from_status","next","pending","provide","split","split","status","status","success","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_status","vzip","vzip","vzip","vzip","vzip","vzip","message","IDLE_TIME","ResponseCollector","TIMEOUT","borrow","borrow_mut","deref","deref_mut","drop","from","handle","init","into","responses","responses","start","stop","stop_signal","try_from","try_into","type_id","vzip","Stats","borrow","borrow_mut","calculate_mean","calculate_passrate","calculate_tps","deref","deref_mut","drop","duration","errors","from","init","into","measure","new","print_errors","print_errors_if_any","print_summary","requests","total_requests_failed","total_requests_made","total_requests_passed","total_requests_pending","tps_status","try_from","try_into","type_id","vzip","RequestStatusProvider","SHUTDOWN_PERIOD_INTERVAL","Status","StatusProgressBar","StatusUpdaterThread","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","duration","duration","failure","fmt","fmt","from","from","from","get_statuses","handle","id","id","init","init","init","into","into","into","into","is_pending","monitor","new","new_failure","new_pending","new_success","prefix","progress_bar","response_status","set_message","spawn","status","stop","stop_signal","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_statuses","vzip","vzip","vzip","ConsumptionBenchmarkError","ConsumptionBenchmarkRun","Counter","Efficiency","EfficiencyBenchmarkDef","EfficiencyBenchmarkFinish","EfficiencyBenchmarkRun","Endurance","EnduranceBenchmarkDef","EnduranceBenchmarkFinish","EnduranceBenchmarkRun","Green","NamedProcess","NoProcessWitId","Red","ResourcesUsage","Speed","SpeedBenchmarkDef","SpeedBenchmarkFinish","SpeedBenchmarkRun","Status","Thresholds","Timestamp","Yellow","attribute","benchmark","benchmark_consumption","benchmark_efficiency","benchmark_endurance","benchmark_speed","counted","cpu_usage","current_marker","definition","definition","definition","definition","definition","definition","definition","efficiency","endurance","id","inner_thresholds","marker","markers","max","max","max","memory_usage","name","name","name","name","speed","start_marker","start_marker","start_marker","status","thresholds","thresholds","thresholds","thresholds","virtual_memory_usage","Consumption","Efficiency","Endurance","NamedProcess","Speed","consumption","efficiency","endurance","speed","Consumption","NamedProcess","against","average_resource_usage","average_usage","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","get_hash","hash","id","id","init","init","into","into","median","name","name","new","new","partial_cmp","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Efficiency","against","borrow","borrow_mut","clone","clone_into","counted","deref","deref_mut","drop","eq","fmt","fmt","from","init","into","max","new","partial_cmp","to_owned","to_string","try_from","try_into","type_id","vzip","Endurance","against","as_secs","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","from","init","into","new","partial_cmp","to_owned","to_string","try_from","try_into","type_id","vzip","Speed","against","as_secs","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","from","init","into","into","new","partial_cmp","to_owned","to_string","try_from","try_into","type_id","vzip","ConsumptionBenchmarkDef","ConsumptionBenchmarkError","ConsumptionBenchmarkFinish","ConsumptionBenchmarkRun","EfficiencyBenchmarkDef","EfficiencyBenchmarkFinish","EfficiencyBenchmarkRun","EnduranceBenchmarkDef","EnduranceBenchmarkFinish","EnduranceBenchmarkRun","SpeedBenchmarkDef","SpeedBenchmarkFinish","SpeedBenchmarkRun","benchmark_consumption","benchmark_efficiency","benchmark_endurance","benchmark_speed","consumption_benchmark","efficiency_benchmark","endurance_benchmark","speed_benchmark","ConsumptionBenchmarkDef","ConsumptionBenchmarkError","ConsumptionBenchmarkFinish","ConsumptionBenchmarkRun","ConsumptionBenchmarkRunAsync","NoProcessWitId","bare_metal_stake_pool_consumption_target","benchmark","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consumptions","definition","definition","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","exception","fmt","fmt","for_process","for_processes","from","from","from","from","from","handle","init","init","init","init","init","into","into","into","into","into","markers","name","name","new","no_target","pids","print","print_single","provide","snapshot","start","start_async","stop","stop","stop_signal","target","thresholds","thresholds","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","EfficiencyBenchmarkDef","EfficiencyBenchmarkFinish","EfficiencyBenchmarkRun","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","current_marker","definition","definition","definition","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","efficiency","efficiency","exception","fmt","from","from","from","increment","increment_by","init","init","init","into","into","into","max","max","name","name","new","no_target","print","start","start_marker","status","stop","target","thresholds","thresholds","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","EnduranceBenchmarkDef","EnduranceBenchmarkFinish","EnduranceBenchmarkRun","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","definition","definition","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","endurance","exception","fmt","from","from","from","init","init","init","into","into","into","max_endurance_reached","name","name","new","no_target","print","print_with_thresholds","start","start_marker","stop","target","thresholds","thresholds","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","SpeedBenchmarkDef","SpeedBenchmarkFinish","SpeedBenchmarkRun","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","definition","definition","definition","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","init","init","init","into","into","into","name","name","new","new","no_target","print","speed","start","start_marker","stop","target","thresholds","thresholds","timeout_exceeded","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_thresholds","Counter","ResourcesUsage","Timestamp","counter","resources_usage","timestamp","Counter","add","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","div","drop","from","from","init","into","into","new","sub","to_owned","try_from","try_into","type_id","vzip","ResourcesUsage","borrow","borrow_mut","clone","clone_into","cmp","cpu_usage","cpu_usage","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","init","into","memory_usage","memory_usage","new","partial_cmp","to_owned","to_string","try_from","try_into","type_id","virtual_memory_usage","virtual_memory_usage","vzip","Timestamp","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","duration_since","elapsed","fmt","from","from","from_str","init","into","into","new","to_owned","try_from","try_into","type_id","vzip","Green","Red","Status","Yellow","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","Thresholds","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","fmt","from","green_threshold","init","inner_thresholds","into","max","max","new","new_consumption","new_efficiency","new_endurance","new_speed","red_threshold","thresholds","to_owned","to_string","try_from","try_into","type_id","vzip","yellow_threshold","Error","Openssl","borrow","borrow_mut","convert_to_der","deref","deref_mut","drop","from","generate_keys","genrsa","init","into","new","path_to_str","pkcs8","program","req","try_from","try_into","type_id","version","vzip","x509","","","","file_binary_content_is_same_as","file_exists_and_not_empty","file_text_content_is_same_as","ConsumptionBenchmarkError","ConsumptionBenchmarkRun","CsvFileBuilder","EfficiencyBenchmarkDef","EfficiencyBenchmarkFinish","EfficiencyBenchmarkRun","Endurance","EnduranceBenchmarkDef","EnduranceBenchmarkFinish","EnduranceBenchmarkRun","GitHubApi","GitHubApiError","NamedProcess","Openssl","ProcessError","ProcessOutput","Release","ResourcesUsage","Speed","SpeedBenchmarkDef","SpeedBenchmarkFinish","SpeedBenchmarkRun","Thresholds","Timestamp","Wait","WaitBuilder","benchmark_consumption","benchmark_efficiency","benchmark_endurance","benchmark_speed","decompress","download_file","generate_keys","load","process","ProcessError","ProcessExited","TimeoutReached","Wait","WaitBuilder","WaitError","attempts","attempts","borrow","borrow_mut","current","deref","deref_mut","drop","fmt","fmt","from","init","into","output_extensions","provide","run_process_and_get_output","run_process_until_exited_successfully","run_process_until_response_matches","sleep","sleep","sleep","to_string","try_from","try_into","type_id","vzip","wait","message","secs","ProcessOutput","as_lossy_string","as_multi_line","as_multi_node_yaml","as_single_line","as_single_node_yaml","err_as_lossy_string","err_as_single_line","try_as_single_node_yaml","Error","TimeoutReached","Wait","WaitBuilder","advance","attempts","attempts","attempts","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","check_timeout","clone","clone_into","current","current","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","new","new","provide","sleep","sleep","sleep_between_tries","sleep_duration","timeout_reached","to_owned","to_string","to_string","tries","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","secs","StringExtension","rem_first","remove_quotas","CannotCreateOutputFile","CannotDownloadFile","IoError","WebError","api_token","borrow","borrow_mut","deref","deref_mut","download_file","drop","fmt","fmt","from","from","from","init","into","provide","source","to_string","try_from","try_into","type_id","vzip","APIToken","APITokenManager","API_TOKEN_HEADER","InvalidHeader","ParseError","TokenError","UnauthorizedToken","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from","from_string","init","init","init","into","into","into","into_response","is_token_valid","new","new","provide","source","to_json","to_message","to_owned","to_response","to_status_code","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verification_token","vzip","vzip","vzip"],"q":[[0,"jortestkit"],[14,"jortestkit::archive"],[41,"jortestkit::console"],[60,"jortestkit::console::interactive"],[130,"jortestkit::console::progress_bar"],[155,"jortestkit::console::style"],[265,"jortestkit::console::style::icons"],[482,"jortestkit::csv"],[503,"jortestkit::env"],[505,"jortestkit::file"],[516,"jortestkit::github"],[689,"jortestkit::github::GitHubApiError"],[691,"jortestkit::github::release"],[754,"jortestkit::github::release::serializer"],[756,"jortestkit::load"],[933,"jortestkit::load::RequestStatus"],[934,"jortestkit::load::config"],[1042,"jortestkit::load::monitor"],[1060,"jortestkit::load::progress"],[1062,"jortestkit::load::rayon"],[1175,"jortestkit::load::request"],[1320,"jortestkit::load::request::RequestStatus"],[1321,"jortestkit::load::response"],[1342,"jortestkit::load::stats"],[1371,"jortestkit::load::status"],[1440,"jortestkit::measurement"],[1504,"jortestkit::measurement::attribute"],[1513,"jortestkit::measurement::attribute::consumption"],[1567,"jortestkit::measurement::attribute::efficiency"],[1592,"jortestkit::measurement::attribute::endurance"],[1617,"jortestkit::measurement::attribute::speed"],[1643,"jortestkit::measurement::benchmark"],[1664,"jortestkit::measurement::benchmark::consumption_benchmark"],[1766,"jortestkit::measurement::benchmark::efficiency_benchmark"],[1833,"jortestkit::measurement::benchmark::endurance_benchmark"],[1897,"jortestkit::measurement::benchmark::speed_benchmark"],[1959,"jortestkit::measurement::marker"],[1965,"jortestkit::measurement::marker::counter"],[1988,"jortestkit::measurement::marker::resources_usage"],[2018,"jortestkit::measurement::marker::timestamp"],[2042,"jortestkit::measurement::status"],[2066,"jortestkit::measurement::thresholds"],[2097,"jortestkit::openssl"],[2121,"jortestkit::predicates"],[2127,"jortestkit::prelude"],[2162,"jortestkit::process"],[2195,"jortestkit::process::ProcessError"],[2196,"jortestkit::process::WaitError"],[2197,"jortestkit::process::output_extensions"],[2206,"jortestkit::process::wait"],[2275,"jortestkit::process::wait::Error"],[2276,"jortestkit::string"],[2279,"jortestkit::web"],[2304,"jortestkit::web::api_token"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","centralized styles for the different items to display.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","style to apply when displaying the path to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","icons are not meant to add some SWAG to the display, not …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","style to apply when displaying the <code>Seed</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","icon associated the <code>jcli</code> command line binary","icon associated the <code>jcli</code> command line binary","","icon associated the test <code>Seed</code> to re-run the same tests with","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","narrow linux distribution to linux type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manages multiple progress bars from different threads.","","","","","A progress bar or spinner.","","","","","Not a type alias because the split method is interpreted …","","","","","","","","","","","","Finishes the progress bar and leaves the current message …","Finishes the progress bar and sets a message, and leaves …","Adds a progress bar.","","","","","","","","","","","","","","","","","Undoes <code>enable_steady_tick</code>.","Creates a new weak reference to this <code>ProgressBar</code>.","","","","","","","","Spawns a background thread to tick the progress bar.","","","","","Finishes the progress bar and leaves the current message.","Finishes the progress bar and completely clears it.","Finishes the progress bar at current position and leaves …","Finishes the progress bar and sets a message.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Creates a completely hidden progress bar.","","","","Advances the position of a progress bar by delta.","Increase the length of the progress bar.","","","","Inserts a progress bar.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","A quick convenience check if the progress bar is hidden.","Waits for all progress bars to report that they are …","Works like <code>join</code> but clears the progress bar in the end.","","","","","","","Creates a new multi progress object.","Creates a new progress bar with a given length.","Creates a new spinner.","","","Print a log line above the progress bar.","","","","","","Resets elapsed time","Resets the ETA calculation.","","","","","","Limit redrawing of progress bar to every <code>n</code> steps. Defaults …","Sets a different draw target for the multiprogress bar.","Sets a different draw target for the progress bar.","Sets the length of the progress bar.","Sets the current message of the progress bar.","Set whether we should try to move the cursor when possible …","Sets the position of the progress bar.","Sets the current prefix of the progress bar.","Overrides the stored style.","","","","","","","","","","","","","","","","","","","","","","","","","","Manually ticks the spinner or progress bar.","","","","","","","","","","","","","","","","","","Creates a new multi progress object with the given draw …","Creates a new progress bar with a given length and draw …","A convenience builder-like function for a progress bar …","Wraps an iterator with the progress bar.","Wraps a Reader with the progress bar.","Wraps a Writer with the progress bar.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Wait at most for <code>delay</code>, but account for time passed in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Not a type alias because the split method is interpreted …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns a person with the name given them","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Runs command, wait for output and returns it output","Runs command for n times with m second interval.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","API Token wrapper type","","Header where token should be present in requests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,16,0,16,0,15,17,17,15,17,0,174,0,0,15,0,15,0,0,0,16,16,0,15,17,15,16,17,15,16,15,15,17,17,17,15,16,17,15,16,15,17,15,16,17,17,15,16,16,15,17,15,16,16,17,15,16,17,17,15,16,17,17,15,174,15,16,17,15,15,15,16,15,15,16,17,15,16,17,15,16,17,15,16,17,15,16,19,19,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,0,0,0,0,0,0,0,23,24,25,26,27,28,0,0,0,0,0,0,0,0,0,0,0,0,0,23,24,25,26,27,28,23,24,25,26,27,28,23,23,24,24,25,25,26,26,27,27,28,28,23,24,25,26,27,28,23,24,25,26,27,28,0,23,24,25,26,27,28,0,0,23,24,25,26,27,28,23,24,25,26,27,28,0,0,0,23,24,25,26,27,28,23,24,25,26,27,28,23,24,25,26,27,28,23,24,25,26,27,28,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,32,33,34,35,36,37,38,39,40,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,31,32,33,34,35,36,37,38,39,40,41,30,31,32,33,34,35,36,37,38,39,40,41,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,30,31,32,33,34,35,36,37,38,39,40,41,30,31,32,33,34,35,36,37,38,39,40,41,0,30,31,32,33,34,35,36,37,38,39,40,41,0,30,31,32,33,34,35,36,37,38,39,40,41,30,31,32,33,34,35,36,37,38,39,40,41,0,0,0,0,0,0,30,31,32,33,34,35,36,37,38,39,40,41,30,31,32,33,34,35,36,37,38,39,40,41,30,31,32,33,34,35,36,37,38,39,40,41,30,31,32,33,34,35,36,37,38,39,40,41,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,0,56,0,0,0,56,56,56,0,0,56,55,55,56,51,50,66,51,54,58,54,53,56,55,51,50,58,54,53,56,55,51,50,52,53,55,51,55,51,50,55,51,50,50,53,58,54,53,56,55,51,50,58,54,53,56,55,51,50,54,51,51,50,66,50,58,54,53,56,55,51,50,55,56,56,55,51,50,58,54,53,56,56,56,56,56,55,51,50,55,54,58,50,58,54,53,56,55,51,50,58,58,54,53,56,55,51,50,58,51,52,58,54,53,51,50,66,50,56,66,0,50,50,50,50,56,66,55,51,50,56,54,53,58,54,53,56,55,51,50,58,54,53,56,55,51,50,58,54,53,56,55,51,50,53,50,50,50,58,54,53,56,55,51,50,53,53,50,175,175,0,0,66,66,66,52,66,52,52,66,52,66,52,66,52,66,52,66,52,52,66,66,52,66,52,66,52,66,52,66,52,66,52,66,66,52,52,52,52,52,52,52,52,52,66,66,66,66,66,52,0,66,66,66,52,66,52,66,52,66,52,66,52,0,0,80,0,0,0,90,97,107,77,0,0,0,0,97,107,97,90,0,0,77,0,0,0,0,0,0,0,90,0,0,0,0,107,80,70,70,71,71,70,89,71,70,89,70,70,0,71,71,70,89,71,70,89,70,70,71,70,89,76,88,81,75,70,89,81,96,79,70,70,70,70,71,70,71,70,89,86,101,120,70,81,75,76,70,70,71,70,89,71,71,70,89,70,70,71,71,71,70,0,96,89,79,71,70,70,78,70,70,0,0,0,88,70,70,70,0,89,75,0,71,70,71,70,70,70,71,70,70,70,96,79,78,89,0,0,0,0,71,70,0,89,0,81,96,79,89,96,79,101,120,96,79,96,79,70,70,71,70,89,71,70,89,71,71,70,89,0,0,71,70,89,89,71,70,70,70,70,70,176,0,0,90,97,0,97,97,90,90,0,96,97,90,79,96,97,90,79,96,97,90,79,97,90,79,96,97,90,79,96,97,90,79,97,90,79,96,97,90,79,96,96,79,96,79,97,90,79,96,97,90,79,96,97,90,79,96,97,90,79,96,79,96,79,96,96,97,90,79,96,79,96,79,96,79,96,79,96,79,96,79,79,96,79,96,79,96,79,97,90,79,79,96,97,90,79,96,97,90,79,96,97,90,79,96,97,90,79,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,0,0,0,0,0,0,0,105,83,102,103,104,105,83,102,103,104,102,103,104,102,103,104,103,104,103,104,103,102,105,83,102,103,104,105,83,102,103,104,105,83,102,103,104,105,83,102,103,104,103,103,104,104,105,83,102,103,104,105,83,102,103,104,103,104,102,83,102,103,104,0,103,104,102,105,103,104,83,103,104,103,104,83,83,83,102,103,104,103,104,105,83,102,103,104,105,83,102,103,104,103,104,105,83,102,103,104,104,105,83,102,103,104,83,80,107,77,0,107,0,77,0,0,0,0,0,0,0,107,80,76,109,77,80,81,107,76,109,77,80,81,107,77,80,81,107,77,80,81,107,76,109,77,80,81,107,76,109,77,80,81,107,76,109,77,80,81,107,81,76,81,81,81,81,77,77,80,81,107,109,76,109,109,109,77,80,81,107,109,109,109,109,109,177,81,81,81,76,76,109,77,80,81,107,76,109,77,80,81,107,81,81,81,81,107,81,81,107,81,107,81,78,81,77,78,109,81,81,81,77,80,81,107,77,76,109,77,80,81,107,76,109,77,80,81,107,76,109,77,80,81,107,81,76,109,77,80,81,107,176,115,0,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,0,0,0,0,121,120,75,121,120,75,75,75,121,120,75,121,120,75,121,120,75,75,75,75,120,75,121,120,75,86,120,75,75,121,120,75,121,120,75,75,75,121,121,75,75,75,121,121,75,121,120,75,120,120,75,121,120,75,121,120,75,121,120,75,0,121,120,75,0,0,0,0,0,0,0,0,0,0,0,128,0,138,128,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,132,129,140,140,119,143,144,145,136,142,119,142,130,127,0,136,132,123,127,129,130,123,124,125,145,140,143,144,0,0,123,124,125,129,0,0,0,0,0,0,0,0,0,0,0,126,126,126,130,126,130,126,130,126,130,126,130,126,130,126,130,126,130,126,130,130,130,126,126,130,126,130,130,130,130,130,126,130,126,126,130,130,130,126,126,130,126,130,126,130,126,130,126,130,126,130,126,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,122,139,139,137,138,122,136,139,137,138,122,136,122,136,122,136,137,137,136,139,137,138,122,136,139,137,138,122,136,139,137,138,122,136,136,138,138,122,122,139,137,138,122,136,139,139,137,138,122,136,139,137,138,122,136,136,122,122,122,122,122,137,137,138,136,122,122,139,136,139,122,122,122,122,136,138,139,137,138,122,136,139,137,138,122,136,139,137,138,122,136,139,137,138,122,136,0,0,0,140,119,123,140,119,123,123,123,140,119,140,119,140,119,123,140,119,123,140,119,123,119,119,140,119,140,119,123,140,140,140,119,123,140,119,123,123,123,123,123,123,123,119,123,140,119,140,123,123,123,123,119,140,119,123,140,119,123,140,119,123,140,119,123,0,0,0,143,124,142,143,124,142,124,142,124,142,143,142,143,124,142,143,124,142,143,124,142,142,143,142,143,124,142,143,124,142,143,124,142,143,124,124,124,124,142,142,124,143,143,124,124,124,124,142,142,143,124,142,143,124,142,143,124,142,143,124,142,0,0,0,144,145,125,144,145,125,125,125,144,144,145,144,145,125,144,145,125,144,145,125,145,144,145,125,144,145,125,144,145,125,125,125,145,125,125,145,145,125,144,144,125,125,125,144,125,145,144,145,125,144,145,125,144,145,125,144,145,125,125,0,0,0,0,0,0,0,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,0,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,128,128,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,0,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,0,0,151,151,151,151,151,151,151,0,151,151,151,151,0,151,151,151,151,151,151,151,151,151,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155,164,0,0,0,163,162,155,155,162,155,155,155,155,155,155,155,155,0,155,0,0,0,0,163,162,155,155,155,155,155,0,178,179,0,180,180,180,180,180,180,180,180,0,164,0,0,162,162,163,162,163,164,162,163,164,162,163,162,162,162,162,162,163,162,163,164,162,163,164,162,163,164,162,164,164,162,162,163,164,162,162,163,164,162,163,164,162,163,162,164,163,162,163,162,162,162,164,162,163,163,164,162,163,164,162,163,164,162,163,164,162,179,0,0,181,60,60,60,0,0,60,60,60,60,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,0,0,168,168,0,168,165,171,165,168,171,165,168,165,165,171,165,168,171,165,168,171,165,168,165,165,165,165,165,168,168,171,165,165,168,168,165,171,165,168,171,165,168,168,171,171,165,168,168,168,168,165,168,168,168,171,165,168,171,165,168,171,165,168,171,171,165,168],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[1,1],[[3,[2]]]],[4],[4],[4],[[2,5],6],[[2,5],6],[7,2],[8,2],[[]],[[],4],[[]],[9],[2,[[11,[10]]]],[[],12],[[],3],[[],3],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[12]],15],[[3,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[15,15],[[]],0,0,[4],[4],[4],[4],[4],[4],0,[4],[4],[4],0,[[17,5],6],[[15,5],6],[[16,5],6],[[16,5],6],[[15,16]],[[]],[[]],[8,16],[[]],[[],4],[[],4],[[],4],[17,[[3,[16]]]],[[]],[[]],[[]],[17,18],[[12,12,12,12,12,[14,[12]]],17],[[12,12,12,[14,[12]]],15],[[[14,[12]],15],[[3,[16]]]],0,[9],[17,[[3,[[14,[12]],16]]]],[[15,16]],[15],[15],[16,[[11,[10]]]],0,[[]],[[],12],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[19,19],[[]],[4],[4],[4],[[19,19],18],[[],18],[[19,5],6],[[19,5],6],[[]],[[],4],[[]],[20,[[3,[19,21]]]],[[]],[[],12],[[],3],[[],3],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],[23,22],[4],[24,22],[25,22],[4],[4],[26,22],[4],[27,22],[28,22],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,29],[4],[31,29],[4],[4],[32,29],[4],[33,29],[34,29],[4],[35,29],[4],[36,29],[4],[37,29],[4],[4],[38,29],[39,29],[4],[40,29],[4],[41,29],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[42,[[3,[[43,[10]]]]]],0,[4],[4],[4],0,[[]],[[[44,[1]]],42],0,[[],4],[[]],[[],3],[[],3],[[],13],[[]],[[42,[14,[12]]],42],[[42,[14,[[14,[12]]]]],42],[[42,[14,[20]]],42],[1,[[45,[1]]]],[[[44,[1]]],[[11,[46]]]],[[[44,[1]],[47,[12]]],[[3,[8]]]],[[[44,[1]],[44,[1]],18],[[3,[8]]]],[[1,1,18],[[3,[48]]]],[[[44,[1]],20],[[3,[[11,[46]],8]]]],[[[44,[1]]],[[3,[[14,[49]],8]]]],[[[44,[1]],[44,[1]]],[[3,[18,8]]]],[1],[[[44,[1]]],[[3,[12,8]]]],[[[44,[1]]],[[3,[[14,[12]],[43,[10]]]]]],[12,12],[[[44,[1]],[14,[[47,[12]]]]],[[3,[8]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[50,[[14,[51]]]],0,[[[14,[52]]],[[14,[51]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[53,54],[[55,1],[[3,[18,56]]]],0,[55,55],[51,51],[50,50],[[]],[[]],[[]],[[50,57],57],[[],53],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[54,[[3,[58,56]]]],[[51,1],[[3,[56]]]],[51,12],[50,18],0,0,[4],[4],[4],[4],[4],[4],[4],[55,20],[[56,5],6],[[56,5],6],[[55,5],6],[[51,5],6],[[50,5],6],[[]],[[]],[[]],[59,56],[[]],[8,56],[60,56],[61,56],[[]],[[]],[[]],[1,[[11,[55]]]],[[54,20],[[3,[62,56]]]],[[58,12],[[3,[[11,[51]],56]]]],[[50,57],[[11,[51]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,[[63,[50]]]],[51,12],0,[[[14,[50]]],58],[[12,[11,[12]]],54],[[],53],[51,57],[50,18],0,0,[9],0,0,[50,11],0,[50,64],0,[56,[[11,[10]]]],0,[[]],[[]],[[]],[[],12],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[50,65],0,[50,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[53,[47,[12]]],53],[[53,[11,[[47,[12]]]]],53],[20,20],0,0,0,0,[66,14],0,[[]],[[]],[[]],[[]],0,[66,66],[52,52],[[]],[[]],[4],[4],[4],[4],[67,[[3,[66]]]],[67,[[3,[52]]]],[52,12],0,[4],[4],[[66,66],18],[[52,52],18],[[],18],[[],18],[[66,5],6],[[52,5],6],[[]],[[]],[[],4],[[],4],[[]],[66,50],[[]],[52,18],[52,18],[52,18],[52,18],[52,18],[52,12],0,[52,57],[66,18],0,[66,[[11,[68]]]],0,[[66,69],3],[[52,69],3],0,[66,12],0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[]],[[]],[67,[[3,[[11,[68]]]]]],[[11,69],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[70],[[70,20]],[[71,70],70],[[]],[[]],[[]],[[]],[[]],[[]],[70,70],[[]],0,[[],71],[4],[4],[4],[4],[4],[4],[70],[70,72],[4],[4],[4],0,0,0,0,[[70,73]],0,0,0,0,[70],[70],[70],[[70,20]],[[71,5],[[3,[74]]]],[[70,5],[[3,[74]]]],[[]],[[]],[[]],[[],[[14,[75]]]],0,0,[[],70],0,0,0,[[70,73]],[[70,73]],[[],4],[[],4],[[],4],[[71,4,70],70],[[]],[[]],[[]],[70,18],[70,18],[71,[[3,[8]]]],[71,[[3,[8]]]],0,[70,73],0,0,0,0,[[],71],[73,70],[[],70],[[],[[3,[76,77]]]],[70,73],[[70,[47,[12]]]],0,0,0,0,[70],[70],[70],0,0,0,[[78,79,80,[82,[[14,[81]]]]],83],0,[[70,73]],[[71,84]],[[70,84]],[[70,73]],[[70,20]],[[71,18]],[[70,73]],[[70,20]],[[70,85]],0,0,[[]],0,[[78,[0,[86,87]],79,20],88],[[78,[0,[86,87]],79,20],89],[14,[[14,[88]]]],[[78,79,20],88],0,0,0,[89,88],0,0,0,0,0,0,0,0,0,0,0,0,0,[70],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],13],[[],13],[[],13],[[90,20,70]],[70],[[]],[[]],[[]],[89,88],[84,71],[[73,84],70],[[70,85],70],[[70,91],[[92,[91]]]],[[70,93],[[94,[93]]]],[[70,95],[[94,[95]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[96,79],[97,97],[90,90],[79,79],[[]],[[]],[[]],[4],[4],[4],[4],[4],[4],[4],[4],[67,[[3,[97]]]],[67,[[3,[90]]]],[67,[[3,[79]]]],[4],[4],[4],[4],[98,96],[[96,4],96],[79,[[11,[4]]]],0,0,[[97,5],6],[[90,5],6],[[79,5],6],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[96,90],96],[79,90],0,0,[99,96],[99,96],[[97,69],3],[[90,69],3],[[79,69],3],[[96,98],96],[79,98],0,0,[[96,98],96],[79,98],0,0,[[96,98],96],[79,98],0,0,[79,97],0,0,[[96,4],96],[79,4],0,0,[[]],[[]],[[]],[79,99],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],0,[[]],[[]],[4],[4],[4],[[]],0,[[],4],[[]],[[100,90,20],101],[[100,90,70,20],101],[101],0,[[],3],[[],3],[[],13],[[]],[[90,20,70]],[70],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[102,102],[103,103],[104,104],[[]],[[]],[[]],[103],[104],[[103,[3,[76,77]]],103],[[104,[3,[76,77]]],104],0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[]],[[]],[[]],[[]],[[]],[103,18],[103,18],[104,18],[104,18],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[103],[104],0,[4,83],[98,102],[[73,80,98,[82,[[14,[81]]]]],103],[[98,80,98,[82,[[14,[81]]]]],104],[[[3,[76,77]],80,82]],0,0,[102],[105],0,0,[[83,[0,[106,87]]]],[[103,4]],[[104,4]],[103,103],[104,104],0,0,0,[[]],[[]],[[]],[103],[104],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],0,[[]],[[]],[[]],[[]],[[]],[83],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,77],[80,80],[81,81],[107,107],[[]],[[]],[[]],[[]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[81,98],0,0,[81,[[11,[77]]]],[[[11,[108]],77,98],81],0,[[77,5],6],[[77,5],6],[[80,5],6],[[81,5],6],[[107,5],6],[[[109,[78]],110],110],[[]],[[],109],[[]],[111],[[]],[[]],[[]],[[]],[112],[112],[113],[114],[112],[[],[[64,[12,107]]]],[[81,20],18],[81,11],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],[[]],[[81,98],81],[[81,98],81],[81,18],[81,18],[107,18],[81,18],[81,18],[107,18],[81,18],[107,18],[[81,75],81],[[],[[3,[76,77]]]],[[[11,[108]],98],81],[9],[[]],[[[109,[78]]]],[81,107],0,[[[11,[108]],98],81],[[]],[[]],[[]],[[]],[[],12],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[81,75]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[4],[4],[4],[[]],0,[[],4],[[]],[115,100],0,[[[116,[[14,[81]]]]],115],[115,[[100,[[117,[[14,[81]]]]]]]],0,[[],3],[[],3],[[],13],[[]],0,[[]],[[]],[88,118],[88,118],[88,118],[4],[4],[4],0,[88,[[14,[77]]]],[[]],[[],4],[[]],[[88,20,99],119],[[[14,[81]],98],88],[[88,[14,[77]]]],[88],[[88,20]],0,[88,4],[88,4],[88,4],[88,4],[88,12],[[],3],[[],3],[[],13],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[[]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[75,98],0,[75,[[11,[77]]]],[[120,5],6],[[75,5],6],[[]],[[]],[[]],[[],[[14,[75]]]],0,[75,108],0,[[],4],[[],4],[[],4],[[]],[[]],[75,107],[[]],[75,18],0,[[70,12,90],121],[[98,108,12],75],[[98,108],75],[[98,108],75],0,0,0,[[121,20]],[[100,[0,[86,87]],90,[11,[4]],20,98,98],120],[75,107],[120],0,[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[100,[11,[4]]],[[14,[75]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[47,[12]]],122],[[[47,[12]]],123],[[[47,[12]]],124],[[[47,[12]]],125],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[126,127],128],[[[14,[129]]],129],0,[[]],[[]],[[]],[[]],[130,130],[126,126],[[]],[[]],[4],[4],[4],[4],[4],[4],[[130,130],18],[[126,126],18],[[],18],[[130,5],6],[[130,5],6],[[126,5],6],[[126,5],6],[[]],[[]],[[],73],[130],[130,4],0,[[],4],[[],4],[[]],[[]],[[[14,[99]]],99],[130,12],0,[[12,4],130],[[[14,[129]]],126],[[126,126],[[11,[131]]]],[[]],[[]],[[],12],[[],12],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[]],[[]],0,[[132,127],128],[[]],[[]],[132,132],[[]],0,[4],[4],[4],[[132,132],18],[[132,5],6],[[132,5],6],[[]],[[],4],[[]],0,[[99,99],132],[[132,132],[[11,[131]]]],[[]],[[],12],[[],3],[[],3],[[],13],[[]],0,[[133,127],128],[133,73],[[]],[[]],[133,133],[[]],[4],[4],[4],[[133,133],18],[[133,5],6],[[133,5],6],[98,133],[[]],[[],4],[[]],[[134,134],133],[[133,133],[[11,[131]]]],[[]],[[],12],[[],3],[[],3],[[],13],[[]],0,[[135,127],128],[135,73],[[]],[[]],[135,135],[[]],[4],[4],[4],[[135,135],18],[[135,5],6],[[135,5],6],[98,135],[[]],[[],4],[[]],[135,98],[[134,134],135],[[135,135],[[11,[131]]]],[[]],[[],12],[[],3],[[],3],[[],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[47,[12]]],122],[[[47,[12]]],123],[[[47,[12]]],124],[[[47,[12]]],125],0,0,0,0,0,0,0,0,0,0,[122,122],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[122,122],[136,136],[[]],[[]],0,0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[136,12],137],[[138,5],6],[[138,5],6],[[122,[47,[12]],4],122],[[122,[14,[130]]],122],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[]],[[]],0,[122,12],0,[12,122],[122,122],0,[137],[[137,130,126]],[9],[136,[[3,[138]]]],[122,136],[[122,98],139],[139,137],[136,137],0,[[122,129],122],[122,[[11,[127]]]],0,[[]],[[]],[[],12],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[123,123],[[]],0,[119,123],0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[119,132],0,[[140,12],119],[[119,5],6],[[]],[[]],[[]],[140,140],[[140,99],140],[[],4],[[],4],[[],4],[[]],[[]],[[]],[123,141],0,[123,12],0,[12,123],[123,123],[119],[123,140],0,[119,128],[140,119],[[123,99],123],[123,[[11,[127]]]],0,[[]],[[],12],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[142,142],[[]],[[]],0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],0,[[143,12],142],[[142,5],6],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[]],[[]],[[]],[143,18],[124,12],0,[12,124],[124,124],[142],[[142,[127,[133]]]],[124,143],0,[143,142],[[124,98],124],[124,[[11,[127]]]],0,[[]],[[]],[[],12],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[125,125],[[]],[144,125],0,0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[[145,5],6],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[]],[[]],[[]],[125,12],0,[[125,135],145],[12,125],[125,125],[145],0,[125,144],0,[144,145],[[125,98],125],[125,[[11,[127]]]],0,[144,18],[[]],[[],12],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[125,[127,[135]]],125],0,0,0,0,0,0,0,[[141,141],141],[[]],[[]],[141,141],[[]],[[],141],[4],[4],[[141,141],141],[4],[[]],[99,141],[[],4],[141,99],[[]],[[],141],[[141,141],141],[[]],[[],3],[[],3],[[],13],[[]],0,[[]],[[]],[129,129],[[]],[[129,129],131],[129,99],0,[4],[4],[4],[[129,129],18],[[],18],[[129,5],6],[[129,5],6],[[]],[[],4],[[]],[129,99],0,[[99,99,99],129],[[129,129],[[11,[131]]]],[[]],[[],12],[[],3],[[],3],[[],13],[129,99],0,[[]],0,[[]],[[]],[134,134],[[]],[[],134],[4],[4],[4],[[134,134],98],[134,98],[[134,5],6],[[]],[146,134],[20,[[3,[134]]]],[[],4],[134,146],[[]],[[],134],[[]],[[],3],[[],3],[[],13],[[]],0,0,0,0,[[]],[[]],[128,128],[[]],[4],[4],[4],[[128,128],18],[[],18],[[128,5],6],[[128,5],6],[[]],[[],4],[[]],[[]],[[],12],[[],3],[[],3],[[],13],[[]],0,[[]],[[]],[[[127,[147]]],[[127,[147]]]],[[]],[4],[4],[4],[[[127,[148]],5],6],[[[127,[[0,[149,147,148,150]]]],5],6],[[]],[[[127,[[0,[150,147]]]]],[[0,[150,147]]]],[[],4],0,[[]],[[[127,[[0,[150,147]]]]],[[0,[150,147]]]],0,[[[0,[150,147]],[0,[150,147]],[0,[150,147]],[0,[150,147]]],[[127,[[0,[150,147]]]]]],[129,[[127,[126]]]],[99,[[127,[132]]]],[98,[[127,[133]]]],[98,[[127,[135]]]],[[[127,[[0,[150,147]]]]],[[0,[150,147]]]],[[[127,[[0,[150,147]]]]],14],[[]],[[],12],[[],3],[[],3],[[],13],[[]],[[[127,[[0,[150,147]]]]],[[0,[150,147]]]],0,0,[[]],[[]],[[151,152,152],[[3,[12,8]]]],[4],[4],[4],[[]],[153],[[151,99,152],[[3,[12,8]]]],[[],4],[[]],[[],[[3,[151,8]]]],[152,12],[[151,152,152],[[3,[12,8]]]],0,[[151,152,152],[[3,[12,8]]]],[[],3],[[],3],[[],13],[151,[[3,[12,8]]]],[[]],[[151,152,152,152],[[3,[12,8]]]],0,0,0,[[[47,[46]]],[[154,[1]]]],[[],[[154,[1]]]],[[[44,[1]]],[[154,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[4],[4],[4],[[155,5],6],[[155,5],6],[[]],[[],4],[[]],0,[9],[156,157],[[156,73,158,20,20]],[[156,159,73,73,20,20],[[3,[155]]]],[73],0,0,[[],12],[[],3],[[],3],[[],13],[[]],0,0,0,0,[[],12],[[],[[14,[12]]]],[[],[[14,[[160,[12,12]]]]]],[[],12],[[],[[160,[12,12]]]],[[],12],[[],12],[[],[[3,[[160,[12,12]],161]]]],0,0,0,0,[162],[162,73],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[163,162],[162,[[3,[164]]]],[162,162],[[]],[162,73],0,[[],163],[[],162],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[164,5],6],[[164,5],6],[[162,5],6],[[162,5],6],[[]],[[]],[[]],[98,162],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[],163],[[98,73],162],[9],0,0,[[163,73],163],[162,98],[162,18],[[]],[[],12],[[],12],[[163,73],163],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],[[]],[[]],[[]],0,0,[20,20],[[]],0,0,0,0,0,[[]],[[]],[4],[4],[[12,1],[[3,[60]]]],[4],[[60,5],6],[[60,5],6],[8,60],[[]],[61,60],[[],4],[[]],[9],[60,[[11,[10]]]],[[],12],[[],3],[[],3],[[],13],[[]],0,0,0,0,0,0,0,[165],[[]],[[]],[[]],[[]],[[]],[[]],[165,165],[[]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[],[[167,[166]]]],[[],[[167,[166]]]],[[165,165],18],[[],18],[[165,5],6],[[168,5],6],[[168,5],6],[[]],[[],165],[[]],[169,168],[[]],[12,[[3,[165,168]]]],[[],4],[[],4],[[],4],[[]],[[]],[[]],[168,170],[[171,165],18],[12,[[3,[171,168]]]],[[[14,[49]]],165],[9],[168,[[11,[10]]]],[168,172],[168,12],[[]],[168,170],[168,173],[[],12],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],13],[[],13],[[],13],0,[[]],[[]],[[]]],"c":[],"p":[[3,"Path"],[4,"DecompressError"],[4,"Result"],[15,"usize"],[3,"Formatter"],[6,"Result"],[4,"ZipError"],[3,"Error"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[3,"Vec"],[3,"ConsoleWriter"],[4,"InteractiveCommandError"],[3,"UserInteraction"],[15,"bool"],[4,"ProgressBarMode"],[15,"str"],[4,"Infallible"],[3,"Style"],[3,"binary"],[3,"seed"],[3,"error"],[3,"success"],[3,"info"],[3,"scenario_title"],[6,"Icon"],[3,"seed"],[3,"jcli"],[3,"jormungandr"],[3,"scenario"],[3,"wallet"],[3,"account"],[3,"transaction"],[3,"block"],[3,"blockchain"],[3,"success"],[3,"failure"],[3,"ignored"],[3,"CsvFileBuilder"],[3,"Box"],[8,"AsRef"],[4,"Cow"],[3,"PathBuf"],[8,"Into"],[3,"Error"],[15,"u8"],[3,"Release"],[3,"Asset"],[3,"AssetDto"],[3,"GitHubApiBuilder"],[3,"GitHubApi"],[4,"ChecksumType"],[4,"GitHubApiError"],[4,"Type"],[3,"CachedReleases"],[4,"FromHexError"],[4,"WebError"],[3,"Error"],[3,"Response"],[3,"Iter"],[3,"HashMap"],[3,"Version"],[3,"ReleaseDto"],[8,"Deserializer"],[3,"OffsetDateTime"],[8,"Serializer"],[3,"ProgressBar"],[3,"MultiProgress"],[3,"WeakProgressBar"],[15,"u64"],[3,"Error"],[3,"Status"],[3,"Request"],[4,"RequestFailure"],[8,"RequestGenerator"],[3,"Configuration"],[4,"RequestSendMode"],[3,"Response"],[3,"Sender"],[3,"Executor"],[3,"ProgressDrawTarget"],[3,"ProgressStyle"],[8,"RequestStatusProvider"],[8,"Send"],[3,"Stats"],[3,"BackgroundLoadProcess"],[4,"Monitor"],[8,"Iterator"],[3,"ProgressBarIter"],[8,"Read"],[3,"ProgressBarWrap"],[8,"Write"],[3,"ConfigurationBuilder"],[4,"Strategy"],[3,"Duration"],[15,"u32"],[3,"Arc"],[3,"MonitorThread"],[3,"RateLimiter"],[3,"FixedCountRequestConsumer"],[3,"DurationRequestConsumer"],[3,"NoopReducer"],[8,"FnOnce"],[4,"RequestStatus"],[6,"Id"],[3,"RayonWrapper"],[8,"Folder"],[15,"never"],[3,"OwnedFd"],[8,"IntoFilelike"],[8,"IntoSocketlike"],[3,"ResponseCollector"],[3,"Receiver"],[3,"RwLock"],[15,"f64"],[3,"EfficiencyBenchmarkFinish"],[3,"StatusUpdaterThread"],[3,"StatusProgressBar"],[3,"ConsumptionBenchmarkDef"],[3,"EfficiencyBenchmarkDef"],[3,"EnduranceBenchmarkDef"],[3,"SpeedBenchmarkDef"],[3,"Consumption"],[3,"Thresholds"],[4,"Status"],[3,"ResourcesUsage"],[3,"NamedProcess"],[4,"Ordering"],[3,"Efficiency"],[3,"Endurance"],[3,"Timestamp"],[3,"Speed"],[3,"ConsumptionBenchmarkRun"],[3,"ConsumptionBenchmarkFinish"],[4,"ConsumptionBenchmarkError"],[3,"ConsumptionBenchmarkRunAsync"],[3,"EfficiencyBenchmarkRun"],[3,"Counter"],[3,"EnduranceBenchmarkFinish"],[3,"EnduranceBenchmarkRun"],[3,"SpeedBenchmarkRun"],[3,"SpeedBenchmarkFinish"],[3,"SystemTime"],[8,"Clone"],[8,"Debug"],[8,"Display"],[8,"PartialOrd"],[3,"Openssl"],[3,"ChildPath"],[3,"TempDir"],[8,"Predicate"],[4,"ProcessError"],[3,"Command"],[3,"Output"],[15,"i32"],[8,"Fn"],[3,"BTreeMap"],[3,"Error"],[3,"Wait"],[3,"WaitBuilder"],[4,"Error"],[3,"APIToken"],[15,"char"],[8,"FromIterator"],[4,"TokenError"],[4,"DecodeError"],[6,"Response"],[3,"APITokenManager"],[4,"Value"],[3,"StatusCode"],[8,"InteractiveCommandExec"],[13,"CannotDeserialize"],[13,"Failed"],[8,"RequestStatusProvider"],[13,"ProcessExited"],[13,"TimeoutReached"],[8,"ProcessOutput"],[8,"StringExtension"]]},\
"lib":{"doc":"","t":"AAAADNHHNNNENRHHNNNMLLLLLLLLLLLLFLLLLLLLLLFLLLLLLLLLLLLLLLLLLLMMMHHNNENRHHNNDLLLLMMFLLLLFLLFFLLLMLLLLLLLLLLLFFFMLMLLMLLLLLLLLLNNHHHHHNNEDNNNNNHHHHHNNNENDNNNNNNNDENNDNNLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLFLMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLMMMMMRRFFFFFFFFFFF","n":["find","offline","recover","tally","AccountId","AddressNotAccount","CALLSITE","CALLSITE","CorruptedFragments","CorruptedKey","Csv","Error","Io","MAIN_TAG","META","META","NotRecognized","Storage","UnhandledInput","account","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","find_vote","fmt","fmt","fmt","from","from","from","from","from","header","id_from_pub","in_current_span","init","init","into","into","provide","source","to_owned","to_string","to_url_arg","try_from","try_from","try_from_str","try_into","try_into","type_id","type_id","vzip","vzip","addr","addr","kind","CALLSITE","CALLSITE","CorruptedFragments","Csv","Error","Io","MAIN_TAG","META","META","Storage","UnhandledInput","Vote","borrow","borrow","borrow_mut","borrow_mut","caster","choice","decrypt_shares_to_b64","deref","deref","deref_mut","deref_mut","deserialize_truthy_falsy","drop","drop","extract_decryption_shares_and_results","extract_fragments_from_storage","fmt","fmt","fmt","fragment_id","from","from","from","from","from","header","in_current_span","init","init","into","into","json_from_file","ledger_after_tally","ledger_before_tally","proposal","provide","raw_fragment","serialize","source","time","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AccountNotFound","Block0ConfigurationError","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","DeserializeError","DuplicatedFragment","Error","FragmentReplayer","InvalidTransactionSignature","InvalidUtxoInputs","InvalidUtxoWitnesses","InvalidVoteCast","LedgerError","META","META","META","META","META","NonVotingAccount","NotAVotingFragment","NotAVotingFragment","ReplayError","ReplayError","ReplayedFragment","TallyPeriodError","TransactionBeforeStart","TransactionValidForTooLong","TxBuilderError","UnbalancedTransaction","UnsupportedMultipleOutputs","UnsupportedPrivateVotes","ValidatedFragment","ValidationError","ValidationError","ValueError","VoteFragmentFilter","VotingPeriodError","WalletError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","committee_id_to_address","confirm_fragment","deconstruct_account_transaction","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fees","fmt","fmt","fmt","fmt","fmt","fmt","fragment","fragments","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_block0","header","header","header","in_current_span","in_current_span","in_current_span","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","new","next","non_voting_wallets","original","pending_requests","provide","provide","provide","recover_ledger_from_fragments","replay","replay_protection","replay_tx","replay_votecast","replayed","settings","source","source","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_vote_cast","validate_tx","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallets","id","id","id","range","HRP_PK","HRP_SK","decrypt_tally_with_secret_keys","encode_decrypt_shares","encode_public_keys","encode_secret_keys","extract_decrypt_shares","get_members_public_share","get_members_secret_share","load_decrypt_shares","load_encrypted_tally","parse_private_committee_keys","parse_public_committee_keys"],"q":[[0,"lib"],[4,"lib::find"],[62,"lib::find::Error"],[65,"lib::offline"],[126,"lib::recover"],[303,"lib::recover::ReplayError"],[304,"lib::recover::ValidationError"],[307,"lib::tally"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Did I vote? Iterate through all vote cast fragments and …","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Generate account identifier from ED25519 Key","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Extract decryption shares and results from tally fragments","Extract fragments from storage","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Replay all fragments including tally fragments to obtain …","Replay up until tally, do not include tally fragments …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fragment which has passed validation","","","","","","","","","","","","","","","","","","","","","","","Unpack TX into payload, id and witness","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Replay fragments from storage and recover the ledger state","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check that the transaction input/outputs/witnesses is …","","","","","","","","","","","","","","A Bech32_encoded address consists of 3 parts: A …","","Decrypt tally with secret keys Internal use only","Encode decrypt shares to base64 for publication","Encode public shares to bech32","Encode committee secret keys to Bech32","Extract decyrpt shares for publication","Get member’s public share","Get member’s secret share","Load decrypt shares","Load encrypted tally","Parse private committee keys from Bech32 representation","Parse public committee keys from Bech32 representation"],"i":[0,0,0,0,0,7,0,0,7,7,7,0,7,0,0,0,7,7,7,1,7,1,7,1,1,1,7,1,7,1,7,1,0,7,7,1,7,7,7,7,1,7,0,7,7,1,7,1,7,7,1,7,1,7,1,1,7,1,7,1,7,1,67,68,68,0,0,32,32,0,32,0,0,0,32,32,0,32,5,32,5,5,5,0,32,5,32,5,0,32,5,0,0,32,32,5,5,32,32,32,32,5,32,32,32,5,32,5,0,0,0,5,32,5,5,32,5,32,32,5,32,5,32,5,32,5,46,45,0,0,0,0,0,45,44,0,0,44,44,44,44,45,0,0,0,0,0,46,44,46,0,45,0,44,44,44,45,44,46,44,0,0,45,45,0,44,45,56,57,55,42,45,44,46,56,57,55,42,45,44,46,0,42,0,56,57,55,42,45,44,46,56,57,55,42,45,44,46,56,57,55,42,45,44,46,55,45,45,44,44,46,46,56,55,56,57,55,42,45,45,45,45,45,45,45,45,45,44,44,46,42,45,44,46,45,44,46,56,57,55,42,45,44,46,56,57,55,42,45,44,46,55,55,55,42,57,42,45,44,46,0,42,55,42,42,57,42,45,44,45,44,46,56,57,55,42,45,44,46,56,57,55,42,45,44,46,56,57,55,42,45,44,46,0,55,56,57,55,42,45,44,46,42,69,70,71,70,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[[]],[2],[2],[2],[2],[2],[2],[[3,4],[[8,[[6,[5]],7]]]],[[7,9],10],[[7,9],10],[[1,9],10],[11,7],[[]],[12,7],[13,7],[[]],[[[0,[14,15,16]]],[[17,[[0,[14,15,16]]]]]],[[[19,[18]]],20],[[]],[[],2],[[],2],[[]],[[]],[21],[7,[[23,[22]]]],[[]],[[],4],[1,4],[[],8],[[],8],[24,[[8,[1,7]]]],[[],8],[[],8],[[],25],[[],25],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[[6,[26]]],[[6,[4]]]],[2],[2],[2],[2],[27,[[8,[28]]]],[2],[2],[[[6,[29]]],[[30,[4,[6,[4]]]]]],[3,[[8,[[6,[29]],[31,[22]]]]]],[[32,9],10],[[32,9],10],[[5,9],10],0,[12,32],[[]],[11,32],[13,32],[[]],[[[0,[14,15,16]]],[[17,[[0,[14,15,16]]]]]],[[]],[[],2],[[],2],[[]],[[]],[[[33,[3]]],[[35,[34]]]],[[[6,[29]],36],[[8,[[6,[37]],38]]]],[[[6,[29]],36],[[8,[[6,[37]],38]]]],0,[21],0,[[5,39],8],[32,[[23,[22]]]],0,[[],4],[[],8],[[],8],[[],8],[[],8],[[],25],[[],25],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,41],[[42,29]],[43,[[8,[44]]]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[[45,9],10],[[45,9],10],[[44,9],10],[[44,9],10],[[46,9],10],[[46,9],10],0,0,[[]],[[]],[[]],[[]],[47,45],[48,45],[46,45],[49,45],[50,45],[51,45],[[]],[44,45],[52,45],[[]],[53,44],[[]],[36,[[8,[45]]]],[[[0,[14,15,16]]],[[17,[[0,[14,15,16]]]]]],[[[0,[14,15,16]]],[[17,[[0,[14,15,16]]]]]],[[[0,[14,15,16]]],[[17,[[0,[14,15,16]]]]]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[36,54],[[8,[[55,[54]],45]]]],[[[55,[54]]],23],0,0,0,[21],[21],[21],[[36,54],[[8,[45]]]],[[42,56],[[8,[57]]]],0,[[42,[43,[58]]],[[8,[29,45]]]],[[42,[43,[59]]],[[8,[29,45]]]],0,0,[45,[[23,[22]]]],[44,[[23,[22]]]],[[],4],[[],4],[[],4],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[43,28],[[[55,[54]],43,60],[[8,[61,44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[62,[6,[63]]],[[35,[[6,[64]],[31,[22]]]]]],[[[6,[26]]],[[6,[4]]]],[[[6,[65]]],[[35,[[6,[4]],[31,[22]]]]]],[[[6,[[66,[18]]]]],[[35,[[6,[4]],[31,[22]]]]]],[[62,[6,[63]]],[[6,[26]]]],[4,[[35,[65,[31,[22]]]]]],[4,[[35,[63,[31,[22]]]]]],[[[6,[4]]],[[35,[[6,[26]],[31,[22]]]]]],[4,[[35,[62,[31,[22]]]]]],[[[6,[4]]],[[35,[[31,[22]]]]]],[[[6,[4]]],[[35,[[6,[65]],[31,[22]]]]]]],"c":[],"p":[[3,"AccountId"],[15,"usize"],[3,"Path"],[3,"String"],[3,"Vote"],[3,"Vec"],[4,"Error"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Error"],[4,"Error"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"Ed25519"],[3,"PublicKey"],[3,"Identifier"],[3,"Demand"],[8,"Error"],[4,"Option"],[15,"str"],[3,"TypeId"],[3,"TallyDecryptShare"],[8,"Deserializer"],[15,"bool"],[4,"Fragment"],[3,"HashMap"],[3,"Box"],[4,"Error"],[8,"AsRef"],[8,"Deserialize"],[6,"Result"],[3,"Block"],[3,"VotePlanStatus"],[3,"Report"],[8,"Serializer"],[3,"CommitteeIdDef"],[3,"Address"],[3,"FragmentReplayer"],[3,"TransactionSlice"],[4,"ValidationError"],[4,"Error"],[4,"ReplayError"],[3,"DeserializeError"],[4,"ValueError"],[4,"Block0ConfigurationError"],[4,"Error"],[4,"Error"],[4,"Error"],[4,"BalanceError"],[8,"Iterator"],[3,"VoteFragmentFilter"],[3,"ValidatedFragment"],[3,"ReplayedFragment"],[3,"NoExtra"],[3,"VoteCast"],[6,"FragmentId"],[3,"SpendingCounter"],[3,"EncryptedTally"],[3,"MemberSecretKey"],[3,"Tally"],[3,"MemberPublicKey"],[3,"SecretKey"],[13,"NotRecognized"],[13,"AddressNotAccount"],[13,"NotAVotingFragment"],[13,"InvalidTransactionSignature"],[13,"DuplicatedFragment"]]},\
"loki":{"doc":"","t":"DEDDNNNNNNAAMMMAMMMMAAAMMMMMMMDLLLLLLLLLLLLLMLLLLMMLLLLLLDLMLLLMLMLLLLLLLLLMLMMLMLMLLLLNENNNLLLLLLLLLLLLLLLLLLLLLLDDLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLMMLMLLMMLMMLLLLLLLLLLLLLLDNGNEDNLMMMLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLMLLMLMLLLLLLLLLLLLLWWWWWFFFFFFWDEDDNNNNNNRLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMM","n":["AdversaryFragmentSender","AdversaryFragmentSenderError","AdversaryFragmentSenderSetup","FaultyTransactionBuilder","FragmentBuilderError","FragmentExporterError","FragmentNotRejected","FragmentVerifierError","SendFragmentError","SyncNodeError","args","block","block0_hash","block0_hash","dump_fragments","error","expiry_generator","expiry_generator","fees","fees","process","rest","sender","setup","sync_nodes","verify","alias","block","date","logs","Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","fmt","from","from_arg_matches","from_arg_matches_mut","genesis_block","group_id","init","into","into_request","listen_address","secret","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","BlockBuilder","bft","block_date","borrow","borrow_mut","build","consensus_protocol","contents","contents","deref","deref_mut","drop","from","genesis_praos","init","into","into_request","invalid_hash","invalid_hash","invalid_signature","invalid_signature","parent_block_header","signing_key","signing_key","stake_pool","stake_pool","try_from","try_into","type_id","vzip","Block0","Error","IO","Read","Yaml","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","init","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","AdversaryNode","AdversaryNodeBuilder","address","alias","alias","alias","block0_configuration","borrow","borrow","borrow_mut","borrow_mut","build","builder","deref","deref","deref_mut","deref_mut","drop","drop","drop","fees","fragment_sender","from","from","genesis_block","genesis_block_hash","init","init","into","into","into_request","into_request","invalid_block0_hash","new","new","node_data","node_data","open_client_connections","p2p_public_addr","protocol_version","send_block_to_peer","send_header_to_peer","server","server_enabled","steal_temp_dir","temp_dir","temp_dir","to_trusted_peer","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_alias","with_invalid_block0_hash","with_protocol_version","with_server_enabled","with_temp_dir","AdversaryRest","Block0","Context","Hash","Parent","Request","Tip","address","address","address","adversary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","fmt","fmt","from","from","from","get_header","handlers","init","init","init","into","into","into","into_request","into_request","into_request","new","parent","serialize","signing_key","signing_key","stake_pool","stake_pool","start","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","","","","","","invalid_fragment","invalid_hash","invalid_signature","nonexistent_leader","send_block","wrong_leader","","AdversaryFragmentSender","AdversaryFragmentSenderError","AdversaryFragmentSenderSetup","FaultyTransactionBuilder","FragmentBuilderError","FragmentExporterError","FragmentNotRejected","FragmentVerifierError","SendFragmentError","SyncNodeError","_DERIVE_core_fmt_Debug_FOR_AdversaryFragmentSenderError","block0_hash","block0_hash","block0_hash","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dump_fragment_if_enabled","dump_fragments","dump_into","empty","expiry_generator","expiry_generator","fees","fees","fees","fmt","fmt","from","from","from","from","from","from","from","from","from","from_settings","from_settings","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","logs","new","new","no_input","no_output","no_sync_nodes","no_verify","no_witnesses","provide","random_faulty_cert","random_faulty_transaction","send_all_faulty_transactions","send_faulty_full_delegation","send_faulty_transactions","send_faulty_transactions_with_iteration_delay","send_fragment","send_random_faulty_transaction","send_transactions_with_invalid_counter","setup","source","sync_before","sync_nodes","sync_nodes","to_owned","to_owned","to_string","transaction_to","try_from","try_from","try_from","try_from","try_from_jormungandr","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unbalanced","verify","verify","verify","vzip","vzip","vzip","vzip","wait_for_node_sync_if_enabled","with_verify","wrong_block0_hash","wrong_counter","alias","block","date","logs"],"q":[[0,"loki"],[26,"loki::AdversaryFragmentSenderError"],[30,"loki::args"],[57,"loki::block"],[87,"loki::error"],[114,"loki::process"],[175,"loki::rest"],[240,"loki::rest::handlers"],[251,"loki::sender"],[376,"loki::sender::AdversaryFragmentSenderError"]],"d":["","Send malformed transactions Only supports account based …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Path to the genesis block (the block0) of the blockchain","","","Calls <code>U::from(self)</code>.","","Specifies the address the node will listen.","Set the secret node config (in YAML format).","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","An adversary-controlled node, which can deviate in every …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","As a limitation of the current implementation, the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send malformed transactions Only supports account based …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,62,62,62,62,62,62,0,0,66,56,58,0,66,56,66,56,0,0,0,56,58,58,84,84,84,84,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,21,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,29,29,29,33,29,29,33,29,33,33,29,29,33,29,33,29,29,33,29,29,29,33,33,29,29,33,29,33,29,33,33,29,33,29,29,29,29,33,29,29,29,33,29,29,33,29,29,33,29,33,29,33,29,33,33,33,33,33,33,0,49,0,49,0,0,49,48,48,51,48,48,51,49,48,51,49,49,48,51,49,48,51,49,51,49,48,51,49,51,49,48,51,49,49,0,48,51,49,48,51,49,48,51,49,48,51,49,48,48,48,48,48,48,51,49,48,51,49,48,51,49,48,51,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,62,62,62,62,0,56,66,56,66,62,58,56,66,62,58,56,58,56,58,56,66,62,58,56,66,62,58,56,66,62,58,56,56,58,58,66,66,56,56,66,56,62,62,66,62,62,62,62,62,62,58,56,66,56,66,62,58,56,66,62,58,56,66,62,58,56,62,66,56,66,66,58,58,66,62,56,56,56,56,56,56,56,56,56,56,62,58,58,58,58,56,62,66,66,62,58,56,56,66,62,58,56,66,62,58,56,66,58,56,58,66,62,58,56,56,58,66,66,84,84,84,84],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[2],[2],[2],[[3,4],5],[[]],[6,[[8,[3,7]]]],[6,[[8,[3,7]]]],0,[[],[[10,[9]]]],[[],2],[[]],[[],11],0,0,[[],8],[[],8],[[],12],[[3,6],[[8,[7]]]],[[3,6],[[8,[7]]]],[[]],0,[[13,14],15],0,[[]],[[]],[15,16],0,[[15,17],15],0,[2],[2],[2],[[]],[[13,14],15],[[],2],[[]],[[],11],[15,15],0,[15,15],0,0,[[15,[19,[18]]],15],0,[[15,20],15],0,[[],8],[[],8],[[],12],[[]],0,0,0,0,0,[[]],[[]],[2],[2],[2],[[21,4],5],[[21,4],5],[[]],[22,21],[23,21],[24,21],[25,21],[[],2],[[]],[[],11],[26],[21,[[10,[27]]]],[[],28],[[],8],[[],8],[[],12],[[]],0,0,[29,30],[29,31],0,0,[29,32],[[]],[[]],[[]],[[]],[33,29],[16,33],[2],[2],[2],[2],[29],[2],[2],[29,34],[[29,[37,[[0,[35,36]]]]],[[38,[[0,[35,36]]]]]],[[]],[[]],0,[29,39],[[],2],[[],2],[[]],[[]],[[],11],[[],11],0,[[[10,[40]],28,[43,[[42,[41]]]],[10,[44]]],29],[16,33],[29,[[43,[[42,[41]]]]]],0,0,[29,30],0,[[29,30,16],[[8,[45]]]],[[29,30,14],[[8,[45]]]],0,0,[29,[[10,[40]]]],0,0,[29,46],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[]],[[]],[[33,28],33],[33,33],[[33,47],33],[33,33],[[33,40],33],0,0,0,0,0,0,0,[[48,30],48],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],49],[2],[2],[2],[2],[2],[2],[50,[[8,[51]]]],[50,[[8,[49]]]],[2],[2],[2],[[51,4],5],[[49,4],5],[[]],[[]],[[]],[[49,29],14],0,[[],2],[[],2],[[],2],[[]],[[]],[[]],[[],11],[[],11],[[],11],[29,48],0,[[49,52],8],[[48,[19,[18]]],48],0,[[48,20],48],0,[48],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[]],[[]],[[]],0,0,0,0,0,[[51,53],54],[[51,53],54],[[51,53],54],[[51,53],54],[[53,30,16],[[55,[28]]]],[[51,53],54],0,0,0,0,0,0,0,0,0,0,0,0,[[[56,[[0,[35,36]]]]],39],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[58,[[0,[57,35,36]]]]],[[58,[[0,[57,35,36]]]]]],[[[56,[[0,[57,35,36]]]]],[[56,[[0,[57,35,36]]]]]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[[56,[[0,[35,36]]]],59,60,61],[[8,[62]]]],0,[[63,64],[[58,[65]]]],[66,60],0,0,[[[56,[[0,[35,36]]]]],34],0,0,[[62,4],5],[[62,4],5],[[]],[67,62],[[]],[68,62],[69,62],[70,62],[71,62],[[]],[[]],[[72,13],66],[[72,13,[58,[[0,[35,36]]]]],[[56,[[0,[35,36]]]]]],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[62,73],[[39,34,74],66],[[39,34,74,[58,[[0,[35,36]]]]],[[56,[[0,[35,36]]]]]],[[66,59],60],[[66,59],60],[[[58,[[0,[35,36]]]]],64],[[],[[58,[65]]]],[[66,59,59],60],[26],[[[56,[[0,[35,36]]]],59,13,75],[[8,[60,70]]]],[[[56,[[0,[35,36]]]],59,59],60],[[[56,[[0,[35,36]]]],59,59],[[8,[[77,[76]],62]]]],[[[56,[[0,[35,36]]]],13,59,78],[[8,[76,62]]]],[[[56,[[0,[35,36]]]],79,59,59],[[8,[[77,[76]],62]]]],[[[56,[[0,[35,36]]]],79,59,59,80],[[8,[[77,[76]],62]]]],[[[56,[[0,[35,36]]]],60],[[8,[76,62]]]],[[[56,[[0,[35,36]]]],59,59],[[8,[76,62]]]],[[[56,[[0,[35,36]]]],2,59,59],[[8,[[77,[76]],62]]]],0,[62,[[10,[27]]]],[77,[[58,[[0,[35,36]]]]]],[[[58,[[0,[35,36]]]]],77],0,[[]],[[]],[[],28],[[66,81],60],[[],8],[[],8],[[],8],[[],8],[[82,13,[58,[[0,[35,36]]]]],[[8,[[56,[[0,[35,36]]]],83]]]],[[],8],[[],8],[[],8],[[],8],[[],12],[[],12],[[],12],[[],12],[[66,59,59],60],[[[58,[[0,[35,36]]]]],64],[[[56,[[0,[35,36]]]],76],[[8,[62]]]],0,[[]],[[]],[[]],[[]],[[[56,[[0,[35,36]]]]],[[8,[71]]]],[[],[[58,[65]]]],[[66,59,59],60],[[66,59,59],60],0,0,0,0],"c":[],"p":[[3,"Command"],[15,"usize"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[3,"Request"],[3,"TypeId"],[3,"BlockDate"],[4,"Header"],[3,"BlockBuilder"],[3,"Block"],[3,"Contents"],[3,"Ed25519"],[3,"SigningKey"],[3,"StakePool"],[4,"Error"],[4,"ReadError"],[3,"Error"],[4,"Block0ConfigurationError"],[3,"Error"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"AdversaryNode"],[4,"SocketAddr"],[6,"NodeAlias"],[3,"Block0Configuration"],[3,"AdversaryNodeBuilder"],[3,"LinearFee"],[8,"SyncNode"],[8,"Send"],[3,"FragmentSenderSetup"],[3,"FragmentSender"],[3,"Hash"],[4,"TestingDirectory"],[3,"MockServerData"],[3,"RwLock"],[3,"Arc"],[3,"MockController"],[4,"MockClientError"],[3,"TrustedPeer"],[4,"ProtocolVersion"],[3,"AdversaryRest"],[4,"Parent"],[8,"Deserializer"],[3,"Request"],[8,"Serializer"],[6,"Context"],[8,"Reply"],[3,"WithStatus"],[3,"AdversaryFragmentSender"],[8,"Clone"],[3,"AdversaryFragmentSenderSetup"],[4,"Wallet"],[4,"Fragment"],[8,"FragmentNode"],[4,"AdversaryFragmentSenderError"],[3,"PathBuf"],[15,"bool"],[3,"DummySyncNode"],[3,"FaultyTransactionBuilder"],[4,"FragmentNodeError"],[4,"FragmentExporterError"],[4,"FragmentVerifierError"],[4,"FragmentBuilderError"],[4,"SyncNodeError"],[3,"SettingsDto"],[8,"Iterator"],[4,"BlockDateGenerator"],[4,"Certificate"],[3,"MemPoolCheck"],[3,"Vec"],[6,"PoolId"],[15,"u32"],[3,"Duration"],[8,"Fn"],[3,"JormungandrProcess"],[4,"RestError"],[13,"FragmentNotRejected"]]},\
"mainnet_lib":{"doc":"Rust implementation of Cardano various tools","t":"DDIRDEIDDNDNNEDDDDDDNNDDDDDNNDDDDMMMMMMMMMMMMMMAMMAMKMMMAKKKMMMMAMKMMKMKMMMMKMMMMMKMMMKKMMMAMACCCCCCAAAAADDLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLDMLLLLLLLLLLMMLLLLLLLLLLLEDNLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLDLMMLLLLLLLLLLLLLMMLLLLLDLLLLLLLLLLLLLLCCCCAGIGEDNNDDLMLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLMLLMKLLLMLLLLLLLLLLLLLMLLLLCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCLLLLLLLLLLLLLMAMLLLLALDDLLLLLLLLLLMLLFLLLLLLMMLLLLLLLLLLLLMMMLLMLLLLLLLLMLLCCDCCLLCCALLLLLLLLLMLMLMLMALLLLIKKKKKWWCNCNNCECNAALLFFCLLLALLLLLLCLLLLCCLLLLLLENNDENNNNDDGDDLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLFMMFLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMMMMMMMMMMMNENLLLLLLLLFFLLLLLLLLLDQILLLLKLLLLLLLLLLDCCCCCCCCCCCCCCCCCCCLLLLLLLLMLLLLLLLLLLLLLMLLLLMALLMLLMLLLLLINNEHHHHHHHHHDDDDDNNDDDDDNMMMMMMMMMFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLKMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKKKMLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMENNNQNINNNNDIEKKKKKFFKMMMMMMMMMMMMM","n":["Block0","BlockBuilder","BlockDateFromCardanoAbsoluteSlotNo","CARDANO_MAINNET_SLOTS_PER_EPOCH","CardanoWallet","DbSyncError","GeneralTransactionMetadataInfo","InMemoryDbSync","InMemoryNode","IncorrectInputJson","Initials","Internal","Io","JsonConversionError","Ledger","METADATUM_1","METADATUM_2","METADATUM_3","METADATUM_4","MainnetNetworkBuilder","MissingRegistrationLabel","MissingRegistrationSignatureLabel","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_SIGNATURE_METADATA_IDX","RegistrationTransactionBuilder","Serde","Serde","Settings","SharedInMemoryDbSync","SnapshotParameters","TransactionBuilder","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","block","block0_hash","block0_time","block_notifier","blocks","blocks","cardano_node","catalyst","content","db_sync","db_sync","delegations","delegations","direct_voters_group","dreps","exports","from_absolute_slot_no","from_json_string","from_jsons","leadership_process","ledger","mempool","min_stake_threshold","network","network","nonce","parameters","payment_key","registration_blake_256_hash","representatives_group","reward_address","settings","settings","settings","settings","signature","slot_duration","slot_no","slots_per_epoch","stake","stake_key","stake_public_key","stakes","states","tag","to_absolute_slot_no","to_json_string","transactions","update_thread","voting_power_cap","wallet","wallet","wallet_state","Block0","BlockBuilder","InMemoryNode","Ledger","Settings","TransactionBuilder","block","in_memory","ledger","settings","transaction","Block0","BlockBuilder","__clone_box","block","block_header","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","from","from","generate_random_bytes_of_len","init","init","into","into","into_request","into_request","next_block","random_kes_signature","settings","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","InMemoryNode","block_notifier","borrow","borrow_mut","deref","deref_mut","drop","drop","from","init","into","into_request","leadership_process","ledger","observe","push_transaction","push_transactions","settings","start","start_from_ledger","try_from","try_into","type_id","vzip","wait_for_txs_to_be_in_block","Error","Ledger","MissingBlock0","__clone_box","blockchain","blocks","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","mempool","mempool","mint_block","new","provide","push_transaction","push_transactions","settings","settings","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Settings","__clone_box","block0_hash","block0_time","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","into_request","slot_duration","slots_per_epoch","to_owned","try_from","try_into","type_id","vzip","TransactionBuilder","borrow","borrow_mut","build_transaction_with_metadata","deref","deref_mut","drop","from","init","into","into_request","try_from","try_into","type_id","vzip","BlockDateFromCardanoAbsoluteSlotNo","Error","InMemoryDbSync","SharedInMemoryDbSync","in_memory","Address","BlockDateFromCardanoAbsoluteSlotNo","BlockNo","Error","InMemoryDbSync","Io","Serde","Settings","SharedInMemoryDbSync","__clone_box","blocks","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","connect_to_node","db_host","db_name","db_pass","db_sync","db_user","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","empty","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_absolute_slot_no","from_block0","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","metadata","on_block_propagation","persist","provide","query_all_registration_transactions","query_voting_transactions_with_bounds","restore","serialize","serialize","settings","settings","source","stakes","stakes","to_absolute_slot_no","to_owned","to_string","transaction_by_hash","transactions","try_as_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_thread","vzip","vzip","vzip","vzip","Block0","BlockBuilder","BlockDateFromCardanoAbsoluteSlotNo","CardanoWallet","DbSyncError","GeneralTransactionMetadataInfo","InMemoryDbSync","InMemoryNode","Initials","JsonConversionError","Ledger","METADATUM_1","METADATUM_1","METADATUM_2","METADATUM_2","METADATUM_3","METADATUM_3","METADATUM_4","METADATUM_4","MainnetNetworkBuilder","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_SIGNATURE_METADATA_IDX","REGISTRATION_SIGNATURE_METADATA_IDX","RegistrationTransactionBuilder","Settings","SharedInMemoryDbSync","SnapshotParameters","TransactionBuilder","wallet_state","Initials","MainnetNetworkBuilder","Parameters","borrow","borrow_mut","build","build_block0","build_shared","default","deref","deref_mut","drop","from","init","into","into_request","settings","snapshot","states","try_from","try_into","type_id","vzip","wallet_state","with","Initials","Parameters","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","content","default","default","default_latest","deref","deref","deref_mut","deref_mut","deserialize","deserialize","direct_voters_group","dreps","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","min_stake_threshold","parameters","representatives_group","serialize","serialize","tag","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","voting_power_cap","vzip","vzip","Actor","ExternalProvider","MainnetWalletState","MainnetWalletStateBuilder","TemplateError","borrow","borrow_mut","build","build_default","builder","deref","deref_mut","drop","fmt","from","init","into","into_request","registration","registration_tx","rep","rep","stake","stake","stake_address","stake_address","template","try_from","try_into","type_id","vzip","MainnetWalletStateBuilder","as_delegator","as_delegator_on_slot_no","as_direct_voter","as_direct_voter_on_slot_no","as_representative","","","Actor","Arbitrary","ArbitraryError","CannotGetVotingKey","CannotParseAddress","DummyExternalProvider","Error","ExternalProvider","Internal","actor","arbitrary","borrow","borrow_mut","build","build_default","delegator","deref","deref_mut","drop","external_providers","fmt","fmt","from","from","from","from","generate_arbitrary_delegator","init","into","into_request","provide","registration","representative","source","to_string","try_from","try_into","type_id","vzip","Actor","CannotBuildActor","CannotBuildRegistration","DelegatorBuilder","Error","ExternalDelegator","ExternalRep","GeneratedDelegator","GeneratedRep","Registration","RegistrationBuilder","RepNameOrVotingKey","RepresentativeBuilder","Target","__clone_box","__clone_box","__clone_box","ada","ada","address","at_slot","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","delegator","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","is_empty","iter","name","name","new","new","provide","push","registration","registration","registration","representative","serialize","serialize","serialize","slotno","target","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voting_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_ada","with_ada","with_address","with_key","with_registration","with_target","with_targets","ada","ada","address","name","name","name","name","registration","voting_key","details","details","name","registration","CannotGetVotingKey","Error","Internal","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","generate_arbitrary_delegator","generate_arbitrary_representative","init","into","into_request","provide","to_string","try_from","try_into","type_id","vzip","DummyExternalProvider","Error","ExternalProvider","borrow","borrow_mut","deref","deref_mut","download_state_from_network","download_state_from_network","drop","from","init","into","into_request","try_from","try_into","type_id","vzip","CardanoWallet","GeneralTransactionMetadataInfo","JsonConversionError","METADATUM_1","METADATUM_1","METADATUM_2","METADATUM_2","METADATUM_3","METADATUM_3","METADATUM_4","METADATUM_4","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_SIGNATURE_METADATA_IDX","REGISTRATION_SIGNATURE_METADATA_IDX","RegistrationTransactionBuilder","address","as_delegator","as_delegator_on_slot_no","as_direct_voter","as_direct_voter_on_slot_no","as_representative","borrow","borrow_mut","catalyst","catalyst_address","catalyst_public_key","catalyst_secret_key","deref","deref_mut","drop","from","generate_delegated_voting_registration","generate_direct_voting_registration","generate_voting_registration","init","into","into_request","network","new","new_with_rng","payment_credential","payment_key","payment_key","registration","reward_address","stake","stake","stake_credential","stake_key","stake_key","stake_public_key","try_from","try_into","type_id","vzip","GeneralTransactionMetadataInfo","IncorrectInputJson","Internal","JsonConversionError","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","LAZY","METADATUM_1","METADATUM_2","METADATUM_3","METADATUM_4","METADATUM_5","MissingRegistrationLabel","MissingRegistrationSignatureLabel","REGISTRATION_METADATA_IDX","REGISTRATION_METADATA_LABEL","REGISTRATION_METADATA_SIGNATURE_LABEL","REGISTRATION_SIGNATURE_METADATA_IDX","RegistrationTransactionBuilder","Serde","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__private_field","__stability","__stability","__stability","__stability","__stability","__stability","__stability","__stability","__stability","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","__static_ref_initialize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_metadata","delegations","delegations","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_json_string","from_jsons","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","nonce","on","provide","registration_blake_256_hash","reward_address","signature","slot_no","source","stake_public_key","to","to_json_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","Actor","Arbitrary","CannotGetVotingKey","CannotParseAddress","Error","ExternalDelegator","ExternalProvider","ExternalRep","GeneratedDelegator","GeneratedRep","Internal","MainnetWalletState","MainnetWalletStateBuilder","TemplateError","as_delegator","as_delegator_on_slot_no","as_direct_voter","as_direct_voter_on_slot_no","as_representative","build","build_default","download_state_from_network","registration_tx","rep","stake","stake_address","ada","ada","address","name","name","name","name","registration","voting_key"],"q":[[0,"mainnet_lib"],[94,"mainnet_lib::cardano_node"],[105,"mainnet_lib::cardano_node::block"],[144,"mainnet_lib::cardano_node::in_memory"],[169,"mainnet_lib::cardano_node::ledger"],[217,"mainnet_lib::cardano_node::settings"],[241,"mainnet_lib::cardano_node::transaction"],[256,"mainnet_lib::db_sync"],[261,"mainnet_lib::db_sync::in_memory"],[367,"mainnet_lib::exports"],[401,"mainnet_lib::network"],[426,"mainnet_lib::network::snapshot"],[479,"mainnet_lib::network::wallet_state"],[510,"mainnet_lib::network::wallet_state::builder"],[516,"mainnet_lib::network::wallet_state::template"],[557,"mainnet_lib::network::wallet_state::template::actor"],[726,"mainnet_lib::network::wallet_state::template::actor::Actor"],[735,"mainnet_lib::network::wallet_state::template::actor::Error"],[739,"mainnet_lib::network::wallet_state::template::arbitrary"],[761,"mainnet_lib::network::wallet_state::template::external_providers"],[779,"mainnet_lib::wallet"],[839,"mainnet_lib::wallet::registration"],[1068,"mainnet_lib::wallet_state"],[1094,"mainnet_lib::wallet_state::Actor"]],"d":["Block0 representation","Block builder responsible for building blocks","Basic converter from absolute slot number and {epoch,slot} …","Const defining caradno mainnet slot per epoch setting","Represents Cardano mainnet wallet which is able to …","Db sync error","Extension for <code>GeneralTransactionMetadata</code> tailored for …","Mock of real cardano db sync. At this moment we only …","In memory cardano node implementation. Basic design …","Incorrect schema","Root struct for defining snapshot template","Internal error","I/O related error","Metadata conversion error","Simulates cardano node behavior. Contains mempool of …","metadatum label 1 constant","metadatum label 2 constant","metadatum label 3 constant","metadatum label 4 constant","Cardano Network state builder, responsible to create a …","Missing registration label","Missing registration signature label","registration metadata index constant","registration metadata constant","registration signature metadata constant","registration signature metadata index constant","Responsible for building registration transaction metadata","Serialization error","Serialization","Cardano node mock settings","thread safe <code>InMemoryDbSync</code>. It has inner struct <code>db_sync</code> …","Snapshot","Transaction builder for cardano mainnet","","","","","","","","","Block containing transactions","block0 hash","block0 time","","","","","","snapshot content","","","Get delegations part as bytes","","Name of direct registration holders","dreps information","","Converts absolute slot number to block date","Converts json to metadata","Converts combined jsons to registration and registration …","","","","Minimum lovelace which is required to participate in voting","","","nonce","parameters","","registration metadata hash","Name of delegated registrations holders (representatives)","Reward address","Consensus settings","","","","metadata signature","slot duration","","slots per epoch","","","Stake public key","","","Tag under which snapshot content will be available","Converts epoch/slot representation to absolute slot number","Converts metadata to json","","","Maximum percentage of voting power before capping","","","wallet state utils","","","","","","","","","","","","Block0 representation","Block builder responsible for building blocks","","Block containing transactions","Builds new block header based on block number and previous …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Mint new block based on previous block and transactions","","Consensus settings","","","","","","","","","","In memory cardano node implementation. Basic design …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Adds new transaction to mempool","Adds collection of new transactions to mempool","Retrieves settings carved in block0","Starts node process","Starts node process from ledger","","","","","Waits for all transactions from mempool to be included in …","","Simulates cardano node behavior. Contains mempool of …","","","Retrieves blockchain in form of vector of blocks","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Gets current ledger mempool state","","Mint new block","Creates new ledger based on block0","","Add transaction to mempool","Adds transactions to mempool","Gets node settings","","","","","","","","","","","","Cardano node mock settings","","block0 hash","block0 time","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","slot duration","slots per epoch","","","","","","Transaction builder for cardano mainnet","","","Builds transaction with metadata","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Basic converter from absolute slot number and {epoch,slot} …","","Db sync error","Mock of real cardano db sync. At this moment we only …","I/O related error","Serialization error","","thread safe <code>InMemoryDbSync</code>. It has inner struct <code>db_sync</code> …","","","","","","","","","","","","","Connects to Cardano mock node using simple …","","","","","","","","","","","","","","","","","","","","","","","Create an empty instance","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Converts absolute slot number to block date","Creates new instance out of block0","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Gets all metadata per block number","Accept new block","Persists current state of db sync","","Gets all transactions metadata without bounds","Gets all transactions metadata with <code>slot_no</code> upper and …","Restores current state of db sync from json file","","","gets reference to db sync connection settings","","","gets all known to dbsync wallet ada distribution","","Converts epoch/slot representation to absolute slot number","","","Query transaction by it’s hash representation","","Retrieves db sync content as string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Cardano Network state builder, responsible to create a …","","","","Builds dbsync instance and set or representatives …","Builds block0","Builds dbsync instance and set or representatives …","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","wallet state utils","Pushes new wallet to collection","Root struct for defining snapshot template","Snapshot","","","","","","","","","","","snapshot content","","","","","","","","","","Name of direct registration holders","dreps information","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Minimum lovelace which is required to participate in voting","parameters","Name of delegated registrations holders (representatives)","","","Tag under which snapshot content will be available","","","","","","","","","Maximum percentage of voting power before capping","","","","","Represents wallet candidate for registration. Defines …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","get registration metadata","Possible valid registration transaction","get representative information","Possible identifier which define representative id","get wallet stake","Ada amount account hold on snapshot time","get stake address for wallet","Stake address","","","","","","Wallet state builder for Network state builder is a trait …","wallet registers as delegator, meaning it will send …","wallet registers as delegator, meaning it will send …","wallet registers as direct voter, meaning it will send …","wallet registers as direct voter, meaning it will send …","wallet registered as representative. This is …","","","","Arbitrary error","","Cannot get voting key","Arbitrary error","","Wallet state template builder error","","Internal error","","","","","Builds collection of <code>MainnetWalletState</code> structs based on …","Builds collection of <code>MainnetWalletState</code> structs based on …","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","Actor represent input definition of mainnet wallet from …","","","","","Delegator with just an address. Can be used for already …","Representative with just and voting key. Can be used for …","Generated delegator will setup new mainnet wallet","This variant will create new unique wallet with given ada …","Responsible for configuring registration transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","slot number in which registration was send","registration target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ada amount","ada amount","address in hex","alias","alias","alias","alias","registration","voting key in hex","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Error which can be returned on any issue with retrieving …","Trait for retrieving information about address …","","","","","Downloads <code>MainnetWalletState</code> from network","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","Represents Cardano mainnet wallet which is able to …","","","","","","","","","","","","","","","","","","","","Mainnet address","","","","","","","","","Catalyst address","Catalyst public key","Catalyst secret key","","","","Returns the argument unchanged.","Creates delegated voting registration metadata according …","Creates direct (a.k.a self) voting registration metadata …","Creates voting registration metadata according to Cip-36 …","","Calls <code>U::from(self)</code>.","","","Creates new wallet with given ada. Currently wallet is …","Creates new wallet with given ada and rng. Currently …","Payment address based on stake public key","private payment key","","","Rewards address based on stake public key","current amount of ada","","Stake address based on stake public key","private stake key","","Cardano stake public key","","","","","Extension for <code>GeneralTransactionMetadata</code> tailored for …","Incorrect schema","Internal error","Metadata conversion error","","","","","","","","","","metadatum label 1 constant","metadatum label 2 constant","metadatum label 3 constant","metadatum label 4 constant","metadatum label 5 constant","Missing registration label","Missing registration signature label","registration metadata index constant","registration metadata constant","registration signature metadata constant","registration signature metadata index constant","Responsible for building registration transaction metadata","Serialization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Builds transaction instance","Creates transaction metadata","Get delegations part as bytes","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Converts json to metadata","Converts combined jsons to registration and registration …","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates registration builder for given wallet","nonce","Defines slot number for registration transaction. This …","","registration metadata hash","Reward address","metadata signature","","","Stake public key","Defines registration target (self or delegated)","Converts metadata to json","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Actor represent input definition of mainnet wallet from …","Arbitrary error","Cannot get voting key","Arbitrary error","Error which can be returned on any issue with retrieving …","Delegator with just an address. Can be used for already …","Trait for retrieving information about address …","Representative with just and voting key. Can be used for …","Generated delegator will setup new mainnet wallet","This variant will create new unique wallet with given ada …","Internal error","Represents wallet candidate for registration. Defines …","Wallet state builder for Network state builder is a trait …","Wallet state template builder error","wallet registers as delegator, meaning it will send …","wallet registers as delegator, meaning it will send …","wallet registers as direct voter, meaning it will send …","wallet registers as direct voter, meaning it will send …","wallet registered as representative. This is …","Builds collection of <code>MainnetWalletState</code> structs based on …","Builds collection of <code>MainnetWalletState</code> structs based on …","Downloads <code>MainnetWalletState</code> from network","Possible valid registration transaction","Possible identifier which define representative id","Ada amount account hold on snapshot time","Stake address","ada amount","ada amount","address in hex","alias","alias","alias","alias","registration","voting key in hex"],"i":[0,0,0,0,0,0,0,0,0,7,0,7,44,0,0,0,0,0,0,0,7,7,0,0,0,0,0,44,7,0,0,0,0,90,91,92,93,94,95,96,97,21,31,31,27,32,41,0,75,54,0,42,99,89,55,55,0,100,99,99,27,27,32,55,0,75,99,54,75,99,55,99,21,32,41,52,99,31,89,31,75,75,99,41,52,55,100,99,41,42,55,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,101,101,21,101,21,21,21,21,101,21,101,21,101,21,101,21,101,101,21,101,21,101,21,101,101,21,21,101,21,101,21,101,21,101,21,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,35,35,32,32,32,35,32,35,35,35,32,32,35,32,35,32,35,35,35,32,35,32,35,32,35,32,35,32,32,32,32,35,32,32,32,32,35,35,32,35,32,35,32,35,32,35,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,0,0,0,0,0,0,0,0,0,44,44,0,0,40,41,42,41,40,44,42,41,40,44,40,40,41,40,40,40,42,40,41,40,42,41,40,44,42,41,40,44,41,40,42,42,41,40,44,41,41,40,44,44,42,41,40,44,44,44,100,41,42,41,40,44,42,41,40,44,42,41,40,44,41,41,41,44,41,41,41,41,40,41,41,44,41,41,100,40,44,41,41,41,42,41,40,44,42,41,40,44,42,41,40,44,42,42,41,40,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,52,52,52,52,52,0,52,0,0,54,55,54,55,54,55,54,55,54,55,54,54,55,0,54,55,54,55,54,55,55,55,54,55,54,55,54,55,54,55,54,55,54,55,55,54,55,54,55,55,54,55,54,55,54,55,54,55,55,54,55,0,0,0,0,0,53,53,0,0,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,53,53,53,53,0,103,103,103,103,103,0,0,0,58,0,58,58,0,0,0,58,0,0,58,58,0,0,0,58,58,58,0,58,58,58,58,58,58,0,58,58,58,58,0,0,58,58,58,58,58,58,0,67,67,0,0,56,56,56,56,0,0,0,0,0,63,64,56,65,70,65,62,65,70,63,64,62,56,67,65,70,63,64,62,56,67,63,64,56,63,64,56,63,64,62,0,65,70,63,64,62,56,67,65,70,63,64,62,56,67,63,64,56,65,70,63,64,62,56,67,63,64,56,63,64,56,63,64,56,67,67,65,70,63,63,64,62,56,67,65,70,63,64,62,56,67,65,70,63,64,62,56,67,65,70,63,64,62,56,67,63,63,65,70,65,70,67,63,0,65,62,0,63,64,56,64,64,63,64,56,67,65,70,63,64,64,62,56,56,56,67,65,70,63,64,62,56,67,65,70,63,64,62,56,67,70,65,70,63,64,62,56,67,65,70,65,70,65,62,62,104,105,106,106,104,107,105,104,107,108,109,108,109,59,0,59,59,59,59,59,59,59,59,59,0,0,59,59,59,59,59,59,59,59,59,0,57,0,74,74,74,74,57,74,74,74,74,74,74,74,74,74,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,75,75,75,75,75,75,75,75,75,75,75,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,7,90,91,92,93,94,95,96,97,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,90,91,92,93,94,95,96,97,98,7,89,90,91,92,93,94,95,96,97,98,7,89,89,99,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,7,89,90,91,92,93,94,95,96,97,98,7,89,90,91,92,93,94,95,96,97,98,7,7,7,89,90,91,92,93,94,95,96,97,98,7,7,7,99,99,89,90,91,92,93,94,95,96,97,98,7,89,90,91,92,93,94,95,96,97,98,7,89,90,91,92,93,94,95,96,97,98,7,89,99,89,7,99,99,99,89,7,99,89,99,7,89,90,91,92,93,94,95,96,97,98,7,89,90,91,92,93,94,95,96,97,98,7,89,90,91,92,93,94,95,96,97,98,7,89,90,91,92,93,94,95,96,97,98,7,89,0,58,58,58,57,56,0,56,56,56,58,0,0,0,103,103,103,103,103,0,0,57,53,53,53,53,104,105,106,106,104,107,105,104,107],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[2,[1]]]],0,0,0,0,[3],[[4,5],[[8,[6,7]]]],[[9,9,5],[[8,[6,7]]]],0,0,0,0,0,0,[[],10],0,0,[[],11],0,[[],12],0,0,0,0,[[],13],0,0,0,0,0,[[],14],0,0,0,[[],3],[5,[[8,[15,7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16],0,[[17,[19,[18]]],20],[[]],[[]],[[]],[[]],[21,21],[[]],[[],21],[22],[22],[22],[22],[22],[22],[[]],[[]],[22,[[2,[1]]]],[[],22],[[],22],[[]],[[]],[[],23],[[],23],[[[19,[24]]],24],[[],25],0,[[]],[[],8],[[],8],[[],8],[[],8],[[],26],[[],26],[[]],[[]],0,0,[[]],[[]],[22],[22],[22],[27],[[]],[[],22],[[]],[[],23],0,0,[[27,[28,[24]]],[[29,[24]]]],[[27,30]],[[27,[2,[30]]]],[27,[[8,[31,[34,[[33,[32]]]]]]]],[21,27],[32,27],[[],8],[[],8],[[],26],[[]],[27],0,0,0,[16],[32],0,[[]],[[]],[[]],[[]],[35,35],[[]],[[],32],[22],[22],[22],[22],[22],[22],[[35,36],37],[[35,36],37],[[]],[[]],[[],22],[[],22],[[]],[[]],[[],23],[[],23],[32,[[2,[30]]]],0,[32,[[8,[24,35]]]],[21,32],[38],[[32,30]],[[32,[2,[30]]]],[32,31],0,[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],26],[[],26],[[]],[[]],0,[16],0,0,[[]],[[]],[31,31],[[]],[[],31],[22],[22],[22],[[31,36],37],[[]],[[],22],[[]],[[],23],0,0,[[]],[[],8],[[],8],[[],26],[[]],0,[[]],[[]],[[12,3,39],30],[22],[22],[22],[[]],[[],22],[[]],[[],23],[[],8],[[],8],[[],26],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,40],[[]],[[41,27],42],0,0,0,0,0,[[],41],[[],40],[22],[22],[22],[22],[22],[22],[22],[22],[43,[[8,[41]]]],[43,[[8,[40]]]],[42],[22],[22],[22],[22],[[],41],[[41,36],37],[[40,36],37],[[44,36],37],[[44,36],37],[[]],[[]],[[]],[45,44],[46,44],[[]],[3],[21,41],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[41,[[47,[17,[2,[39]]]]]],[[41,24]],[[41,[49,[48]]],[[8,[44]]]],[38],[41,[[2,[39]]]],[[41,3,3],[[47,[17,[2,[39]]]]]],[[[49,[48]]],[[8,[41,44]]]],[[41,50],8],[[40,50],8],[41,40],0,[44,[[19,[51]]]],[41,47],0,[[],3],[[]],[[],15],[[41,4],2],0,[41,[[8,[15,46]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],26],[[],26],[[],26],[[],26],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[52],[52,21],[52],[[],52],[22],[22],[22],[[]],[[],22],[[]],[[],23],0,0,0,[[],8],[[],8],[[],26],[[]],0,[[52,53],52],0,0,[16],[16],[[]],[[]],[[]],[[]],[54,54],[55,55],[[]],[[]],0,[[],54],[[],55],[[],15],[22],[22],[22],[22],[43,[[8,[54]]]],[43,[[8,[55]]]],0,0,[22],[22],[[54,36],37],[[55,36],37],[[]],[[]],[[],22],[[],22],[[]],[[]],[[],23],[[],23],0,0,0,[[54,50],8],[[55,50],8],0,[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],26],[[],26],0,[[]],[[]],0,0,0,0,0,[[]],[[]],0,0,0,[22],[22],[22],[[53,36],37],[[]],[[],22],[[]],[[],23],[53,19],0,[53,19],0,[53,3],0,[53,12],0,0,[[],8],[[],8],[[],26],[[]],0,[2,53],[[2,3],53],[[],53],[3,53],[[],53],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[2,[56]],57],[[8,[[2,[53]],58]]]],[[[2,[56]]],[[8,[[2,[53]],58]]]],0,[22],[22],[22],0,[[58,36],37],[[58,36],37],[59,58],[60,58],[[]],[61,58],0,[[],22],[[]],[[],23],[38],0,0,[58,[[19,[51]]]],[[],15],[[],8],[[],8],[[],26],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16],[16],[16],0,0,0,[[62,17],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,63],[64,64],[56,56],[[]],[[]],[[]],[[],63],[[],64],[[],62],[4,65],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[43,[[8,[63]]]],[43,[[8,[64]]]],[43,[[8,[56]]]],[22],[22],[22],[22],[22],[22],[22],[[63,63],66],[[64,64],66],[[56,56],66],[[],66],[[],66],[[],66],[[63,36],37],[[64,36],37],[[56,36],37],[[67,36],37],[[67,36],37],[[]],[[]],[2,63],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[63,66],[63,68],0,0,[[[69,[15]]],65],[[[69,[15]]],70],[38],[63],[[],62],0,0,[4,70],[[63,50],8],[[64,50],8],[[56,50],8],0,0,[[]],[[]],[[]],[[],15],[[],8],[[],8],[[],8],[[],8],[62,[[8,[64]]]],[[],8],[65,[[8,[56]]]],[[],8],[70,[[8,[56]]]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[65,3],65],[[70,3],70],[[65,[69,[15]]],65],[[70,[69,[15]]],70],[[65,64],65],[[62,15,17],62],[[62,2],62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[22],[22],[22],[[59,36],37],[[59,36],37],[[]],[56,[[8,[53,59]]]],[56],[[],22],[[]],[[],23],[38],[[],15],[[],8],[[],8],[[],26],[[]],0,0,0,[[]],[[]],[22],[22],[[],[[73,[[72,[71]]]]]],[74,[[73,[[72,[71]]]]]],[22],[[]],[[],22],[[]],[[],23],[[],8],[[],8],[[],26],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[75,76],[[75,2],53],[[75,2,3],53],[75,53],[[75,3],53],[75,53],[[]],[[]],0,[75,77],[75,78],[75,[[80,[79]]]],[22],[22],[22],[[]],[[75,2,3],30],[[75,3],30],[[75,81,3],30],[[],22],[[]],[[],23],0,[3,75],[[3,[0,[82,83]]],75],[75,84],[75,85],0,0,[75,86],[75,3],0,[75,84],[75,85],0,[75,14],[[],8],[[],8],[[],26],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],87],[[],87],[[],87],[[],87],[[],87],[[],88],[[],88],[[],17],[[],17],[[],87],[[],87],[[],87],[[],87],[[],88],[[],17],[[],88],[[],17],[[],87],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[89,30],[89,39],[[],[[2,[1]]]],0,[22],[22],[90,17],[22],[91,17],[22],[92,88],[93,88],[22],[22],[94,87],[22],[95,87],[96,87],[22],[97,87],[22],[98,87],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[[7,36],37],[[7,36],37],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,7],[61,7],[[]],[[4,5],[[8,[6,7]]]],[[9,9,5],[[8,[6,7]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[75,89],[[],10],[[89,3],89],[38],[[],11],[[],12],[[],13],0,[7,[[19,[51]]]],[[],14],[[89,81],89],[5,[[8,[15,7]]]],[[],15],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,53],[[2,3],53],[[],53],[3,53],[[],53],[[[2,[56]],57],[[8,[[2,[53]],58]]]],[[[2,[56]]],[[8,[[2,[53]],58]]]],[[],[[73,[[72,[71]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[15,"u8"],[3,"Vec"],[15,"u64"],[15,"str"],[4,"MetadataJsonSchema"],[8,"Sized"],[4,"JsonConversionError"],[4,"Result"],[4,"Value"],[15,"i32"],[3,"Blake2b256"],[3,"Address"],[3,"Ed25519Signature"],[3,"PublicKey"],[3,"String"],[3,"Private"],[15,"u32"],[3,"BlockHash"],[4,"Option"],[3,"HeaderBody"],[3,"Block0"],[15,"usize"],[3,"Request"],[3,"Block"],[3,"KESSignature"],[3,"TypeId"],[3,"InMemoryNode"],[3,"ObserveConfig"],[6,"Observe"],[3,"Transaction"],[3,"Settings"],[3,"Ledger"],[3,"RwLockReadGuard"],[3,"PoisonError"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"GeneralTransactionMetadata"],[3,"Settings"],[3,"InMemoryDbSync"],[3,"SharedInMemoryDbSync"],[8,"Deserializer"],[4,"Error"],[3,"Error"],[3,"Error"],[3,"HashMap"],[3,"Path"],[8,"AsRef"],[8,"Serializer"],[8,"Error"],[3,"MainnetNetworkBuilder"],[3,"MainnetWalletState"],[3,"Initials"],[3,"Parameters"],[4,"Actor"],[8,"ExternalProvider"],[4,"Error"],[4,"Error"],[4,"PublicKeyFromStrError"],[3,"JsError"],[3,"RegistrationBuilder"],[3,"Target"],[3,"Registration"],[3,"DelegatorBuilder"],[15,"bool"],[4,"Error"],[3,"Iter"],[8,"Into"],[3,"RepresentativeBuilder"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"DummyExternalProvider"],[3,"CardanoWallet"],[3,"BaseAddress"],[3,"Address"],[3,"Identifier"],[3,"Ed25519Extended"],[3,"SecretKey"],[4,"Delegations"],[8,"RngCore"],[8,"CryptoRng"],[3,"StakeCredential"],[3,"PrivateKey"],[3,"RewardAddress"],[3,"TransactionMetadatum"],[6,"TransactionMetadatumLabel"],[3,"RegistrationTransactionBuilder"],[3,"REGISTRATION_METADATA_IDX"],[3,"REGISTRATION_SIGNATURE_METADATA_IDX"],[3,"REGISTRATION_METADATA_LABEL"],[3,"REGISTRATION_METADATA_SIGNATURE_LABEL"],[3,"METADATUM_1"],[3,"METADATUM_2"],[3,"METADATUM_3"],[3,"METADATUM_4"],[3,"METADATUM_5"],[8,"GeneralTransactionMetadataInfo"],[8,"BlockDateFromCardanoAbsoluteSlotNo"],[3,"BlockBuilder"],[3,"TransactionBuilder"],[8,"MainnetWalletStateBuilder"],[13,"GeneratedDelegator"],[13,"GeneratedRep"],[13,"ExternalDelegator"],[13,"ExternalRep"],[13,"CannotBuildActor"],[13,"CannotBuildRegistration"]]},\
"mainnet_tools":{"doc":"Toolbox for testing and mocking Cardano haskell part of …","t":"AAANDDENNNMAMACDLLLLLALLLLALLLLLLMLLLLLCNECNCNCNALLLLLLLLLLLLLLLLLLAAALLLLLLFENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLNDENDDNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLNDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLNDNDNDNDELLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLMDDDLLLFMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLFMLLLLLLLLLLFLLLFMFFFMFLLLLFLLLLLLMMLLLFMLLLCCCAAAADLALLMALLLLLLLLLLLLLLLCCCCAAAADMLLLLLLLLLLLLLLLDDDDDDLLLMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDLLLLLLLLLLLLMLLLLHHDLLLLLLLLLLLLLLLMLLLLCCDCCALLLMLLLLLLLLALALALLLLLDLLALMLLLLLLLLLLLLDHHLLLMLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLLLDLLALMLLLLLLLLLALLLLHHDLLLMLLLLLLLLLLLLLLLHHDLLLMLLLLLLLLLLLLLLCCCDCLLALMLLLLALLLLLALALLLLLDHHLLLLLMLLLLLLLLLLLLLLLLLDHHLLLMLLLLLLLLLLLLLDHHLLLMLLLLLLLLLLLLLLLLDHHLLLMLLLLLLLLLLLLLDLLLMLLLLMLLLLLLLLLLLLLLLLLMLLLNNNNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLLMMIKFNEIIINNNAKKKANEIIINNNLLLLLLLLLLLLLLLLLLLLLKKKLLDDMAAMMMMMHHHHHHHHHHHDCENHHHHHHHHHHHNEDNLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLFLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMLLLMMLLLLLLLLLLLLDENDNNNLLLLLALLLLALLLLLLMMMMLLLLMLLDENRNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMLLLLLLLLLMLLF","n":["cardano_cli","snapshot","voter_registration","Address","Api","Mock","MockCommand","Query","StakeAddress","Transaction","cardano_cli","mock","path","wrapper","Command","Mock","__clone_box","borrow","borrow_mut","clone","clone_into","command","default","deref","deref_mut","drop","fake","fmt","from","init","into","into_request","path","path","to_owned","try_from","try_into","type_id","vzip","Address","Address","Command","Query","Query","StakeAddress","StakeAddress","Transaction","Transaction","address","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","query","stake_address","transaction","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","write_to_file_or_println","Address","Build","BuildCommand","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","exec","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","into_request","into_request","mainnet","out_file","payment_verification_key","payment_verification_key_file","stake_verification_key","stake_verification_key_file","testnet_magic","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","ProtocolParameters","ProtocolParametersCommand","Query","Tip","TipCommand","UTxOCommand","Utxo","address","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","exec","exec","exec","exec","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","has_subcommand","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","mainnet","mainnet","mainnet","out_file","out_file","out_file","testnet_magic","testnet_magic","testnet_magic","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","Build","BuildCommand","RegisterCertificate","RegistrationCertificateCommand","StakeAddress","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","into","into","into","into_request","into_request","into_request","mainnet","out_file","out_file","stake_verification_key","stake_verification_key_file","stake_verification_key_file","testnet_magic","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","Build","BuildCommand","Id","IdCommand","Sign","SignCommand","Submit","SubmitCommand","Transaction","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate_file","change_address","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","group_id","has_subcommand","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mainnet","mainnet","mainnet","out_file","out_file","protocol_params_file","signing_key_file","testnet_magic","testnet_magic","testnet_magic","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx_body_file","tx_body_file","tx_file","tx_in","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","witness_override","QueryUTxO","Tip","UTxO","__clone_box","__clone_box","__clone_box","address","amount","block","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","epoch","era","fmt","fmt","fmt","fmt","from","from","from","hash","hash","header","init","init","init","into","into","into","into_request","into_request","into_request","protocol_parameters","serialize","serialize","serialize","sign","slot","stake_address","stake_certificate","submit","sync_progress","tip","to_owned","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","tx_hash","tx_ix","type_id","type_id","type_id","utxo","utxos","vzip","vzip","vzip","Api","CardanoKeyTemplate","Error","cli","data","error","utils","Api","address","api","borrow","borrow_mut","cardano_cli","command","deref","deref_mut","drop","from","init","into","into_request","new","query","stake_address","transaction","try_from","try_into","type_id","vzip","Address","Query","StakeAddress","Transaction","address","query","stake_address","transaction","Address","address_command","borrow","borrow_mut","build","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vzip","FundsEntry","FundsResponse","FundsValue","Query","Utxo","UtxoEntry","__clone_box","__clone_box","__clone_box","address","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","content","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","entries","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from_string","funds","get_total_funds","hash","index","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","lovelace","new","protocol_parameters","query_command","serialize","serialize","serialize","tip","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","utxo","value","vzip","vzip","vzip","vzip","vzip","vzip","StakeAddress","borrow","borrow_mut","build","deref","deref_mut","drop","from","init","into","into_request","new","register_certificate","stake_address_command","try_from","try_into","type_id","vzip","CALLSITE","META","Transaction","borrow","borrow_mut","build","deref","deref_mut","drop","from","id","init","into","into_request","new","sign","submit","submit_from_bytes","transaction_command","try_from","try_into","type_id","vzip","Address","Query","Root","StakeAddress","Transaction","address","address","borrow","borrow_mut","command","deref","deref_mut","drop","from","init","into","into_request","new","query","query","stake_address","stake_address","transaction","transaction","try_from","try_into","type_id","vzip","Address","borrow","borrow_mut","build","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","type_id","vzip","AddressBuilder","CALLSITE","META","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","network","new","out_file","payment_verification_key_file","stake_verification_key_file","try_from","try_into","type_id","vzip","Query","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","protocol_parameters","tip","try_from","try_into","type_id","utxo","vzip","StakeAddress","borrow","borrow_mut","build","build","command","deref","deref_mut","drop","from","init","into","into_request","new","register_certificate","registration","try_from","try_into","type_id","vzip","CALLSITE","META","StakeAddressBuilder","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","network","new","out_file","stake_verification_key_file","try_from","try_into","type_id","vzip","CALLSITE","META","RegisterCertificate","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","out_file","stake_verification_key_file","try_from","try_into","type_id","vzip","IdCommandBuilder","SignCommandBuilder","SubmitCommandBuilder","Transaction","TransactionCommandBuilder","borrow","borrow_mut","build","build","command","deref","deref_mut","drop","from","id","id","init","into","into_request","new","sign","sign","submit","submit","try_from","try_into","type_id","vzip","Builder","CALLSITE","META","borrow","borrow_mut","build","certificate_file","change_address","command","deref","deref_mut","drop","from","init","into","into_request","network","new","out_file","protocol_params_file","try_from","try_into","tx_in","type_id","vzip","witness_override","Builder","CALLSITE","META","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","tx_file","type_id","vzip","Builder","CALLSITE","META","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","network","new","out_file","signing_key_file","try_from","try_into","tx_body_file","type_id","vzip","Builder","CALLSITE","META","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","into_request","new","try_from","try_into","tx_file","type_id","vzip","CardanoKeyTemplate","__clone_box","borrow","borrow_mut","cbor_hex","clone","clone_into","deref","deref_mut","description","deserialize","drop","eq","equivalent","fmt","from","init","into","into_request","payment_signing_key","payment_verification_key","serialize","stake_signing_key","stake_verification_key","to_owned","try_from","try_into","type","type_id","vzip","write_to_file","CannotCreateAFile","CannotCreateParentDirectory","CannotExtractSlotId","CannotGetOutputFromCommand","CannotGetParentDirectory","CannotParseCardanoCliOutput","CannotParseVoterRegistrationOutput","CannotWriteAFile","Error","Io","Json","ParseInt","Regex","Serde","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","fmt","from","header","in_current_span","init","into","into_request","provide","serialize","to_string","try_from","try_into","type_id","vzip","content","regex","CommandExt","arg_network","write_content","CannotConvertFromOutput","Error","MainnetWalletStateExtension","OutputExtension","OutputsExtension","Snapshot","Template","TimeConversion","convert","try_into_raw_snapshot_request","try_into_raw_snapshot_request","try_into_voting_registration","wormhole","CannotConvertFromOutput","Error","MainnetWalletStateExtension","OutputExtension","OutputsExtension","Snapshot","Template","TimeConversion","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","header","in_current_span","init","into","into_request","provide","source","to_string","try_from","try_into","try_into_raw_snapshot_request","try_into_raw_snapshot_request","try_into_voting_registration","type_id","vzip","Command","Config","cmd","command","config","config","log_level","parameters","servicing_station","snapshot_service","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Command","Config","Error","IoError","META","META","META","META","META","META","META","META","META","META","META","OneShot","Operation","Schedule","Schedule","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cmd","command","command","command","command_for_update","command_for_update","command_for_update","config","cron","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eagerly","exec","exec","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","header","in_current_span","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","log_level","one_shot","provide","read_config","run_single","source","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","Config","ServicingStation","SnapshotService","__clone_box","__clone_box","__clone_box","address","address","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","parameters","serialize","serialize","serialize","servicing_station","snapshot_service","to_owned","to_owned","to_owned","token","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Command","Error","IoError","Mock","PaymentSigningKey","StakeSigningKey","VotePublicKey","__clone_box","borrow","borrow_mut","clone","clone_into","command","default","deref","deref_mut","drop","fake","fmt","from","init","into","into_request","path","path","rewards_address","slot_no","stake_signing_key_file","to_owned","try_from","try_into","type_id","vote_public_key_file","vzip","with_response","Command","Error","IoError","PATH_TO_DYNAMIC_CONTENT","PaymentSigningKey","StakeSigningKey","VotePublicKey","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","into","into","into_request","into_request","provide","rewards_address","slot_no","source","stake_signing_key_file","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vote_public_key_file","vzip","vzip","metadata"],"q":[[0,"mainnet_tools"],[3,"mainnet_tools::cardano_cli"],[14,"mainnet_tools::cardano_cli::mock"],[39,"mainnet_tools::cardano_cli::mock::command"],[77,"mainnet_tools::cardano_cli::mock::command::address"],[135,"mainnet_tools::cardano_cli::mock::command::query"],[248,"mainnet_tools::cardano_cli::mock::command::stake_address"],[332,"mainnet_tools::cardano_cli::mock::command::transaction"],[478,"mainnet_tools::cardano_cli::mock::fake"],[566,"mainnet_tools::cardano_cli::wrapper"],[573,"mainnet_tools::cardano_cli::wrapper::cli"],[595,"mainnet_tools::cardano_cli::wrapper::cli::api"],[603,"mainnet_tools::cardano_cli::wrapper::cli::api::address"],[620,"mainnet_tools::cardano_cli::wrapper::cli::api::query"],[747,"mainnet_tools::cardano_cli::wrapper::cli::api::stake_address"],[765,"mainnet_tools::cardano_cli::wrapper::cli::api::transaction"],[788,"mainnet_tools::cardano_cli::wrapper::cli::command"],[816,"mainnet_tools::cardano_cli::wrapper::cli::command::address"],[834,"mainnet_tools::cardano_cli::wrapper::cli::command::address::build"],[857,"mainnet_tools::cardano_cli::wrapper::cli::command::query"],[877,"mainnet_tools::cardano_cli::wrapper::cli::command::stake_address"],[897,"mainnet_tools::cardano_cli::wrapper::cli::command::stake_address::build"],[919,"mainnet_tools::cardano_cli::wrapper::cli::command::stake_address::registration"],[940,"mainnet_tools::cardano_cli::wrapper::cli::command::transaction"],[968,"mainnet_tools::cardano_cli::wrapper::cli::command::transaction::build"],[994,"mainnet_tools::cardano_cli::wrapper::cli::command::transaction::id"],[1014,"mainnet_tools::cardano_cli::wrapper::cli::command::transaction::sign"],[1037,"mainnet_tools::cardano_cli::wrapper::cli::command::transaction::submit"],[1057,"mainnet_tools::cardano_cli::wrapper::data"],[1088,"mainnet_tools::cardano_cli::wrapper::error"],[1123,"mainnet_tools::cardano_cli::wrapper::error::Error"],[1125,"mainnet_tools::cardano_cli::wrapper::utils"],[1128,"mainnet_tools::snapshot"],[1141,"mainnet_tools::snapshot::convert"],[1175,"mainnet_tools::snapshot::wormhole"],[1185,"mainnet_tools::snapshot::wormhole::command"],[1315,"mainnet_tools::snapshot::wormhole::config"],[1385,"mainnet_tools::voter_registration"],[1420,"mainnet_tools::voter_registration::command"],[1476,"mainnet_tools::voter_registration::fake"]],"d":["Cardano CLI wrapper and mock","Snapshot related tools or utils","Mock for voter registration. It can produce mocked …","Address related commands","Cardano Cli wrapper which allows to use cardano cli as …","Cardano CLI mock. It can return arbitrary/fake data but …","Wrapper around cardano CLI commands","Query commands","Stake address related commands","Transaction commands","","","","","","Cardano CLI mock. It can return arbitrary/fake data but …","","","","","","","","","","","Module for providing fake/arbitrary data which Cardano CLI …","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Path to mock cli","","","","","","","","Address related commands","Wrapper around cardano CLI commands","","Query commands","","Stake address related commands","","Transaction commands","","","","","","","","","","","Executes command","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper struct which imitates response from query utxo","Helper struct which imitates response from tip","Helper struct which imitates response from utxo","","","","Arbitrary address","Utxo ada amount","tip block height","","","","","","","","","","","","","","","","","","","","","","","","","","","tip epoch","tip era","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Arbitrary hash","tip hash","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Arbitrary protocol parameters","","","","Response from transaction sign command","tip slot","Arbitrary stake address","Arbitrary stake certificate","Arbitrary Response from Cardano CLI on submit transaction …","tip sync progress","Arbitrary blockchain tip","","","","","Arbitrary transaction","","","","","","","Utxo tx hash","Utxo tx id","","","","Arbitraty query utxo response","","","","","","","","","","","","Cardano Cli wrapper which allows to use cardano cli as …","Address related sub commands","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Creates new Api object based on path to cardano cli","Query related sub commands","Stake address related sub commands","Transaction related sub commands","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Error related to incorrect conversion","Conversion related errors","Extensions for <code>MainnetWalletStateExtension</code> struct","Extensions for voting tools <code>Output</code> struct","Extensions for collection of voting tools <code>Output</code> struct","Error related to snapshot conversion","Error related to building mock snapshot","Errors derived from time conversion","","Converts to <code>RawSnapshotRequest</code>","Converts to <code>RawSnapshotRequest</code>","Converts to <code>VotingRegistration</code>","Simple scheduler for transporting snapshot from snapshot …","Error related to incorrect conversion","Conversion related errors","Extensions for <code>MainnetWalletStateExtension</code> struct","Extensions for voting tools <code>Output</code> struct","Extensions for collection of voting tools <code>Output</code> struct","Error related to snapshot conversion","Error related to building mock snapshot","Errors derived from time conversion","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Converts to <code>RawSnapshotRequest</code>","Converts to <code>RawSnapshotRequest</code>","Converts to <code>VotingRegistration</code>","","","Main command","Configuration. It contains 3 parts snapshot-service …","","","","Path to configuration file","Log level","Import parameters","Servicing service related configuration","Snapshot service related configuration","","","","","","","","","","","","Main command","","","","","","","","","","","","","","","run single job","Snapshot wormhole","Run job in a schedule mode.","","","","","","","","","","","","","","","","","","","","","","","Path to configuration file","Cron string defining frequency of jobs","","","","","","","","","","","","","If set to true, job will be run immediately.","Executes command","Executes command","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Log level","Performs one-time snapshot transport operation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration. It contains 3 parts snapshot-service …","","Snapshot service related config","","","","Address. In format: ‘https://{host}:{port}’","Address. In format: ‘http[s]://{host}:{port}’","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Import parameters","","","","Servicing service related configuration","Snapshot service related configuration","","","","Access token","Access token","","","","","","","","","","","","","Voter registration mock. It can return correctly formatted …","Errors for Voter Registration Mock","General IO related error","Voter registration mock","Payment key IO related error","Stake signing key IO related error","Catalyst key IO related error","","","","","","","","","","","Arbitrary responses from voter registartion mock","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Path to persisted response","","Rewards address in bech32","Slot number which will be used as a nonce","Path to cardano stake signing key file in bech32","","","","","Path to catalyst voting key file in bech32","","Set response which will be returned when executing …","Voter registration mock. It can return correctly formatted …","Errors for Voter Registration Mock","General IO related error","","Payment key IO related error","Stake signing key IO related error","Catalyst key IO related error","","","","","","","","","","","","","","","Executes command","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Rewards address in bech32","Slot number which will be used as a nonce","","Path to cardano stake signing key file in bech32","","","","","","","","","","Path to catalyst voting key file in bech32","","","Arbitrary metadata"],"i":[0,0,0,11,0,0,0,11,11,11,46,0,2,0,0,0,2,2,2,2,2,0,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,0,11,0,0,11,0,11,0,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,11,11,11,11,11,11,0,0,19,0,20,20,19,19,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,19,20,20,19,19,20,19,20,19,20,20,20,20,20,20,20,20,19,20,19,20,19,20,19,20,19,20,19,20,22,0,0,22,0,0,22,25,23,24,25,23,24,25,22,22,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,23,24,25,22,22,23,24,25,22,23,24,25,22,23,24,25,23,24,25,23,24,25,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,22,23,24,25,26,0,26,0,0,27,28,27,28,26,26,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,27,28,26,26,27,28,26,27,28,26,27,28,27,27,28,27,27,28,27,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,29,0,29,0,29,0,29,0,0,33,30,34,31,33,30,34,31,29,29,29,33,30,34,31,29,33,30,34,31,31,31,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,33,30,34,31,29,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,30,34,31,30,31,31,30,30,34,31,29,33,30,34,31,29,33,30,34,31,30,34,33,31,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,29,33,30,34,31,31,0,0,0,36,37,38,0,37,36,36,37,38,36,37,38,36,37,38,36,37,38,36,38,36,37,38,36,37,38,36,37,38,36,37,38,36,36,36,37,38,38,36,37,38,0,36,38,36,37,38,36,37,38,36,37,38,0,36,37,38,0,36,0,0,0,36,0,36,37,38,38,0,36,37,38,36,37,38,37,37,36,37,38,0,38,36,37,38,0,0,0,0,0,0,0,0,46,0,46,46,46,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,0,0,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,0,0,0,0,57,58,59,58,100,48,60,100,57,58,59,48,60,100,57,58,59,57,58,59,57,58,59,57,48,60,100,57,58,59,48,60,100,57,58,59,57,58,59,48,60,100,57,58,59,60,57,58,59,57,58,59,57,58,59,48,60,100,57,58,59,60,48,60,100,100,48,60,100,57,58,59,48,60,100,57,58,59,48,60,100,57,58,59,59,48,48,48,57,58,59,48,57,58,59,48,60,100,57,58,59,48,60,100,57,58,59,48,60,100,57,58,59,48,58,48,60,100,57,58,59,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,0,0,0,0,67,67,67,67,67,67,67,67,67,67,67,67,0,67,0,67,0,67,67,67,67,67,0,56,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,64,64,0,64,64,64,64,64,64,64,64,64,64,64,0,64,64,64,64,0,0,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,0,0,0,66,66,0,66,66,66,66,66,66,0,66,66,66,66,66,0,66,0,66,66,66,66,66,0,0,0,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,0,0,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,0,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,55,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,101,101,0,102,0,80,0,0,0,0,80,80,80,0,103,104,105,0,80,0,0,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,103,104,105,80,80,0,0,87,0,0,87,87,90,90,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,0,0,0,0,91,0,0,91,87,89,87,89,91,91,87,91,89,92,87,91,89,92,87,87,91,89,87,91,89,87,89,87,91,89,92,87,91,89,92,87,91,89,92,89,87,89,87,91,89,92,92,87,91,89,92,92,87,91,89,87,91,89,87,89,91,92,92,87,91,89,92,87,91,89,92,87,91,89,92,87,0,92,0,89,92,92,87,91,89,92,87,91,89,92,87,91,89,92,87,91,89,87,91,89,87,91,89,92,0,0,0,90,93,94,93,94,90,93,94,90,93,94,90,93,94,90,93,94,90,93,94,90,93,94,90,93,94,90,93,94,90,93,94,90,93,94,90,93,94,90,93,94,90,93,94,90,90,93,94,90,90,90,93,94,93,94,90,93,94,90,93,94,90,93,94,90,93,94,0,0,99,0,99,99,99,95,95,95,95,95,0,95,95,95,95,0,95,95,95,95,95,95,95,98,98,98,95,95,95,95,98,95,95,0,0,99,0,99,99,99,98,98,98,99,98,99,98,98,98,99,98,99,98,99,98,98,99,99,98,99,99,98,98,98,99,99,98,99,98,99,98,99,99,98,98,99,98,99,98,99,98,99,98,99,98,98,98,98,99,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[2,2],[[]],0,[[],2],[3],[3],[3],0,[[2,4],5],[[]],[[],3],[[]],[[],6],[2,7],0,[[]],[[],8],[[],8],[[],9],[[]],0,0,0,0,0,0,0,0,0,0,[10,10],[10,10],[[]],[[]],[[],10],[[],10],[3],[3],[3],[11,[[8,[12]]]],[[11,4],5],[[]],[13,[[8,[11,14]]]],[13,[[8,[11,14]]]],[15,16],[[],3],[[]],[[],6],0,0,0,[[],8],[[],8],[[],9],[[11,13],[[8,[14]]]],[[11,13],[[8,[14]]]],[[]],[[[17,[7]],15],[[8,[18]]]],0,0,0,[10,10],[10,10],[10,10],[10,10],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[3],[3],[3],[3],[3],[3],[19,[[8,[18]]]],[20,[[8,[18]]]],[[19,4],5],[[20,4],5],[[]],[[]],[13,[[8,[19,14]]]],[13,[[8,[20,14]]]],[13,[[8,[19,14]]]],[13,[[8,[20,14]]]],[[],[[17,[21]]]],[15,16],[[],3],[[],3],[[]],[[]],[[],6],[[],6],0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[19,13],[[8,[14]]]],[[20,13],[[8,[14]]]],[[19,13],[[8,[14]]]],[[20,13],[[8,[14]]]],[[]],[[]],0,0,0,0,0,0,0,0,[10,10],[10,10],[10,10],[10,10],[10,10],[10,10],[10,10],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[22,[[8,[18]]]],[23,[[8,[18]]]],[24,[[8,[18]]]],[25,[[8,[18]]]],[[22,4],5],[[23,4],5],[[24,4],5],[[25,4],5],[[]],[[]],[[]],[[]],[13,[[8,[22,14]]]],[13,[[8,[23,14]]]],[13,[[8,[24,14]]]],[13,[[8,[25,14]]]],[13,[[8,[22,14]]]],[13,[[8,[23,14]]]],[13,[[8,[24,14]]]],[13,[[8,[25,14]]]],[[],[[17,[21]]]],[[],[[17,[21]]]],[[],[[17,[21]]]],[15,16],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[22,13],[[8,[14]]]],[[23,13],[[8,[14]]]],[[24,13],[[8,[14]]]],[[25,13],[[8,[14]]]],[[22,13],[[8,[14]]]],[[23,13],[[8,[14]]]],[[24,13],[[8,[14]]]],[[25,13],[[8,[14]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,[10,10],[10,10],[10,10],[10,10],[10,10],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[3],[3],[3],[3],[3],[3],[3],[3],[3],[26,[[8,[18]]]],[27,[[8,[18]]]],[28,[[8,[18]]]],[[26,4],5],[[27,4],5],[[28,4],5],[[]],[[]],[[]],[13,[[8,[26,14]]]],[13,[[8,[27,14]]]],[13,[[8,[28,14]]]],[13,[[8,[26,14]]]],[13,[[8,[27,14]]]],[13,[[8,[28,14]]]],[[],[[17,[21]]]],[[],[[17,[21]]]],[15,16],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[26,13],[[8,[14]]]],[[27,13],[[8,[14]]]],[[28,13],[[8,[14]]]],[[26,13],[[8,[14]]]],[[27,13],[[8,[14]]]],[[28,13],[[8,[14]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[10,10],[10,10],[10,10],[10,10],[10,10],[10,10],[10,10],[10,10],[10,10],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[29,[[8,[18]]]],[[]],[30,[[8,[18]]]],[[]],[31,32],[[29,4],5],[[33,4],5],[[30,4],5],[[34,4],5],[[31,4],5],[[]],[[]],[[]],[[]],[[]],[13,[[8,[29,14]]]],[13,[[8,[33,14]]]],[13,[[8,[30,14]]]],[13,[[8,[34,14]]]],[13,[[8,[31,14]]]],[13,[[8,[29,14]]]],[13,[[8,[33,14]]]],[13,[[8,[30,14]]]],[13,[[8,[34,14]]]],[13,[[8,[31,14]]]],[[],[[17,[21]]]],[[],[[17,[21]]]],[[],[[17,[21]]]],[[],[[17,[21]]]],[15,16],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[29,13],[[8,[14]]]],[[33,13],[[8,[14]]]],[[30,13],[[8,[14]]]],[[34,13],[[8,[14]]]],[[31,13],[[8,[14]]]],[[29,13],[[8,[14]]]],[[33,13],[[8,[14]]]],[[30,13],[[8,[14]]]],[[34,13],[[8,[14]]]],[[31,13],[[8,[14]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1],[1],[1],[[],35],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[37,37],[38,38],[[]],[[]],[[]],[[],36],[[],38],[3],[3],[3],[3],[3],[3],[39,[[8,[36]]]],[39,[[8,[37]]]],[39,[[8,[38]]]],[3],[3],[3],0,0,[[36,4],5],[[37,4],5],[[38,4],5],[[38,4],5],[[]],[[]],[[]],[[],35],0,[[[0,[40,41,42]]],[[43,[[0,[40,41,42]]]]]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],44],[[36,45],8],[[37,45],8],[[38,45],8],[[],35],0,[[],35],[[],35],[[],35],0,[[],36],[[]],[[]],[[]],[[],35],[[],35],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,0,[[],9],[[],9],[[],9],[[],38],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,[46,47],0,[[]],[[]],0,0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[7,46],[46,48],[46,49],[46,50],[[],8],[[],8],[[],9],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[47,[52,[51]],[52,[51]],[52,[51]],53],[[8,[54,55]]]],[3],[3],[3],[[]],[[],3],[[]],[[],6],[56,47],[[],8],[[],8],[[],9],[[]],0,0,0,0,0,0,[1],[1],[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,57],[58,58],[59,59],[[]],[[]],[[]],0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[39,[[8,[57]]]],[39,[[8,[58]]]],[39,[[8,[59]]]],[3],[3],[3],[3],[3],[3],0,[[57,57],16],[[58,58],16],[[59,59],16],[[],16],[[],16],[[],16],[[57,4],5],[[58,4],5],[[59,4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[],60],[[48,[61,[35]],53],[[8,[62,55]]]],[60,62],0,0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[63,48],[[48,53,[52,[51]]],[[8,[54,55]]]],0,[[57,45],8],[[58,45],8],[[59,45],8],[[48,53],[[8,[36,55]]]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[48,[61,[35]],53],[[8,[60,55]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[49,[52,[51]],[52,[51]],53],[[8,[54,55]]]],[3],[3],[3],[[]],[[],3],[[]],[[],6],[64,49],[[49,[52,[51]],[52,[51]]],[[8,[54,55]]]],0,[[],8],[[],8],[[],9],[[]],0,0,0,[[]],[[]],[[50,53,35,35,7,7,7,65],[[8,[54,55]]]],[3],[3],[3],[[]],[[50,[52,[51]]],[[8,[35,55]]]],[[],3],[[]],[[],6],[66,50],[[50,[52,[51]],[52,[51]],[52,[51]]],[[8,[54,55]]]],[[50,[52,[51]]],[[8,[35,55]]]],[[50,[52,[51]]],[[8,[35,55]]]],0,[[],8],[[],8],[[],9],[[]],0,0,0,0,0,0,[67,56],[[]],[[]],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[68,67],0,[67,63],0,[67,64],0,[67,66],[[],8],[[],8],[[],9],[[]],0,[[]],[[]],0,[56,69],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[68,56],[[],8],[[],8],[[],9],[[]],0,0,0,[[]],[[]],[69,68],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[[69,53],69],[68,69],[[69,[52,[51]]],69],[[69,[52,[51]]],69],[[69,[52,[51]]],69],[[],8],[[],8],[[],9],[[]],0,[[]],[[]],[63,68],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[68,63],[[63,53,[52,[51]]],63],[[63,53],63],[[],8],[[],8],[[],9],[[63,53,[61,[35]]],63],[[]],0,[[]],[[]],0,[64,70],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[68,64],[64,71],0,[[],8],[[],8],[[],9],[[]],0,0,0,[[]],[[]],[70,68],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[[70,53],70],[68,70],[[70,[52,[51]]],70],[[70,[52,[51]]],70],[[],8],[[],8],[[],9],[[]],0,0,0,[[]],[[]],[71,68],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[68,71],[[71,[52,[51]]],71],[[71,[52,[51]]],71],[[],8],[[],8],[[],9],[[]],0,0,0,0,0,[[]],[[]],0,[66,72],0,[3],[3],[3],[[]],0,[66,73],[[],3],[[]],[[],6],[68,66],0,[66,74],0,[66,75],[[],8],[[],8],[[],9],[[]],0,0,0,[[]],[[]],[72,68],[[72,[52,[51]]],72],[[72,35],72],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[[72,53],72],[68,72],[[72,[52,[51]]],72],[[72,[52,[51]]],72],[[],8],[[],8],[[72,35],72],[[],9],[[]],[[72,65],72],0,0,0,[[]],[[]],[73,68],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[68,73],[[],8],[[],8],[[73,[52,[51]]],73],[[],9],[[]],0,0,0,[[]],[[]],[74,68],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[[74,53],74],[68,74],[[74,[52,[51]]],74],[[74,[52,[51]]],74],[[],8],[[],8],[[74,[52,[51]]],74],[[],9],[[]],0,0,0,[[]],[[]],[75,68],0,[3],[3],[3],[[]],[[],3],[[]],[[],6],[68,75],[[],8],[[],8],[[75,[52,[51]]],75],[[],9],[[]],0,[1],[[]],[[]],0,[76,76],[[]],[3],[3],0,[39,[[8,[76]]]],[3],[[76,76],16],[[],16],[[76,4],5],[[]],[[],3],[[]],[[],6],[35,76],[35,76],[[76,45],8],[35,76],[35,76],[[]],[[],8],[[],8],0,[[],9],[[]],[[76,[52,[51]]],[[8,[55]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[3],[3],[39,[[8,[55]]]],[3],[[55,4],5],[[55,4],5],[[]],[[[0,[40,41,42]]],[[43,[[0,[40,41,42]]]]]],[[]],[[],3],[[]],[[],6],[77],[[55,45],8],[[],35],[[],8],[[],8],[[],9],[[]],0,0,0,[53],[[15,[52,[51]]],[[8,[18]]]],0,0,0,0,0,0,0,0,0,[78,[[8,[79,80]]]],[78,[[8,[79,80]]]],[[],[[8,[[82,[81]],80]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[3],[3],[3],[[80,4],5],[[80,4],5],[[]],[83,80],[84,80],[85,80],[[[0,[40,41,42]]],[[43,[[0,[40,41,42]]]]]],[[]],[[],3],[[]],[[],6],[77],[80,[[17,[86]]]],[[],35],[[],8],[[],8],[78,[[8,[79,80]]]],[78,[[8,[79,80]]]],[[],[[8,[[82,[81]],80]]]],[[],9],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,10],[10,10],[10,10],[10,10],[10,10],[10,10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],0,[87,88],[[89,90],88],[[87,4],5],[[91,4],5],[[89,4],5],[[92,4],5],[[92,4],5],[[]],[[]],[[]],[[]],[18,92],[13,[[8,[87,14]]]],[13,[[8,[91,14]]]],[13,[[8,[89,14]]]],[13,[[8,[87,14]]]],[13,[[8,[91,14]]]],[13,[[8,[89,14]]]],[[],[[17,[21]]]],[[],[[17,[21]]]],[15,16],[[[0,[40,41,42]]],[[43,[[0,[40,41,42]]]]]],[[]],[[],3],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],0,[90,88],[77],[[[52,[51]]],[[88,[90]]]],[90],[92,[[17,[86]]]],[[],35],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[87,13],[[8,[14]]]],[[91,13],[[8,[14]]]],[[89,13],[[8,[14]]]],[[87,13],[[8,[14]]]],[[91,13],[[8,[14]]]],[[89,13],[[8,[14]]]],[[]],[[]],[[]],[[]],0,0,0,[1],[1],[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[90,90],[93,93],[94,94],[[]],[[]],[[]],[3],[3],[3],[3],[3],[3],[39,[[8,[90]]]],[39,[[8,[93]]]],[39,[[8,[94]]]],[3],[3],[3],[[90,4],5],[[93,4],5],[[94,4],5],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[]],[[]],[[]],[[],6],[[],6],[[],6],0,[[90,45],8],[[93,45],8],[[94,45],8],0,0,[[]],[[]],[[]],0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[],9],[[]],[[]],[[]],0,0,0,0,0,0,0,[1],[[]],[[]],[95,95],[[]],0,[[],95],[3],[3],[3],0,[[95,4],5],[[]],[[],3],[[]],[[],6],[95,7],0,0,0,0,[[]],[[],8],[[],8],[[],9],0,[[]],[[95,96,97],95],0,0,0,0,0,0,0,[10,10],[10,10],[[]],[[]],[[]],[[]],[[],10],[[],10],[3],[3],[3],[3],[3],[3],[98,[[8,[99]]]],[[98,4],5],[[99,4],5],[[99,4],5],[[]],[18,99],[[]],[13,[[8,[98,14]]]],[13,[[8,[98,14]]]],[[],[[17,[21]]]],[[[0,[40,41,42]]],[[43,[[0,[40,41,42]]]]]],[[]],[[],3],[[],3],[[]],[[]],[[],6],[[],6],[77],0,0,[99,[[17,[86]]]],0,[[],35],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],[[98,13],[[8,[14]]]],[[98,13],[[8,[14]]]],0,[[]],[[]],[[],35]],"c":[],"p":[[3,"Private"],[3,"Mock"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"PathBuf"],[4,"Result"],[3,"TypeId"],[3,"Command"],[4,"Command"],[3,"Report"],[3,"ArgMatches"],[6,"Error"],[15,"str"],[15,"bool"],[4,"Option"],[3,"Error"],[4,"Address"],[3,"BuildCommand"],[3,"Id"],[4,"Query"],[3,"ProtocolParametersCommand"],[3,"TipCommand"],[3,"UTxOCommand"],[4,"StakeAddress"],[3,"BuildCommand"],[3,"RegistrationCertificateCommand"],[4,"Transaction"],[3,"SignCommand"],[3,"BuildCommand"],[6,"Result"],[3,"IdCommand"],[3,"SubmitCommand"],[3,"String"],[3,"Tip"],[3,"UTxO"],[3,"QueryUTxO"],[8,"Deserializer"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[4,"Value"],[8,"Serializer"],[3,"Api"],[3,"Address"],[3,"Query"],[3,"StakeAddress"],[3,"Transaction"],[3,"Path"],[8,"AsRef"],[4,"NetworkType"],[3,"ExitStatus"],[4,"Error"],[3,"Address"],[3,"FundsResponse"],[3,"FundsEntry"],[3,"FundsValue"],[3,"Utxo"],[8,"Into"],[15,"u64"],[3,"Query"],[3,"StakeAddress"],[15,"u32"],[3,"Transaction"],[3,"Root"],[3,"Command"],[3,"AddressBuilder"],[3,"StakeAddressBuilder"],[3,"RegisterCertificate"],[3,"Builder"],[3,"Builder"],[3,"Builder"],[3,"Builder"],[3,"CardanoKeyTemplate"],[3,"Demand"],[3,"Parameters"],[3,"RawSnapshot"],[4,"Error"],[3,"MainnetRewardAddress"],[3,"VotingRegistration"],[4,"Error"],[4,"Error"],[3,"TryFromIntError"],[8,"Error"],[3,"Command"],[6,"Result"],[3,"Schedule"],[3,"Config"],[4,"Operation"],[4,"Error"],[3,"SnapshotService"],[3,"ServicingStation"],[3,"Mock"],[3,"GeneralTransactionMetadata"],[3,"TempDir"],[3,"Command"],[4,"Error"],[3,"UtxoEntry"],[13,"CannotExtractSlotId"],[8,"CommandExt"],[8,"MainnetWalletStateExtension"],[8,"OutputsExtension"],[8,"OutputExtension"]]},\
"mjolnir":{"doc":"","t":"ANNDECNNALLLLALLLLFLLMLLLLLLLLALLAALLLLLLMALLLLLLLLAMLLLLLLLLLLLLFNDENMLLLLLLLLLAMLLLLLLMLLLLLLLLLLLLLMLLLLMMLALMLLLLLLLLLLLDNNDEMLMLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLMLLLLLLLLLLLLLLLCCDLLFLLLALLLLALMLLLFLLLLDLLMLLLMLLLLLLLLLLLLDLLMLLLLLLLLLLLMLLLLNNNENNNLLLLLLLLLLLLLLLLLLLLLLNDELLLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLNNEENLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLNECNALLLLLLLLLLLLLLLLLLLLALLLLENCNALLLLLLLLLLLLLLLLLLLLLLLALDLLLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLDLLMLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLDLLLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLCNNCECNAALLLLLLLLLLLLLLLLLLLLALLLLENCNALLLLLLLLLLLLLLLLLLLLLLLALDLLLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLDLLMLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLDLLLLLLMMLLLMMLMMMLLLLLLLLMMMMLLMLLLMLDLLLLLLMMLLLMMLMMLLLLLLLLMMMLLMLLLMLDDDDDDDDDMMMMAAAMMMAMAMMMMMMMMMMMMMMMMMMMMMMMMMMMAMMMMMMMMMMAAMMMAMMMMMMMMMMAMMMDRMLLLLLLMLLLLLMMLLMLLMLLLLMDRLLLLLMMLLLLMLLMMLLLLLMMMLLLLLDLMLLLLLLMLLLLLLLMLLMLLMLLLLMRDMLLLLLLLLMLLLLMLLLLLLMLMLLLLLDLMMLLLLLMMLLLLLLMLMMLLLMMLMLLLMMMMMMMLRDMLLLLLLLLLLLLMLLLLLLMMLMLLLLLDLLLLLLLLLLFMLLLLLDLLLLLLMLLLLMLLMLLMLLLLMDLLLLLMLLLLLLMMLMLLLLMMMLDLLLLLLLLLLLMMLLLLNDELLLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLL","n":["mjolnir_lib","Explorer","Fragment","Mjolnir","MjolnirCommand","MjolnirError","Passive","Rest","args","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","bootstrap","borrow","borrow","borrow_mut","borrow_mut","build_monitor","command","command","command","command_for_update","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","error","exec","exec","explorer","fragment","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","full_version","generators","group_id","has_subcommand","init","init","into","into","into_request","into_request","rest","source_version","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","parse_shift","ClientError","ClientLoadCommand","ClientLoadCommandError","NoScenarioDefined","address","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","build_config","command","command_for_update","config","count","deref","deref","deref_mut","deref_mut","drop","drop","duration","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","get_block0_hash","group_id","init","init","initial_storage","into","into","into_request","into_request","measure","pace","provide","scenario","source","sync_iteration","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","ClientLoadConfig","Duration","Iteration","PassiveBootstrapLoad","ScenarioType","address","block0_hash","block0_hash","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config","count","count","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","fmt","fmt","from","from","from","init","init","init","initial_storage","initial_storage","into","into","into","into_request","into_request","into_request","measure","measure","new","new","pace","pace","to_owned","to_owned","trusted_peer","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","DurationBasedClientLoad","IterationBasedClientLoad","ScenarioProgressBar","borrow","borrow_mut","copy_initial_storage_if_used","deref","deref_mut","drop","duration","from","init","into","into_request","iteration","new","progress_bar","set_error_lines","set_finished","set_progress","start_node","try_from","try_into","type_id","vzip","DurationBasedClientLoad","borrow","borrow_mut","config","deref","deref_mut","drop","duration","from","init","into","into_request","new","run","run_single","try_from","try_into","type_id","vzip","wait_for_bootstrap_phase_completed","IterationBasedClientLoad","borrow","borrow_mut","config","deref","deref_mut","drop","from","get_storage_name","init","into","into_request","new","run","start_node","sync_iteration","try_from","try_into","type_id","vzip","Block0Error","InternalClientError","JormungandrError","MjolnirError","PaceTooLow","RestError","StartupError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","init","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","ClientError","ExplorerLoadCommand","ExplorerLoadCommandError","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","build_monitor","command","command_for_update","count","delay","deref","deref","deref_mut","deref_mut","drop","drop","duration","endpoint","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","into_request","into_request","measure","progress_bar_mode","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","Batch","ClientError","FragmentLoadCommand","FragmentLoadCommandError","Standard","augment_subcommands","augment_subcommands_for_update","batch","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","into","into","into_request","into_request","provide","source","standard","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","Adversary","Batch","TxOnly","TxOnly","adversary","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","tx_only","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Adversary","All","VotesOnly","VotesOnly","all","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","votes_only","vzip","AdversaryAll","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","VotesOnly","augment_args","augment_args_for_update","block0_path","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","TxOnly","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","Adversary","Adversary","All","AllFragments","Standard","TxOnly","TxOnly","adversary","all","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","tx_only","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Adversary","All","VotesOnly","VotesOnly","all","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","votes_only","vzip","AllAdversary","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","VotesOnly","augment_args","augment_args_for_update","block0_path","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","AllFragments","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","explorer_endpoint","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","rump_up","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","TxOnly","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","count","delay","deref","deref_mut","drop","duration","endpoint","exec","faucet_key_file","faucet_spending_counter","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","measure","progress_bar_mode","testing","try_from","try_into","ttl","type_id","update_from_arg_matches","update_from_arg_matches_mut","valid_until","vzip","AdversaryFragmentGenerator","AdversaryVoteCastsGenerator","BatchFragmentGenerator","ExplorerRequestGen","FragmentGenerator","FragmentStatusProvider","RestRequestGen","TransactionGenerator","VoteCastsGenerator","active_stake_pools","addresses","addresses","adversary_fragment_sender","adversary_generator","adversary_vote_casts_generator","batch_generator","batch_size","bft_leader","expiry_generator","explorer","explorer","fragment_generator","fragment_options_count","fragment_sender","fragment_sender","fragment_sender","fragment_sender","fragment_sender","fragment_sender","jormungandr","jormungandr","jormungandr","jormungandr","max_splits","max_splits","max_splits","max_splits","node","node","node","rand","rand","rand","rand","rand","rand","rand","rand","receiver","rest","rest_client","send_marker","sender","slots_per_epoch","split_lane","split_lane","split_marker","stake_pools","stake_pools","stake_pools_count","status_provider","transaction_generator","update_proposals_for_casting","update_proposals_for_casting_count","vote_cast_register","vote_casts_generator","vote_plan","vote_plans","vote_plans_for_casting","vote_plans_for_casting_count","vote_plans_for_tally","vote_plans_for_tally_count","voter","voters","votes_register","voting_privacy","wallet_lane_iter","wallets","wallets","wallets","AdversaryFragmentGenerator","DEFAULT_MAX_SPLITS","adversary_fragment_sender","borrow","borrow_mut","deref","deref_mut","drop","fill_from_faucet","fragment_sender","from","increment_split_marker","init","into","into_request","jormungandr","max_splits","new","next","rand","send_transaction","split","split_marker","try_from","try_into","type_id","vzip","wallets","AdversaryVoteCastsGenerator","DEFAULT_MAX_SPLITS","borrow","borrow_mut","deref","deref_mut","drop","expiry_generator","fragment_sender","from","init","into","into_request","max_splits","new","next","node","rand","send","split","try_from","try_into","type_id","vote_plans","voter","voting_privacy","vzip","wrong_choice","wrong_proposal_index","wrong_vote_plan","wrong_voting_privacy","BatchFragmentGenerator","batch_size","batch_size","borrow","borrow_mut","deref","deref_mut","drop","fill_from_faucet","fragment_sender","from","from_node_with_setup","generate_batch_transaction","generate_transaction","init","into","into_request","jormungandr","new","next","rand","send_batch","split","split_lane","try_from","try_into","type_id","vzip","wallets","DEFAULT_MAX_SPLITS","ExplorerRequestGen","addresses","borrow","borrow_mut","clone","clone_into","deref","deref_mut","do_setup","drop","explorer","from","init","into","into_request","max_splits","new","next","next_address","next_pool_id","next_usize","next_usize_in_range","rand","split","stake_pools","to_owned","try_from","try_into","type_id","vzip","FragmentGenerator","active_stake_pools","active_stake_pools","bft_leader","borrow","borrow_mut","deref","deref_mut","drop","fragment_options_count","fragment_sender","from","init","into","into_request","new","next","node","prepare","rand","receiver","send_all","send_one","send_random","sender","slots_per_epoch","split","stake_pools_count","try_from","try_into","type_id","update_proposals_for_casting","update_proposals_for_casting_count","vote_cast_register","vote_plans_for_casting","vote_plans_for_casting_count","vote_plans_for_tally","vote_plans_for_tally_count","vzip","DEFAULT_MAX_SPLITS","RestRequestGen","addresses","borrow","borrow_mut","clone","clone_into","deref","deref_mut","do_setup","drop","from","init","into","into_request","max_splits","new","next","next_address","next_pool_id","next_usize","next_usize_in_range","rand","rest_client","split","stake_pools","to_owned","try_from","try_into","type_id","vzip","FragmentStatusProvider","borrow","borrow_mut","deref","deref_mut","drop","from","get_statuses","init","into","into_request","into_status","jormungandr","new","try_from","try_into","type_id","vzip","TransactionGenerator","borrow","borrow_mut","deref","deref_mut","drop","fill_from_faucet","fragment_sender","from","init","into","into_request","jormungandr","new","next","rand","send_transaction","split","split_lane","try_from","try_into","type_id","vzip","wallets","VoteCastsGenerator","borrow","borrow_mut","deref","deref_mut","drop","fragment_sender","from","init","into","into_request","new","next","node","rand","send","send_marker","split","try_from","try_into","type_id","vote_plan","voters","votes_register","vzip","SplitLaneIter","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","next","next_lane","split_marker","try_from","try_into","type_id","vzip","ClientError","RestLoadCommand","RestLoadCommandError","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","build_monitor","command","command_for_update","count","delay","deref","deref","deref_mut","deref_mut","drop","drop","duration","endpoint","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","into_request","into_request","measure","progress_bar_mode","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip"],"q":[[0,"mjolnir"],[1,"mjolnir::mjolnir_lib"],[65,"mjolnir::mjolnir_lib::args"],[66,"mjolnir::mjolnir_lib::bootstrap"],[124,"mjolnir::mjolnir_lib::bootstrap::config"],[192,"mjolnir::mjolnir_lib::bootstrap::scenario"],[217,"mjolnir::mjolnir_lib::bootstrap::scenario::duration"],[237,"mjolnir::mjolnir_lib::bootstrap::scenario::iteration"],[257,"mjolnir::mjolnir_lib::error"],[286,"mjolnir::mjolnir_lib::explorer"],[339,"mjolnir::mjolnir_lib::fragment"],[389,"mjolnir::mjolnir_lib::fragment::batch"],[419,"mjolnir::mjolnir_lib::fragment::batch::adversary"],[449,"mjolnir::mjolnir_lib::fragment::batch::adversary::all"],[485,"mjolnir::mjolnir_lib::fragment::batch::adversary::votes_only"],[522,"mjolnir::mjolnir_lib::fragment::batch::tx_only"],[558,"mjolnir::mjolnir_lib::fragment::standard"],[592,"mjolnir::mjolnir_lib::fragment::standard::adversary"],[622,"mjolnir::mjolnir_lib::fragment::standard::adversary::all"],[658,"mjolnir::mjolnir_lib::fragment::standard::adversary::votes_only"],[695,"mjolnir::mjolnir_lib::fragment::standard::all"],[733,"mjolnir::mjolnir_lib::fragment::standard::tx_only"],[769,"mjolnir::mjolnir_lib::generators"],[849,"mjolnir::mjolnir_lib::generators::adversary_generator"],[877,"mjolnir::mjolnir_lib::generators::adversary_vote_casts_generator"],[908,"mjolnir::mjolnir_lib::generators::batch_generator"],[937,"mjolnir::mjolnir_lib::generators::explorer"],[968,"mjolnir::mjolnir_lib::generators::fragment_generator"],[1007,"mjolnir::mjolnir_lib::generators::rest"],[1038,"mjolnir::mjolnir_lib::generators::status_provider"],[1056,"mjolnir::mjolnir_lib::generators::transaction_generator"],[1080,"mjolnir::mjolnir_lib::generators::vote_casts_generator"],[1105,"mjolnir::mjolnir_lib::generators::wallet_lane_iter"],[1123,"mjolnir::mjolnir_lib::rest"]],"d":["","Explorer load","Fragment load","","Jormungandr Load CLI toolkit","","Passive Nodes bootstrap","Rest load","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","display full version details (software version, source …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","display the sources version, allowing to check the source…","","","","","","","","","","","","","","","","","","address in format: /ip4/54.193.75.55/tcp/3000","","","","","","","","","","","Number of threads","","","","","","","amount of delay (in seconds) between sync attempts","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","amount of delay (in seconds) between sync attempts","","","","amount of delay (in seconds) between sync attempts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Number of threads","Amount of delay (in milliseconds) between sync attempts","","","","","","","Load duration","Endpoint address in format: 127.0.0.1:80","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Prints post load measurements","Show progress","","","","","","","","","","","","","","sends fragments using batch endpoint","","","","sends fragments in single manner","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Prints nodes related data, like stats,fragments etc.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","Put load on endpoint using invalid fragments","Put load on endpoint using all supported fragment types","","","","Put load on endpoint using transaction fragments only.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","Address in format: <code>/ip4/54.193.75.55/tcp/3000</code>","","Secret key file for source address from which requests …","Source address spending counter","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Prints post load measurements","Show progress bar during tests","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","address in format: /ip4/54.193.75.55/tcp/3000","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","load test rump up period","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","Number of threads","amount of delay [milliseconds] between sync attempts","","","","amount of delay [seconds] between sync attempts","address in format: /ip4/54.193.75.55/tcp/3000","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Set the discrimination type to testing (default is …","","","Transaction time to live (can be negative e.g. ~4.2)","","","","Transaction validity deadline (inclusive)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A wrapper for <code>Vec&lt;Wallet&gt;</code> that allows iteration over …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Similar to <code>Iterator::next</code>, except it takes the length of …","","","","","","","","","","","","","","","","","","","Number of threads","Amount of delay (in milliseconds) between sync attempts","","","","","","","Amount of delay (in seconds) between sync attempts","Address in format: http://127.0.0.1:8002/api/","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Prints post load measurements","Show progress bar","","","","","","","","","","","","",""],"i":[0,9,9,0,0,0,9,9,0,5,5,9,9,0,5,9,5,9,0,5,9,5,5,9,5,9,5,9,5,9,0,5,9,0,0,5,9,5,9,5,9,5,0,5,9,5,9,5,9,5,9,0,5,5,9,5,9,5,9,5,9,5,9,5,9,0,21,0,0,21,19,19,19,21,19,21,19,19,19,19,0,19,21,19,21,19,21,19,19,19,21,21,19,21,21,19,19,19,19,19,21,19,19,21,19,21,19,19,19,21,0,21,19,21,21,19,21,19,21,19,19,19,21,19,0,28,28,0,0,20,20,20,30,28,20,30,28,20,28,20,28,20,30,20,20,30,28,20,30,28,20,30,28,20,30,28,20,30,28,20,30,28,20,20,20,30,28,20,30,28,20,20,20,30,20,20,20,28,20,20,30,28,20,30,28,20,30,28,20,30,28,20,0,0,0,36,36,0,36,36,36,0,36,36,36,36,0,36,36,36,36,36,0,36,36,36,36,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,24,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,51,0,0,50,50,51,50,51,50,50,50,50,50,50,51,50,51,50,51,50,50,50,50,51,51,50,51,51,50,50,50,50,51,50,51,50,51,50,50,50,51,51,51,51,50,51,50,51,50,50,50,51,50,52,53,0,0,52,52,52,0,52,53,52,53,52,52,52,53,52,53,52,53,52,52,53,53,52,53,53,52,52,52,52,53,52,53,52,53,53,53,0,53,52,53,52,53,52,53,52,52,52,53,54,0,0,54,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,54,54,54,54,0,55,0,55,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,59,59,0,0,0,59,0,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,59,59,59,59,0,60,0,60,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,60,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,0,0,0,0,0,90,87,95,67,0,0,0,83,90,79,0,87,0,90,67,79,83,90,100,101,67,83,97,100,67,79,87,95,79,90,101,67,79,83,90,100,101,87,95,90,0,95,101,90,90,83,100,67,87,95,90,0,0,90,90,90,0,101,79,90,90,90,90,79,101,101,79,0,67,83,100,0,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,97,97,97,97,97,97,97,97,97,97,0,97,97,97,97,97,97,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,104,0,0,103,103,104,103,104,103,103,103,103,103,103,104,103,104,103,104,103,103,103,103,104,104,103,104,104,103,103,103,103,104,103,104,103,104,103,103,103,104,104,104,104,103,104,103,104,103,103,103,104,103],"f":[0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],0,[[]],[[]],[[]],[[]],[2,3],[[],1],[[],1],0,[[],1],[[],1],[4],[4],[4],[4],[4],[4],0,[5,[[8,[[7,[6]]]]]],[9,[[8,[[7,[6]]]]]],0,0,[[]],[[]],[10,[[8,[5,11]]]],[10,[[8,[9,11]]]],[10,[[8,[5,11]]]],[10,[[8,[9,11]]]],0,0,[[],[[13,[12]]]],[14,15],[[],4],[[],4],[[]],[[]],[[],16],[[],16],0,0,[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[5,10],[[8,[11]]]],[[9,10],[[8,[11]]]],[[5,10],[[8,[11]]]],[[9,10],[[8,[11]]]],[[]],[[]],[14,[[8,[18]]]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[19,20],[[],1],[[],1],0,0,[4],[4],[4],[4],[4],[4],0,[19,[[8,[21]]]],[[21,22],23],[[21,22],23],[[19,22],23],[24,21],[[]],[[]],[10,[[8,[19,11]]]],[10,[[8,[19,11]]]],[19,25],[[],[[13,[12]]]],[[],4],[[],4],0,[[]],[[]],[[],16],[[],16],0,0,[26],0,[21,[[13,[6]]]],0,[[],27],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[19,10],[[8,[11]]]],[[19,10],[[8,[11]]]],[[]],[[]],0,0,0,0,0,0,[20,25],0,[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[20,20],[[]],[[]],0,[20,29],0,[4],[4],[4],[4],[4],[4],[4],[4],[4],[[30,28],[[8,[24]]]],[[28,22],23],[[20,22],23],[[]],[[]],[[]],[[],4],[[],4],[[],4],[20,13],0,[[]],[[]],[[]],[[],16],[[],16],[[],16],[20,15],0,[20,30],[[25,15,29,27,31,[13,[32]]],20],[20,31],0,[[]],[[]],[20,33],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[],17],[[]],[[]],[[]],0,0,0,[[]],[[]],[[20,14,34]],[4],[4],[4],0,[[]],[[],4],[[]],[[],16],0,[[35,14],36],0,[[36,[37,[27]]]],[36],[[36,14]],[[20,14,34],[[8,[38,39]]]],[[],8],[[],8],[[],17],[[]],0,[[]],[[]],0,[4],[4],[4],0,[[]],[[],4],[[]],[[],16],[[20,31],40],[40,[[8,[24]]]],[[40,29,31,41],[[8,[[43,[[8,[[37,[42]],24]]]],24]]]],[[],8],[[],8],[[],17],[[]],[[38,44,31,45,36],[[8,[[13,[42]],24]]]],0,[[]],[[]],0,[4],[4],[4],[[]],[[46,29,29],27],[[],4],[[]],[[],16],[[20,29],46],[46,[[8,[24]]]],[[46,34,29,29,41],[[8,[[43,[[8,[42,24]]]],24]]]],0,[[],8],[[],8],[[],17],[[]],0,0,0,0,0,0,0,[[]],[[]],[4],[4],[4],[[24,22],23],[[24,22],23],[47,24],[48,24],[39,24],[[]],[49,24],[[],4],[[]],[[],16],[26],[24,[[13,[6]]]],[[],27],[[],8],[[],8],[[],17],[[]],0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[50,3],[[],1],[[],1],0,0,[4],[4],[4],[4],[4],[4],0,0,[50,[[8,[51]]]],[[51,22],23],[[51,22],23],[[50,22],23],[24,51],[[]],[[]],[10,[[8,[50,11]]]],[10,[[8,[50,11]]]],[[],[[13,[12]]]],[[],4],[[],4],[[]],[[]],[[],16],[[],16],0,0,[26],[51,[[13,[6]]]],[[],27],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[50,10],[[8,[11]]]],[[50,10],[[8,[11]]]],[[]],[[]],0,0,0,0,0,[1,1],[1,1],0,[[]],[[]],[[]],[[]],[[],1],[[],1],[4],[4],[4],[4],[4],[4],[52,[[8,[24]]]],[[52,22],23],[[53,22],23],[[53,22],23],[[]],[24,53],[[]],[10,[[8,[52,11]]]],[10,[[8,[52,11]]]],[14,15],[[],4],[[],4],[[]],[[]],[[],16],[[],16],[26],[53,[[13,[6]]]],0,[[],27],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[52,10],[[8,[11]]]],[[52,10],[[8,[11]]]],[[]],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[4],[4],[4],[54,[[8,[24]]]],[[54,22],23],[[]],[10,[[8,[54,11]]]],[10,[[8,[54,11]]]],[14,15],[[],4],[[]],[[],16],[[],8],[[],8],0,[[],17],[[54,10],[[8,[11]]]],[[54,10],[[8,[11]]]],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[4],[4],[4],[55,[[8,[24]]]],[[55,22],23],[[]],[10,[[8,[55,11]]]],[10,[[8,[55,11]]]],[14,15],[[],4],[[]],[[],16],[[],8],[[],8],[[],17],[[55,10],[[8,[11]]]],[[55,10],[[8,[11]]]],0,[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,0,[4],[4],[4],0,0,[56,[[8,[24]]]],0,0,[[56,22],23],[[]],[10,[[8,[56,11]]]],[10,[[8,[56,11]]]],[[],[[13,[12]]]],[[],4],[[]],[[],16],0,0,0,[[],8],[[],8],0,[[],17],[[56,10],[[8,[11]]]],[[56,10],[[8,[11]]]],0,[[]],0,[1,1],[1,1],0,[[]],[[]],[[],1],[[],1],0,0,[4],[4],[4],0,0,[57,[[8,[24]]]],0,0,[[57,22],23],[[]],[10,[[8,[57,11]]]],[10,[[8,[57,11]]]],[[],[[13,[12]]]],[[],4],[[]],[[],16],0,0,0,[[],8],[[],8],0,[[],17],[[57,10],[[8,[11]]]],[[57,10],[[8,[11]]]],0,[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,0,[4],[4],[4],0,0,[58,[[8,[24]]]],0,0,[[58,22],23],[[]],[10,[[8,[58,11]]]],[10,[[8,[58,11]]]],[[],[[13,[12]]]],[[],4],[[]],[[],16],0,0,0,[[],8],[[],8],0,[[],17],[[58,10],[[8,[11]]]],[[58,10],[[8,[11]]]],0,[[]],0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[4],[4],[4],[59,[[8,[24]]]],[[59,22],23],[[]],[10,[[8,[59,11]]]],[10,[[8,[59,11]]]],[14,15],[[],4],[[]],[[],16],[[],8],[[],8],0,[[],17],[[59,10],[[8,[11]]]],[[59,10],[[8,[11]]]],[[]],0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],[4],[4],[4],[60,[[8,[24]]]],[[60,22],23],[[]],[10,[[8,[60,11]]]],[10,[[8,[60,11]]]],[14,15],[[],4],[[]],[[],16],[[],8],[[],8],[[],17],[[60,10],[[8,[11]]]],[[60,10],[[8,[11]]]],0,[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,0,[4],[4],[4],0,0,[61,[[8,[24]]]],0,0,[[61,22],23],[[]],[10,[[8,[61,11]]]],[10,[[8,[61,11]]]],[[],[[13,[12]]]],[[],4],[[]],[[],16],0,0,0,[[],8],[[],8],0,[[],17],[[61,10],[[8,[11]]]],[[61,10],[[8,[11]]]],0,[[]],0,[1,1],[1,1],0,[[]],[[]],[[],1],[[],1],0,0,[4],[4],[4],0,0,[62,[[8,[24]]]],0,0,[[62,22],23],[[]],[10,[[8,[62,11]]]],[10,[[8,[62,11]]]],[[],[[13,[12]]]],[[],4],[[]],[[],16],0,0,0,[[],8],[[],8],0,[[],17],[[62,10],[[8,[11]]]],[[62,10],[[8,[11]]]],0,[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,0,[4],[4],[4],0,0,[63,[[8,[24]]]],0,0,0,[[63,22],23],[[]],[10,[[8,[63,11]]]],[10,[[8,[63,11]]]],[[],[[13,[12]]]],[[],4],[[]],[[],16],0,0,0,0,[[],8],[[],8],0,[[],17],[[63,10],[[8,[11]]]],[[63,10],[[8,[11]]]],0,[[]],0,[1,1],[1,1],[[]],[[]],[[],1],[[],1],0,0,[4],[4],[4],0,0,[64,[[8,[24]]]],0,0,[[64,22],23],[[]],[10,[[8,[64,11]]]],[10,[[8,[64,11]]]],[[],[[13,[12]]]],[[],4],[[]],[[],16],0,0,0,[[],8],[[],8],0,[[],17],[[64,10],[[8,[11]]]],[[64,10],[[8,[11]]]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[4],[4],[4],[[[67,[[0,[65,66]]]],68]],0,[[]],[[[67,[[0,[65,66]]]]]],[[],4],[[]],[[],16],0,0,[[69,[70,[[0,[65,66]]]],[71,[[0,[65,66]]]]],[[67,[[0,[65,66]]]]]],[[[67,[[0,[65,66,72,73]]]]],[[8,[74,75]]]],0,[[[67,[[0,[65,66]]]]],[[8,[76,75]]]],[[[67,[[0,[65,66,72,73]]]]]],0,[[],8],[[],8],[[],17],[[]],0,0,0,[[]],[[]],[4],[4],[4],0,0,[[]],[[],4],[[]],[[],16],0,[[77,68,[37,[78]],69,[70,[[0,[65,66]]]]],[[79,[[0,[65,66]]]]]],[[[79,[[0,[65,66,72,73]]]]],[[8,[74,75]]]],0,0,[[[79,[[0,[65,66]]]]],[[8,[80,81]]]],[[[79,[[0,[65,66,72,73]]]]]],[[],8],[[],8],[[],17],0,0,0,[[]],[[[79,[[0,[65,66]]]]],82],[[[79,[[0,[65,66]]]]],82],[[[79,[[0,[65,66]]]]],82],[[[79,[[0,[65,66]]]]],82],0,[[[83,[[0,[65,66]]]]],84],0,[[]],[[]],[4],[4],[4],[[[83,[[0,[65,66]]]],68]],0,[[]],[[[85,[[0,[65,66]]]],38,77,84],[[8,[[83,[[0,[65,66]]]],49]]]],[[[83,[[0,[65,66]]]]],[[8,[[37,[82]],75]]]],[[[83,[[0,[65,66]]]]],[[8,[82,75]]]],[[],4],[[]],[[],16],0,[[[85,[[0,[65,66]]]],69,25,86,77,84],[[83,[[0,[65,66]]]]]],[[[83,[[0,[65,66,72,73]]]]],[[8,[74,75]]]],0,[[[83,[[0,[65,66]]]]],[[8,[74,75]]]],[[[83,[[0,[65,66,72,73]]]]]],0,[[],8],[[],8],[[],17],[[]],0,0,0,0,[[]],[[]],[87,87],[[]],[4],[4],[[87,[37,[27]]],[[8,[88]]]],[4],0,[[]],[[],4],[[]],[[],16],0,[89,87],[87,[[8,[74,75]]]],[87,[[13,[27]]]],[87,[[13,[27]]]],[87,4],[[87,4,4],4],0,[87],0,[[]],[[],8],[[],8],[[],17],[[]],0,[[[90,[[0,[65,66]]]]],[[37,[91]]]],0,0,[[]],[[]],[4],[4],[4],0,0,[[]],[[],4],[[]],[[],16],[[68,68,[13,[[93,[92]]]],69,29,4,4,4,4,[70,[[0,[65,66]]]]],[[90,[[0,[65,66]]]]]],[[[90,[[0,[65,66,72]]]]],[[8,[74,75]]]],0,[[[90,[[0,[65,66]]]],94]],0,0,[[[90,[[0,[65,66]]]]],[[8,[[37,[80]],81]]]],[[[90,[[0,[65,66]]]],84],[[8,[80,81]]]],[[[90,[[0,[65,66]]]]],[[8,[80,81]]]],0,0,[[[90,[[0,[65,66,72]]]]]],0,[[],8],[[],8],[[],17],0,0,0,0,0,0,0,[[]],0,0,0,[[]],[[]],[95,95],[[]],[4],[4],[[95,[37,[27]]],[[8,[49]]]],[4],[[]],[[],4],[[]],[[],16],0,[96,95],[95,[[8,[74,75]]]],[95,[[13,[27]]]],[95,[[13,[27]]]],[95,4],[[95,4,4],4],0,0,[95],0,[[]],[[],8],[[],8],[[],17],[[]],0,[[]],[[]],[4],[4],[4],[[]],[97,[[37,[98]]]],[[],4],[[]],[[],16],[[99,76],98],0,[69,97],[[],8],[[],8],[[],17],[[]],0,[[]],[[]],[4],[4],[4],[[[100,[[0,[65,66]]]],68]],0,[[]],[[],4],[[]],[[],16],0,[[[85,[[0,[65,66]]]],69,25,86,77],[[100,[[0,[65,66]]]]]],[[[100,[[0,[65,66,72,73]]]]],[[8,[74,75]]]],0,[[[100,[[0,[65,66]]]]],[[8,[76,75]]]],[[[100,[[0,[65,66,72,73]]]]]],0,[[],8],[[],8],[[],17],[[]],0,0,[[]],[[]],[4],[4],[4],0,[[]],[[],4],[[]],[[],16],[[[37,[68]],78,69,[70,[[0,[65,66]]]]],[[101,[[0,[65,66]]]]]],[[[101,[[0,[65,66,72,73]]]]],[[8,[74,75]]]],0,0,[[[101,[[0,[65,66]]]]],[[8,[80,81]]]],0,[[[101,[[0,[65,66,72,73]]]]]],[[],8],[[],8],[[],17],0,0,0,[[]],0,[[]],[[]],[4],[4],[4],[[]],[[],4],[[]],[[],16],[[],102],[[102,4]],0,0,[[],8],[[],8],[[],17],[[]],0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[103,3],[[],1],[[],1],0,0,[4],[4],[4],[4],[4],[4],0,0,[103,[[8,[104]]]],[[104,22],23],[[104,22],23],[[103,22],23],[24,104],[[]],[[]],[10,[[8,[103,11]]]],[10,[[8,[103,11]]]],[[],[[13,[12]]]],[[],4],[[],4],[[]],[[]],[[],16],[[],16],0,0,[26],[104,[[13,[6]]]],[[],27],[[],8],[[],8],[[],8],[[],8],[[],17],[[],17],[[103,10],[[8,[11]]]],[[103,10],[[8,[11]]]],[[]],[[]]],"c":[],"p":[[3,"Command"],[4,"ProgressBarMode"],[4,"Monitor"],[15,"usize"],[3,"Mjolnir"],[8,"Error"],[3,"Box"],[4,"Result"],[4,"MjolnirCommand"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Request"],[3,"TypeId"],[4,"BlockDateParseError"],[3,"ClientLoadCommand"],[3,"ClientLoadConfig"],[4,"ClientLoadCommandError"],[3,"Formatter"],[6,"Result"],[4,"MjolnirError"],[3,"Hash"],[3,"Demand"],[3,"String"],[4,"ScenarioType"],[15,"u32"],[3,"PassiveBootstrapLoad"],[15,"u64"],[3,"PathBuf"],[3,"TrustedPeer"],[3,"TempDir"],[3,"ProgressBar"],[3,"ScenarioProgressBar"],[3,"Vec"],[3,"JormungandrProcess"],[4,"StartupError"],[3,"DurationBasedClientLoad"],[3,"MultiProgress"],[3,"SpeedBenchmarkFinish"],[3,"JoinHandle"],[3,"Instant"],[3,"SpeedBenchmarkRun"],[3,"IterationBasedClientLoad"],[4,"Block0Error"],[4,"JormungandrError"],[4,"RestError"],[3,"ExplorerLoadCommand"],[4,"ExplorerLoadCommandError"],[4,"FragmentLoadCommand"],[4,"FragmentLoadCommandError"],[4,"Batch"],[4,"Adversary"],[3,"AdversaryAll"],[3,"VotesOnly"],[3,"TxOnly"],[4,"Standard"],[4,"Adversary"],[3,"AllAdversary"],[3,"VotesOnly"],[3,"AllFragments"],[3,"TxOnly"],[8,"SyncNode"],[8,"Send"],[3,"AdversaryFragmentGenerator"],[4,"Wallet"],[3,"RemoteJormungandr"],[3,"FragmentSender"],[3,"AdversaryFragmentSender"],[8,"Sync"],[8,"Clone"],[3,"Request"],[4,"RequestFailure"],[6,"FragmentId"],[4,"BlockDateGenerator"],[3,"VotePlan"],[3,"AdversaryVoteCastsGenerator"],[3,"MemPoolCheck"],[4,"FragmentSenderError"],[4,"Fragment"],[3,"BatchFragmentGenerator"],[15,"u8"],[3,"FragmentSenderSetup"],[3,"LinearFee"],[3,"ExplorerRequestGen"],[4,"ExplorerError"],[3,"Explorer"],[3,"FragmentGenerator"],[3,"StakePool"],[3,"Ed25519"],[3,"KeyPair"],[3,"BlockDate"],[3,"RestRequestGen"],[3,"JormungandrRest"],[3,"FragmentStatusProvider"],[3,"Status"],[3,"FragmentLog"],[3,"TransactionGenerator"],[3,"VoteCastsGenerator"],[3,"SplitLaneIter"],[3,"RestLoadCommand"],[4,"RestLoadCommandError"]]},\
"offline":{"doc":"Tool for offline tally","t":"DHHHHHHHHHHHHHHHHHHHHHHLLMLLLLLLLLLLMLLLLLLFMFLLLLLLL","n":["Args","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","augment_args","augment_args_for_update","block0","borrow","borrow_mut","clone","clone_into","command","command_for_update","deref","deref_mut","drop","fmt","fragments","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","main","official_results","read_block0","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":[[0,"offline"]],"d":["Args defines and declares CLI behaviour within the context …","","","","","","","","","","","","","","","","","","","","","","","","","block0 path","","","","","","","","","","","Obtain fragments by providing path to historical fund data.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","cross reference official results","Read block0 from file               ","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,0,2,2,2,2,2,2,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],0,[[]],[[]],[2,2],[[]],[[],1],[[],1],[3],[3],[3],[[2,4],5],0,[[]],[6,[[8,[2,7]]]],[6,[[8,[2,7]]]],[[],[[10,[9]]]],[[],3],[[]],[[],[[13,[[12,[11]]]]]],0,[14,[[13,[15,16]]]],[[]],[[],8],[[],8],[[],17],[[2,6],[[8,[7]]]],[[2,6],[[8,[7]]]],[[]]],"c":[],"p":[[3,"Command"],[3,"Args"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[8,"Error"],[3,"Box"],[6,"Result"],[3,"PathBuf"],[3,"Block"],[3,"Report"],[3,"TypeId"]]},\
"scheduler_service_lib":{"doc":"","t":"EDENEENDDNNNNNNINDNNNNNNNENNINNDDNNNNNDEDNNEMMMMMMLLLLALLAMMALLLLLLLFALLLLLLLLLMKLAMMKKMLMALFKALLLLLLLLLLLMMMMMMMMMMMMMMMMCCCCCAAEEDNNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLHHENHHNDNNNNLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDMMMLLLLLLLLLLLLLLMLLLLLLDGLLLLLLLMLLLLLLLLMLLLLLLLLLEDNLLLLMLLLLLLLFLLLLLLLLLLLLLMLLLLLLLLLLLAFAFAFFWWENNHHDDLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWWHDLLLLLLLLFLFLLLLLLLWWWWFFFFWDNENNELLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLMLLFLLLLLLLLLLLLLNNNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMM","n":["CliError","Configuration","Error","Failed","FileListerError","FilesCommand","Finished","FolderDump","HealthCommand","Idle","Io","IoError","JobInProgress","JobNotFound","JobNotStarted","JobRunner","List","ManagerService","NoJobRun","NoRequestToStart","Poison","Poison","RequestToStart","ReqwestError","ReqwestError","RestError","RestError","RootFolderDoesNotExist","RunContext","Running","Scheduler","SchedulerContext","SchedulerRestClient","Serde","SerdeError","SerdeJsonError","SerdeYamlError","SerializationError","ServerStopper","State","StatusCommand","UnexpectedResponse","WaitError","WrappedPoisonError","address","address","admin_token","admin_token","api_token","api_token","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone_into","config","config","content","context","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","dump_json","file_lister","fmt","fmt","from","from","from","init","init","into","into","job_id","new_run_started","provide","rest","result_dir","root","run_finished","run_requested","runtime","serialize","server_stopper","service","source","spawn_scheduler","start","state","stop","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","end","end","info","info_msg","job_id","job_id","job_id","job_id","request","request","request","request","start","start","start","step","CliError","FilesCommand","HealthCommand","SchedulerRestClient","StatusCommand","args","rest","Error","FilesCommand","HealthCommand","List","ReqwestError","RestError","Scheduler","SerdeError","StatusCommand","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","init","init","into","into","into","into","job_id","provide","source","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","CALLSITE","CALLSITE","Error","IoError","META","META","ReqwestError","SchedulerRestClient","SerdeJsonError","SerdeYamlError","UnexpectedResponse","WaitError","address","address","admin_token","admin_token","api_token","api_token","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","download","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from","get","init","init","into","into","is_up","job_new","job_status","list_files","new","new_no_tokens","new_with_admin_token","new_with_api_token","path","provide","set_header","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Configuration","address","admin_token","api_token","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","init","into","result_dir","serialize","to_owned","try_from","try_into","type_id","vzip","SchedulerContext","SharedContext","admin_token","api_token","borrow","borrow_mut","clone","clone_into","config","config","deref","deref_mut","drop","from","init","into","new","server_stopper","server_stopper","set_admin_token","set_api_token","set_server_stopper","to_owned","try_from","try_into","type_id","vzip","working_directory","Error","FolderDump","RootFolderDoesNotExist","borrow","borrow","borrow_mut","borrow_mut","content","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","dump_json","find_file_with_extension","fmt","fmt","from","from","from","init","init","into","into","new","provide","push","root","serialize","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","files","files_filter","health","health_filter","token","token_admin_filter","token_api_filter","","","Error","File","Poison","S","S","__StaticPath","__StaticPath","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","files_handler","filter","fmt","fmt","from","from","from","from","from","init","init","init","into","into","into","provide","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","","","S","__StaticPath","as_ref","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","filter","from","handler","init","into","to_owned","try_from","try_into","type_id","vzip","","","","","authorize_admin_token","authorize_api_token","filter_admin_token","filter_api_token","","ManagerService","Poison","WrappedPoisonError","_0","_1","__PrivResult","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_if_started","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","fmt","fmt","from","from","from","from","init","init","init","into","into","into","provide","runtime","serialize","spawn","spawn_scheduler","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Failed","Finished","Idle","RequestToStart","Running","State","assert_is_finished","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","has_id","init","into","new_run_requested","new_run_started","persist","run_finished","run_requested","serialize","to_owned","to_string","try_from","try_into","type_id","update_running_step","vzip","end","end","info","info_msg","job_id","job_id","job_id","job_id","request","request","request","request","start","start","start","step"],"q":[[0,"scheduler_service_lib"],[106,"scheduler_service_lib::State"],[122,"scheduler_service_lib::client"],[129,"scheduler_service_lib::client::args"],[219,"scheduler_service_lib::client::rest"],[284,"scheduler_service_lib::config"],[309,"scheduler_service_lib::context"],[337,"scheduler_service_lib::file_lister"],[378,"scheduler_service_lib::rest"],[385,"scheduler_service_lib::rest::files"],[447,"scheduler_service_lib::rest::health"],[469,"scheduler_service_lib::rest::token"],[477,"scheduler_service_lib::service"],[532,"scheduler_service_lib::state"],[568,"scheduler_service_lib::state::State"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","job id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","job id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,64,0,0,64,0,0,64,4,36,4,4,4,0,34,0,4,4,12,4,64,31,36,0,31,9,0,64,31,0,0,4,31,36,36,4,0,0,0,36,36,0,30,48,30,48,30,48,4,1,4,1,0,1,1,0,49,8,0,4,1,4,1,4,4,1,0,0,4,4,4,4,1,4,1,4,1,32,17,4,0,48,8,17,17,61,4,49,0,4,0,20,0,1,1,4,4,1,4,1,4,1,4,1,69,70,69,70,71,72,69,70,71,72,69,70,72,69,70,72,0,0,0,0,0,0,0,0,0,0,34,31,31,31,31,0,32,32,34,34,73,32,34,31,73,32,34,31,32,34,32,34,73,32,34,31,73,32,34,31,73,32,34,31,73,32,34,32,34,31,31,73,32,34,31,31,31,31,31,32,34,32,34,32,34,73,32,34,31,73,32,34,31,32,31,31,31,73,32,34,31,73,32,34,31,73,32,34,31,32,34,32,34,73,32,34,31,0,0,0,36,0,0,36,0,36,36,36,36,30,30,30,30,30,30,30,36,30,36,30,36,30,36,30,30,36,30,36,36,30,36,36,36,36,36,36,30,30,36,30,36,30,30,30,30,30,30,30,30,30,36,30,36,36,30,36,30,36,30,36,30,36,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,9,8,9,8,9,8,8,9,8,9,8,8,9,0,8,9,9,8,9,9,8,9,8,9,8,9,8,8,8,9,9,8,9,8,9,8,9,8,9,0,0,0,0,0,0,0,0,0,0,58,58,0,0,0,0,54,55,54,55,58,54,55,58,54,55,54,55,54,55,58,54,55,58,54,55,58,0,0,58,58,54,55,58,58,58,54,55,58,54,55,58,58,58,54,55,58,54,55,58,54,55,58,54,55,58,54,55,58,0,0,0,0,60,60,60,60,60,60,60,60,0,60,0,60,60,60,60,60,60,60,0,0,0,0,0,0,0,0,0,0,12,0,74,74,0,61,12,74,61,12,74,0,61,61,12,74,61,12,74,12,61,12,74,12,12,61,12,12,74,61,12,74,61,12,74,12,61,12,61,0,12,61,12,74,61,12,74,61,12,74,61,12,74,64,64,64,64,64,0,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,69,70,69,70,71,72,69,70,71,72,69,70,72,69,70,72],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[1,1],[[]],0,0,0,0,[2],[2],[2],[2],[3,[[5,[4]]]],[2],[2],[[[7,[6]]],[[5,[8,9]]]],0,[[4,10],11],[[4,10],11],[[]],[12,4],[[]],[[],2],[[],2],[[]],[[]],0,[[],[[5,[4]]]],[13],0,0,0,[14,[[5,[4]]]],[[],14],0,[[4,15],5],0,0,[4,[[14,[16]]]],[[[7,[6]],[19,[[18,[17]]]],[21,[20]],22],[[5,[[0,[[23,[4]],[23,[12]],[23,[24]]]]]]]],[25,[[5,[14]]]],0,[1,[[5,[26]]]],[[]],[[],27],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[29,29],[29,29],[29,29],[29,29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[30,[[5,[31]]]],[[32,30],[[5,[[5,[33,4]],31]]]],[[34,30],[[5,[31]]]],[[32,10],11],[[34,10],11],[[31,10],11],[[31,10],11],[[]],[[]],[[]],[4,31],[[]],[35,31],[36,31],[37,31],[38,[[5,[32,39]]]],[38,[[5,[34,39]]]],[38,[[5,[32,39]]]],[38,[[5,[34,39]]]],[[],[[14,[40]]]],[41,42],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],0,[13],[31,[[14,[16]]]],[[],27],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],[[],28],[[],28],[[32,38],[[5,[39]]]],[[34,38],[[5,[39]]]],[[32,38],[[5,[39]]]],[[34,38],[[5,[39]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[30,27],0,[30,14],0,[30,14],0,[[]],[[]],[[]],[[]],[2],[2],[2],[2],[[30,[43,[27]],[7,[6]]],[[5,[36]]]],[2],[2],[[30,10],11],[[36,10],11],[[36,10],11],[[]],[35,36],[44,36],[24,36],[37,36],[[]],[45,36],[[30,[43,[27]]],[[5,[27,36]]]],[[],2],[[],2],[[]],[[]],[30,42],[[30,46],[[5,[27,36]]]],[[30,[43,[27]]],[[5,[33,36]]]],[30,[[5,[8,36]]]],[[[14,[27]],[14,[27]],27],30],[27,30],[[27,27],30],[[27,27],30],[[30,[43,[27]]],27],[13],[[30,47],47],[36,[[14,[16]]]],[[],27],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],[[]],[[]],0,0,0,0,[[]],[[]],[48,48],[[]],[2],[2],[3,[[5,[48]]]],[2],[[48,48],42],[[],42],[[48,10],11],[[]],[[],2],[[]],0,[[48,15],5],[[]],[[],5],[[],5],[[],28],[[]],0,0,[49,[[14,[27]]]],[49,[[14,[27]]]],[[]],[[]],[49,49],[[]],[49,48],0,[2],[2],[2],[[]],[[],2],[[]],[[[14,[1]],48],49],[49,14],0,[[49,[14,[27]]]],[[49,[14,[27]]]],[[49,[14,[1]]]],[[]],[[],5],[[],5],[[],28],[[]],[49,6],0,0,0,[[]],[[]],[[]],[[]],0,[2],[2],[2],[2],[3,[[5,[8]]]],[2],[2],[[[7,[6]]],[[5,[8,9]]]],[[8,[43,[27]],[43,[27]]],[[14,[27]]]],[[9,10],11],[[9,10],11],[[]],[50,9],[[]],[[],2],[[],2],[[]],[[]],[[[7,[6]]],8],[13],[[8,[43,[27]]]],0,[[8,15],5],[9,[[14,[16]]]],[[],27],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],[[]],[[]],0,[[[19,[[51,[49]]]],25],[[0,[52,53]]]],0,[[],[[0,[52,53]]]],0,[[[19,[[51,[49]]]],42],[[0,[52,53]]]],[[[19,[[51,[49]]]],42],[[0,[52,53]]]],0,0,0,0,0,0,0,0,0,[54,41],[55,41],[[]],[[]],[[]],[[]],[[]],[[]],[54,54],[55,55],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[[19,[[51,[49]]]]],[[5,[56,57]]]],[[[19,[[51,[49]]]],25],[[0,[52,53]]]],[[58,10],11],[[58,10],11],[[]],[[]],[59,58],[9,58],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[13],[58,[[14,[16]]]],[[]],[[]],[[],27],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],[[],28],[[]],[[]],[[]],0,0,0,0,[60,41],[[]],[[]],[60,60],[[]],[2],[2],[2],[[],[[0,[52,53]]]],[[]],[[],[[5,[56,57]]]],[[],2],[[]],[[]],[[],5],[[],5],[[],28],[[]],0,0,0,0,[[27,[19,[[51,[49]]]]],[[5,[57]]]],[[27,[19,[[51,[49]]]]],[[5,[57]]]],[[[19,[[51,[49]]]],42],[[0,[52,53]]]],[[[19,[[51,[49]]]],42],[[0,[52,53]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[[18,[17]]]]],14],[[],61],[2],[2],[2],[2],[2],[2],[3,[[5,[12]]]],[2],[2],[2],[[12,10],11],[[12,10],11],[[]],[59,12],[[]],[[]],[[],2],[[],2],[[],2],[[]],[[]],[[]],[13],0,[[12,15],5],[[61,[0,[62,63]]],22],[[[7,[6]],[19,[[18,[17]]]],[21,[20]],22],[[5,[[0,[[23,[4]],[23,[12]],[23,[24]]]]]]]],[[],27],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],28],[[],28],[[],28],[[]],[[]],[[]],0,0,0,0,0,0,[[[64,[[0,[53,46]],[0,[46,53]],[0,[46,53]]]]]],[[]],[[]],[[[64,[[0,[53,46,53]],[0,[53,46,53]],[0,[53,46,53]]]]],[[64,[[0,[53,46,53]],[0,[53,46,53]],[0,[53,46,53]]]]]],[[]],[2],[2],[3,[[5,[[64,[[0,[65,46,53]],[0,[65,46,53]],[0,[65,46,53]]]]]]]],[2],[[[64,[[0,[66,46,53]],[0,[66,46,53]],[0,[66,46,53]]]],64],42],[[],42],[[[64,[[0,[67,46,53]],[0,[67,46,53]],[0,[67,46,53]]]],10],11],[[[64,[[0,[67,46,53]],[0,[67,46,53]],[0,[67,46,53]]]],10],11],[[]],[[[64,[[0,[53,46]],[0,[46,53]],[0,[46,53]]]],68],42],[[],2],[[]],[[[64,[[0,[53,46]],[0,[46,53]],[0,[46,53]]]],[0,[53,46]]],[[5,[68,4]]]],[[[64,[[0,[53,46]],[0,[46,53]],[0,[46,53]]]]],[[5,[4]]]],[[[64,[[0,[53,46]],[0,[46,53]],[0,[46,53]]]],[7,[6]]],[[5,[4]]]],[[[64,[[0,[53,46]],[0,[46,53]],[0,[46,53]]]],[14,[[0,[46,53]]]]],[[5,[4]]]],[[[64,[[0,[53,46]],[0,[46,53]],[0,[46,53]]]]],14],[[[64,[[0,[46,46,53]],[0,[46,46,53]],[0,[46,46,53]]]],15],5],[[]],[[],27],[[],5],[[],5],[[],28],[[[64,[[0,[53,46]],[0,[46,53]],[0,[46,53]]]],[0,[46,53]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ServerStopper"],[15,"usize"],[8,"Deserializer"],[4,"Error"],[4,"Result"],[3,"Path"],[8,"AsRef"],[3,"FolderDump"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"WrappedPoisonError"],[3,"Demand"],[4,"Option"],[8,"Serializer"],[8,"Error"],[8,"RunContext"],[3,"Mutex"],[3,"Arc"],[8,"JobRunner"],[3,"Box"],[3,"JoinHandle"],[8,"From"],[3,"Error"],[3,"PathBuf"],[3,"TrySendError"],[3,"String"],[3,"TypeId"],[3,"Command"],[3,"SchedulerRestClient"],[4,"Error"],[3,"StatusCommand"],[8,"DeserializeOwned"],[4,"FilesCommand"],[3,"Error"],[4,"Error"],[3,"Error"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[15,"str"],[15,"bool"],[8,"Into"],[3,"Error"],[4,"Error"],[8,"Serialize"],[3,"RequestBuilder"],[3,"Configuration"],[3,"SchedulerContext"],[3,"Error"],[3,"RwLock"],[8,"Filter"],[8,"Clone"],[3,"__StaticPath"],[3,"__StaticPath"],[8,"Reply"],[3,"Rejection"],[4,"Error"],[3,"PoisonError"],[3,"__StaticPath"],[3,"ManagerService"],[8,"Future"],[8,"Send"],[4,"State"],[8,"Deserialize"],[8,"PartialEq"],[8,"Debug"],[3,"Uuid"],[13,"Finished"],[13,"Failed"],[13,"RequestToStart"],[13,"Running"],[3,"HealthCommand"],[4,"__PrivResult"]]},\
"settings":{"doc":"","t":"DEDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["Domain","Error","Event","Settings","Storage","Subscriber","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain","domain","domain","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","get","init","init","init","init","init","inner","inner","insert","into","into","into","into","into","into_future","into_iter","key","new","new","next","poll","provide","source","sub_domain","subscribe","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","source"],"q":[[0,"settings"],[93,"settings::Error"]],"d":["The settings domain. This object allows keeping track of …","","","the root domain of the settings.","","Subscriber for events that occurs in within the associated …","","","","","","","","","","","","","","","","","","","","","","","","","","","create a settings domain","Get the domain full name","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","get the value associated to the given key (if any) within …","","","","","","","","insert a new key/value or replace the existing one with …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","create a new settings in within the given <code>sled</code>’s Tree.","","","","","","create a subdomain off the given domain","subscribe to changes in this domain","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,9,0,17,1,2,3,9,17,1,2,3,9,1,2,3,1,2,3,17,1,2,3,9,17,1,2,3,9,1,2,2,17,1,2,3,9,3,9,9,17,1,2,3,9,9,2,17,1,2,3,9,1,2,2,17,1,2,3,9,17,17,2,1,2,17,17,9,9,2,2,1,2,3,9,17,1,2,3,9,17,1,2,3,9,17,1,2,3,9,24],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[1,[6,[5]]],2],[2,5],0,[4],[4],[4],[4],[4],[[3,7],8],[[9,7],8],[[9,7],8],[[]],[[]],[[]],[[]],[10,9],[[]],[[2,11],[[14,[[13,[12]],9]]]],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,[[2,11,[6,[5]]],[[14,[[13,[12]],9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,11],12],[15,1],[[15,[16,[12]]],2],[17,13],[[[18,[17]],19],20],[21],[9,[[13,[22]]]],[[2,[6,[5]]],2],[2,17],[[]],[[]],[[]],[[],12],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],23],[[],23],[[],23],[[],23],[[],23],0],"c":[],"p":[[3,"Settings"],[3,"Domain"],[3,"Event"],[15,"usize"],[15,"str"],[8,"AsRef"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"Error"],[8,"Display"],[3,"String"],[4,"Option"],[4,"Result"],[3,"Tree"],[8,"Into"],[3,"Subscriber"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"Demand"],[8,"Error"],[3,"TypeId"],[13,"Storage"]]},\
"signals_handler":{"doc":"","t":"WWNNELLLLLLLFF","n":["","","_0","_1","__PrivResult","borrow","borrow_mut","from","into","try_from","try_into","type_id","watch_signal","with_signal_handler"],"q":[[0,"signals_handler"]],"d":["","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,5,5,0,5,5,5,5,5,5,5,0,0],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[],1],[[],1],[[],2],[[]],[[[0,[3,4]]],1]],"c":[],"p":[[4,"Result"],[3,"TypeId"],[8,"FusedFuture"],[8,"Unpin"],[4,"__PrivResult"]]},\
"snapshot_cli":{"doc":"","t":"F","n":["main"],"q":[[0,"snapshot_cli"]],"d":[""],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[4,"Error"],[4,"Result"]]},\
"snapshot_lib":{"doc":"","t":"WRDEGDNENNDDDNDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMALLLLLLLMLLLLLLLLAMMLLLLFMLMAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMAAMMLMLLLLLLLFFFENRDNIRDRDDLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMALLLLLMALLLLLLLLLLLLLLLLLLLLMMLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLMLLLLLLLWWWWWDDDDMMMMMFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGLLLLLLLLLLLLLLLALALLLLMMMLFFDLLLLLLLLLLLLLLLRRDIKLLLLLMMLLLLLMLLLL","n":["","CATALYST_VOTING_PURPOSE_TAG","Dreps","Error","Fraction","KeyContribution","Mainnet","NetworkType","NotEnoughVoters","Overflow","RawSnapshot","Snapshot","SnapshotInfo","Testnet","VoterHIR","VotingGroup","apply_voting_power_cap","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contributions","contributions_for_voting_key","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize_identifiers","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_raw_snapshot","from_str","hir","influence_cap","init","init","init","init","init","init","init","inner","into","into","into","into","into","into","into","provide","registration","reps","reward_address","serialize","serialize","serialize","serialize","serialize_identifiers","stake_public_key","stake_threshold","stake_threshold","sve","tests","to_block0_initials","to_full_snapshot_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_voter_hir","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","voter_hir","voting_group","voting_group","voting_key","voting_keys","voting_power","vzip","vzip","vzip","vzip","vzip","vzip","vzip","calc_vp_to_remove","cap_voting_influence","int_ceil","Delegations","Legacy","MAINNET_PREFIX","MainnetRewardAddress","New","RewardAddressTrait","STAKE_PREFIX","StakeAddress","TESTNET_PREFIX","TestnetRewardAddress","VotingRegistration","arbitrary_with","arbitrary_with","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","delegations","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","hash","init","init","init","init","init","into","into","into","into","into","is_legacy","is_new","nonce","partial_cmp","partial_cmp","reward_address","serde_impl","serialize","serialize","serialize","serialize","serialize","stake_public_key","tests","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","voting_power","voting_purpose","vzip","vzip","vzip","vzip","vzip","DelegationsVisitor","IdentifierDef","VotingKeyVisitor","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","expecting","expecting","fmt","fmt","from","from","from","init","init","init","into","into","into","serialize","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visit_bytes","visit_bytes","visit_seq","visit_str","visit_str","vzip","vzip","vzip","Snapshot","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","into","new","to_block0_initials","try_from","try_into","type_id","vzip","","","","","","DummyAssigner","_TestNonCatalystRegsAreIgnoredArgs","_TestThresholdArgs","_TestVotingPowerAllDistributedArgs","_additional_reg","_raw","_reg","_reg","_stake_threshold","_strategy_of__additional_reg","_strategy_of__raw","_strategy_of__reg","_strategy_of__reg","_strategy_of__stake_threshold","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","arbitrary_with","arbitrary_with","arbitrary_with","assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","VoterHIR","VotingGroup","arbitrary_with","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","from","hash","init","into","serde","serialize","tests","to_owned","try_from","try_into","type_id","voting_group","voting_key","voting_power","vzip","deserialize","serialize","VpRange","ada_distribution","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","init","into","try_from","try_into","type_id","vzip","DEFAULT_DIRECT_VOTER_GROUP","DEFAULT_REPRESENTATIVE_GROUP","RepsVotersAssigner","VotingGroupAssigner","assign","assign","borrow","borrow_mut","deref","deref_mut","direct_voters","dreps","drop","from","init","into","new","reps","try_from","try_into","type_id","vzip"],"q":[[0,"snapshot_lib"],[172,"snapshot_lib::influence_cap"],[175,"snapshot_lib::registration"],[307,"snapshot_lib::registration::serde_impl"],[357,"snapshot_lib::sve"],[373,"snapshot_lib::tests"],[450,"snapshot_lib::voter_hir"],[478,"snapshot_lib::voter_hir::serde"],[480,"snapshot_lib::voter_hir::tests"],[496,"snapshot_lib::voting_group"]],"d":["","","","","Fraction consisting from two <code>u64</code> numbers","Contribution to a voting key for some registration","","","","","","","","","Define High Level Intermediate Representation (HIR) for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The values in the contributions are the original values in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Voting group this key belongs to. If this key belong to …","","","Voting power as processed by the snapshot","","","","","","","","Let’s denote with X the current voting power of user U …","Cap each individual voting power according to the …","Calculates ceil(a / b) where a and b are integers with …","To allow backward compatibility and avoid requiring …","","","","Tuples of (voting key, weight)","","","","","","The voting registration/delegation format as introduced in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Shelley address discriminated for the same network this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","0 = Catalyst, assumed 0 for old legacy registrations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Define High Level Intermediate Representation (HIR) for …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Voting group this key belongs to. If this key belong to …","","Voting power as processed by the snapshot","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,7,0,5,5,0,0,0,7,0,0,11,8,11,7,8,9,5,10,2,11,7,8,9,5,10,2,11,7,8,9,10,2,11,7,8,9,10,2,11,2,11,9,7,8,9,5,10,2,11,7,8,9,5,10,2,11,8,9,10,2,0,7,8,9,5,10,2,11,10,2,11,7,8,9,5,5,10,2,11,7,8,8,9,9,5,10,2,11,11,7,2,0,7,8,9,5,10,2,11,11,7,8,9,5,10,2,11,5,0,9,10,8,9,10,2,0,10,11,11,0,0,11,11,7,8,9,10,2,11,5,11,7,8,9,5,10,2,11,7,8,9,5,10,2,11,7,8,9,5,10,2,11,10,0,0,32,32,11,32,7,8,9,5,10,2,11,0,0,0,0,39,0,0,39,0,0,0,0,0,0,23,39,36,37,38,23,39,36,37,38,23,39,36,37,38,23,39,36,37,38,23,39,36,37,36,37,23,36,36,37,37,38,38,23,39,36,36,37,37,38,38,23,39,36,37,38,23,39,36,37,38,23,39,36,37,38,23,39,36,37,38,23,39,36,37,38,23,39,36,37,36,37,38,23,39,36,37,38,23,39,23,23,23,36,37,23,0,36,37,38,23,39,23,0,36,37,38,23,39,36,37,38,23,39,36,37,38,23,39,36,37,38,23,39,23,23,36,37,38,23,39,0,0,0,42,43,44,42,43,44,42,43,44,42,43,44,42,42,43,44,43,44,43,44,42,43,44,42,43,44,42,43,44,42,42,43,44,42,43,44,42,43,44,43,44,44,43,44,42,43,44,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,0,51,51,52,53,51,0,0,0,0,0,0,0,0,51,52,53,50,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,32,0,32,32,32,32,32,32,32,32,0,0,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,58,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[3,[[2,[1]]]],4],[[6,[[3,[[2,[1]]]],5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[[[8,[1]]],[[8,[1]]]],[9,9],[[[10,[1]]],[[10,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[11,[1]]],[[11,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[11,[1]],[13,[12]]],[[3,[[10,[1]]]]]],[[],9],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[15,[[6,[[8,[16]]]]]],[15,[[6,[9]]]],[15,[[6,[[10,[16]]]]]],[15,[[6,[[2,[16]]]]]],[15,[[6,[[17,[12]]]]]],[14],[14],[14],[14],[14],[14],[14],[[[10,[18]],10],19],[[[2,[18]],2],19],[[[11,[18]],11],19],[[7,20],21],[[[8,[22]],20],21],[[9,20],21],[[5,20],21],[[5,20],21],[[[10,[22]],20],21],[[[2,[22]],20],21],[[[11,[22]],20],21],[[]],[[]],[[[3,[23]]],8],[[]],[[[17,[12]]],9],[[]],[[]],[[]],[[]],[[[8,[1]],24,4],[[6,[[11,[1]],5]]]],[25,[[6,[7]]]],0,0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26],0,0,0,[[[8,[27]],28],6],[[9,28],6],[[[10,[27]],28],6],[[[2,[27]],28],6],[[17,28],6],0,[[[11,[1]]],24],0,0,0,[[11,29],[[3,[30]]]],[[[11,[1]]],[[3,[[2,[1]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[[11,[1]]],[[3,[32]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,0,0,0,[[[11,[1]]],34],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[35,35,4],35],[[[3,[2]],4],[[6,[[3,[2]],5]]]],[[35,35],35],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[36,36],[37,37],[38,38],[[[23,[1]]],[[23,[1]]]],[39,39],[[]],[[]],[[]],[[]],[[]],[[36,36],40],[[37,37],40],[[],36],[[],37],0,[14],[36],[14],[37],[38],[14],[14],[14],[36],[14],[37],[14],[14],[38],[14],[14],[15,[[6,[36]]]],[15,[[6,[37]]]],[15,[[6,[38]]]],[15,[[6,[[23,[16]]]]]],[15,[[6,[39]]]],[14],[14],[14],[14],[14],[[36,36],19],[[37,37],19],[[38,38],19],[[[23,[18]],23],19],[[39,39],19],[[36,20],21],[[37,20],21],[[38,20],21],[[[23,[22]],20],21],[[39,20],21],[[]],[[]],[[]],[[]],[[]],[36],[37],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[23,19],[23,19],0,[[36,36],[[41,[40]]]],[[37,37],[[41,[40]]]],0,0,[[36,28],6],[[37,28],6],[[38,28],6],[[[23,[27]],28],6],[[39,28],6],0,0,[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[15,[[6,[42]]]],[14],[14],[14],[[43,20],21],[[44,20],21],[20,[[6,[45]]]],[20,[[6,[45]]]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[42,28],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],33],[[],33],[[],33],[43,[[6,[46]]]],[44,[[6,[46]]]],[[44,47],6],[[43,25],[[6,[46]]]],[[44,25],[[6,[46]]]],[[]],[[]],[[]],0,[[]],[[]],[14],[14],[14],[[]],[[],14],0,[[]],[[8,24]],[[48,29,19],[[3,[30]]]],[[],6],[[],6],[[],33],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[49,49],[49,49],[49,49],[49,49],[49,49],[[]],[[]],[[]],[[]],[[]],[[]],[[50,12],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[[51,20],21],[[52,20],21],[[53,20],21],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[32,32],[[]],[14],[14],[15,[[6,[32]]]],[14],[[32,32],19],[[32,20],21],[[]],[32],[[],14],[[]],0,[[32,28],6],0,[[]],[[],6],[[],6],[[],33],0,0,0,[[]],[15,[[6,[12]]]],[[12,28],6],0,[[],54],[[]],[[]],[[],54],[14],[14],[14],[[[55,[35]]],54],[[]],[[],14],[[]],[[],6],[[],6],[[],33],[[]],0,0,0,0,[12,56],[[57,12],56],[[]],[[]],[14],[14],0,0,[14],[[]],[[],14],[[]],[[56,56,9],57],0,[[],6],[[],6],[[],33],[[]]],"c":[],"p":[[8,"Clone"],[3,"SnapshotInfo"],[3,"Vec"],[6,"Fraction"],[4,"Error"],[4,"Result"],[4,"NetworkType"],[3,"RawSnapshot"],[3,"Dreps"],[3,"KeyContribution"],[3,"Snapshot"],[3,"Identifier"],[8,"Borrow"],[15,"usize"],[8,"Deserializer"],[8,"Deserialize"],[3,"HashSet"],[8,"PartialEq"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"VotingRegistration"],[3,"Value"],[15,"str"],[3,"Demand"],[8,"Serialize"],[8,"Serializer"],[4,"Discrimination"],[3,"InitialUTxO"],[3,"String"],[3,"VoterHIR"],[3,"TypeId"],[8,"Iterator"],[15,"u64"],[3,"MainnetRewardAddress"],[3,"TestnetRewardAddress"],[3,"StakeAddress"],[4,"Delegations"],[4,"Ordering"],[4,"Option"],[3,"IdentifierDef"],[3,"VotingKeyVisitor"],[3,"DelegationsVisitor"],[3,"Error"],[8,"Error"],[8,"SeqAccess"],[3,"Snapshot"],[8,"Strategy"],[3,"DummyAssigner"],[3,"_TestThresholdArgs"],[3,"_TestVotingPowerAllDistributedArgs"],[3,"_TestNonCatalystRegsAreIgnoredArgs"],[3,"VpRange"],[3,"Range"],[6,"VotingGroup"],[3,"RepsVotersAssigner"],[8,"VotingGroupAssigner"]]},\
"snapshot_tool":{"doc":"","t":"HHHHHHHHHHHHHHHHFFFFF","n":["CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","db_conn","handle_invalids","handle_unregistered","load","main"],"q":[[0,"snapshot_tool"]],"d":["","","","","","","","","","","","","","","","","","Handle invalid registrations","Handle stake addresses that are not registered","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[5,4],[[5,6],4],[[[8,[7]],9,2,2],4],[[],4]],"c":[],"p":[[3,"DbConfig"],[3,"Client"],[3,"Error"],[6,"Result"],[3,"Path"],[6,"Unregistered"],[4,"DryRunCommand"],[4,"Option"],[3,"VotingPowerArgs"]]},\
"snapshot_trigger_service":{"doc":"","t":"NNNNDNGENNDAAAMAMAAMMWNNNNNENNDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLAANENENNNENDNNNNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHENNHHNNNDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNNDDEDNENNDNMLLMLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLAMMLFLLLLLLMLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLFDLLLLLLLLLLLLLLLLLMMLLLLLDGGENNNNNLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLRDLLLLLLLLLLLLLLLWWWWWWNNNEHHHHNDDDDLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLFLFLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CannotPersistJobState","CannotReadConfiguration","CannotSerializeJobState","CannotSpawnCommand","Context","Context","ContextState","Error","Poison","Scheduler","TriggerServiceCommand","args","client","config","config","context","inner","job","rest","state","token","","CannotPersistJobState","CannotReadConfiguration","CannotSerializeJobState","CannotSpawnCommand","Context","Error","Poison","Scheduler","TriggerServiceCommand","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","config","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","into","into","provide","source","to_string","token","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","args","rest","Cli","Command","Context","Error","Files","Health","Job","JobCommand","New","NewJobCommand","ReqwestError","Rest","SerdeError","Status","StatusCommand","TriggerServiceCliCommand","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","endpoint","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","has_subcommand","has_subcommand","init","init","init","init","init","init","into","into","into","into","into","into","job_id","provide","slot_no","source","tag","to_string","token","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","CALLSITE","CALLSITE","Error","Inner","IoError","META","META","ReqwestError","SerdeJsonError","SerdeYamlError","SnapshotRestClient","UnexpectedSnapshotRestResponse","WaitError","address","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","download_job_status","download_snapshot","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_snapshot","get_status","init","init","into","into","into","is_up","job_new","list_files","new","new_with_token","provide","source","to_string","token","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wait_for_job_finish","path","text","CannotFindVotingTools","CannotParseConfiguration","CannotReadConfiguration","CannotSpawnCommand","Configuration","ConfigurationBuilder","Error","JobParameters","Mainnet","NetworkType","ResultFolderDoesNotExists","Testnet","VotingToolsParams","WrongVotingToolsConfiguration","additional_params","address","address_mut","bin","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","command","configuration","db","db_host","db_pass","db_user","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","inner","into","into","into","into","into","job","network","nix_branch","provide","read_config","result_dir","serialize","serialize","serialize","serialize","set_token","slot_no","source","tag","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","voting_tools","vzip","vzip","vzip","vzip","vzip","with_port","with_result_dir","with_tmp_result_dir","with_voting_tools_params","write_config","JobParameters","borrow","borrow_mut","clone","clone_into","daily","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","fund","init","into","serialize","slot_no","tag","to_owned","try_from","try_into","type_id","vzip","Context","ContextLock","ContextState","Error","JobNotFound","NoJobRun","NoRequestToStart","SnaphotInProgress","SnaphotNotStarted","address","api_token","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","from","from","init","init","inner","into","into","into_scheduler_context","new","new_run_started","provide","run_finished","run_requested","serialize","server_stopper","set_api_token","set_server_stopper","state","state","state_mut","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","working_directory","SNAPSHOT_FILE","SnapshotJobRunner","borrow","borrow_mut","crate_snapshot_output_file_name","deref","deref_mut","drop","from","init","into","print_with_password_hidden","start","try_from","try_into","type_id","vzip","","","","","","","CannotFindJobByStatus","CannotParseToken","CannotParseUuid","Error","S","S","S","S","WorkingDirectoryUndefined","__StaticPath","__StaticPath","__StaticPath","__StaticPath","as_ref","as_ref","as_ref","as_ref","authorize_token","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","job_new_handler","job_prameters_json_body","job_status_handler","provide","report_invalid","source","start_rest_server","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"snapshot_trigger_service"],[21,"snapshot_trigger_service::args"],[79,"snapshot_trigger_service::client"],[81,"snapshot_trigger_service::client::args"],[240,"snapshot_trigger_service::client::rest"],[302,"snapshot_trigger_service::client::rest::Error"],[304,"snapshot_trigger_service::config"],[445,"snapshot_trigger_service::config::job"],[470,"snapshot_trigger_service::context"],[524,"snapshot_trigger_service::job"],[541,"snapshot_trigger_service::rest"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","retrieve files from snapshot (snapshot outcome etc.)","check if snapshot service is up","job related commands","","start new job","","","","","get job status","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","snapshot endpoint","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","job id","","slot no","","tag","","access token, which is necessary to perform client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","additional parameters","","","binary name","","","","","","","","","","","","","","","","","","","","","","db name","db host","db pass","db user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","network type","in some occasion we need to run voting-tools via some …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,4,4,4,0,4,0,0,4,4,0,0,0,0,3,0,56,0,0,56,3,0,4,4,4,4,4,0,4,4,0,3,3,3,4,3,4,3,3,3,3,4,3,4,3,4,3,3,4,4,3,4,4,4,4,4,4,4,3,3,3,3,4,3,4,4,4,4,3,3,4,3,4,3,4,3,3,3,4,0,0,23,0,23,0,24,24,24,0,26,0,23,23,23,26,0,0,22,27,29,22,27,29,24,26,24,26,22,24,26,27,29,23,22,24,26,27,29,23,22,24,26,27,29,22,22,24,26,27,29,22,24,26,27,29,23,22,24,26,27,29,23,22,24,26,27,29,23,22,22,24,26,27,29,22,24,26,27,29,23,23,22,24,26,27,29,23,23,23,23,23,23,22,24,26,27,29,22,24,26,27,29,22,27,29,24,26,22,24,26,27,29,23,22,24,26,27,29,23,27,23,29,23,29,23,22,22,24,26,27,29,23,22,24,26,27,29,23,22,24,26,27,29,23,22,24,26,27,29,22,24,26,27,29,22,24,26,27,29,23,0,0,0,33,33,0,0,33,33,33,0,33,33,25,25,33,25,33,25,33,25,33,25,25,25,33,25,33,33,25,33,33,33,33,33,33,33,25,25,25,33,25,25,33,25,25,25,25,25,33,33,33,25,25,33,25,33,25,33,25,33,25,73,73,10,10,10,10,0,0,0,0,49,0,10,49,0,10,48,45,45,48,45,47,48,49,10,45,47,48,49,10,47,45,47,48,49,45,47,48,49,48,47,48,48,48,48,45,47,45,47,48,49,10,45,47,48,49,10,45,47,48,49,45,47,48,49,10,45,47,48,49,45,47,48,49,45,47,48,49,10,10,45,47,48,49,10,10,10,45,47,48,49,10,45,45,47,48,49,10,0,48,48,10,0,45,45,47,48,49,45,42,10,42,45,47,48,49,10,45,47,48,49,10,45,47,48,49,10,45,47,48,49,10,45,45,47,48,49,10,47,47,47,47,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,0,0,12,12,12,12,12,56,56,56,12,56,12,56,12,56,12,12,56,12,12,12,56,12,56,12,56,56,12,56,56,56,12,56,56,12,56,56,56,56,56,56,12,56,12,56,12,56,12,56,12,56,0,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,0,0,0,0,67,67,67,0,0,0,0,0,67,0,0,0,0,60,61,62,63,0,67,60,61,62,63,67,60,61,62,63,60,61,62,63,60,61,62,63,67,60,61,62,63,67,60,61,62,63,67,60,61,62,63,67,67,67,67,60,61,62,63,67,60,61,62,63,67,60,61,62,63,0,0,0,67,0,67,0,60,61,62,63,67,67,60,61,62,63,67,60,61,62,63,67,60,61,62,63,67,60,61,62,63],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],[[],1],0,[2],[2],[2],[2],[2],[2],[3,[[5,[4]]]],[[3,6],7],[[4,6],7],[[4,6],7],[[]],[8,4],[9,4],[[]],[10,4],[11,4],[12,4],[13,4],[14,[[5,[3,15]]]],[14,[[5,[3,15]]]],[[],[[17,[16]]]],[[],2],[[],2],[[]],[[]],[18],[4,[[17,[19]]]],[[],20],0,[[],5],[[],5],[[],5],[[],5],[[],21],[[],21],[[3,14],[[5,[15]]]],[[3,14],[[5,[15]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[],1],[[],1],[[],1],[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[22,[[5,[23]]]],[[24,25],[[5,[23]]]],[[26,25],[[5,[23]]]],[[27,25],[[5,[28,23]]]],[[29,25],[[5,[20,23]]]],[[22,6],7],[[24,6],7],[[26,6],7],[[27,6],7],[[29,6],7],[[23,6],7],[[23,6],7],[[]],[[]],[[]],[[]],[[]],[12,23],[[]],[30,23],[31,23],[32,23],[33,23],[14,[[5,[22,15]]]],[14,[[5,[24,15]]]],[14,[[5,[26,15]]]],[14,[[5,[27,15]]]],[14,[[5,[29,15]]]],[14,[[5,[22,15]]]],[14,[[5,[24,15]]]],[14,[[5,[26,15]]]],[14,[[5,[27,15]]]],[14,[[5,[29,15]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[[],[[17,[16]]]],[34,35],[34,35],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],0,[18],0,[23,[[17,[19]]]],0,[[],20],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[22,14],[[5,[15]]]],[[24,14],[[5,[15]]]],[[26,14],[[5,[15]]]],[[27,14],[[5,[15]]]],[[29,14],[[5,[15]]]],[[22,14],[[5,[15]]]],[[24,14],[[5,[15]]]],[[26,14],[[5,[15]]]],[[27,14],[[5,[15]]]],[[29,14],[[5,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[25,20],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[[25,[36,[20]],[38,[37]]],[[5,[33]]]],[[25,[36,[20]],[36,[20]],[38,[37]]],[[5,[33]]]],[2],[2],[[25,6],7],[[33,6],7],[[33,6],7],[[]],[[]],[39,33],[30,33],[31,33],[40,33],[11,33],[13,33],[[25,[36,[20]],[36,[20]]],[[5,[20,33]]]],[[25,[36,[20]]],[[5,[28,33]]]],[[],2],[[],2],[[]],[25,41],[[]],[25,35],[[25,42],[[5,[20,33]]]],[25,[[5,[43,33]]]],[20,25],[[20,20],25],[18],[33,[[17,[19]]]],[[],20],[25,17],[[],5],[[],5],[[],5],[[],5],[[],21],[[],21],[[]],[[]],[[25,[36,[20]],44],[[5,[28,33]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[45,46],[45,46],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,45],[45,45],[47,47],[48,48],[49,49],[[]],[[]],[[]],[[]],[48,[[5,[50,10]]]],0,0,0,0,0,[[],45],[[],47],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[51,[[5,[45]]]],[51,[[5,[47]]]],[51,[[5,[48]]]],[51,[[5,[49]]]],[2],[2],[2],[2],[2],[[45,45],35],[[47,47],35],[[48,48],35],[[49,49],35],[[],35],[[],35],[[],35],[[],35],[[45,6],7],[[47,6],7],[[48,6],7],[[49,6],7],[[10,6],7],[[10,6],7],[[]],[[]],[[]],[[]],[[]],[30,10],[13,10],[[],2],[[],2],[[],2],[[],2],[[],2],0,[[]],[[]],[[]],[[]],[[]],0,0,0,[18],[[[38,[37]]],[[5,[45,10]]]],[45,52],[[45,53],5],[[47,53],5],[[48,53],5],[[49,53],5],[[45,[17,[20]]]],0,[10,[[17,[19]]]],0,[[]],[[]],[[]],[[]],[[],20],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],21],[[],21],[[],21],[[],21],[[],21],0,[[]],[[]],[[]],[[]],[[]],[[47,54],47],[[47,[38,[37]]],47],[[47,55],47],[[47,48],47],[[45,[38,[37]]],[[5,[10]]]],0,[[]],[[]],[42,42],[[]],[[],42],[2],[2],[51,[[5,[42]]]],[2],[[42,42],35],[[],35],[[42,6],7],[[]],[[[36,[20]]],42],[[],2],[[]],[[42,53],5],0,0,[[]],[[],5],[[],5],[[],21],[[]],0,0,0,0,0,0,0,0,0,[56,46],[56,[[17,[20]]]],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[51,[[5,[12]]]],[2],[2],[[12,6],7],[[12,6],7],[[]],[[]],[[],2],[[],2],0,[[]],[[]],[56,57],[45,56],[56,[[5,[9]]]],[18],[[56,17],[[5,[9]]]],[56,17],[[12,53],5],[56,17],[[56,20]],[[56,58]],[56,28],0,[56,28],[[],20],[[],5],[[],5],[[],5],[[],5],[[],21],[[],21],[[]],[[]],[56,37],0,0,[[]],[[]],[[59,17],20],[2],[2],[2],[[]],[[],2],[[]],[[59,50]],[[59,42,52],[[5,[17,4]]]],[[],5],[[],5],[[],21],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,34],[61,34],[62,34],[63,34],[[20,[65,[[64,[56]]]]],[[5,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[60,60],[61,61],[62,62],[63,63],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[67,6],7],[[67,6],7],[[]],[68,67],[[]],[[]],[[]],[[]],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[[65,[[64,[56]]]],42],[[5,[69,66]]]],[[],[[0,[70,71]]]],[[20,[65,[[64,[56]]]]],[[5,[69,66]]]],[18],[66,[[5,[69,72]]]],[67,[[17,[19]]]],[[[65,[[64,[56]]]]]],[[]],[[]],[[]],[[]],[[],20],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]]],"c":[],"p":[[3,"Command"],[15,"usize"],[3,"TriggerServiceCommand"],[4,"Error"],[4,"Result"],[3,"Formatter"],[6,"Result"],[4,"WrappedPoisonError"],[4,"Error"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"Error"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[4,"Option"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"],[3,"TriggerServiceCliCommand"],[4,"Error"],[4,"Command"],[3,"SnapshotRestClient"],[4,"JobCommand"],[3,"StatusCommand"],[6,"ContextState"],[3,"NewJobCommand"],[3,"Error"],[3,"Error"],[4,"Error"],[4,"Error"],[15,"str"],[15,"bool"],[8,"Into"],[3,"Path"],[8,"AsRef"],[4,"Error"],[4,"Error"],[3,"SchedulerRestClient"],[3,"JobParameters"],[3,"FolderDump"],[3,"Wait"],[3,"Configuration"],[4,"SocketAddr"],[3,"ConfigurationBuilder"],[3,"VotingToolsParams"],[4,"NetworkType"],[3,"Command"],[8,"Deserializer"],[3,"PathBuf"],[8,"Serializer"],[15,"u16"],[3,"TempDir"],[3,"Context"],[3,"SchedulerContext"],[3,"ServerStopper"],[3,"SnapshotJobRunner"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"Mutex"],[3,"Arc"],[3,"Rejection"],[4,"Error"],[3,"Error"],[8,"Reply"],[8,"Filter"],[8,"Clone"],[4,"Infallible"],[13,"UnexpectedSnapshotRestResponse"]]},\
"snapshot_wormhole":{"doc":"","t":"F","n":["main"],"q":[[0,"snapshot_wormhole"]],"d":[""],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[3,"Report"],[4,"Result"]]},\
"sparse_array":{"doc":"Implementation of a sparse array storing maximum of 256 …","t":"DDDDDDAMMMMMMAMMMMAMMDLLLLLLLLLLLLLLLLLLLLDDDMLLLLLLLLLLMMLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLDDDMLLLLLLLLLLMMLLLLLLLLMMLLLLLLLLLLLLLMLLLLLLLLLLL","n":["FastSparseArray","FastSparseArrayBuilder","FastSparseArrayIter","SparseArray","SparseArrayBuilder","SparseArrayIter","bitmap","bitmap","bitmap","data","data","data","data","fast","index","index","index","index","sparse_array","sparse_array","sparse_array","BitmapIndex","borrow","borrow_mut","clone","clone_into","eq","fmt","from","get_first_index","get_index","get_mask_and_part","get_real_index","into","is_empty","new","remove_index","set_index","to_owned","try_from","try_into","type_id","FastSparseArray","FastSparseArrayBuilder","FastSparseArrayIter","bitmap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","contains_key","data","data","default","default","eq","fmt","from","from","from","get","index","index","into","into","into","into_iter","is_empty","iter","new","new","new","next","remove","set","set","shrink","sparse_array","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity","SparseArray","SparseArrayBuilder","SparseArrayIter","bitmap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","contains_key","data","data","default","default","eq","fmt","from","from","from","get","index","index","into","into","into","into_iter","is_empty","iter","new","new","new","next","remove","set","set","sparse_array","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity"],"q":[[0,"sparse_array"],[21,"sparse_array::bitmap"],[42,"sparse_array::fast"],[94,"sparse_array::sparse_array"]],"d":["","","","","","","","","","","","","","Wrapper for sparse arrays that doesn’t delete anything …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,14,17,9,15,10,16,0,9,15,10,16,0,14,17,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,14,9,14,10,9,14,10,9,10,10,10,9,10,9,10,10,10,9,14,10,10,9,10,9,14,10,14,10,10,9,14,10,14,10,9,10,10,14,10,9,14,10,9,14,10,9,14,10,9,0,0,0,17,15,17,16,15,17,16,15,16,16,16,15,16,15,16,16,16,15,17,16,16,15,16,15,17,16,17,16,16,15,17,16,17,16,15,16,17,16,15,17,16,15,17,16,15,17,16,15],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[1,3],4],[[]],[1,[[6,[5]]]],[[1,5],2],[[1,5]],[[1,5],[[6,[5]]]],[[]],[1,2],[[],1],[[1,5]],[[1,5]],[[]],[[],7],[[],7],[[],8],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[9,10],[[[10,[11]]],[[10,[11]]]],[[]],[[10,5],2],0,0,[[],9],[[],10],[[[10,[12]],10],2],[[[10,[13]],3],4],[[]],[[]],[[]],[[10,5],6],0,0,[[]],[[]],[[]],[[]],[10,2],[10,14],[[],9],[10,14],[[],10],[14,6],[[[10,[11]],5],[[6,[11]]]],[[9,5]],[[[10,[11]],5,11]],[[[10,[11]]]],0,[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[5,9],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[15,16],[[[16,[11]]],[[16,[11]]]],[[]],[[16,5],2],0,0,[[],15],[[],16],[[[16,[12]],16],2],[[[16,[13]],3],4],[[]],[[]],[[]],[[16,5],6],0,0,[[]],[[]],[[]],[[]],[16,2],[16,17],[[],15],[16,17],[[],16],[17,6],[[16,5]],[[15,5]],[[16,5],16],0,[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[5,15]],"c":[],"p":[[3,"BitmapIndex"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"u8"],[4,"Option"],[4,"Result"],[3,"TypeId"],[3,"FastSparseArrayBuilder"],[3,"FastSparseArray"],[8,"Clone"],[8,"PartialEq"],[8,"Debug"],[3,"FastSparseArrayIter"],[3,"SparseArrayBuilder"],[3,"SparseArray"],[3,"SparseArrayIter"]]},\
"symmetric_cipher":{"doc":"","t":"NNERNNNNRRRRDLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLL","n":["AuthenticationFailed","EmptyPayload","Error","ITERS","InvalidDataLength","InvalidProtocol","IoError","MalformedInput","NONCE_SIZE","PROTOCOL_SIZE","SALT_SIZE","TAG_SIZE","View","borrow","borrow","borrow_mut","borrow_mut","decrypt","derive_symmetric_key","encrypt","encrypted_data","fmt","fmt","from","from","from","into","into","new","nonce","protocol","provide","salt","source","tag","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"symmetric_cipher"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[3,3,0,0,3,3,3,3,0,0,0,0,0,8,3,8,3,0,0,0,8,3,3,8,3,3,8,3,8,8,8,3,8,3,8,3,8,3,8,3,8,3,8,3],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[1,1],[[4,[2,3]]]],[1,5],[[1,1,[0,[6,7]]],[[4,[2,3]]]],[[[8,[1]]]],[[3,9],10],[[3,9],10],[[]],[11,3],[[]],[[]],[[]],[1,[[4,[[8,[1]],3]]]],[[[8,[1]]]],[[[8,[1]]],12],[13],[[[8,[1]]]],[3,[[15,[14]]]],[[[8,[1]]]],[[],16],[[],4],[[],4],[[],4],[[],4],[[],17],[[],17],[[]],[[]]],"c":[],"p":[[8,"AsRef"],[3,"Box"],[4,"Error"],[4,"Result"],[3,"Zeroizing"],[8,"Rng"],[8,"CryptoRng"],[3,"View"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u8"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"]]},\
"tally":{"doc":"Community Tally Verification Tool","t":"DHHHHLLLLLLLLMMLLLMLLLLLLLFMMMMLLLLLLL","n":["Args","CALLSITE","CALLSITE","META","META","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","command","command_for_update","decrypt_tally_from_keys","decrypt_tally_from_shares","deref","deref_mut","drop","encrypted_tally","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","main","private_keys","produce_decrypt_shares","public_keys","show_public_keys","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":[[0,"tally"]],"d":["Args defines and declares CLI behaviour within the context …","","","","","","","","","","","","","Decrypt Tally from secret keys: internal use","Decrypt Tally from shares: public use","","","","Encrypted tally","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","List of whitespace seperated Secret keys","Produce decrypt shares: not for public use","List of whitespace seperated Public keys","Show Public keys","","","","","","",""],"i":[0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2],"f":[0,0,0,0,0,[1,1],[1,1],[[]],[[]],[2,2],[[]],[[],1],[[],1],0,0,[3],[3],[3],0,[[2,4],5],[[]],[6,[[8,[2,7]]]],[6,[[8,[2,7]]]],[[],[[10,[9]]]],[[],3],[[]],[[],[[13,[[12,[11]]]]]],0,0,0,0,[[]],[[],8],[[],8],[[],14],[[2,6],[[8,[7]]]],[[2,6],[[8,[7]]]],[[]]],"c":[],"p":[[3,"Command"],[3,"Args"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[8,"Error"],[3,"Box"],[6,"Result"],[3,"TypeId"]]},\
"thor":{"doc":"","t":"CNIENNNNNCCCDNDNEDDENNNNNNNDEDDDENNNNNDNNDNNNNNNICNECCCNMMAMMMKMMMAMMMMMMMMMMFFAMMAMMFAKKKKKMFMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGNNNNNNNNNNNDNDNEDDNENNNNNNNNNNNNNDDMMMAMMMAMAMMMMMMMAMMMMMGNNNNNNDDDENDDDLLMLLLMLLLLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMDRLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLNNNNNNNNENNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLCNNCDECCCCCCCCCCNNCCCLLLLALLLLLLLLLALLMLLLLLLALLLLLLALLLAACCLLLLLLALLLLLLLLLLMALLCLLLLCDENNNRLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMLLLLLLLLLLLLLNNNRRDENLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFNENDRLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLFWENNNNDENNNNNNNRLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMNNDDDNELLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLMLLLLLLLLLLLLLLLLMLLLLIKWNENNNNNDENNNNNRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLMLLLLLLMLLLLLLIKKKKKNDNNGRNNNNNENSGNDNNNDDNSNNNGNNNNNNEDNNNDNDNNDNNNNNNNEGESALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLMALLMLMLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLLMLLLLLLLLLLLLLLMMDLLLLLLLLLLMLLLLLLLLLLLMLLLLLLMLLLLLLLDDDDDLLLLLLLLLLLLLLLMMLLMMMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLMLMMLLLLLALLLLLLLLLLLLLLLLLLDDENLLLLLLLLLLMMLLLLLLLLLLLLLLLLMMLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLFLLGDLLLLLLLMLLMLLLLLLLLLLLLMLMLLLLLLIKKKGDLLLLLLLLMLLLLLLLLLLLMLLMLLLLL","n":["AccountWallet","AtLeastOneRejectedFragment","Block0ConfigurationBuilderExtension","BlockDateGenerator","CannotAddCostOfExtraInput","CannotComputeBalance","CannotCreateDumpFile","CannotCreateDumpFolder","CannotWriteFragmentToDumpFile","CommitteeDataManager","DelegationWallet","DiscriminationExtension","DummySyncNode","Fixed","FragmentBuilder","FragmentBuilder","FragmentBuilderError","FragmentChainSender","FragmentExporter","FragmentExporterError","FragmentExporterError","FragmentIsPendingForTooLong","FragmentNode","FragmentNotInBlock","FragmentNotInBlock","FragmentNotInMemPoolLogs","FragmentNotRejected","FragmentSender","FragmentSenderError","FragmentSenderSetup","FragmentSenderSetupBuilder","FragmentVerifier","FragmentVerifierError","FragmentVerifierError","FragmentsArePendingForTooLong","IoError","OnPending","OnProcessed","PersistentLogViewer","Rolling","SendFragmentError","StakePool","SyncNodeError","TimeoutReachedWhileWaitingForAllFragmentsInBlock","TooManyAttemptsFailed","TransactionAlreadyBalanced","TransactionAlreadyExtraValue","TransactionAutoConfirmDisabledError","TransactionHash","UTxOWallet","UnexpectedRejectionReason","VerifyExitStrategy","Wallet","WalletAlias","WalletError","WalletError","auto_confirm","block0_hash","cli","dir","dump_folder","dump_fragments","encode","expiry_generator","fees","fire_and_forget","fragment","fragment_factory","ignore_any_errors","inner","last_mempool_check","node","owner","resend_on_error","sender","setup","setup","signed_delegation_cert","signed_stake_pool_cert","stake_pool","stop_at_error","sync_nodes","utils","valid_until","verify_strategy","vote_plan_cert","wallet","with_delegation_to_stake_pool","with_stake_pool","with_stake_pool_and_delegation","with_wallet","with_wallets_having_some_values","witness_mode","write_into_persistent_log","block0_time","shift","shift_back","slot_duration","slots_per_epoch","alias","alias","attempts","logs","reason","alias","alias","alias","alias","alias","expected_part","fragment_id","fragment_id","fragment_id","logs","logs","logs","logs","logs","logs","logs","message","status","status","timeout","timeout","Alias","Bech32","Bech32","Bincode","CannotCreateConfigFile","CannotCreateConfigFileFolder","CannotDeserializeConfigFile","CannotFindProposal","CannotReadConfigFile","CannotReadSecretKey","CannotRetrieveHomeDir","CannotrSerializeSecretKey","CliController","Cocoon","Config","Config","ConfigError","ConfigManager","Connection","Connection","Error","FragmentSender","FragmentVerifier","Io","Io","Key","NoDefaultAliasDefined","Rest","SecretKey","Serde","SigningKeyParse","SpendingCounterError","TransactionsWerePendingForTooLong","UknownAlias","WalletController","WalletState","address","app_name","client","config","config","config_manager","connection","controller","debug","error","https","pending_tx","public_key","secret_file","spending_counters","testing","value","wallet_controller","wallets","wallets","fragments","proposal_index","vote_plan_name","Alias","Bech32","CannotCreateConfigFile","CannotCreateConfigFileFolder","CannotDeserializeConfigFile","CannotReadConfigFile","CannotRetrieveHomeDir","Config","ConfigManager","Connection","Error","Io","SecretKey","WalletState","Wallets","account_id","address","address","address_readable","alias_secret_file","app_dir","app_name","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","config_file","connection","debug","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","discrimination","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","from_str","https","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","new","pending_tx","pk","pk_bech32","provide","public_key","read_config","save_config","secret","secret_file","serialize","serialize","serialize","serialize","serialize","source","spending_counters","testing","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallets","wallets","CliController","SLOT_COUNT","account_state","borrow","borrow_mut","check_connection","clear_txs","client","confirm_tx","deref","deref_mut","drop","fragment_logs","from","init","into","into_request","new","new_from_client","refresh_state","save_config","secret_key","secret_key_for_wallet_state","statuses","thor_wallet","transaction","try_from","try_into","type_id","update_connection","vote_plan_history","votes_history","vzip","wallets","wallets","wallets_mut","Bech32","Bincode","CannotFindProposal","CannotReadSecretKey","CannotrSerializeSecretKey","Cocoon","Config","Connection","Error","FragmentSender","FragmentVerifier","Io","Key","NoDefaultAliasDefined","Rest","SecretKey","Serde","SigningKeyParse","SpendingCounterError","TransactionsWerePendingForTooLong","UknownAlias","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","init","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","fragments","proposal_index","vote_plan_name","WalletController","add_wallet","alias_exists","borrow","borrow_mut","clear_txs","config","config_manager","config_mut","confirm_txs","connection","default_alias","deref","deref_mut","drop","from","init","into","into_request","is_default_alias","iter","new","new_from_manager","remove_wallet","save_config","set_default_alias","try_from","try_into","type_id","vzip","wallet","wallet_mut","BlockDateGenerator","CannotAddCostOfExtraInput","CannotComputeBalance","DummySyncNode","FragmentBuilder","FragmentBuilderError","FragmentChainSender","FragmentExporter","FragmentExporterError","FragmentSender","FragmentSenderError","FragmentSenderSetup","FragmentSenderSetupBuilder","FragmentVerifier","FragmentVerifierError","PersistentLogViewer","TransactionAlreadyBalanced","TransactionAlreadyExtraValue","TransactionHash","VerifyExitStrategy","VerifyStrategy","borrow","borrow","borrow_mut","borrow_mut","chain_sender","delegation","delegation_remove","delegation_to_many","deref","deref","deref_mut","deref_mut","drop","drop","export","fmt","fmt","fragment_factory","from","from","from_settings","full_delegation_cert_for_block0","init","init","initial_certificates","into","into","into_request","into_request","new","owner_delegation","persistent_log","private_vote_cast","provide","public_vote_cast","sender","setup","signed_delegation_cert","signed_stake_pool_cert","stake_pool_registration","stake_pool_retire","stake_pool_update","to_string","transaction","transaction_to_many","transaction_utils","try_from","try_from","try_from_with_setup","try_into","try_into","type_id","type_id","update_proposal","update_valid_until","update_vote","valid_until","verifier","vote_cast","vote_plan","vote_plan_cert","vote_tally","vzip","vzip","witness_mode","write_into_persistent_log","FragmentChainSender","FragmentChainSenderError","FragmentSenderError","FragmentVerifierError","NoFragmentToVerify","_DERIVE_core_fmt_Debug_FOR_FragmentChainSenderError","and_verify_is_in_block","and_verify_is_rejected","and_verify_is_rejected_with_message","borrow","borrow","borrow_mut","borrow_mut","cast_vote","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from_with_setup","get_last_mempool_check","init","init","into","into","into_request","into_request","last_mempool_check","new","node","provide","send_vote_plan","sender","source","tally_vote","then_wait_for_epoch","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_wallet","vzip","vzip","CannotCreateDumpFile","CannotCreateDumpFolder","CannotWriteFragmentToDumpFile","DESCRIPTION","DESCRIPTION","FragmentExporter","FragmentExporterError","IoError","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","dump_folder","dump_to_file","dump_to_file_no_sender","fmt","fmt","format_address","format_fragment","format_hash","format_id","from","from","from","generate_file_name","generate_file_name_without_sender","init","init","into","into","into_request","into_request","new","provide","read","read_as_bytes","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","signed_delegation_cert","signed_stake_pool_cert","vote_plan_cert","CannotSerializeEntry","Error","Io","PersistentLogViewer","_DERIVE_core_fmt_Debug_FOR_Error","borrow","borrow","borrow_mut","borrow_mut","count","deref","deref","deref_mut","deref_mut","dir","drop","drop","fmt","fmt","from","from","from","get_all","get_bin","init","init","into","into","into_request","into_request","new","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_into_persistent_log","","BlockDateGenerator","Fixed","FragmentBuilder","FragmentExporterError","FragmentNotInBlock","FragmentSender","FragmentSenderError","FragmentVerifierError","Rolling","SendFragmentError","SyncNodeError","TooManyAttemptsFailed","TransactionAutoConfirmDisabledError","WalletError","_DERIVE_core_fmt_Debug_FOR_FragmentSenderError","block0_hash","block0_hash","block_date","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_with_setup","confirm_transaction_if_enabled","current_blockchain_age","date","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","dump_fragment_if_enabled","dump_fragments_if_enabled","expiry_generator","fees","fees","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_settings","from_settings_with_setup","from_with_setup","init","init","init","into","into","into","into_request","into_request","into_request","logs","new","provide","rolling","rolling_from_blockchain_config","send_batch_fragments","send_batch_fragments_in_chunks","send_fragment","send_full_delegation","send_owner_delegation","send_pool_registration","send_pool_retire","send_pool_update","send_private_vote_tally","send_public_vote_tally","send_split_delegation","send_transaction","send_transaction_to_address","send_transaction_to_many","send_transaction_with_witness_mode","send_transactions","send_transactions_round_trip","send_transactions_with_iteration_delay","send_update_proposal","send_update_vote","send_vote_cast","send_vote_cast_with_witness_mode","send_vote_plan","send_vote_tally","set_valid_until","setup","shift_ahead","shift_back","shifted","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from_with_setup","try_into","try_into","try_into","type_id","type_id","type_id","verify","vzip","vzip","vzip","wait_for_node_sync_if_enabled","witness_mode","witness_mode","block0_time","shift","shift_back","slot_duration","slots_per_epoch","alias","alias","attempts","logs","reason","AllOf","AnyOf","DummySyncNode","FragmentSenderSetup","FragmentSenderSetupBuilder","Single","VerifyStrategy","alias","attempts_count","auto_confirm","auto_confirm","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone_into","clone_into","clone_into","def","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","dump_fragments","dump_fragments_into","dump_into","fire_and_forget","fire_and_forget","fire_and_forget","fmt","from","from","from","from","from","from","get_lines_with_error_and_invalid","ignore_any_errors","ignore_any_errors","ignore_any_errors","ignore_errors","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_running","last_block_height","log_content","log_stats","new","new","no_sync_nodes","no_verify","resend_3_times","resend_3_times_and_sync_with","resend_on_error","resend_on_error","resend_on_error","setup","should_stop_at_error","stop_at_error","stop_at_error","stop_at_error","sync_nodes","sync_nodes","sync_nodes","tip","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify_strategy","vzip","vzip","vzip","vzip","TransactionHash","encode","","AtLeastOneRejectedFragment","ExitStrategy","FragmentIsPendingForTooLong","FragmentNode","FragmentNotInBlock","FragmentNotInMemPoolLogs","FragmentNotRejected","FragmentVerifier","FragmentVerifierError","FragmentsArePendingForTooLong","OnPending","OnProcessed","TimeoutReachedWhileWaitingForAllFragmentsInBlock","UnexpectedRejectionReason","_DERIVE_core_fmt_Debug_FOR_FragmentVerifierError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fragment_status","from","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","is_in_block","is_rejected","is_rejected_with_message","logs","provide","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_and_verify_all_are_in_block","wait_and_verify_is_in_block","wait_and_verify_is_rejected","wait_and_verify_is_rejected_with_message","wait_for_all_fragments","wait_fragment","wait_until_all_processed","alias","alias","alias","alias","alias","expected_part","fragment_id","fragment_id","fragment_id","logs","logs","logs","logs","logs","logs","logs","message","status","status","timeout","timeout","StakePool","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","id","info_mut","init","inner","inner","inner_mut","into","into_request","kes","new","owner","owner","to_owned","try_from","try_into","type_id","vrf","vzip","Block0ConfigurationBuilderExtension","with_delegation_to_stake_pool","with_stake_pool","with_stake_pool_and_delegation","with_wallet","with_wallets_having_some_values","Account","Block","CannotAddInput","CannotMakeWitness","ConsensusVersion","DEFAULT_LANE","Delegation","ElectionPublicKey","Evm","EvmMapping","EvmMapping","Fragment","FragmentError","HALF","HeaderId","Initial","Input","InvalidBech32","InvalidBech32Key","IoError","LinearFee","Milli","MintToken","ONE","OldUtxoDeclaration","OwnerStakeDelegation","OwnerStakeDelegation","PoolId","PoolRegistration","PoolRegistration","PoolRetirement","PoolRetirement","PoolUpdate","PoolUpdate","SignedCertificate","SpendingCounter","StakeDelegation","StakeDelegation","Transaction","TransactionBindingAuthData","UTxO","UpdateProposal","UpdateProposal","UpdateProposal","UpdateVote","UpdateVote","UpdateVote","VoteCast","VotePlan","VotePlan","VoteTally","VoteTally","Wallet","WalletAlias","WalletError","ZERO","account","account_id","add_input","add_input_with_value","address","address_bech32","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","arbitrary_with","baseline","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","certificate","chain_length","changes","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","coefficient","committee","confirm_transaction","confirm_transaction_at_lane","constant","contents","contents","date","decrement_counter","default","default","delegation","delegation_cert_for_block0","delegation_key","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","deserialize_from_slice","discrimination","discrimination","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fees_for_certificate","fees_for_inputs_outputs","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragments","fragments","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_account","from_account_public_key","from_account_single","from_bytes","from_enum","from_existing_account","from_millis","from_multisig_account","from_str","from_utxo","from_utxo_entry","get_hash","get_hash","get_type","hash","hash","hash","header","header","header","id","id","identifier","import_account","increment","increment_nth","index_or_account","init","init","init","init","init","init","init","init","init","init","init","init","input_ptr","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","lane","mk_witness","new","new","new","new","new","new_account","new_account_with_discrimination","new_delegation","new_delegation_with_discrimination","new_utxo","new_utxo_with_discrimination","parent_id","partial_cmp","partial_cmp","partial_cmp","payload_auth_data","payload_auth_data","payload_data","payload_data","payload_to_certificate_slice","payload_to_certificate_slice","per_certificate_fees","per_certificate_fees","per_vote_certificate_fees","per_vote_certificate_fees","proposal_id","proposal_id","proposer_id","proposer_id","provide","public_key","public_key_bech32","save_to","save_to_path","secret_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_in","serialize_in","serialized_size","serialized_size","serialized_size","serialized_size","serialized_size","sign_slice","signing_key_to_string","source","spending_counter","stake_key","to_bytes","to_committee_id","to_enum","to_float","to_initial_fund","to_initial_token","to_millis","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlaned_counter","update_counter","utxo","value","value","version","voter_id","voter_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness_data","zero","actual","expected","Wallet","add_input","add_input_with_value","address","borrow","borrow_mut","clone","clone_into","decrement_counter","deref","deref_mut","discrimination","drop","fmt","from","from_existing_account","from_secret_key","generate","identifier","increment_counter","init","internal_counter","internal_counters","internal_counters","into","into_request","mk_witness","save_to","set_counter","signing_key","signing_key","spending_counter","stake_key","to_owned","try_from","try_into","type_id","vzip","CommitteeCommunicationData","CommitteeCommunicationDataManager","CommitteeDataManager","CommitteeMembershipData","CommitteeMembershipDataManager","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","committee_ids","committees","committees","committees","committees","committees_mut","committees_mut","communication","communication_public_key","communication_secret_key","decrypt_tally","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","election_key","fmt","fmt","fmt","from","from","from","id","id","init","init","init","into","into","into","into_request","into_request","into_request","member_public_key","member_public_keys","member_secret_key","membership","membership_data","new","new","new","private","single","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_to","write_to","write_to","CommitteeCommunicationData","CommitteeMembershipData","Error","NoMemberSecretKeyDefined","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","communication_public_key","communication_secret_key","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","id","id","init","init","init","into","into","into","into_request","into_request","into_request","member_public_key","member_secret_key","member_secret_key","private","private","provide","public","public","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write_to","write_to","write_to","SpendingKey","Wallet","address","address_nth","borrow","borrow_mut","clone","clone_into","delegation","delegations","deref","deref_mut","discrimination","drop","fmt","from","generate","generate_new_signing_key","identifier","init","into","into_request","last_delegation_identifier","last_signing_key","mk_witness","rng","signing_key","signing_keys","stake_key","to_owned","try_from","try_into","type_id","vzip","DiscriminationExtension","from_prefix","from_testing_bool","into_prefix","SpendingKey","Wallet","address","address_nth","borrow","borrow_mut","clone","clone_into","deref","deref_mut","discrimination","drop","fmt","from","generate","generate_new_signing_key","identifier","init","into","into_request","last_signing_key","mk_witness","rng","save_to","signing_key","signing_keys","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"thor"],[94,"thor::BlockDateGenerator"],[99,"thor::FragmentSenderError"],[104,"thor::FragmentVerifierError"],[125,"thor::cli"],[181,"thor::cli::Error"],[184,"thor::cli::config"],[356,"thor::cli::controller"],[392,"thor::cli::error"],[443,"thor::cli::error::Error"],[446,"thor::cli::wallet_controller"],[478,"thor::fragment"],[565,"thor::fragment::chain_sender"],[618,"thor::fragment::export"],[670,"thor::fragment::initial_certificates"],[673,"thor::fragment::persistent_log"],[716,"thor::fragment::sender"],[845,"thor::fragment::sender::BlockDateGenerator"],[850,"thor::fragment::sender::FragmentSenderError"],[855,"thor::fragment::setup"],[968,"thor::fragment::transaction_utils"],[970,"thor::fragment::verifier"],[1046,"thor::fragment::verifier::FragmentVerifierError"],[1067,"thor::stake_pool"],[1095,"thor::utils"],[1101,"thor::wallet"],[1541,"thor::wallet::WalletError"],[1543,"thor::wallet::account"],[1581,"thor::wallet::committee"],[1666,"thor::wallet::committee::single"],[1735,"thor::wallet::delegation"],[1769,"thor::wallet::discrimination"],[1773,"thor::wallet::utxo"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exit as soon as the fragment enters the mempool","Exit when the fragment has been processed (i.e. either …","","","","","","","","","","","","","","","","","","","Sender will confirm transaction (increment account counter)","","","","","","","","","Just send fragment without any verifications","","","","","","","","","","","","","","","","","","","Sender verifies transaction strategy. By default is …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns <code>BlockDate</code>s that are always ahead or behind the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shifts the current date and returns the result on all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sender will confirm transaction (increment account counter)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Just send fragment without any verifications","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sender verifies transaction strategy. By default is …","","","","","","","","","","","","","","","","","","Exit as soon as the fragment enters the mempool","Exit when the fragment has been processed (i.e. either …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","<code>Block</code> is an element of the blockchain it contains multiple …","","","","","","","","","","All possible messages recordable in the content","","","","","Generalized input which have a specific input value, and …","","","","Linear fee using the basic affine formula …","","","","","","","Pool ID","","","","","","","","Spending counter associated to an account.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Date of the block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","The ID of a message is a hash of its serialization <em>without</em> …","","","","","Identifier of the block, currently the hash of the …","The ID of a fragment is a hash of its serialization <em>without</em>…","","","Increment the counter within it own lane. the lane of …","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Id of the parent block.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporary method exposing private key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wallet for an account","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Use the default counter","","the counter as we know of this value needs to be in sync …","Calls <code>U::from(self)</code>.","","","","","","the spending key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wallet for an delegation","","","","","","","","the identifier of delegated account","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","the spending key","","","","","","","","","","","","wallet for an account","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","the spending key","","","","",""],"i":[0,71,0,0,76,76,100,100,100,0,0,0,0,95,0,67,0,0,0,0,67,71,71,67,71,71,71,0,0,0,0,0,0,67,71,100,117,117,0,95,67,0,67,71,67,76,76,67,0,0,71,0,0,0,0,67,94,102,0,101,98,94,196,102,102,94,0,74,94,6,90,90,6,94,90,115,102,0,0,0,94,94,0,74,94,0,0,197,197,197,197,197,102,0,198,198,198,198,198,199,200,200,199,199,201,202,203,204,205,206,203,205,207,201,202,203,204,205,207,208,206,201,202,203,204,0,17,50,50,17,17,17,50,17,50,17,50,0,50,0,50,0,0,0,50,0,50,50,17,50,50,50,50,50,50,50,50,50,50,0,0,23,20,48,0,62,62,24,0,23,0,23,15,15,15,15,15,15,0,48,24,209,210,210,0,17,17,17,17,17,17,0,0,0,0,17,0,0,0,15,15,23,15,20,20,20,20,24,23,28,25,15,17,20,24,23,28,25,15,17,23,15,23,15,20,24,23,24,23,25,25,20,24,23,28,25,15,17,20,24,23,28,25,15,17,24,23,28,25,15,15,20,24,23,28,25,15,17,28,28,24,23,28,25,15,17,17,20,24,23,28,25,15,17,17,17,17,28,28,23,15,20,24,23,28,25,15,17,20,24,23,23,23,28,25,15,17,20,24,23,28,25,15,17,20,15,15,15,17,15,20,20,28,15,24,23,28,25,15,17,15,15,23,15,17,20,24,23,28,25,15,17,20,24,23,28,25,15,17,20,24,23,28,25,15,17,15,20,24,23,28,25,15,17,24,25,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,50,50,50,50,50,50,50,50,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,209,210,210,0,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,76,76,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,74,76,74,76,0,74,74,74,74,76,74,76,74,76,0,76,76,74,74,76,74,74,74,76,0,74,76,74,76,74,74,0,74,76,74,0,0,0,0,74,74,74,76,74,74,0,74,76,74,74,76,74,76,74,74,74,74,0,74,74,0,74,74,76,74,0,0,0,92,92,92,0,90,90,90,90,92,90,92,90,90,92,90,92,90,92,92,92,90,92,92,92,90,90,90,92,90,92,90,92,90,90,90,92,90,90,92,90,90,92,90,92,90,92,90,92,90,90,92,100,100,100,0,0,0,0,100,98,100,98,100,98,100,98,100,98,100,98,98,98,100,100,98,98,98,98,98,100,100,98,98,98,100,98,100,98,100,98,100,98,98,100,100,98,100,98,100,98,100,98,100,0,0,0,13,0,13,0,0,101,13,101,13,101,101,13,101,13,101,101,13,13,13,101,13,13,101,101,101,13,101,13,101,13,101,13,13,13,101,13,101,13,101,13,101,13,0,0,0,95,67,67,67,0,0,67,95,67,67,67,67,67,0,102,102,95,67,102,95,67,102,95,102,95,102,95,102,102,95,102,67,102,95,67,102,95,67,102,95,102,102,102,102,102,67,67,67,67,67,67,67,67,67,102,102,102,95,95,102,102,102,67,102,95,67,102,95,67,102,95,67,102,67,95,95,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,95,95,95,67,102,95,67,67,102,102,95,102,67,102,95,67,102,95,102,67,102,95,102,102,102,198,198,198,198,198,199,200,200,199,199,116,116,0,0,0,116,0,108,94,94,94,115,116,94,108,115,116,94,108,115,116,94,108,116,94,108,94,115,94,115,116,94,108,115,116,94,108,115,116,94,108,94,115,94,115,94,94,116,115,115,116,94,94,108,108,115,94,94,94,115,116,94,108,115,116,94,108,115,116,94,108,108,108,108,108,115,94,94,94,94,94,115,94,94,115,94,115,94,94,115,94,94,108,116,94,108,115,116,94,108,115,116,94,108,115,116,94,108,94,115,116,94,108,0,196,0,71,0,71,71,71,71,71,0,0,71,117,117,71,71,0,211,71,117,211,71,117,117,117,211,71,117,211,71,117,211,71,117,71,71,211,211,71,71,117,211,71,117,211,71,117,211,71,117,211,211,211,71,71,71,117,71,211,71,117,211,71,117,211,71,117,211,71,117,211,211,211,211,211,211,211,201,202,203,204,205,206,203,205,207,201,202,203,204,205,207,208,206,201,202,203,204,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,197,197,197,197,197,2,0,106,106,0,0,2,106,75,5,75,0,106,131,0,75,0,106,106,106,0,0,75,131,75,5,75,0,5,75,5,75,5,75,0,0,5,75,75,0,2,0,5,75,0,5,75,75,5,75,5,75,0,0,0,131,0,2,2,2,2,2,129,130,83,85,80,75,131,128,129,85,80,106,2,129,130,83,85,5,80,75,131,128,134,106,2,129,130,83,85,5,80,75,131,128,134,128,80,130,83,83,2,129,130,83,85,5,80,75,131,128,134,2,129,130,83,85,5,80,75,131,128,134,131,128,80,0,2,2,80,130,130,130,2,2,131,0,2,2,106,2,129,130,83,85,5,80,75,131,128,134,106,2,129,130,83,85,5,80,75,131,128,134,130,75,128,130,83,85,75,128,0,2,106,2,129,130,83,85,5,80,75,131,128,134,75,129,130,83,85,80,75,131,128,129,130,83,85,80,75,131,128,80,80,106,106,2,129,130,83,85,5,80,75,131,131,128,130,130,106,106,106,106,2,2,129,129,130,83,85,5,5,80,75,75,131,131,128,128,128,134,128,128,128,129,128,2,131,128,131,128,128,85,128,128,85,75,128,130,130,130,130,75,2,2,129,129,128,106,2,129,130,83,85,5,80,75,131,128,134,128,106,2,129,130,83,85,5,80,75,131,128,134,106,2,129,130,83,85,5,80,75,131,128,134,129,2,129,83,85,80,128,2,2,2,2,2,2,130,80,131,128,83,85,83,85,83,85,80,80,80,80,85,85,83,83,106,2,2,2,2,2,130,83,83,85,85,75,128,83,85,130,83,85,75,128,2,2,106,2,2,129,2,128,131,2,2,131,2,129,130,83,85,5,80,75,131,128,134,106,131,106,2,129,130,83,85,5,80,75,131,128,134,106,2,129,130,83,85,5,80,75,131,128,134,106,2,129,130,83,85,5,80,75,131,128,134,129,2,0,128,128,130,85,85,106,2,129,130,83,85,5,80,75,131,128,134,2,129,212,212,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,0,0,0,0,176,177,178,176,177,178,176,177,178,176,177,178,178,176,177,176,177,176,177,178,184,184,178,176,177,176,177,178,176,177,178,176,177,178,178,176,177,178,176,177,178,184,185,176,177,178,176,177,178,176,177,178,185,178,185,178,176,176,177,178,178,0,176,177,178,176,177,178,176,177,178,176,177,178,176,177,178,176,177,178,0,0,0,188,184,185,188,184,185,188,184,185,184,185,184,184,184,185,188,184,185,188,184,185,188,184,185,188,188,184,185,188,184,185,184,185,188,184,185,188,184,185,188,185,185,185,184,185,188,184,185,184,185,188,184,185,188,184,185,188,184,185,188,184,185,188,0,184,185,0,0,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,0,213,213,213,0,0,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,3,4],5],[[3,6],5],0,0,0,0,0,0,[[2,3,7],5],0,[[6,[8,[2]]]],[6],[[6,[8,[2]]]],[[2,9]],[[[8,[2]]]],0,[[[11,[10]],[8,[12]]],[[14,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,[[14,[16,17]]]],[15,[[14,[18,17]]]],0,[15,[[14,[19,17]]]],[[20,21],[[14,[22,17]]]],[20,[[14,[22,17]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[15,15],[[]],[[]],[20,[[14,[22,17]]]],0,0,[[],24],[[],23],[[],25],0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[27,[[14,[24]]]],[27,[[14,[23]]]],[27,[[14,[28]]]],[27,[[14,[25]]]],[27,[[14,[15]]]],[15,29],[26],[26],[26],[26],[26],[26],[26],[[28,28],30],[[],30],[[24,31],32],[[23,31],32],[[28,31],32],[[25,31],32],[[15,31],32],[[17,31],32],[[17,31],32],[[]],[[]],[[]],[[]],[[]],[[]],[33,17],[34,17],[35,17],[[]],[36,14],[36,[[14,[28,17]]]],0,[15,[[14,[1,17]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[23,37],[23,38],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[[40,[1]]],20],0,[15,[[14,[[42,[41]],17]]]],[15,1],[43],0,[20,[[14,[24,17]]]],[[20,24],[[14,[17]]]],0,0,[[24,44],14],[[23,44],14],[[28,44],14],[[25,44],14],[[15,44],14],[17,[[46,[45]]]],0,0,[[]],[[]],[[],1],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[48,[[14,[49,50]]]],[[]],[[]],[48,[[14,[50]]]],[48,[[14,[50]]]],0,[48,[[14,[50]]]],[26],[26],[26],[48,[[14,[[53,[51,52]],50]]]],[[]],[[],26],[[]],[[],39],[[],[[14,[48,50]]]],[[38,20],[[14,[48,50]]]],[48,[[14,[50]]]],[48,[[14,[50]]]],[[48,36],[[14,[54,50]]]],[[48,36,15],[[14,[54,50]]]],[48,[[14,[[53,[51,55]],50]]]],[[48,36],[[14,[2,50]]]],[[48,36,30,56,57],[[14,[58,50]]]],[[],14],[[],14],[[],47],[[48,23]],[[48,59],[[14,[[46,[[8,[60]]]],50]]]],[48,[[14,[[46,[[8,[61]]]],50]]]],[[]],[48,62],0,[48,62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[26],[26],[26],[[50,31],32],[[50,31],32],[33,50],[63,50],[[]],[64,50],[65,50],[66,50],[67,50],[68,50],[69,50],[70,50],[17,50],[34,50],[71,50],[[],26],[[]],[[],39],[43],[50,[[46,[45]]]],[[],1],[[],14],[[],14],[[],47],[[]],0,0,0,0,[[62,21,30,[8,[72]],36],[[14,[50]]]],[[62,21],30],[[]],[[]],[62,[[14,[50]]]],0,0,[62,24],[[62,[53,[51,55]]],[[14,[50]]]],[62,23],[62,[[46,[21]]]],[26],[26],[26],[[]],[[],26],[[]],[[],39],[[62,21],30],[62,[[73,[21,15]]]],[36,[[14,[62,50]]]],[20,[[14,[62,50]]]],[[62,21],[[14,[50]]]],[62,[[14,[50]]]],[[62,21],[[14,[50]]]],[[],14],[[],14],[[],47],[[]],[62,[[14,[15,50]]]],[62,[[14,[15,50]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[74,2,6],75],[[74,2],75],[[74,2,8],75],[26],[26],[26],[26],[26],[26],0,[[76,31],32],[[76,31],32],0,[[]],[[]],[[77,3],74],[[3,2,4],78],[[],26],[[],26],0,[[]],[[]],[[],39],[[],39],[[79,80,3],74],[[74,2,6],75],0,[[74,2,7,60,81],75],[43],[[74,2,7,60,81],75],0,0,0,0,[[74,2,6],75],[[74,[8,[2]],6],75],[[74,[8,[2]],6,6],75],[[],1],[[74,2,56,9],[[14,[75,76]]]],[[74,2,9],[[14,[75,76]]]],0,[[],14],[[],14],[[82,3],[[14,[74,68]]]],[[],14],[[],14],[[],47],[[],47],[[74,2,83,84],75],[[74,3]],[[74,2,85,84],75],0,0,[[74,2,7,60,81],75],[[74,2,7],75],0,[[74,2,7,86],75],[[]],[[]],[[74,87],74],0,0,0,0,0,0,0,[[[90,[[0,[88,89]]]],91],[[14,[[90,[[0,[88,89]]]],92]]]],[[[90,[[0,[88,89]]]],91],[[14,[[90,[[0,[88,89]]]],92]]]],[[[90,[[0,[88,89]]]],91,[40,[1]]],[[14,[[90,[[0,[88,89]]]],92]]]],[[]],[[]],[[]],[[]],[[[90,[[0,[88,89]]]],2,7,60,81],[[14,[[90,[[0,[88,89]]]],92]]]],[26],[26],[26],[26],[26],[26],[[92,31],32],[[92,31],32],[[]],[67,92],[71,92],[[]],[[77,93,[94,[[0,[88,89]]]]],[[90,[[0,[88,89]]]]]],[[[90,[[0,[88,89]]]]],[[14,[58,92]]]],[[],26],[[],26],[[]],[[]],[[],39],[[],39],0,[[79,80,95,[94,[[0,[88,89]]]],93],[[90,[[0,[88,89]]]]]],0,[43],[[[90,[[0,[88,89]]]],2,7],[[14,[[90,[[0,[88,89]]]],92]]]],0,[92,[[46,[45]]]],[[[90,[[0,[88,89]]]],2,7,86],[[14,[[90,[[0,[88,89]]]],92]]]],[[[90,[[0,[88,89]]]],96],[[90,[[0,[88,89]]]]]],[[],1],[[],14],[[],14],[[],14],[[],14],[[],47],[[],47],[[[90,[[0,[88,89]]]],2,97],[[90,[[0,[88,89]]]]]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[26],[26],[26],[26],[26],[26],0,[[98,75,2,99],[[14,[100]]]],[[98,75,99],[[14,[100]]]],[[100,31],32],[[100,31],32],[[98,56],1],[[98,75],1],[[98,1],1],[[98,51],1],[[]],[[]],[34,100],[[98,75,2,99],1],[[98,75,99],1],[[],26],[[],26],[[]],[[]],[[],39],[[],39],[22,[[14,[98,100]]]],[43],[98,[[14,[[8,[75]],100]]]],[98,[[14,[[8,[[8,[60]]]],100]]]],[100,[[46,[45]]]],[[],1],[[],14],[[],14],[[],14],[[],14],[[],47],[[],47],[[]],[[]],[[2,3,4],5],[[3,6],5],[[2,3,7],5],0,0,0,0,0,[[]],[[]],[[]],[[]],[101,26],[26],[26],[26],[26],0,[26],[26],[[13,31],32],[[13,31],32],[[]],[34,13],[[]],[101,[[8,[75]]]],[101,[[8,[[8,[60]]]]]],[[],26],[[],26],[[]],[[]],[[],39],[[],39],[22,101],[43],[13,[[46,[45]]]],[[],1],[[],14],[[],14],[[],14],[[],14],[[],47],[[],47],[[]],[[]],[[[11,[10]],[8,[12]]],[[14,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[102,[[0,[88,89]]]]],79],0,[95,3],[[]],[[]],[[]],[[]],[[]],[[]],[[[102,[[0,[103,88,89]]]]],[[102,[[0,[103,88,89]]]]]],[95,95],[[]],[[]],[[[102,[[0,[88,89]]]],[94,[[0,[88,89]]]]],[[102,[[0,[88,89]]]]]],[[[102,[[0,[88,89]]]],2]],[[104,96,57],3],[[[102,[[0,[88,89]]]]],3],[26],[26],[26],[26],[26],[26],[26],[26],[26],[[[102,[[0,[88,89]]]],2,75,99],[[14,[67]]]],[[[102,[[0,[88,89]]]],99],[[14,[67]]]],0,[[[102,[[0,[88,89]]]]],80],0,[[67,31],32],[[67,31],32],[105,67],[[]],[100,67],[106,67],[76,67],[71,67],[107,67],[77,[[102,[108]]]],[109,[[102,[108]]]],[[]],[[]],[3,95],[[77,95,[94,[[0,[88,89]]]]],[[102,[[0,[88,89]]]]]],[[77,[94,[[0,[88,89]]]]],[[102,[[0,[88,89]]]]]],[[109,[94,[[0,[88,89]]]]],[[102,[[0,[88,89]]]]]],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[],39],[[],39],[[],39],[67,110],[[79,80,95,[94,[[0,[88,89]]]]],[[102,[[0,[88,89]]]]]],[43],[[77,3,30],95],[[111,3,30],95],[[[102,[[0,[88,89]]]],[8,[75]],30],[[14,[112,67]]]],[[[102,[[0,[88,89]]]],[8,[75]],26,30],[[14,[112,67]]]],[[[102,[[0,[88,89]]]],2,75],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,6],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,6],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,6],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,6],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,6,6],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,7,113],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,7],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,2,9],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,56,9],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,9],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,56,9,87],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],96,2,2,9],[[14,[67]]]],[[[102,[[0,[88,89]]]],96,2,2,9],[[14,[67]]]],[[[102,[[0,[88,89]]]],96,2,2,9,91],[[14,[67]]]],[[[102,[[0,[88,89]]]],2,84,83],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,84,85],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,7,60,81],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,7,60,81,87],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,7],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],2,7,86],[[14,[58,67]]]],[[[102,[[0,[88,89]]]],3],[[102,[[0,[88,89]]]]]],0,[[96,3,3],3],[[96,3,3],3],[[77,3,30],95],[67,[[46,[45]]]],[[]],[[]],[[],1],[[],14],[82,[[14,[[102,[108]]]]]],[[],14],[[],14],[[82,3,[94,[[0,[88,89]]]]],[[14,[[102,[[0,[88,89]]]],68]]]],[[],14],[[],14],[[],14],[[],47],[[],47],[[],47],[[[102,[[0,[88,89]]]],58],[[14,[67]]]],[[]],[[]],[[]],[[[102,[[0,[88,89]]]]],[[14,[105]]]],[[[102,[[0,[88,89]]]],87],[[102,[[0,[88,89]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[108,114],[[[94,[[0,[88,89]]]]],60],[[[94,[[0,[88,89]]]]],30],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[115,[[0,[88,89]]]]],[[94,[[0,[88,89]]]]]],[116,116],[[[94,[[0,[103,88,89]]]]],[[94,[[0,[103,88,89]]]]]],[108,108],[[]],[[]],[[]],[[],[[94,[108]]]],[[],[[115,[[0,[88,89]]]]]],[[],[[94,[108]]]],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,[[[115,[[0,[88,89]]]],22],[[115,[[0,[88,89]]]]]],[22,[[94,[108]]]],[[[115,[[0,[88,89]]]]],[[115,[[0,[88,89]]]]]],[[[94,[[0,[88,89]]]]],30],0,[[116,31],32],[[[94,[[0,[88,89]]]]],[[115,[[0,[88,89]]]]]],[[]],[[]],[[[115,[[0,[88,89]]]]],[[94,[[0,[88,89]]]]]],[[]],[[]],[108,[[8,[1]]]],[[[115,[[0,[88,89]]]]],[[115,[[0,[88,89]]]]]],[[[94,[[0,[88,89]]]]],30],0,[[],[[94,[108]]]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[108,30],[108,96],[108,1],[108],[[],[[115,[[0,[88,89]]]]]],[[],[[94,[[0,[88,89]]]]]],[[[94,[[0,[88,89]]]]],30],[[],[[94,[108]]]],[[],[[94,[108]]]],[8,[[94,[[0,[88,89]]]]]],[[[115,[[0,[88,89]]]],60],[[115,[[0,[88,89]]]]]],[[[94,[[0,[88,89]]]]],[[46,[60]]]],0,0,[[],[[94,[108]]]],[[[115,[[0,[88,89]]]]],[[115,[[0,[88,89]]]]]],[[[94,[108]]],30],0,[[[115,[[0,[88,89]]]],8],[[115,[[0,[88,89]]]]]],[[[94,[[0,[88,89]]]]],8],0,[108,79],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],47],[[],47],[[],47],[[],47],0,[[]],[[]],[[]],[[]],0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[117,117],[[]],[26],[26],[26],[26],[26],[26],[26],[26],[26],[[71,31],32],[[71,31],32],[58,[[14,[55,71]]]],[[]],[[]],[107,71],[[]],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[],39],[[],39],[[],39],[55,[[14,[71]]]],[55,[[14,[71]]]],[[55,[40,[1]]],[[14,[71]]]],[71,110],[43],[71,[[46,[45]]]],[[]],[[],1],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],47],[[],47],[[],47],[[]],[[]],[[]],[[91,[8,[58]]],[[14,[71]]]],[[91,58],[[14,[71]]]],[[91,58],[[14,[71]]]],[[91,58,[40,[1]]],[[14,[71]]]],[91,[[14,[[53,[51,52]],71]]]],[[91,58,117],[[14,[55,71]]]],[118,[[14,[71]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[6,6],[[]],[26],[26],[26],[[6,31],32],[[]],[6,4],[6,119],[[],26],[6,120],0,[6,120],[[]],[[],39],[6,[[122,[121]]]],[2,6],[6,2],0,[[]],[[],14],[[],14],[[],47],[6,[[122,[123]]]],[[]],0,[[6,[8,[2]]]],[6],[[6,[8,[2]]]],[[2,9]],[[[8,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,124],[[2,[126,[125]],127,80],[[14,[76]]]],[[2,9],128],[2,56],[[2,29],1],[[],129],[[],130],[[],83],[[],85],[[],80],[[],75],[[],131],[[],128],[[]],[[]],[80,132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[128],0,[130],[83,133],0,[2,2],[129,129],[130,130],[83,83],[85,85],[5,5],[80,80],[75,75],[131,131],[128,128],[134,134],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[131,131],135],[[128,128],135],0,0,[2],[[2,26]],0,[130,136],0,[130],[2],[[],2],[[],131],0,[[2,3,4],78],[2,[[137,[41]]]],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[138,[[14,[130,139]]]],[138,[[14,[75,139]]]],[138,[[14,[128,139]]]],[138,[[14,[139]]]],[138,[[14,[83,139]]]],[138,[[14,[85,139]]]],[138,[[14,[139]]]],[138,[[14,[139]]]],0,[2,29],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[75,1],[[129,129],30],[[130,130],30],[[83,83],30],[[85,85],30],[[80,80],30],[[75,75],30],[[131,131],30],[[128,128],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[80,140],132],[[80,60,60],132],[[106,31],32],[[106,31],32],[[2,31],32],[[129,31],[[14,[141]]]],[[130,31],[[14,[141]]]],[[83,31],[[14,[141]]]],[[85,31],[[14,[141]]]],[[5,31],[[14,[141]]]],[[80,31],[[14,[141]]]],[[75,31],[[14,[141]]]],[[131,31],[[14,[141]]]],[[131,31],[[14,[141]]]],[[128,31],[[14,[141]]]],[130],[130,110],[[]],[34,106],[76,106],[66,106],[[]],[142,2],[[]],[96,129],[[]],[[]],[[]],[[]],[143,5],[[]],[[]],[144,75],[[]],[145,131],[[],128],[[]],[146,128],[[]],[[147,132],128],[[[42,[41]],132],128],[[16,132],128],[[],129],[148,128],[[36,[46,[129]],29],2],[57,131],[[149,132],128],[36,[[14,[131]]]],[150,128],[[[151,[18]]],128],[[],57],[[],57],[128,152],[85],[75,153],[128],[130,154],[130],0,[130],[75],[2,[[137,[41]]]],[[[11,[10]],[46,[129]],29],2],[129,129],[[129,96],129],0,[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[129,26],[[2,79,155],156],[[26,96],[[14,[129,63]]]],[[133,157],83],[[153,157],85],[[57,57,57],80],[[60,132],128],[29,2],[29,2],[124,2],[[124,29],2],[[],2],[29,2],[130],[[80,80],[[46,[135]]]],[[131,131],[[46,[135]]]],[[128,128],[[46,[135]]]],[[],[[158,[83]]]],[[],[[158,[85]]]],[83,[[159,[83]]]],[85,[[159,[85]]]],[[[126,[83]]],[[46,[140]]]],[[[126,[85]]],[[46,[140]]]],[[80,160]],0,[[80,161]],0,[85,153],0,[83,157],0,[43],[2,[[42,[41]]]],[2,1],[[2,162],163],[[2,[11,[10]]],163],[2,[[84,[164]]]],[[130,138],[[14,[165]]]],[83,[[166,[83]]]],[[83,138],[[14,[165]]]],[85,[[166,[85]]]],[[85,138],[[14,[165]]]],[[75,138],[[14,[165]]]],[[128,138],[[14,[165]]]],[[83,[167,[83]]],[[167,[83]]]],[[85,[167,[85]]],[[167,[85]]]],[130,26],[83,26],[85,26],[75,26],[128,26],[2,[[169,[168,41]]]],[2,1],[106,[[46,[45]]]],[2,[[14,[170,50]]]],[2,[[46,[147]]]],[129],[2,171],[128,148],[131,172],[[2,57],173],[[2,57],174],[131,57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[[],47],[129,96],[[2,129]],0,[128,132],0,[130],[85,157],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,175],[[],129],0,0,0,[[142,[126,[125]],127,80],[[14,[76]]]],[[142,9],128],[142,56],[[]],[[]],[142,142],[[]],[[142,26]],[26],[26],0,[26],[[142,31],32],[[]],[[36,[46,[129]],29],142],[[54,170,29],142],[29,142],[142,124],[[142,26]],[[],26],[142,129],[142],0,[[]],[[],39],[[142,79,155],156],[[142,162],163],[[142,129]],[142,54],0,[142,170],[142,147],[[]],[[],14],[[],14],[[],47],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[176,176],[177,177],[178,178],[[]],[[]],[[]],[178,[[8,[171]]]],[176,8],[177,8],0,0,[176,8],[177,8],0,0,0,[[178,179],[[14,[113,180]]]],[[],176],[[],177],[26],[26],[26],[26],[26],[26],[26],[26],[26],[178,181],[[176,31],32],[[177,31],32],[[178,31],32],[[]],[[]],[[]],0,0,[[],26],[[],26],[[],26],[[]],[[]],[[]],[[],39],[[],39],[[],39],0,[178,[[8,[182]]]],0,0,[[176,183,26],177],[[[8,[184]]],176],[[[8,[185]]],177],[[[8,[184]],[8,[185]]],178],[[186,[8,[124]],26],178],0,[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],47],[[],47],[[],47],[[]],[[]],[[]],[[176,187]],[[177,187]],[[178,187]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[184,184],[185,185],[[]],[[]],0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[[184,31],32],[[185,31],32],[[188,31],32],[[188,31],32],[[]],[[]],[[]],0,0,[[],26],[[],26],[[],26],[[]],[[]],[[]],[[],39],[[],39],[[],39],0,[185,[[14,[189,188]]]],0,[[171,190],184],[[171,189],185],[43],[[171,191],184],[[171,182],185],[[]],[[]],[[],1],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],47],[[],47],[[],47],[[]],[[]],[[]],[[1,187,36]],[[184,187]],[[185,187]],0,0,[192,56],[[192,26],56],[[]],[[]],[192,192],[[]],[[192,26],124],0,[26],[26],0,[26],[[192,31],32],[[]],[29,192],[[192,124],193],[192,[[137,[41]]]],[[],26],[[]],[[],39],[192,124],[192,193],[[192,79,155],156],0,[[192,26],193],0,[192,147],[[]],[[],14],[[],14],[[],47],[[]],0,[36],[30],[[],1],0,0,[194,56],[[194,26],56],[[]],[[]],[194,194],[[]],[26],[26],0,[26],[[194,31],32],[[]],[29,194],[194,195],[194,[[137,[41]]]],[[],26],[[]],[[],39],[194,195],[[194,79,155],156],0,[[194,162],163],[[194,26],195],0,[[]],[[],14],[[],14],[[],47],[[]]],"c":[],"p":[[3,"String"],[4,"Wallet"],[3,"BlockDate"],[6,"PoolId"],[4,"SignedCertificate"],[3,"StakePool"],[3,"VotePlan"],[3,"Vec"],[3,"Value"],[3,"Path"],[8,"AsRef"],[3,"PersistentFragmentLog"],[4,"Error"],[4,"Result"],[3,"WalletState"],[3,"Identifier"],[4,"Error"],[3,"Address"],[3,"AddressReadable"],[3,"ConfigManager"],[6,"Alias"],[3,"PathBuf"],[3,"Connection"],[3,"Config"],[3,"Wallets"],[15,"usize"],[8,"Deserializer"],[3,"SecretKey"],[4,"Discrimination"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Error"],[4,"Error"],[15,"str"],[3,"RestSettings"],[3,"JormungandrRest"],[3,"Request"],[8,"Into"],[3,"Ed25519"],[3,"PublicKey"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[4,"Option"],[3,"TypeId"],[3,"CliController"],[3,"AccountState"],[4,"Error"],[6,"FragmentId"],[3,"FragmentLog"],[3,"HashMap"],[3,"SigningKey"],[4,"FragmentStatus"],[3,"Address"],[15,"u64"],[3,"MemPoolCheck"],[6,"VotePlanId"],[15,"u8"],[3,"AccountVotes"],[3,"WalletController"],[4,"Error"],[4,"Error"],[4,"SecretKeyError"],[4,"Error"],[4,"FragmentSenderError"],[4,"RestError"],[4,"Error"],[4,"SigningKeyParseError"],[4,"FragmentVerifierError"],[3,"u5"],[3,"Iter"],[3,"FragmentBuilder"],[4,"Fragment"],[4,"FragmentBuilderError"],[3,"SettingsDto"],[4,"Initial"],[3,"Hash"],[3,"LinearFee"],[3,"Choice"],[3,"JormungandrProcess"],[3,"UpdateProposal"],[3,"SecretKey"],[3,"UpdateVote"],[4,"VoteTallyPayload"],[4,"WitnessMode"],[8,"SyncNode"],[8,"Send"],[3,"FragmentChainSender"],[3,"Duration"],[4,"FragmentChainSenderError"],[3,"RemoteJormungandr"],[3,"FragmentSenderSetup"],[4,"BlockDateGenerator"],[15,"u32"],[8,"Fn"],[3,"FragmentExporter"],[8,"FragmentNode"],[4,"FragmentExporterError"],[3,"PersistentLogViewer"],[3,"FragmentSender"],[8,"Clone"],[3,"SystemTime"],[4,"SyncNodeError"],[4,"WalletError"],[4,"FragmentNodeError"],[3,"DummySyncNode"],[3,"Block0Configuration"],[8,"Iterator"],[3,"BlockchainConfiguration"],[3,"FragmentsProcessingSummary"],[3,"DecryptedPrivateTally"],[6,"NodeAlias"],[3,"FragmentSenderSetupBuilder"],[4,"VerifyStrategy"],[4,"ExitStrategy"],[3,"Wait"],[3,"PoolRegistration"],[3,"StakePool"],[3,"SumEd25519_12"],[3,"KeyPair"],[3,"RistrettoGroup2HashDh"],[3,"Identifier"],[8,"Payload"],[3,"PayloadSlice"],[3,"InputOutputBuilder"],[3,"Input"],[3,"SpendingCounter"],[3,"Block"],[3,"Milli"],[3,"Value"],[3,"ConfigParams"],[3,"TransactionBindingAuthData"],[4,"Ordering"],[3,"Contents"],[3,"Identifier"],[3,"Codec"],[4,"ReadError"],[4,"CertificateSlice"],[3,"Error"],[3,"Wallet"],[3,"SignedCertificate"],[3,"FragmentDef"],[3,"ActiveSlotsCoeff"],[3,"TransactionInput"],[3,"UnspecifiedAccountIdentifier"],[4,"InputEnum"],[3,"Identifier"],[3,"UtxoPointer"],[3,"Entry"],[4,"InputType"],[3,"Hash"],[4,"Header"],[6,"TransactionSignDataHash"],[4,"Witness"],[3,"BftLeaderId"],[3,"PayloadAuthData"],[3,"PayloadData"],[3,"PerCertificateFee"],[3,"PerVoteCertificateFee"],[8,"Write"],[6,"Result"],[3,"Ed25519Extended"],[4,"WriteError"],[3,"ByteArray"],[3,"ByteBuilder"],[3,"TransactionBindingAuthDataPhantom"],[3,"Signature"],[3,"SpendingCounterIncreasing"],[3,"CommitteeIdDef"],[15,"f64"],[3,"InitialUTxO"],[3,"Destination"],[3,"WitnessData"],[3,"CommitteeCommunicationDataManager"],[3,"CommitteeMembershipDataManager"],[3,"CommitteeDataManager"],[3,"VotePlanStatus"],[3,"DecryptedPrivateTallyError"],[3,"ElectionPublicKey"],[3,"MemberPublicKey"],[6,"Crs"],[3,"CommitteeCommunicationData"],[3,"CommitteeMembershipData"],[3,"OsRng"],[3,"ChildPath"],[4,"Error"],[6,"OpeningVoteKey"],[3,"MemberCommunicationKey"],[3,"MemberCommunicationPublicKey"],[3,"Wallet"],[6,"SpendingKey"],[3,"Wallet"],[6,"SpendingKey"],[8,"TransactionHash"],[8,"Block0ConfigurationBuilderExtension"],[13,"Rolling"],[13,"FragmentNotInBlock"],[13,"TooManyAttemptsFailed"],[13,"FragmentNotInBlock"],[13,"FragmentNotRejected"],[13,"FragmentIsPendingForTooLong"],[13,"FragmentsArePendingForTooLong"],[13,"FragmentNotInMemPoolLogs"],[13,"UnexpectedRejectionReason"],[13,"AtLeastOneRejectedFragment"],[13,"TimeoutReachedWhileWaitingForAllFragmentsInBlock"],[13,"TransactionsWerePendingForTooLong"],[13,"CannotFindProposal"],[3,"FragmentVerifier"],[13,"InvalidBech32Key"],[8,"DiscriminationExtension"]]},\
"typed_bytes":{"doc":"","t":"IDDDSMLLLLLLLLLMALLLLLLLMLLLLLLLLLLLMMMMLLLLLLLLLLLDLLMLLLLMLLLLLLLLLLLLMLLLLLLLLLL","n":["ByteAccessor","ByteArray","ByteBuilder","ByteSlice","START_SIZE","array","as_byteslice","as_ref","as_ref","as_slice","as_slice","borrow","borrow","borrow_mut","borrow_mut","buffer","builder","clone","clone","clone_into","clone_into","cmp","eq","eq","expected","fmt","fmt","from","from","from","from_vec","hash","hash","into","into","partial_cmp","phantom","phantom","phantom","slice","sub","sub","sub_byteslice","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ByteBuilder","borrow","borrow_mut","buffer","bytes","clone","clone_into","default","expected","finalize","finalize_as_vec","fold","from","into","iter16","iter32","iter8","new","new_fixed","option","option_or_else","phantom","sub","to_owned","try_from","try_into","type_id","u128","u16","u32","u64","u8"],"q":[[0,"typed_bytes"],[51,"typed_bytes::builder"]],"d":["","A typed Array of bytes","A dynamically created buffer for T","A typed slice of bytes","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A dynamically created buffer for T","","","","Append bytes in the builder","","","","","Finalize the buffer and return a fixed ByteArray of T","Finalize the buffer and return a fixed ByteArray of T","fold over an iterator","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Write an iterator of maximum 2^16 - 1 items using the …","Write an iterator of maximum 2^32 - 1 items using the …","Write an iterator of maximum 255 items using the closure <code>f</code>.","Create an unconstrained Builder","Create a builder of fixed size","Call ‘f’ on bytebuilder and the value if the value is …","Run the first closure if the value is not present, or the …","","","","","","","Append an u128 in the builder","Append an u16 in the builder","Append an u32 in the builder","Append an u64 in the builder","Append an u8 in the builder"],"i":[0,0,0,0,17,1,1,2,1,2,1,2,1,2,1,21,0,2,1,2,1,2,2,1,21,2,1,2,1,1,1,2,1,2,1,2,21,2,1,2,2,1,2,2,1,2,1,2,1,2,1,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21],"f":[0,0,0,0,0,0,[1,2],[2],[1],[2],[1],[[]],[[]],[[]],[[]],0,0,[[[2,[3]]],[[2,[3]]]],[[[1,[[0,[3,4]]]]],[[1,[[0,[3,4]]]]]],[[]],[[]],[[[2,[5]],2],6],[[[2,[7]],2],8],[[[1,[[0,[7,4]]]],1],8],0,[[[2,[9]],10],11],[[[1,[[0,[9,4]]]],10],11],[[]],[[]],[[[13,[12]]],1],[[[13,[12]]],1],[[[2,[14]]]],[[[1,[[0,[14,4]]]]]],[[]],[[]],[[[2,[15]],2],[[16,[6]]]],0,0,0,0,[[[2,[17]]],2],[[[1,[17]]],2],[[2,18,18],2],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],0,[[]],[[]],0,[21,21],[[[21,[3]]],[[21,[3]]]],[[]],[[],[[21,[22]]]],0,[21,1],[21,[[13,[12]]]],[[21,23,24],21],[[]],[[]],[[21,25,24],21],[[21,25,24],21],[[21,25,24],21],[[],21],[26,21],[[21,16,27],21],[[21,16,27,27],21],0,[[21,28],21],[[]],[[],19],[[],19],[[],20],[[21,29],21],[[21,30],21],[[21,31],21],[[21,32],21],[[21,12],21]],"c":[],"p":[[3,"ByteArray"],[3,"ByteSlice"],[8,"Clone"],[8,"Sized"],[8,"Ord"],[4,"Ordering"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"u8"],[3,"Vec"],[8,"Hash"],[8,"PartialOrd"],[4,"Option"],[8,"ByteAccessor"],[15,"usize"],[4,"Result"],[3,"TypeId"],[3,"ByteBuilder"],[8,"Default"],[8,"Iterator"],[8,"FnMut"],[8,"IntoIterator"],[3,"NonZeroUsize"],[8,"FnOnce"],[8,"Fn"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]]},\
"valgrind":{"doc":"","t":"DNNNNDDENDNNNNNNNDIEDENNNNNNNNINNNNDDDENDEDDMMMMMMMLLLLLLLLLLLLLLLLMMMMMKMMMMMMMMMMAMLLLLLLLLLLMAMLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLLLLMMMLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLMMLLLLLLLLLLLLKKMMMLMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMMAMMLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMLLLLLLMMMMNENNNNENNCCNNNNNNNDDNCCCLLLFLLLLLLLLMLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMLLLAMFLLLLLLLLLLLLLLLLLLLMALLMALLLLLLMMMNNNNNNECAMMMNNDNNNNEDDLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMNEDNNNMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMCAIKRNNNNDEDNDMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDDDDIDDLLLLLLMMMLLLLLMMKMMMMMMMMMMLLLLLLLLLLLLLMLLLLLLLLMMMLLLLLLLLMMMMMMLLMMLLMMMMMMLLMMLLLLKLMMLLMMMMMMMMMMMMMMMMMLLLLMLMLLLMMLLLLLLLLLLMLLLNDENNNNENNDMLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLALLLLLLLLLLLLLLLLLLMLLLLENNDNLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLMLL","n":["AdvisorReview","CannotDeserialize","CannotDeserializeResponse","CannotDeserializeResponse","CertFileDoesNotExist","Certs","Challenge","Error","ErrorStatusCode","Fund","HashConversion","Http","Https","Io","IoError","KeyFileDoesNotExist","NodeConnection","Proposal","ProposalExtension","Protocol","ProxyClient","ProxyClientError","ProxyConnection","ProxyError","Read","Request","RequestError","Rest","ServerIsNotUp","ServerIsNotUp","SettingsExtensions","SettingsRead","StatusCode","UnsufficientHttpConfiguration","Url","ValgrindClient","ValgrindSettings","ValigrindStartupCommand","ValigrindStartupCommandError","VitStationConnection","VitStationRestClient","VitStationRestError","VitVersion","WalletNodeRestClient","address","address","api_token","assessor","auditability_note","auditability_rating_given","block0_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","cert_path","cert_path","certificate","chain_committee_end_time","chain_proposal_id","chain_proposal_id_as_str","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_plans","chain_vote_start_time","chain_voteplan_payload","challenge_id","challenge_type","challenge_url","challenges","client","client","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cors","data","debug","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","enable_debug","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extra","feasibility_note","feasibility_rating_given","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","fund_end_time","fund_goal","fund_id","fund_id","fund_name","fund_start_time","goals","groups","highlights","id","id","id","impact_alignment_note","impact_alignment_rating_given","init","init","init","init","init","init","internal_id","internal_id","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_wallet_proposal","into_wallet_settings","key_path","key_path","logger","new_use_https","next_fund_start_time","next_registration_snapshot_time","node_address","node_client","path_builder","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposer","proposers_rewards","proxy_client","ranking","registration_snapshot_time","rest_client","results_url","reviews_count","rewards_total","serialize","serialize","serialize","serialize","serialize","service_version","stage_dates","startup","survey_url","title","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","use_https","values","values","values","values","vit_address","vit_client","voting_power_threshold","vzip","vzip","vzip","vzip","vzip","vzip","source","text","source","text","CannotDeserialize","Error","HashConversion","HashParseError","IoError","NodeConnection","NodeRestError","NonSuccessErrorCode","PollError","ProxyClient","ProxyClientError","ProxyConnection","Read","ReadBytes","RequestError","Rest","SettingsRead","Url","ValgrindClient","ValgrindSettings","VitStationConnection","VitStationRestClient","VitStationRestError","WalletNodeRestClient","account_exists","account_state","active_vote_plan","add_api_segment_if_not_exists","are_fragments_in_blockchain","block0","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","certificate","challenges","clone","clone_into","cors","deref","deref","deref","deref_mut","deref_mut","deref_mut","disable_logs","drop","drop","drop","enable_debug","enable_logs","fmt","fmt","fmt","fmt","fragment_logs","fragments_statuses","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","funds","health","init","init","init","into","into","into","into_request","into_request","into_request","new","new_from_addresses","node","node_client","node_client","proposals","provide","provide","proxy","proxy_client","remove_api_segment_if_exists","review","send_fragment","send_fragments","send_fragments_at_once","settings","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","use_https","utils","vit","vit_client","vit_client","vit_station","vote_plan_history","vote_plan_statuses","votes_history","vzip","vzip","vzip","checks","response","status","CannotDeserialize","HashParseError","NonSuccessErrorCode","PollError","ReadBytes","RequestError","RestError","WalletNodeRestClient","rest","checks","response","status","CannotDeserialize","HashParseError","JormungandrRest","NonSuccessErrorCode","PollError","ReadBytes","RequestError","RestError","RestSettings","WalletNodeRestClient","account_exists","account_state","account_state","account_state_by_pk","account_state_by_pk","account_state_by_pk_raw","account_votes","account_votes","account_votes_all","account_votes_for_plan","account_votes_with_plan_id","address","block","block_as_bytes","borrow","borrow","borrow_mut","borrow_mut","certificate","clone","clone","clone_into","clone_into","cors","deref","deref","deref_mut","deref_mut","disable_logger","disable_logs","drop","drop","enable_debug","enable_logger","enable_logs","epoch_reward_history","fmt","fragment_logs","fragment_logs","fragment_statuses","fragments_statuses","from","from","init","init","inner","inner","into","into","into_request","into_request","leaders_log","network_stats","new","new","new_with_cert","new_with_custom_settings","p2p_available","p2p_non_public","p2p_quarantined","p2p_view","raw","remaining_rewards","rest_client","reward_history","send_fragment","send_fragment","send_fragment_batch","send_fragments","send_raw_fragment","send_raw_fragments","set_origin","settings","settings","shutdown","stake_distribution","stake_distribution_at","stake_pools","stats","stats","tip","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","updates","use_https","vote_plan_statuses","vote_plan_statuses","vzip","vzip","checks","response","status","CannotDeserializeResponse","Error","ProxyClient","Request","ServerIsNotUp","StatusCode","address","block0","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","debug","deref","deref","deref_mut","deref_mut","disable_debug","drop","drop","enable_debug","fmt","fmt","from","from","from","health","init","init","into","into","into_request","into_request","new","path","print_request_path","print_response","provide","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","source","text","SettingsExtensions","settings","SettingsExtensions","into_wallet_settings","API_TOKEN_HEADER","CannotDeserialize","CannotDeserializeResponse","ErrorStatusCode","RequestError","RestClientLogger","RestError","RestPathBuilder","ServerIsNotUp","VitStationRestClient","address","api_token","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge","challenge_raw","challenges","challenges","challenges_raw","client","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","disable_log","disable_logs","drop","drop","drop","drop","enable_logs","enabled","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","fund","fund","fund_raw","funds","funds","funds_raw","genesis","genesis","genesis_raw","get","get_and_verify_status_code","graphql","health","health","health_raw","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","is_enabled","log_request","log_response","log_text","logger","new","new","path","path_builder","path_builder","post","proposal","proposal","proposal_raw","proposals","proposals","proposals_raw","provide","review","review","review_raw","reviews","root","set_api_token","set_enabled","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify_status_code","version","version","version_raw","vzip","vzip","vzip","vzip","source","text","AdvisorReview","Challenge","Choice","Fund","Proposal","ProposalExtension","Value","VitVersion","add","arbitrary","arbitrary","arbitrary_with","as_byte","as_ref","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow_mut","borrow_mut","bytes","chain_committee_end_time","chain_proposal_id","chain_proposal_id_as_str","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_plans","chain_vote_start_time","chain_voteplan_payload","challenge_id","challenge_type","challenge_url","challenges","checked_add","checked_sub","clone","clone","clone_into","clone_into","cmp","cmp","default","deref","deref","deref_mut","deref_mut","description","deserialize","deserialize_from_slice","drop","drop","eq","eq","equivalent","equivalent","extra","feasibility_note","feasibility_rating_given","fmt","fmt","fmt","from","from","from","from","from","fund_end_time","fund_goal","fund_id","fund_id","fund_name","fund_start_time","get_hash","get_hash","goals","groups","hash","hash","highlights","id","id","id","impact_alignment_note","impact_alignment_rating_given","init","init","internal_id","internal_id","into","into","into_request","into_request","into_wallet_proposal","new","next_fund_start_time","next_registration_snapshot_time","partial_cmp","partial_cmp","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposer","proposers_rewards","ranking","registration_snapshot_time","results_url","reviews_count","rewards_total","saturating_add","scale","serialize","serialized_size","service_version","split_in","stage_dates","sub","sum","sum","survey_url","title","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","voting_power_threshold","vzip","vzip","zero","CertFileDoesNotExist","Certs","Error","Http","Https","Io","KeyFileDoesNotExist","Protocol","ProxyError","UnsufficientHttpConfiguration","ValigrindStartupCommand","address","augment_args","augment_args_for_update","block0_path","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","cert_path","cert_path","clone","clone","clone_into","clone_into","command","command_for_update","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","group_id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","key_path","key_path","node_address","provide","schema","serialize","serialize","server","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vit_address","vzip","vzip","vzip","vzip","Error","NodeRest","Proxy","ProxyServerStub","VitStation","address","address","base_address","block0","block0","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","http_node_address","http_vit_address","init","init","into","into","into_request","into_request","new","new_http","new_https","node_rest_address","node_rest_address","protocol","protocol","provide","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vit_address","vit_address","vzip","vzip"],"q":[[0,"valgrind"],[257,"valgrind::ProxyClientError"],[259,"valgrind::VitStationRestError"],[261,"valgrind::client"],[390,"valgrind::client::NodeRestError"],[393,"valgrind::client::node"],[402,"valgrind::client::node::RestError"],[405,"valgrind::client::node::rest"],[510,"valgrind::client::node::rest::RestError"],[513,"valgrind::client::proxy"],[564,"valgrind::client::proxy::Error"],[566,"valgrind::client::utils"],[568,"valgrind::client::utils::settings"],[570,"valgrind::client::vit_station"],[706,"valgrind::client::vit_station::RestError"],[708,"valgrind::data"],[851,"valgrind::startup"],[956,"valgrind::startup::server"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specialized rest api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","a choice","","","","Unspent transaction value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Divide a value by n equals parts, with a potential …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,34,38,34,100,0,0,0,34,0,21,101,101,100,21,100,21,0,0,0,0,0,21,100,21,38,34,21,38,34,0,21,38,100,21,0,0,0,0,21,0,0,0,0,80,98,83,2,2,2,98,1,2,3,4,6,10,1,2,3,4,6,10,1,2,3,4,98,102,6,4,4,108,4,4,4,3,4,4,4,1,1,3,0,83,1,2,3,4,6,1,2,3,4,6,6,0,80,6,1,2,3,4,6,10,1,2,3,4,6,10,1,1,2,3,4,10,1,2,3,4,6,10,6,1,2,3,4,1,2,3,4,4,2,2,1,2,3,4,6,1,2,3,4,6,10,3,3,1,4,3,3,3,3,1,1,2,3,2,2,1,2,3,4,6,10,1,4,1,2,3,4,6,10,1,2,3,4,6,10,108,109,98,102,83,6,3,3,98,19,83,4,4,4,2,4,4,4,4,4,4,4,1,19,2,3,45,3,4,1,1,2,3,4,10,10,3,0,3,1,1,2,3,4,6,1,2,3,4,6,10,1,2,3,4,6,10,1,2,3,4,6,10,6,1,2,3,4,98,19,3,1,2,3,4,6,10,110,110,111,111,29,0,21,29,21,21,0,29,29,0,0,21,21,29,29,21,21,21,0,0,21,0,0,0,19,19,19,0,19,19,19,21,29,19,21,29,6,19,19,19,6,19,21,29,19,21,29,19,19,21,29,6,19,21,21,29,29,19,19,19,21,21,21,21,21,21,21,21,21,21,29,29,29,29,29,29,19,19,19,21,29,19,21,29,19,21,29,19,19,0,19,19,19,21,29,0,19,0,19,19,19,19,19,21,29,19,21,29,19,21,29,19,21,29,19,21,29,6,0,19,19,19,0,19,19,19,19,21,29,112,112,112,29,29,29,29,29,29,0,0,0,112,112,112,29,29,0,29,29,29,29,0,0,0,45,45,56,45,56,56,45,56,56,45,56,56,56,56,45,56,45,56,6,45,56,45,56,6,45,56,45,56,56,45,45,56,6,56,45,56,56,45,56,45,56,45,56,45,56,56,56,45,56,45,56,56,56,45,56,56,56,56,56,56,56,56,56,45,56,45,56,56,45,56,56,56,45,56,56,56,56,56,45,56,56,45,56,45,56,45,56,45,56,56,6,45,56,45,56,112,112,112,38,0,0,38,38,38,80,80,80,38,80,38,80,80,80,80,38,80,38,80,80,38,80,38,38,80,38,38,80,80,38,80,38,80,38,80,80,80,80,38,38,80,38,80,38,80,38,80,38,80,38,110,110,0,0,0,109,0,34,34,34,34,0,0,0,34,0,82,83,84,83,82,34,84,83,82,34,82,83,83,82,83,83,84,83,82,84,83,82,84,83,82,34,84,83,82,34,83,83,84,83,82,34,83,84,84,83,82,34,34,84,83,82,34,34,34,83,82,83,83,82,83,83,82,83,83,83,82,83,82,83,84,83,82,34,84,83,82,34,84,83,82,34,84,84,84,84,83,83,82,82,83,83,83,83,82,83,83,82,83,34,83,82,83,82,82,83,84,34,84,83,82,34,84,83,82,34,84,83,82,34,84,83,82,34,83,83,82,83,84,83,82,34,111,111,0,0,0,0,0,0,0,0,86,86,87,86,87,86,2,2,2,86,87,86,87,86,4,4,108,4,4,4,3,4,4,4,1,1,3,86,86,86,87,86,87,86,87,86,86,87,86,87,1,86,86,86,87,86,87,86,87,4,2,2,86,86,87,86,86,86,86,87,3,3,1,4,3,3,86,87,3,3,86,87,1,1,2,3,2,2,86,87,1,4,86,87,86,87,108,87,3,3,86,87,4,4,4,2,4,4,4,4,4,4,4,1,2,3,3,4,1,86,86,86,86,10,86,3,86,86,86,3,1,86,87,86,86,86,87,86,87,86,87,3,86,87,86,100,0,0,101,101,100,100,0,100,100,0,98,98,98,98,100,98,101,102,100,98,101,102,98,98,102,101,102,101,102,98,98,101,100,98,101,102,100,98,101,102,101,102,100,98,101,102,100,100,98,101,102,100,100,100,98,101,101,102,98,98,98,100,98,101,102,100,98,101,102,100,98,101,102,98,102,98,100,101,101,102,0,100,101,102,100,100,98,101,102,100,98,101,102,100,98,101,102,98,98,98,100,98,101,102,0,103,103,0,103,99,99,99,99,99,99,103,99,103,99,103,99,103,99,103,103,103,99,103,99,99,99,103,99,103,99,103,99,99,99,99,99,99,99,103,103,99,103,99,103,99,103,99,99,99,103],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],0,0,0,0,0,[[],5],0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[2,2],[3,3],[4,4],[6,6],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],0,[8,[[9,[1]]]],[8,[[9,[2]]]],[8,[[9,[3]]]],[8,[[9,[4]]]],[8,[[9,[10]]]],[7],[7],[7],[7],[7],[7],0,[[1,1],11],[[2,2],11],[[3,3],11],[[4,4],11],[[],11],[[],11],[[],11],[[],11],0,0,0,[[1,12],[[9,[13]]]],[[2,12],[[9,[13]]]],[[3,12],[[9,[13]]]],[[4,12],[[9,[13]]]],[[6,12],[[9,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],15],[[],16],0,0,0,[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,17],9],[[2,17],9],[[3,17],9],[[4,17],9],[[10,17],9],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,[1],[2],[3],[4],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,20],[[9,[11,21]]]],[[19,20],[[9,[22,21]]]],[19,[[9,[[24,[23]],21]]]],[25],[[19,[24,[26]]],[[9,[11,21]]]],[19,[[9,[[24,[27]],21]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[19,[[9,[[24,[1]],21]]]],[19,19],[[]],0,[7],[7],[7],[7],[7],[7],[19],[7],[7],[7],0,[19],[[21,12],28],[[21,12],28],[[29,12],[[9,[13]]]],[[29,12],[[9,[13]]]],[19,[[9,[[31,[26,30]],21]]]],[[19,[24,[5]]],[[9,[[31,[26,32]],21]]]],[[]],[33,21],[34,21],[[[36,[35]]],21],[37,21],[38,21],[39,21],[[]],[40,21],[41,21],[29,21],[42,29],[43,29],[44,29],[39,29],[33,29],[[]],[19,[[9,[3,21]]]],[19,[[9,[38]]]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[5,6],[[9,[19,21]]]],[[25,25,25,6],19],0,[19,45],0,[[19,46],[[9,[[24,[47]],21]]]],[48],[48],0,0,[25],[[19,46],[[9,[[31,[5,[24,[2]]]],21]]]],[[19,[24,[27]]],[[9,[26,21]]]],[[19,[24,[[24,[27]]]]],[[9,[[24,[26]],21]]]],[[19,[24,[[24,[27]]]],11],[[9,[[24,[26]],21]]]],[19,[[9,[49,21]]]],[21,[[51,[50]]]],[29,[[51,[50]]]],[[]],[[],5],[[],5],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],0,0,[19,52],[19,52],0,0,[[19,53,54],[[9,[[51,[[24,[27]]]],21]]]],[19,[[9,[[24,[23]],21]]]],[[19,53],[[9,[[51,[[24,[55]]]],21]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,20],[[9,[11,29]]]],[[45,20],[[9,[22,29]]]],[[56,57],[[9,[22,29]]]],[[45,5],[[9,[22,29]]]],[[56,46],[[9,[22,29]]]],[[56,46],[[9,[5,29]]]],[[45,53],[[9,[[51,[[24,[55]]]],29]]]],[[56,53],[[9,[[51,[[24,[55,58]]]],29]]]],[56,[[9,[[31,[5,[24,[55,58]],59]],29]]]],[[45,54,53],[[9,[[51,[[24,[27]]]],29]]]],[[56,60,53],[[9,[[51,[[24,[27,58]]]],29]]]],[56,5],[[56,61],[[9,[62,29]]]],[[56,61],[[9,[[24,[27,58]],29]]]],[[]],[[]],[[]],[[]],0,[45,45],[56,56],[[]],[[]],0,[7],[7],[7],[7],[56],[45],[7],[7],0,[56],[45],[[56,63],[[9,[64,29]]]],[[56,12],[[9,[13]]]],[45,[[9,[[31,[26,30]],29]]]],[56,[[9,[[31,[61,30,59]],29]]]],[[45,[24,[5]]],[[9,[[31,[26,32]],29]]]],[[56,[24,[5,58]]],[[9,[[31,[5,32,59]],29]]]],[[]],[[]],[[],7],[[],7],[56,65],0,[[]],[[]],[[],14],[[],14],[56,[[9,[[24,[66,58]],29]]]],[56,[[9,[[24,[67,58]],29]]]],[[25,6],45],[5,56],[[5,[69,[68]]],56],[[5,6],56],[56,[[9,[[24,[70,58]],29]]]],[56,[[9,[[24,[70,58]],29]]]],[56,[[9,[[24,[70,58]],29]]]],[56,[[9,[[24,[5,58]],29]]]],[56,71],[56,[[9,[72,29]]]],0,[[56,63],[[9,[[24,[64,58]],29]]]],[[45,[24,[27]]],[[9,[29]]]],[[56,73],[[9,[74,29]]]],[[56,[24,[73,58]],11],[[9,[75,29]]]],[[45,[24,[[24,[27]]]],11],[[9,[29]]]],[[56,[24,[27,58]]],[[9,[29]]]],[[56,[24,[[24,[27,58]],58]]],[[9,[29]]]],[[56,[76,[5]]]],[45,[[9,[49,29]]]],[56,[[9,[49,29]]]],[56,[[9,[5,29]]]],[56,[[9,[77,29]]]],[[56,63],[[9,[77,29]]]],[56,[[9,[[24,[5,58]],29]]]],[45,[[9,[78,29]]]],[56,[[9,[78,29]]]],[56,[[9,[60,29]]]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[56,[[9,[[31,[60,79,59]],29]]]],0,[45,[[9,[[24,[23]],29]]]],[56,[[9,[[24,[23,58]],29]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[80,[[9,[[24,[27]],38]]]],[[]],[[]],[[]],[[]],[80,80],[[]],0,[7],[7],[7],[7],[80],[7],[7],[80],[[38,12],28],[[38,12],28],[[]],[[]],[42,38],[80,[[9,[38]]]],[[],7],[[],7],[[]],[[]],[[],14],[[],14],[5,80],[[80,46],5],[[80,46]],[[80,81]],[48],[38,[[51,[50]]]],[[]],[[],5],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[]],[[]],0,0,0,0,0,[[],16],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[82,46],5],[[83,46],[[9,[81,34]]]],[83,[[9,[[24,[1]],34]]]],[82,5],[83,[[9,[81,34]]]],0,[84,84],[83,83],[82,82],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[83],[83],[7],[7],[7],[7],[83],0,[[84,12],28],[[83,12],28],[[82,12],28],[[34,12],28],[[34,12],28],[[]],[[]],[[]],[42,34],[43,34],[[]],[[83,46],[[9,[3,34]]]],[[82,46],5],[[83,46],[[9,[81,34]]]],[83,[[9,[3,34]]]],[82,5],[83,[[9,[81,34]]]],[83,[[9,[[24,[27]],34]]]],[82,5],[83,[[9,[81,34]]]],[[83,46],[[9,[81,42]]]],[[83,46],[[9,[81,34]]]],[82,5],[83,[[9,[34]]]],[82,5],[83,[[9,[81,34]]]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[84,11],[[84,46]],[[84,81]],[[84,46]],0,[5,83],[[[76,[5]]],82],[[82,46],5],[83,82],0,[[83,46,5],[[9,[85,34]]]],[[83,46],[[9,[4,34]]]],[[82,46],5],[[83,46],[[9,[81,34]]]],[83,[[9,[[24,[4]],34]]]],[82,5],[83,[[9,[81,34]]]],[48],[[83,46],[[9,[[31,[5,[24,[2]]]],34]]]],[[82,46],5],[[83,46],[[9,[81,34]]]],[82,5],0,[[83,5]],[[84,11]],[34,[[51,[50]]]],[[]],[[]],[[]],[[],5],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[83,81],[[9,[34]]]],[83,[[9,[10,34]]]],[82,5],[83,[[9,[81,34]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[86,86]],[[],86],[[],87],[[]],[87,27],[86,88],0,0,0,[[]],[[]],[[]],[[]],[86],0,0,[[],5],0,0,0,0,0,0,0,0,0,0,[[86,86],[[9,[86,89]]]],[[86,86],[[9,[86,89]]]],[86,86],[87,87],[[]],[[]],[[86,86],90],[[87,87],90],[[],86],[7],[7],[7],[7],0,[91,[[9,[86,39]]]],[91,[[9,[39]]]],[7],[7],[[86,86],11],[[87,87],11],[[],11],[[],11],0,0,0,[[86,12],[[9,[13]]]],[[86,12],[[9,[13]]]],[[87,12],[[9,[13]]]],[[]],[92,86],[72,86],[93,86],[[]],0,0,0,0,0,0,[[],88],[[],88],0,0,[86],[87],0,0,0,0,0,0,[[],7],[[],7],0,0,[[]],[[]],[[],14],[[],14],[[],15],[27,87],0,0,[[86,86],[[51,[90]]]],[[87,87],[[51,[90]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[86,86],86],[[86,63],[[9,[86,89]]]],[[86,91],[[9,[94]]]],[86,7],0,[[86,63],95],0,[[86,86]],[96,[[9,[86,89]]]],[96,86],0,0,[[]],[[]],[[],5],[[],9],[[],[[9,[86,89]]]],[[],9],[[],9],[[],9],[[],18],[[],18],0,[[]],[[]],[[],86],0,0,0,0,0,0,0,0,0,0,0,0,[97,97],[97,97],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,[[9,[99,100]]]],0,0,[101,101],[102,102],[[]],[[]],[[],97],[[],97],[[],101],[7],[7],[7],[7],[7],[7],[7],[7],[8,[[9,[101]]]],[8,[[9,[102]]]],[7],[7],[7],[7],[[100,12],28],[[100,12],28],[[98,12],28],[[101,12],28],[[102,12],28],[103,100],[41,100],[[]],[[]],[[]],[102,101],[[]],[104,[[9,[98,105]]]],[104,[[9,[98,105]]]],[[],[[51,[106]]]],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[],14],[[],14],[[],14],[[],14],0,0,0,[48],[101,5],[[101,17],9],[[102,17],9],0,[100,[[51,[50]]]],[[]],[[]],[[],5],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[[],18],[[],18],[[98,104],[[9,[105]]]],[[98,104],[[9,[105]]]],0,[[]],[[]],[[]],[[]],0,0,0,0,0,[99,5],0,[99,107],[99,[[24,[27]]]],0,[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[103,12],28],[[103,12],28],[[]],[[]],[99,5],[99,5],[[],7],[[],7],[[]],[[]],[[],14],[[],14],[[101,5,5,5,[24,[27]]],99],[[5,5,5,[24,[27]]],99],[[102,5,5,5,[24,[27]]],99],[99,5],0,[99,101],0,[48],[[],5],[[],9],[[],9],[[],9],[[],9],[[],18],[[],18],[99,5],0,[[]],[[]]],"c":[],"p":[[3,"Challenge"],[3,"AdvisorReview"],[3,"Fund"],[3,"Proposal"],[3,"String"],[3,"ValgrindSettings"],[15,"usize"],[8,"Deserializer"],[4,"Result"],[3,"VitVersion"],[15,"bool"],[3,"Formatter"],[3,"Error"],[3,"Request"],[3,"Proposal"],[3,"Settings"],[8,"Serializer"],[3,"TypeId"],[3,"ValgrindClient"],[3,"AccountId"],[4,"Error"],[3,"AccountState"],[3,"VotePlanStatus"],[3,"Vec"],[3,"Url"],[6,"FragmentId"],[15,"u8"],[6,"Result"],[4,"NodeRestError"],[3,"FragmentLog"],[3,"HashMap"],[4,"FragmentStatus"],[4,"Error"],[4,"RestError"],[4,"Error"],[3,"Box"],[4,"ParseError"],[4,"Error"],[4,"ReadError"],[4,"Error"],[3,"Error"],[3,"Error"],[3,"Error"],[4,"Error"],[3,"WalletNodeRestClient"],[15,"str"],[3,"FullProposalInfo"],[3,"Demand"],[3,"SettingsDto"],[8,"Error"],[4,"Option"],[3,"RestClient"],[3,"Address"],[6,"VotePlanId"],[3,"AccountVotes"],[3,"JormungandrRest"],[3,"Identifier"],[3,"Global"],[3,"RandomState"],[3,"Hash"],[3,"Hash"],[3,"Block"],[15,"u32"],[3,"EpochRewardsInfo"],[3,"BackwardCompatibleRest"],[3,"LeadershipLog"],[3,"PeerStats"],[3,"Path"],[8,"AsRef"],[3,"PeerRecord"],[3,"RawRest"],[3,"Value"],[4,"Fragment"],[3,"MemPoolCheck"],[3,"FragmentsProcessingSummary"],[8,"Into"],[3,"StakeDistributionDto"],[3,"NodeStatsDto"],[3,"UpdateProposalStateDef"],[3,"ProxyClient"],[3,"Response"],[3,"RestPathBuilder"],[3,"VitStationRestClient"],[3,"RestClientLogger"],[4,"Value"],[3,"Value"],[3,"Choice"],[15,"u64"],[4,"ValueError"],[4,"Ordering"],[3,"Codec"],[3,"NonZeroValue"],[3,"AverageValue"],[4,"WriteError"],[3,"SplitValueIn"],[8,"Iterator"],[3,"Command"],[3,"ValigrindStartupCommand"],[3,"ProxyServerStub"],[4,"Error"],[4,"Protocol"],[3,"Certs"],[4,"Error"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[4,"SocketAddr"],[8,"ProposalExtension"],[8,"SettingsExtensions"],[13,"CannotDeserializeResponse"],[13,"CannotDeserializeResponse"],[13,"NonSuccessErrorCode"]]},\
"vcli":{"doc":"","t":"F","n":["main"],"q":[[0,"vcli"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[6,"Result"]]},\
"vit_servicing_station_cli":{"doc":"","t":"AAAAAFANENNNNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNNENNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAADLLLLFLLLLLLLLLLLENEDNNNDNLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMMLMLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLMMLLLLDDDDDDMMMMLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLFFLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLMMMLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLFFENNENLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMQIQK","n":["api_token","app","csv","db_utils","init_db","main","task","Add","ApiTokenCmd","Base64Decode","Db","DbConnection","DbPool","Error","Generate","Io","add_tokens","add_tokens_from_stream","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","exec","fmt","fmt","fmt","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","generate","handle_api_token_add","handle_api_token_add_with_db_backup","handle_generate","has_subcommand","init","init","into","into","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","db_url","n","size","tokens","source","token","ApiToken","ApiTokenCmd","CliApp","CsvData","CsvData","Db","Db","Error","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","into","into","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","deser","loaders","models","Rfc3339Deserializer","borrow","borrow_mut","deref","deref_mut","deserialize_unix_timestamp_from_rfc3339","drop","expecting","fmt","from","init","into","try_from","try_into","type_id","visit_str","vzip","CsvDataCmd","Diesel","Error","ImportSettings","InvalidFundData","Io","Load","LoadCmd","Serialization","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenges","command","command","command_for_update","command_for_update","db_url","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","eq","eq","equivalent","equivalent","exec","exec","fmt","fmt","fmt","fmt","force_fund_id","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","funds","goals","group_id","groups","handle_load","handle_votes_load","has_subcommand","init","init","init","init","into","into","into","into","list_of_csv_paths","load_from_csv","proposals","provide","reviews","serialize","settings","source","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","voteplans","votes","vzip","vzip","vzip","vzip","AdvisorReview","Challenge","Fund","FundStageDates","Proposal","Voteplan","assessment_qa_start","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category_description","category_id","category_name","chain_committee_end_time","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_encryption_key","chain_vote_end_time","chain_vote_end_time","chain_vote_options","chain_vote_plans","chain_vote_start_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_id","chain_voteplan_payload","chain_voteplan_payload","challenge_id","challenge_type","challenge_url","challenges","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default_challenge_id","default_fund_id","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","excellent","extra","feasibility_note","feasibility_rating_given","filtered_out","finalize_proposals_start","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","fund_end_time","fund_goal","fund_id","fund_id","fund_id","fund_name","fund_start_time","goals","good","groups","highlights","id","id","id","id","impact_alignment_note","impact_alignment_rating_given","init","init","init","init","init","init","insight_sharing_start","internal_id","internal_id","into","into","into","into","into","into","into_db_challenge_values","into_db_proposal_and_challenge_info","next_fund_start_time","next_registration_snapshot_time","note","proposal_assessment_start","proposal_brief","proposal_files_url","proposal_funds","proposal_goal","proposal_id","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_public_key","proposal_solution","proposal_submission_start","proposal_summary","proposal_title","proposal_url","proposer_email","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","rating_given","refine_proposals_start","registration_snapshot_time","results_url","rewards_total","snapshot_start","stage_dates","survey_url","tag","tallying_end","title","to_owned","to_owned","to_owned","to_owned","to_owned","token_identifier","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","voting_end","voting_power_threshold","voting_start","vzip","vzip","vzip","vzip","vzip","vzip","backup_db_file","restore_db_file","Db","DbConnection","DbPool","Error","Init","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","exec","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","init_with_migrations","into","into","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","db_url","Error","ExecTask","ResultValue","exec"],"q":[[0,"vit_servicing_station_cli"],[7,"vit_servicing_station_cli::api_token"],[68,"vit_servicing_station_cli::api_token::ApiTokenCmd"],[72,"vit_servicing_station_cli::api_token::Error"],[74,"vit_servicing_station_cli::app"],[124,"vit_servicing_station_cli::csv"],[127,"vit_servicing_station_cli::csv::deser"],[144,"vit_servicing_station_cli::csv::loaders"],[253,"vit_servicing_station_cli::csv::models"],[471,"vit_servicing_station_cli::db_utils"],[473,"vit_servicing_station_cli::init_db"],[523,"vit_servicing_station_cli::init_db::Db"],[524,"vit_servicing_station_cli::task"]],"d":["","","","","","","","Add provided tokens to database. If –tokens is not …","","","","","","","Generate API tokens, URL safe base64 encoded.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","URL of the vit-servicing-station database to interact with","Number of tokens to generate","Size of the token","List of tokens in URL safe base64. If –tokens is not …","","","API token related operations","","","","CSV data loaders","","DB related operations","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Loads data into db","","","","","","","","","","","","","","","Path to the csv containing challenges information","","","","","URL of the vit-servicing-station database to interact with","","","","","","","","","","","","","","","","","","","","","","","","","override fund id. This setting is extremely useful in …","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Path to the csv containing funds information At the …","Path to the csv containing goals information","","Path to the csv containing goals information","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Path to the csv containing proposals information","","Path to the csv containing advisor reviews information","","Additional import settings","","","","","","","","","","","","","","","","","","","Path to the csv containing voteplans information","Path to the folder containing csv with votes information","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize a DB with the proper migrations, DB file is …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","URL of the vit-servicing-station database to interact with","","","",""],"i":[0,0,0,0,0,0,0,6,0,2,2,2,2,0,6,2,6,6,6,6,2,6,2,6,6,6,2,6,2,6,2,6,6,6,6,2,2,6,2,2,2,2,2,6,6,6,6,6,6,6,6,2,6,2,6,2,2,2,2,6,2,6,2,6,6,6,2,6,59,60,60,59,61,61,23,24,0,24,23,24,23,0,23,23,24,23,24,23,23,23,24,23,24,23,24,23,23,24,24,24,24,24,24,23,23,23,23,24,23,24,23,24,24,24,24,23,24,23,24,23,23,23,24,23,0,0,0,0,29,29,29,29,0,29,29,29,29,29,29,29,29,29,29,29,0,25,0,0,25,25,35,0,25,34,34,35,35,25,34,35,33,25,34,35,33,34,34,35,34,35,34,33,25,34,35,33,25,34,35,33,33,25,34,35,33,34,35,34,35,34,35,25,25,34,35,33,25,25,25,25,34,35,33,34,35,34,35,34,34,34,34,34,34,35,25,34,35,33,25,34,35,33,34,34,34,25,34,33,34,25,25,25,34,35,33,25,34,35,33,25,34,35,33,34,35,34,35,34,34,25,34,35,33,0,0,0,0,0,0,45,50,50,50,44,45,46,47,48,50,44,45,46,47,48,50,48,48,48,46,48,48,48,46,48,46,48,48,44,46,48,46,48,46,48,48,47,47,44,44,45,46,47,48,44,45,46,47,48,44,45,0,0,44,45,46,47,48,50,44,45,46,47,48,50,47,44,45,46,47,48,50,44,45,46,47,48,50,44,45,46,47,48,44,45,46,47,48,50,48,50,50,50,45,44,45,46,47,48,44,45,46,47,48,50,44,44,46,47,48,44,44,44,50,44,47,44,46,47,50,50,50,44,45,46,47,48,50,45,47,48,44,45,46,47,48,50,47,48,44,44,50,45,48,48,48,48,48,50,48,48,48,48,48,45,48,48,48,48,48,48,48,47,50,45,44,44,47,45,44,44,50,45,47,44,45,46,47,48,46,44,45,46,47,48,50,44,44,45,45,46,46,47,47,48,50,50,44,45,46,47,48,50,45,44,45,44,45,46,47,48,50,0,0,0,26,26,0,58,58,58,26,58,26,58,58,58,26,58,26,58,26,58,58,58,58,26,26,58,26,26,26,58,58,58,58,26,58,58,26,58,26,26,26,26,58,26,58,26,58,58,58,26,58,62,63,0,63,63],"f":[0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[1,[[3,[2]]]],[4,4],[4,4],[[]],[[]],[[]],[[]],[[],4],[[],4],[5],[5],[5],[5],[5],[5],[[6,6],7],[[],7],[6,[[3,[2]]]],[[2,8],9],[[2,8],9],[[6,8],9],[10,2],[[]],[11,2],[12,2],[13,2],[[]],[14,[[3,[6,15]]]],[14,[[3,[6,15]]]],[[5,5],[[17,[16]]]],[[18,19],[[3,[2]]]],[[18,19],[[3,[2]]]],[[5,5]],[19,7],[[],5],[[],5],[[]],[[]],[20],[2,[[18,[21]]]],[[],16],[[],3],[[],3],[[],3],[[],3],[[],22],[[],22],[[6,14],[[3,[15]]]],[[6,14],[[3,[15]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[4,4],[4,4],[[]],[[]],[[]],[[]],[[],4],[[],4],[5],[5],[5],[5],[5],[5],[23,[[3,[24]]]],[[24,8],9],[[24,8],9],[2,24],[[]],[25,24],[26,24],[[]],[14,[[3,[23,15]]]],[14,[[3,[23,15]]]],[19,7],[[],5],[[],5],[[]],[[]],[20],[24,[[18,[21]]]],[[],16],[[],3],[[],3],[[],3],[[],3],[[],22],[[],22],[[23,14],[[3,[15]]]],[[23,14],[[3,[15]]]],[[]],[[]],0,0,0,0,[[]],[[]],[5],[5],[27,[[3,[28]]]],[5],[[29,8],9],[8,[[3,[30]]]],[[]],[[],5],[[]],[[],3],[[],3],[[],22],[[29,19],[[3,[31,32]]]],[[]],0,0,0,0,0,0,0,0,0,[4,4],[4,4],[4,4],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],4],[[],4],[[],4],[[],4],0,[[],33],[5],[5],[5],[5],[5],[5],[5],[5],[27,[[3,[33]]]],[5],[5],[5],[5],[[34,34],7],[[35,35],7],[[],7],[[],7],[34,[[3,[25]]]],[35,[[3,[25]]]],[[25,8],9],[[25,8],9],[[34,8],9],[[35,8],9],0,[[]],[13,25],[36,25],[10,25],[[]],[[]],[[]],[14,[[3,[34,15]]]],[14,[[3,[35,15]]]],[14,[[3,[34,15]]]],[14,[[3,[35,15]]]],0,0,[[],[[18,[37]]]],0,[34,[[3,[25]]]],[[19,38],[[3,[25]]]],[19,7],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[[39,[38]]],[[41,[[17,[40]]]]]],[38,[[41,[[17,[42]]]]]],0,[20],0,[[33,43],3],0,[25,[[18,[21]]]],[[],16],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],22],[[],22],[[],22],[[],22],[[34,14],[[3,[15]]]],[[35,14],[[3,[15]]]],[[34,14],[[3,[15]]]],[[35,14],[[3,[15]]]],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[44,44],[45,45],[46,46],[47,47],[48,48],[[]],[[]],[[]],[[]],[[]],[[],44],[[],45],[[],49],[[],49],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,[27,[[3,[44]]]],[27,[[3,[45]]]],[27,[[3,[46]]]],[27,[[3,[47]]]],[27,[[3,[48]]]],[27,[[3,[50]]]],[5],[5],[5],[5],[5],[5],[[44,44],7],[[45,45],7],[[46,46],7],[[47,47],7],[[48,48],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,[[44,8],9],[[45,8],9],[[46,8],9],[[47,8],9],[[48,8],9],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[47],[[48,51],[[3,[10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[44,[[3,[52]]]],[[],3],[[],3],[45,[[3,[53]]]],[[],3],[46,[[3,[54]]]],[47,[[3,[55]]]],[[],3],[[],3],[50,[[3,[56]]]],[[],3],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[19,[[41,[57]]]],[[57,19],41],0,0,0,0,0,[4,4],[4,4],[[]],[[]],[[]],[[]],[[],4],[[],4],[5],[5],[5],[5],[5],[5],[[58,58],7],[[],7],[58,[[3,[26]]]],[[26,8],9],[[26,8],9],[[58,8],9],[11,26],[[]],[12,26],[[]],[14,[[3,[58,15]]]],[14,[[3,[58,15]]]],[19,7],[[],5],[[],5],[19,[[3,[26]]]],[[]],[[]],[20],[26,[[18,[21]]]],[[],16],[[],3],[[],3],[[],3],[[],3],[[],22],[[],22],[[58,14],[[3,[15]]]],[[58,14],[[3,[15]]]],[[]],[[]],0,0,0,0,[[],3]],"c":[],"p":[[6,"DbConnection"],[4,"Error"],[4,"Result"],[3,"Command"],[15,"usize"],[4,"ApiTokenCmd"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[3,"Error"],[3,"Error"],[4,"Error"],[3,"ArgMatches"],[6,"Error"],[3,"String"],[3,"Vec"],[4,"Option"],[15,"str"],[3,"Demand"],[8,"Error"],[3,"TypeId"],[4,"CliApp"],[4,"Error"],[4,"Error"],[4,"Error"],[8,"Deserializer"],[15,"i64"],[3,"Rfc3339Deserializer"],[3,"Error"],[3,"OffsetDateTime"],[8,"Error"],[3,"ImportSettings"],[3,"LoadCmd"],[4,"CsvDataCmd"],[3,"Error"],[3,"Id"],[3,"Path"],[8,"AsRef"],[3,"PathBuf"],[6,"Result"],[8,"DeserializeOwned"],[8,"Serializer"],[3,"Fund"],[3,"FundStageDates"],[3,"Voteplan"],[3,"Challenge"],[3,"Proposal"],[15,"i32"],[3,"AdvisorReview"],[4,"ChallengeType"],[3,"Fund"],[3,"FundStageDates"],[3,"Voteplan"],[3,"Challenge"],[3,"AdvisorReview"],[3,"NamedTempFile"],[4,"Db"],[13,"Add"],[13,"Generate"],[13,"Base64Decode"],[13,"Init"],[8,"ExecTask"]]},\
"vit_servicing_station_lib":{"doc":"","t":"AAAAGGDLLLLLLLLLLFALAALLLLALAAAAAAAAAAADLLLLLMLLLMLLLLLMLLLLLDDLLLLLMMLLLLLLLLMLLLLLLLLLLLLMMMLLMLLMMLLMMLLLLLLLLLLLDNNNNEFFMMMLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMMMLLLLMMLLLLLLLLLLLLLDDDMLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLMLLLLLLMMMMMMMMMMMMMLLLMLLLMMMMMMMMMMLLLMMMMLLLLLLLLLLLLMMMMLLLDDFFLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLDFLLLLLLLLLLLLLLMMLLLLLMLLLLLDENNDGDEGDDDDDNNLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLMMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLDGLLLLLLLLLLLLLLMMMMLLLLLLLDGLLLLLLLLLLLLLLMLLLLLLLDDDFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMMMLLLLLLLLLLLLMLLLLLLMMMMMLLLDFLLLMMLLLLLLLLMLLLMMLMLLLLLMLDGLLLLLLLLLLLLLLLLLLLLLLLLDFLLLMMMMMMLLLLLLLLLLMMLLLLMLLLLLAAAAAAAAAAAWWFFFFFWWWWWFFFFFFWFFWWWDDLLLLLLLLLLLLLLLLMMMLLFLLFMFFFFLLMLLLLLLLLFFWWWFFFFFFFFFWWGDGFLLLFFLLLLLLLLLLFFFFFFLLLLLLWWWWWWWWRFFFFFFFFFFFWFFFWFFAAAAAAAAAAAAAAAGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLDLLLLLLLLLLLLLLLLLLLLOOOCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLDLLLLLLLLLLLLLLLLDDDLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOCCCCCCCCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFFFFFFFLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOCCCCCCCCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLOOOOOOCCCCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLOOOCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLDLLLLLDLLLLLLLLLLLLLLLLLLLLOOOCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLOOCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOCCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLDLDLLLLLLLLLLLLLLLLLLOOCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOCCCCCCCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLOOOOCCCCCGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLOOOOOOOCCCCCCCCAGGFLRLLLLLALLLLLALLLLLLLLLLLLDLLLLLLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCAAAACWWFFFFENNNNNNNLLLLLLLLLLLLLDDNNNNEDDNNMMMMMAMMAFMMFMMMMMMRDRRDDDRRNNNNDEDRRDNRNMMLLLLLLLLLMMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLFMMMMMLFMLLLLLLLMMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWFAAAFFDDDDDLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLWWHHHHHRDDDALLLLLLLLLLLLLLLALLLLLLLLLAAFLLLALLLLLLALLLLLLLLLLLLLLLWWWWWRDDHHFLFLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDGMLLLLMLLLLLLLFLLLLMLWWHHHHHHHHHHHHHDDDDDDDDDDDDDALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLAAALLLLLLLLLLLLLLLLLLLLLLLLLLAAAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLCAAAAWFWFFWWFDLLLLLLLLLLLLLLDMFAAMAAWWWFFFWWWFFFWWFDLLMLLLLLLLMLLLLLCCAAAWWWWFFFFWWWWFFFFWWWFFCAAWWFFFWFCAAWFWWFDGAMAFFAAMWWWFFFWWWFFFDGLLLLLLLLMLLLLLLMLWWWWFFAAAFFWWFFNNNENENNNENNNNDDEENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMWWWWFFCFAAAAWFWFWWFDLLLLLLLLLLMLLLLWWHHDGHHDDGDDLLLLLLLLLLLLMMLLLLLLLLLMMMLLLLLLLFLLLLLLFFALLLLLLMMMMALLLMMLLLLLLLLLLLLMMMMMMMMLLLWWHHHHDDLLLLLLLLLLLLLLMMLLLLLLLLFFLLLLMMLLMMLLLLLLLLMMMLLWHHDDLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLCCAAAAWFWFDLLMLLLLLLLLLLLLMLWWFWNNENNNNLLLLLLLLLFLLLLLLLLLLLLLLDMMLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLL","n":["db","server","utils","v0","DbConnection","DbConnectionPool","Error","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","load_db_connection_pool","models","provide","queries","schema","to_string","try_from","try_into","type_id","views_schema","vzip","api_tokens","challenges","community_advisors_reviews","funds","goals","groups","proposals","snapshot","vote","vote_options","voteplans","ApiTokenData","borrow","borrow_mut","build","clone","clone_into","creation_time","deref","deref_mut","drop","expire_time","fmt","from","init","into","to_owned","token","try_from","try_into","type_id","values","vzip","Challenge","ChallengeHighlights","borrow","borrow","borrow_mut","borrow_mut","build","challenge_type","challenge_url","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","description","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","from","from","fund_id","highlights","id","init","init","internal_id","into","into","proposers_rewards","rewards_total","serialize","serialize","sponsor","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","values","vzip","vzip","AdvisorReview","Excellent","FilteredOut","Good","NA","ReviewRanking","_impl_from_sql_row_for_reviewranking","_impl_queryable_for_advisorreview","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow_mut","borrow_mut","build","build","build_from_row","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","equivalent","feasibility_note","feasibility_rating_given","fmt","fmt","from","from","from_sql","id","impact_alignment_note","impact_alignment_rating_given","init","init","into","into","proposal_id","ranking","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","values","vzip","vzip","Fund","FundStageDates","FundWithLegacyFields","assessment_qa_start","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","chain_vote_plans","chain_vote_plans","challenges","challenges","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","finalize_proposals_start","fmt","fmt","from","from","from","from","fund_end_time","fund_end_time","fund_goal","fund_goal","fund_name","fund_name","fund_start_time","fund_start_time","goals","groups","groups","id","id","init","init","init","insight_sharing_start","into","into","into","next_fund_start_time","next_fund_start_time","next_registration_snapshot_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","registration_snapshot_time","results_url","serialize","serialize","serialize","snapshot_start","stage_dates","survey_url","tallying_end","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","voting_end","voting_power_threshold","voting_power_threshold","voting_start","vzip","vzip","vzip","Goal","InsertGoal","_impl_insertable_for_insertgoal","_impl_queryable_for_goal","borrow","borrow","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","equivalent","fmt","fmt","from","from","from","fund_id","fund_id","goal_name","goal_name","id","init","init","into","into","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","values","values","vzip","vzip","Group","_impl_queryable_for_group","borrow","borrow_mut","build","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","fund_id","group_id","init","into","partial_cmp","serialize","to_owned","token_identifier","try_from","try_into","type_id","values","vzip","Category","ChallengeType","CommunityChoice","CommunityChoice","FullProposalInfo","FullProposalsInfoRow","Proposal","ProposalChallengeInfo","ProposalExtraFields","ProposalVotePlan","ProposalVotePlanCommon","Proposer","SerdeProposalChallengeInfo","SerdeToProposalChallengeInfoError","Simple","Simple","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","category_description","category_id","category_name","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","challenge_id","challenge_info","challenge_type","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","community","community_choice","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extra","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","fund_id","group_id","init","init","init","init","init","init","init","init","init","init","internal_id","into","into","into","into","into","into","into","into","into","into","proposal","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposer","proposer_email","proposer_name","proposer_relevant_experience","proposer_url","reviews_count","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","simple","simple","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values","voteplan","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChallengeInfo","ChallengeSqlValues","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","init","into","proposal_brief","proposal_goal","proposal_importance","proposal_metrics","serialize","to_owned","to_sql_values_with_proposal_id","try_from","try_into","type_id","vzip","ChallengeInfo","ChallengeSqlValues","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","init","into","proposal_solution","serialize","to_owned","to_sql_values_with_proposal_id","try_from","try_into","type_id","vzip","Contribution","Snapshot","Voter","_impl_insertable_for_contribution","_impl_insertable_for_snapshot","_impl_insertable_for_voter","_impl_queryable_for_contribution","_impl_queryable_for_snapshot","_impl_queryable_for_voter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","last_updated","reward_address","serialize","serialize","serialize","snapshot_tag","snapshot_tag","stake_public_key","tag","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","value","values","values","values","values","values","values","voting_group","voting_group","voting_key","voting_key","voting_power","vzip","vzip","vzip","Vote","_impl_queryable_for_vote","borrow","borrow_mut","build","caster","choice","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fragment_id","from","init","into","proposal","raw_fragment","serialize","time","to_owned","try_from","try_into","type_id","values","voteplan_id","vzip","VoteOptions","VoteOptionsMap","as_csv_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_vec_string","init","into","parse_coma_separated_value","serialize","to_owned","to_vec_string","try_from","try_into","type_id","vzip","Voteplan","_impl_queryable_for_voteplan","borrow","borrow_mut","build","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","fund_id","id","init","into","serialize","to_owned","token_identifier","try_from","try_into","type_id","values","vzip","api_tokens","challenges","community_advisors_reviews","funds","goals","groups","proposals","search","snapshot","voteplans","votes","","","batch_insert_token_data","insert_token","insert_token_data","query_token","query_token_data_by_token","","","","","","batch_insert_challenges","query_all_challenges","query_challenge_by_id","query_challenge_proposals_by_id","query_challenge_proposals_by_id_and_group_id","query_challenges_by_fund_id","","batch_insert_advisor_reviews","query_reviews_by_fund_id","","","","FundNextInfo","FundWithNext","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","fund","fund_name","id","init","init","insert_fund","into","into","join_fund","next","put_fund","query_all_funds","query_current_fund","query_fund_by_id","serialize","serialize","stage_dates","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","batch_insert","batch_insert","","","","batch_insert_community_choice_challenge_data","batch_insert_groups","batch_insert_proposals","batch_insert_proposals_voteplans","batch_insert_simple_challenge_data","insert_proposal","query_all_proposals","query_proposal_by_id","query_proposals_by_voteplan_id_and_indexes","","","ChallengesSelectST","RANDOM","SelectProposalsST","_impl_query_id_for_random","as_expression","borrow","borrow_mut","build_challenges_query","build_proposals_query","clone","clone_into","deref","deref_mut","drop","execute","fmt","from","init","into","map_limit","map_offset","search","search_count","search_count_db","search_db","to_owned","try_from","try_into","type_id","vzip","walk_ast","","","","","","","","","BATCH_PUT_CHUNK_SIZE","batch_put_contributions","batch_put_voters","put_snapshot","query_all_snapshots","query_contributions_by_snapshot_tag","query_contributions_by_stake_public_key_and_snapshot_tag","query_contributions_by_voting_key_and_voter_group_and_snapshot_tag","query_snapshot_by_tag","query_total_voting_power_by_voting_group_and_snapshot_tag","query_voters_by_snapshot_tag","query_voters_by_voting_key_and_snapshot_tag","","batch_insert_voteplans","insert_voteplan","query_voteplan_by_id","","batch_insert_votes_data","query_votes_by_caster_and_voteplan_id","api_tokens","challenges","community_advisors_reviews","contributions","funds","goals","groups","proposal_community_choice_challenge","proposal_simple_challenge","proposals","proposals_voteplans","snapshots","voteplans","voters","votes","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_creation_time","_impl_query_id_for_expire_time","_impl_query_id_for_token","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","creation_time","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","execute","execute","execute","expire_time","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","mul","mul","star","sub","sub","to_owned","to_owned","to_owned","to_owned","token","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","api_tokens","creation_time","expire_time","token","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_challenge_type","_impl_query_id_for_challenge_url","_impl_query_id_for_description","_impl_query_id_for_fund_id","_impl_query_id_for_highlights","_impl_query_id_for_id","_impl_query_id_for_internal_id","_impl_query_id_for_proposers_rewards","_impl_query_id_for_rewards_total","_impl_query_id_for_title","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge_type","challenge_url","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","fund_id","highlights","id","init","init","init","init","init","init","init","init","init","init","init","internal_id","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","proposers_rewards","rewards_total","star","sub","sub","sub","sub","sub","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","challenge_type","challenge_url","challenges","description","fund_id","highlights","id","internal_id","proposers_rewards","rewards_total","title","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_assessor","_impl_query_id_for_auditability_note","_impl_query_id_for_auditability_rating_given","_impl_query_id_for_feasibility_note","_impl_query_id_for_feasibility_rating_given","_impl_query_id_for_id","_impl_query_id_for_impact_alignment_note","_impl_query_id_for_impact_alignment_rating_given","_impl_query_id_for_proposal_id","_impl_query_id_for_ranking","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","feasibility_note","feasibility_rating_given","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","id","impact_alignment_note","impact_alignment_rating_given","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","mul","proposal_id","ranking","star","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","assessor","auditability_note","auditability_rating_given","community_advisors_reviews","feasibility_note","feasibility_rating_given","id","impact_alignment_note","impact_alignment_rating_given","proposal_id","ranking","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_reward_address","_impl_query_id_for_snapshot_tag","_impl_query_id_for_stake_public_key","_impl_query_id_for_value","_impl_query_id_for_voting_group","_impl_query_id_for_voting_key","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","mul","reward_address","snapshot_tag","stake_public_key","star","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","voting_group","voting_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","contributions","reward_address","snapshot_tag","stake_public_key","value","voting_group","voting_key","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_assessment_qa_start","_impl_query_id_for_finalize_proposals_start","_impl_query_id_for_fund_end_time","_impl_query_id_for_fund_goal","_impl_query_id_for_fund_name","_impl_query_id_for_fund_start_time","_impl_query_id_for_id","_impl_query_id_for_insight_sharing_start","_impl_query_id_for_next_fund_start_time","_impl_query_id_for_next_registration_snapshot_time","_impl_query_id_for_proposal_assessment_start","_impl_query_id_for_proposal_submission_start","_impl_query_id_for_refine_proposals_start","_impl_query_id_for_registration_snapshot_time","_impl_query_id_for_results_url","_impl_query_id_for_snapshot_start","_impl_query_id_for_survey_url","_impl_query_id_for_tallying_end","_impl_query_id_for_voting_end","_impl_query_id_for_voting_power_threshold","_impl_query_id_for_voting_start","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","assessment_qa_start","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","finalize_proposals_start","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fund_end_time","fund_goal","fund_name","fund_start_time","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","insight_sharing_start","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","results_url","snapshot_start","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","survey_url","tallying_end","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voting_end","voting_power_threshold","voting_start","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","assessment_qa_start","finalize_proposals_start","fund_end_time","fund_goal","fund_name","fund_start_time","funds","id","insight_sharing_start","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","results_url","snapshot_start","survey_url","tallying_end","voting_end","voting_power_threshold","voting_start","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_fund_id","_impl_query_id_for_goal_name","_impl_query_id_for_id","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","fund_id","goal_name","id","init","init","init","init","into","into","into","into","mul","mul","star","sub","sub","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","fund_id","goal_name","goals","id","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_fund_id","_impl_query_id_for_group_id","_impl_query_id_for_token_identifier","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","drop","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","fund_id","group_id","init","init","init","init","into","into","into","into","mul","star","sub","to_owned","to_owned","to_owned","to_owned","token_identifier","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","fund_id","group_id","groups","token_identifier","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_proposal_brief","_impl_query_id_for_proposal_goal","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_importance","_impl_query_id_for_proposal_metrics","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","proposal_brief","proposal_goal","proposal_id","proposal_importance","proposal_metrics","star","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","proposal_brief","proposal_community_choice_challenge","proposal_goal","proposal_id","proposal_importance","proposal_metrics","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_solution","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","execute","execute","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","proposal_id","proposal_solution","star","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","proposal_id","proposal_simple_challenge","proposal_solution","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_chain_proposal_id","_impl_query_id_for_chain_vote_options","_impl_query_id_for_challenge_id","_impl_query_id_for_extra","_impl_query_id_for_id","_impl_query_id_for_proposal_category","_impl_query_id_for_proposal_files_url","_impl_query_id_for_proposal_funds","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_impact_score","_impl_query_id_for_proposal_public_key","_impl_query_id_for_proposal_summary","_impl_query_id_for_proposal_title","_impl_query_id_for_proposal_url","_impl_query_id_for_proposer_contact","_impl_query_id_for_proposer_name","_impl_query_id_for_proposer_relevant_experience","_impl_query_id_for_proposer_url","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_id","chain_vote_options","challenge_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","extra","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","star","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","chain_proposal_id","chain_vote_options","challenge_id","extra","id","proposal_category","proposal_files_url","proposal_funds","proposal_id","proposal_impact_score","proposal_public_key","proposal_summary","proposal_title","proposal_url","proposals","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_chain_proposal_index","_impl_query_id_for_chain_voteplan_id","_impl_query_id_for_id","_impl_query_id_for_proposal_id","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_proposal_index","chain_voteplan_id","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","init","init","init","init","init","into","into","into","into","into","mul","mul","proposal_id","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","chain_proposal_index","chain_voteplan_id","id","proposal_id","proposals_voteplans","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_last_updated","_impl_query_id_for_tag","add","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","execute","execute","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","last_updated","mul","star","sub","tag","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","last_updated","snapshots","tag","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_chain_committee_end_time","_impl_query_id_for_chain_vote_encryption_key","_impl_query_id_for_chain_vote_end_time","_impl_query_id_for_chain_vote_start_time","_impl_query_id_for_chain_voteplan_id","_impl_query_id_for_chain_voteplan_payload","_impl_query_id_for_fund_id","_impl_query_id_for_id","_impl_query_id_for_token_identifier","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","fund_id","id","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token_identifier","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","chain_committee_end_time","chain_vote_encryption_key","chain_vote_end_time","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","fund_id","id","token_identifier","voteplans","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_snapshot_tag","_impl_query_id_for_voting_group","_impl_query_id_for_voting_key","_impl_query_id_for_voting_power","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","mul","snapshot_tag","star","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","voting_group","voting_key","voting_power","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","snapshot_tag","voters","voting_group","voting_key","voting_power","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_caster","_impl_query_id_for_choice","_impl_query_id_for_fragment_id","_impl_query_id_for_proposal","_impl_query_id_for_raw_fragment","_impl_query_id_for_time","_impl_query_id_for_voteplan_id","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caster","choice","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment_id","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","mul","mul","mul","proposal","raw_fragment","star","sub","sub","sub","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voteplan_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","caster","choice","fragment_id","proposal","raw_fragment","time","voteplan_id","votes","full_proposals_info","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","fmt","for_update","from","from_clause","init","into","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_chain_committee_end_time","_impl_query_id_for_chain_proposal_id","_impl_query_id_for_chain_proposal_index","_impl_query_id_for_chain_vote_encryption_key","_impl_query_id_for_chain_vote_end_time","_impl_query_id_for_chain_vote_options","_impl_query_id_for_chain_vote_start_time","_impl_query_id_for_chain_voteplan_id","_impl_query_id_for_chain_voteplan_payload","_impl_query_id_for_challenge_id","_impl_query_id_for_challenge_type","_impl_query_id_for_extra","_impl_query_id_for_fund_id","_impl_query_id_for_group_id","_impl_query_id_for_id","_impl_query_id_for_proposal_brief","_impl_query_id_for_proposal_category","_impl_query_id_for_proposal_files_url","_impl_query_id_for_proposal_funds","_impl_query_id_for_proposal_goal","_impl_query_id_for_proposal_id","_impl_query_id_for_proposal_impact_score","_impl_query_id_for_proposal_importance","_impl_query_id_for_proposal_metrics","_impl_query_id_for_proposal_public_key","_impl_query_id_for_proposal_solution","_impl_query_id_for_proposal_summary","_impl_query_id_for_proposal_title","_impl_query_id_for_proposal_url","_impl_query_id_for_proposer_contact","_impl_query_id_for_proposer_name","_impl_query_id_for_proposer_relevant_experience","_impl_query_id_for_proposer_url","_impl_query_id_for_reviews_count","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","challenge_id","challenge_type","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","extra","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fund_id","group_id","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","proposal_brief","proposal_category","proposal_files_url","proposal_funds","proposal_goal","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_public_key","proposal_solution","proposal_summary","proposal_title","proposal_url","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","reviews_count","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","chain_committee_end_time","chain_proposal_id","chain_proposal_index","chain_vote_encryption_key","chain_vote_end_time","chain_vote_options","chain_vote_start_time","chain_voteplan_id","chain_voteplan_payload","challenge_id","challenge_type","extra","full_proposals_info","fund_id","group_id","id","proposal_brief","proposal_category","proposal_files_url","proposal_funds","proposal_goal","proposal_id","proposal_impact_score","proposal_importance","proposal_metrics","proposal_public_key","proposal_solution","proposal_summary","proposal_title","proposal_url","proposer_contact","proposer_name","proposer_relevant_experience","proposer_url","reviews_count","bootstrapping","exit_codes","settings","signals","start_server","","","setup_cors","setup_tls","start_server","start_server_with_config","ApplicationExitCode","DbConnectionError","EmptyBlock0FolderError","LoadSettingsError","ServiceVersionError","SnapshotWatcherError","Success","WriteSettingsError","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","report","try_from","try_into","type_id","vzip","Cors","CorsOrigin","Debug","Disabled","Error","Info","LogLevel","ServiceSettings","Tls","Trace","Warn","address","allowed_origins","block0_path","block0_paths","cert_file","config","cors","db_url","default","dump_settings_to_file","enable_api_tokens","in_settings_file","load_settings_from_file","log","max_age_secs","out_settings_file","priv_key_file","service_version","tls","ADDRESS_DEFAULT","AllowedOrigins","BLOCK0_PATH_DEFAULT","CORS_ALLOWED_ORIGINS","Cors","CorsOrigin","CorsOriginVisitor","DATABASE_URL","DB_URL_DEFAULT","Debug","Disabled","Error","Info","Log","LogLevel","ServiceSettings","TLS_CERT_FILE","TLS_PRIVATE_KEY_FILE","Tls","Trace","VIT_SERVICE_VERSION_ENV_VARIABLE","Warn","address","allowed_origins","as_ref","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","block0_path","block0_paths","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_file","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","cors","db_url","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dump_settings_to_file","enable_api_tokens","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expecting","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_str","from_str","from_str","from_str","group_id","group_id","group_id","group_id","in_settings_file","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_loaded","load_settings_from_file","log","log_level","log_output_path","max_age_secs","out_settings_file","override_from","parse_allowed_origins","priv_key_file","serialize","serialize","serialize","serialize","serialize","serialize","serialize","service_version","tls","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trace_collector_endpoint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","visit_str","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","","watch_signal_for_shutdown","collections","datetime","serde","dedup_by_key_keep_last","unix_timestamp_to_datetime","FractionDeserializer","I64Deserializer","Rfc3339Deserializer","VecU8Deserializer","VoteOptionsDeserializer","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize_fraction_from_string","deserialize_i64_from_str","deserialize_string_as_bytes","deserialize_truthy_falsy","deserialize_unix_timestamp_from_rfc3339","deserialize_vote_options_from_string","drop","drop","drop","drop","drop","expecting","expecting","expecting","expecting","expecting","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","serialize_bin_as_str","serialize_fraction_to_string","serialize_i64_as_str","serialize_unix_timestamp_as_rfc3339","serialize_vote_options_to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","visit_str","visit_str","visit_str","visit_str","visit_str","vzip","vzip","vzip","vzip","vzip","","","CALLSITE","META","S","S","S","V0_REQUEST_TRACE_NAME","__StaticPath","__StaticPath","__StaticPath","api_token","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","context","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","endpoints","errors","filter","from","from","from","genesis_block","init","init","init","into","into","into","result","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","","","","","","API_TOKEN_HEADER","ApiToken","ApiTokenManager","CALLSITE","META","api_token_filter","as_ref","authorize_token","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","clone","clone_into","connection_pool","deref","deref","deref_mut","deref_mut","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","fmt","from","from","from","init","init","into","into","is_token_valid","new","new","revoke_token","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_base32","Context","SharedContext","block0","borrow","borrow_mut","clone","clone_into","db_connection_pool","deref","deref_mut","drop","from","init","into","new","new_shared_context","to_owned","try_from","try_into","type_id","versioning","vzip","","","S","S","S","S","S","S","S","S","S","S","S","S","S","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","advisor_reviews","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","filter","from","from","from","from","from","from","from","from","from","from","from","from","from","funds","genesis","health","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","proposals","search","service_version","snapshot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","votes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","filter","handlers","logic","routes","schemas","","get_reviews_with_proposal_id","","get_advisor_reviews_with_proposal_id","group_reviews_by_assessor","","","filter","GroupedReviews","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","init","into","serialize","try_from","try_into","type_id","vzip","ChallengeWithProposals","challenge","filter","handlers","logic","proposals","routes","schemas","","","","get_challenge_by_id","get_challenge_by_id_and_group_id","get_challenges","","","","get_all_challenges","get_challenge_by_id","get_challenge_by_id_and_group_id","","","filter","ChallengeWithProposals","borrow","borrow_mut","challenge","deref","deref_mut","deserialize","drop","from","init","into","proposals","serialize","try_from","try_into","type_id","vzip","admin_filter","filter","handlers","logic","routes","","","","","get_all_funds","get_fund","get_fund_by_id","put_fund","","","","","get_all_funds","get_current_fund","get_fund_by_id","put_fund","","","","admin_filter","filter","filter","handlers","routes","","","get_genesis","get_genesis_for_fund","get_genesis_response","","filter","filter","handlers","routes","","check_health","","","filter","ProposalVoteplanIdAndIndexes","ProposalsByVoteplanIdAndIndex","handlers","indexes","logic","proposal_filter","proposals_filter","requests","routes","vote_plan_id","","","","get_all_proposals","get_proposal","get_proposals_by_voteplan_id_and_index","","","","get_all_proposals","get_proposal","get_proposals_by_voteplan_id_and_index","ProposalVoteplanIdAndIndexes","ProposalsByVoteplanIdAndIndex","borrow","borrow_mut","deref","deref_mut","deserialize","drop","fmt","from","indexes","init","into","serialize","try_from","try_into","type_id","vote_plan_id","vzip","","","","","proposal_filter","proposals_filter","logic","requests","routes","search_count_filter","search_filter","","","search","search_count","Author","Challenge","Challenges","Column","Column","Constraint","Desc","Funds","ImpactScore","OrderBy","Proposal","Proposals","Random","Range","SearchCountQuery","SearchQuery","SearchResponse","Table","Text","Title","Type","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","filter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_empty","limit","offset","order_by","query","serialize","serialize","serialize","serialize","serialize","serialize","serialize","table","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","column","column","lower","search","upper","column","descending","","","","","search_count_filter","search_filter","ServiceVersion","filter","handlers","logic","routes","schemas","","service_version","","service_version","","","filter","ServiceVersion","borrow","borrow_mut","deref","deref_mut","deserialize","drop","from","init","into","serialize","service_version","try_from","try_into","type_id","vzip","","","CALLSITE","CALLSITE","DelegatorInfo","Group","META","META","RawSnapshotInput","SnapshotInfoInput","Tag","VoterInfo","VotersInfo","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","delegations_count","delegations_power","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","direct_voters_group","dreps","dreps","drop","drop","drop","eq","eq","eq","equivalent","filter","fmt","fmt","fmt","from","from","from","get_delegator_info","get_voters_info","handlers","init","init","init","into","into","into","last_updated","last_updated","min_stake_threshold","representatives_group","routes","serialize","serialize","serialize","snapshot","snapshot","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_timestamp","update_timestamp","voter_info","voting_group","voting_groups","voting_power","voting_power_cap","voting_power_saturation","vzip","vzip","vzip","","","CALLSITE","CALLSITE","META","META","RawSnapshotInput","SnapshotInfoInput","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","direct_voters_group","dreps","drop","drop","eq","equivalent","fmt","fmt","from","from","get_delegator_info","get_voters_info","init","init","into","into","min_stake_threshold","representatives_group","serialize","serialize","snapshot","snapshot","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_timestamp","update_timestamp","voting_power_cap","vzip","vzip","","S","S","__StaticPath","__StaticPath","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","filter","from","from","init","init","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","VoteCasterAndVoteplanId","filter","handlers","logic","requests","routes","","get_vote_by_caster_and_voteplan_id","","get_vote_by_caster_and_voteplan_id","VoteCasterAndVoteplanId","borrow","borrow_mut","caster","deref","deref_mut","deserialize","drop","fmt","from","init","into","serialize","try_from","try_into","type_id","vote_plan_id","vzip","","","filter","","BadRequest","DatabaseError","HandleError","InternalError","InvalidHeader","NotFound","UnauthorizedToken","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","handle_rejection","init","into","into_response","provide","source","to_json","to_message","to_response","to_status_code","to_string","try_from","try_into","type_id","vzip","GenesisBlock","block0","block0_path","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","from_str","from_str","init","into","is_fund_id","to_owned","try_from","try_into","type_id","vzip","HandlerResult","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_response","try_from","try_into","type_id","vzip"],"q":[[0,"vit_servicing_station_lib"],[4,"vit_servicing_station_lib::db"],[28,"vit_servicing_station_lib::db::models"],[39,"vit_servicing_station_lib::db::models::api_tokens"],[61,"vit_servicing_station_lib::db::models::challenges"],[116,"vit_servicing_station_lib::db::models::community_advisors_reviews"],[179,"vit_servicing_station_lib::db::models::funds"],[276,"vit_servicing_station_lib::db::models::goals"],[326,"vit_servicing_station_lib::db::models::groups"],[355,"vit_servicing_station_lib::db::models::proposals"],[610,"vit_servicing_station_lib::db::models::proposals::community_choice"],[637,"vit_servicing_station_lib::db::models::proposals::simple"],[661,"vit_servicing_station_lib::db::models::snapshot"],[751,"vit_servicing_station_lib::db::models::vote"],[781,"vit_servicing_station_lib::db::models::vote_options"],[807,"vit_servicing_station_lib::db::models::voteplans"],[840,"vit_servicing_station_lib::db::queries"],[851,"vit_servicing_station_lib::db::queries::api_tokens"],[858,"vit_servicing_station_lib::db::queries::challenges"],[869,"vit_servicing_station_lib::db::queries::community_advisors_reviews"],[872,"vit_servicing_station_lib::db::queries::funds"],[918,"vit_servicing_station_lib::db::queries::goals"],[919,"vit_servicing_station_lib::db::queries::groups"],[920,"vit_servicing_station_lib::db::queries::proposals"],[932,"vit_servicing_station_lib::db::queries::search"],[965,"vit_servicing_station_lib::db::queries::snapshot"],[985,"vit_servicing_station_lib::db::queries::voteplans"],[989,"vit_servicing_station_lib::db::queries::votes"],[992,"vit_servicing_station_lib::db::schema"],[1007,"vit_servicing_station_lib::db::schema::api_tokens"],[1045,"vit_servicing_station_lib::db::schema::api_tokens::columns"],[1138,"vit_servicing_station_lib::db::schema::api_tokens::dsl"],[1145,"vit_servicing_station_lib::db::schema::challenges"],[1183,"vit_servicing_station_lib::db::schema::challenges::columns"],[1442,"vit_servicing_station_lib::db::schema::challenges::dsl"],[1463,"vit_servicing_station_lib::db::schema::community_advisors_reviews"],[1501,"vit_servicing_station_lib::db::schema::community_advisors_reviews::columns"],[1764,"vit_servicing_station_lib::db::schema::community_advisors_reviews::dsl"],[1785,"vit_servicing_station_lib::db::schema::contributions"],[1823,"vit_servicing_station_lib::db::schema::contributions::columns"],[1978,"vit_servicing_station_lib::db::schema::contributions::dsl"],[1991,"vit_servicing_station_lib::db::schema::funds"],[2029,"vit_servicing_station_lib::db::schema::funds::columns"],[2578,"vit_servicing_station_lib::db::schema::funds::dsl"],[2621,"vit_servicing_station_lib::db::schema::goals"],[2659,"vit_servicing_station_lib::db::schema::goals::columns"],[2752,"vit_servicing_station_lib::db::schema::goals::dsl"],[2759,"vit_servicing_station_lib::db::schema::groups"],[2797,"vit_servicing_station_lib::db::schema::groups::columns"],[2886,"vit_servicing_station_lib::db::schema::groups::dsl"],[2893,"vit_servicing_station_lib::db::schema::proposal_community_choice_challenge"],[2931,"vit_servicing_station_lib::db::schema::proposal_community_choice_challenge::columns"],[3060,"vit_servicing_station_lib::db::schema::proposal_community_choice_challenge::dsl"],[3071,"vit_servicing_station_lib::db::schema::proposal_simple_challenge"],[3109,"vit_servicing_station_lib::db::schema::proposal_simple_challenge::columns"],[3172,"vit_servicing_station_lib::db::schema::proposal_simple_challenge::dsl"],[3177,"vit_servicing_station_lib::db::schema::proposals"],[3215,"vit_servicing_station_lib::db::schema::proposals::columns"],[3646,"vit_servicing_station_lib::db::schema::proposals::dsl"],[3683,"vit_servicing_station_lib::db::schema::proposals_voteplans"],[3721,"vit_servicing_station_lib::db::schema::proposals_voteplans::columns"],[3836,"vit_servicing_station_lib::db::schema::proposals_voteplans::dsl"],[3845,"vit_servicing_station_lib::db::schema::snapshots"],[3883,"vit_servicing_station_lib::db::schema::snapshots::columns"],[3950,"vit_servicing_station_lib::db::schema::snapshots::dsl"],[3955,"vit_servicing_station_lib::db::schema::voteplans"],[3993,"vit_servicing_station_lib::db::schema::voteplans::columns"],[4230,"vit_servicing_station_lib::db::schema::voteplans::dsl"],[4249,"vit_servicing_station_lib::db::schema::voters"],[4287,"vit_servicing_station_lib::db::schema::voters::columns"],[4398,"vit_servicing_station_lib::db::schema::voters::dsl"],[4407,"vit_servicing_station_lib::db::schema::votes"],[4445,"vit_servicing_station_lib::db::schema::votes::columns"],[4630,"vit_servicing_station_lib::db::schema::votes::dsl"],[4645,"vit_servicing_station_lib::db::views_schema"],[4646,"vit_servicing_station_lib::db::views_schema::full_proposals_info"],[4684,"vit_servicing_station_lib::db::views_schema::full_proposals_info::columns"],[5491,"vit_servicing_station_lib::db::views_schema::full_proposals_info::dsl"],[5560,"vit_servicing_station_lib::server"],[5565,"vit_servicing_station_lib::server::bootstrapping"],[5571,"vit_servicing_station_lib::server::exit_codes"],[5592,"vit_servicing_station_lib::server::settings"],[5622,"vit_servicing_station_lib::server::settings::config"],[5873,"vit_servicing_station_lib::server::signals"],[5875,"vit_servicing_station_lib::utils"],[5878,"vit_servicing_station_lib::utils::collections"],[5879,"vit_servicing_station_lib::utils::datetime"],[5880,"vit_servicing_station_lib::utils::serde"],[5971,"vit_servicing_station_lib::v0"],[6037,"vit_servicing_station_lib::v0::api_token"],[6091,"vit_servicing_station_lib::v0::context"],[6113,"vit_servicing_station_lib::v0::endpoints"],[6360,"vit_servicing_station_lib::v0::endpoints::advisor_reviews"],[6365,"vit_servicing_station_lib::v0::endpoints::advisor_reviews::handlers"],[6367,"vit_servicing_station_lib::v0::endpoints::advisor_reviews::logic"],[6370,"vit_servicing_station_lib::v0::endpoints::advisor_reviews::routes"],[6373,"vit_servicing_station_lib::v0::endpoints::advisor_reviews::schemas"],[6388,"vit_servicing_station_lib::v0::endpoints::challenges"],[6396,"vit_servicing_station_lib::v0::endpoints::challenges::handlers"],[6402,"vit_servicing_station_lib::v0::endpoints::challenges::logic"],[6408,"vit_servicing_station_lib::v0::endpoints::challenges::routes"],[6411,"vit_servicing_station_lib::v0::endpoints::challenges::schemas"],[6428,"vit_servicing_station_lib::v0::endpoints::funds"],[6433,"vit_servicing_station_lib::v0::endpoints::funds::handlers"],[6441,"vit_servicing_station_lib::v0::endpoints::funds::logic"],[6449,"vit_servicing_station_lib::v0::endpoints::funds::routes"],[6454,"vit_servicing_station_lib::v0::endpoints::genesis"],[6457,"vit_servicing_station_lib::v0::endpoints::genesis::handlers"],[6462,"vit_servicing_station_lib::v0::endpoints::genesis::routes"],[6464,"vit_servicing_station_lib::v0::endpoints::health"],[6467,"vit_servicing_station_lib::v0::endpoints::health::handlers"],[6469,"vit_servicing_station_lib::v0::endpoints::health::routes"],[6472,"vit_servicing_station_lib::v0::endpoints::proposals"],[6482,"vit_servicing_station_lib::v0::endpoints::proposals::handlers"],[6488,"vit_servicing_station_lib::v0::endpoints::proposals::logic"],[6494,"vit_servicing_station_lib::v0::endpoints::proposals::requests"],[6513,"vit_servicing_station_lib::v0::endpoints::proposals::routes"],[6519,"vit_servicing_station_lib::v0::endpoints::search"],[6524,"vit_servicing_station_lib::v0::endpoints::search::logic"],[6528,"vit_servicing_station_lib::v0::endpoints::search::requests"],[6682,"vit_servicing_station_lib::v0::endpoints::search::requests::Constraint"],[6687,"vit_servicing_station_lib::v0::endpoints::search::requests::OrderBy"],[6689,"vit_servicing_station_lib::v0::endpoints::search::routes"],[6695,"vit_servicing_station_lib::v0::endpoints::service_version"],[6701,"vit_servicing_station_lib::v0::endpoints::service_version::handlers"],[6703,"vit_servicing_station_lib::v0::endpoints::service_version::logic"],[6705,"vit_servicing_station_lib::v0::endpoints::service_version::routes"],[6708,"vit_servicing_station_lib::v0::endpoints::service_version::schemas"],[6724,"vit_servicing_station_lib::v0::endpoints::snapshot"],[6819,"vit_servicing_station_lib::v0::endpoints::snapshot::handlers"],[6876,"vit_servicing_station_lib::v0::endpoints::snapshot::routes"],[6914,"vit_servicing_station_lib::v0::endpoints::votes"],[6920,"vit_servicing_station_lib::v0::endpoints::votes::handlers"],[6922,"vit_servicing_station_lib::v0::endpoints::votes::logic"],[6924,"vit_servicing_station_lib::v0::endpoints::votes::requests"],[6942,"vit_servicing_station_lib::v0::endpoints::votes::routes"],[6945,"vit_servicing_station_lib::v0::errors"],[6977,"vit_servicing_station_lib::v0::genesis_block"],[6998,"vit_servicing_station_lib::v0::result"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Timestamp for the latest update of the current snapshot","","","","","","","","Tag - a unique identifier of the current snapshot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Insert a token asynchronously. This method is a wrapper …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …elper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …eturns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Server binding address","If none provided, echos request origin","block0 static file path","archive block0 static file path","Path to server X.509 certificate chain file, must be …","","","Database url","","","Enable API Tokens feature","Load settings from file","","","If none provided, CORS responses won’t be cached","Dump current settings to file","Path to server private key file, must be PKCS8 with single …","","","","","","","","","","Settings environment variables names","","","","","","","","","","","","","","","Server binding address","If none provided, echos request origin","","","","","","","","","","block0 static file path","archive block0 static file path","","","","","","","","","","","","","","","","","Path to server X.509 certificate chain file, must be …","","","","","","","","","","","","","","","","","","","","","","","","Database url","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable API Tokens feature","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Load settings from file","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Application logging level","Output log file path","If none provided, CORS responses won’t be cached","Dump current settings to file","","","Path to server private key file, must be PKCS8 with single …","","","","","","","","","","","","","","","","","","Enable the OTLP trace data exporter and set the collector…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Removes all but the last occurrence of elements that …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Header where token should be present in requests","API Token wrapper type","API token manager is an abstraction on the API tokens for …","","","A warp filter that checks authorization through API tokens.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Raw Snapshot information update with timestamp.","Snapshot information update with timestamp.","","","Voter information in the current snapshot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Timestamp for the latest update in voter info in the …","Timestamp for the latest update in voter info in the …","","","","","","","","","","","","","","","","","","","","","","","A listing of voter information in the current snapshot","","","","","","","","","","","","","","","Raw Snapshot information update with timestamp.","Snapshot information update with timestamp.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","",""],"if":[0,0,0,0,0,0,0,[[]],[[]],[1],[1],[1],[[2,3],4],[[2,3],4],[[]],[[],1],[[]],[5,[[7,[6,2]]]],0,[8],0,0,[[],9],[[],7],[[],7],[[],10],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],11],[11,11],[[]],0,[1],[1],[1],0,[[11,3],4],[[]],[[],1],[[]],[[]],0,[[],7],[[],7],[[],10],[11],[[]],0,0,[[]],[[]],[[]],[[]],[[],12],0,0,[13,13],[12,12],[[]],[[]],[1],[1],[1],[1],0,[14,[[7,[13]]]],[14,[[7,[12]]]],[1],[1],[[13,13],15],[[12,12],15],[[],15],[[],15],[[13,3],4],[[12,3],4],[[]],[[]],0,0,0,[[],1],[[],1],0,[[]],[[]],0,0,[[13,16],7],[[12,16],7],0,0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[12],[[]],[[]],0,0,0,0,0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[],17],[[],18],[[],[[19,[17]]]],[17,17],[18,18],[[]],[[]],[1],[1],[1],[1],[14,[[7,[17]]]],[14,[[7,[18]]]],[1],[1],[[17,17],15],[[18,18],15],[[],15],[[],15],0,0,[[17,3],4],[[18,3],4],[[]],[[]],[20,[[19,[17]]]],0,0,0,[[],1],[[],1],[[]],[[]],0,0,[[17,16],7],[[18,16],7],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[18],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],21],0,0,0,0,[21,21],[22,22],[[]],[[]],[1],[1],[1],[1],[1],[1],[14,[[7,[21]]]],[14,[[7,[22]]]],[1],[1],[1],[[21,21],15],[[22,22],15],[[],15],[[],15],0,[[21,3],4],[[22,3],4],[[]],[[]],[21,23],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[21,16],7],[[22,16],7],[[23,16],7],0,0,0,0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[21],0,0,0,0,[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[24,24],[25,25],[[]],[[]],[1],[1],[1],[1],[14,[[7,[24]]]],[14,[[7,[25]]]],[1],[1],[[24,24],15],[[],15],[[24,3],4],[[25,3],4],[[]],[[]],[24,25],0,0,0,0,0,[[],1],[[],1],[[]],[[]],[[24,16],7],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[25],[25],[[]],[[]],0,[[]],[[]],[[]],[[],26],[26,26],[[]],[[26,26],27],[1],[1],[14,[[7,[26]]]],[1],[[26,26],15],[[],15],[[26,3],4],[[]],0,0,[[],1],[[]],[[26,26],[[20,[27]]]],[[26,16],7],[[]],0,[[],7],[[],7],[[],10],[26],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],28],[[],29],[[],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,31],[32,32],[33,33],[28,28],[34,34],[29,29],[35,35],[30,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[14,[[7,[31]]]],[14,[[7,[32]]]],[14,[[7,[33]]]],[14,[[7,[28]]]],[14,[[7,[34]]]],[14,[[7,[36]]]],[14,[[7,[29]]]],[14,[[7,[35]]]],[14,[[7,[30]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[31,31],15],[[32,32],15],[[33,33],15],[[28,28],15],[[34,34],15],[[29,29],15],[[35,35],15],[[30,30],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,[[31,3],4],[[32,3],4],[[33,3],4],[[33,3],4],[[28,3],4],[[34,3],4],[[29,3],4],[[35,3],4],[[30,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[34,36],[[]],[[]],[[]],[5,7],[5,[[7,[33]]]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[31,16],7],[[32,16],7],[[33,16],7],[[28,16],7],[[34,16],7],[[36,16],7],[[29,16],7],[[35,16],7],[[30,16],7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[36,[[7,[34]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[28],[30],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[37,37],[[]],[1],[1],[14,[[7,[37]]]],[1],[[37,37],15],[[],15],[[37,3],4],[[]],[[],1],[[]],0,0,0,0,[[37,16],7],[[]],[[37,5],38],[[],7],[[],7],[[],10],[[]],0,0,[[]],[[]],[39,39],[[]],[1],[1],[14,[[7,[39]]]],[1],[[39,39],15],[[],15],[[39,3],4],[[]],[[],1],[[]],0,[[39,16],7],[[]],[[39,5],40],[[],7],[[],7],[[],10],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],41],[[],42],[[],43],[41,41],[42,42],[43,43],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[14,[[7,[41]]]],[14,[[7,[42]]]],[14,[[7,[43]]]],[1],[1],[1],[[41,41],15],[[42,42],15],[[43,43],15],[[],15],[[],15],[[],15],[[41,3],4],[[42,3],4],[[43,3],4],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[]],[[]],[[]],0,0,[[41,16],7],[[42,16],7],[[43,16],7],0,0,0,0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],0,[41],[41],[42],[42],[43],[43],0,0,0,0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],[[],44],0,0,[44,44],[[]],[1],[1],[14,[[7,[44]]]],[1],[[44,44],15],[[44,3],4],0,[[]],[[],1],[[]],0,0,[[44,16],7],0,[[]],[[],7],[[],7],[[],10],[44],0,[[]],0,0,[45,9],[[]],[[]],[45,45],[[]],[1],[1],[14,[[7,[45]]]],[1],[[45,45],15],[[],15],[[45,3],4],[[]],[[[46,[9]]],45],[[],1],[[]],[5,45],[[45,16],7],[[]],[45,[[46,[9]]]],[[],7],[[],7],[[],10],[[]],0,[[]],[[]],[[]],[[],47],0,0,0,0,0,0,[47,47],[[]],[1],[1],[14,[[7,[47]]]],[1],[[47,47],15],[[],15],[[47,3],4],[[]],0,0,[[],1],[[]],[[47,16],7],[[]],0,[[],7],[[],7],[[],10],[47],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[48,[[49,[1]]]],[[50,6],[[7,[51]]]],[[11,48],[[49,[1]]]],[[50,6],[[7,[[20,[11]],51]]]],[48,[[7,[[20,[11]],52]]]],0,0,0,0,0,[48,[[49,[1]]]],[6,[[7,[[46,[12]],51]]]],[[53,6],[[7,[12,51]]]],[[53,6],[[7,[[46,[28]],51]]]],[[53,9,6],[[7,[[46,[28]],51]]]],[[53,6],[[7,[[46,[12]],51]]]],0,[48,[[49,[1]]]],[[53,6],[[7,[[46,[18]],51]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[1],[1],[1],[1],[14,[[7,[54]]]],[14,[[7,[55]]]],[1],[1],[[54,3],4],[[55,3],4],[[]],[[]],0,0,0,[[],1],[[],1],[[21,48],[[49,[21]]]],[[]],[[]],[[21,48],[[7,[21,51]]]],0,[[21,6],[[7,[51]]]],[6,[[7,[[46,[53]],51]]]],[6,[[7,[54,51]]]],[[53,6],[[7,[21,51]]]],[[54,16],7],[[55,16],7],0,[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[]],[[]],[[[46,[25]],48],[[49,[1]]]],[48,[[49,[1]]]],0,0,0,[48,[[49,[1]]]],[[56,48],[[49,[1]]]],[48,[[49,[1]]]],[[56,48],[[49,[1]]]],[48,[[49,[1]]]],[[28,48],[[49,[1]]]],[[6,9],[[7,[[46,[29]],51]]]],[[53,9,6],[[7,[29,51]]]],[[9,[46,[57]],6],[[7,[[46,[29]],51]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[[46,[58]],[46,[59]]],[[7,[[62,[60,61]],51]]]],[[[46,[58]],[46,[59]]],[[7,[[62,[63,61]],51]]]],[64,64],[[]],[1],[1],[1],[[],[[7,[1,52]]]],[[64,3],4],[[]],[[],1],[[]],[65,[[7,[57,51]]]],[65,[[7,[57,51]]]],[[66,48],[[7,[67,51]]]],[[68,48],[[7,[57,51]]]],[[68,6],[[7,[57,51]]]],[[66,6],[[7,[67,51]]]],[[]],[[],7],[[],7],[[],10],[[]],[[64,[69,[61]]],49],0,0,0,0,0,0,0,0,0,[48,[[7,[51]]]],[48,[[7,[51]]]],[[41,6],[[7,[51]]]],[6,[[7,[[46,[41]],51]]]],[[9,6],[[7,[[46,[43]],51]]]],[[9,9,6],[[7,[[46,[43]],51]]]],[[9,9,9,6],[[7,[[46,[43]],51]]]],[[9,6],[[7,[41,51]]]],[[9,9,6],[[7,[57,51]]]],[[9,6],[[7,[[46,[42]],51]]]],[[9,9,6],[[7,[[46,[42]],51]]]],0,[48,[[49,[[46,[47]]]]]],[[47,48],[[49,[47]]]],[[53,6],[[7,[[46,[47]],51]]]],0,[48,[[49,[1]]]],[[9,9,6],[[7,[[46,[44]],51]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[70],[[]],[[]],[70,70],[[]],0,[70],[1],[1],[[]],[1],0,[[70,3],4],[[]],[[]],[70],[[],1],[[]],[70,71],[72],[57],[57],[70],[70,73],0,[[]],[[]],[[],7],[[],7],[[],10],[70],[70],[[]],[[]],[[]],[[]],[[74,75]],[[76,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[77,77],[74,74],[76,76],[[]],[[]],[[]],[[]],0,[[],77],[[],74],[[],76],[1],[1],[1],[1],[1],[1],[1],[1],[[74,75]],[[76,75]],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],0,[[73,3],4],[[77,3],4],[[74,3],4],[[76,3],4],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[74,75]],[[76,75]],0,[[74,75]],[[76,75]],[[]],[[]],[[]],[[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[73,[69,[61]]],49],[[77,[69,[61]]],49],[[74,[69,[61]]],49],[[76,[69,[61]]],49],0,0,0,0,0,0,0,0,0,[[]],[[]],0,[60],[[]],[[]],[60,60],[[]],0,[60],[1],[1],[[]],[1],0,[[60,3],4],[[]],[[]],[60],[[],1],[[]],[60,71],[72],[57],[57],[60],[60,78],0,[[]],[[]],[[],7],[[],7],[[],10],[60],[60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[79,75]],[[80,75]],[[81,75]],[[82,75]],[[83,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[78,78],[79,79],[80,80],[84,84],[85,85],[86,86],[81,81],[82,82],[83,83],[87,87],[88,88],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],79],[[],80],[[],84],[[],85],[[],86],[[],81],[[],82],[[],83],[[],87],[[],88],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,[[79,75]],[[80,75]],[[81,75]],[[82,75]],[[83,75]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[78,3],4],[[79,3],4],[[80,3],4],[[84,3],4],[[85,3],4],[[86,3],4],[[81,3],4],[[82,3],4],[[83,3],4],[[87,3],4],[[88,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[79,75]],[[80,75]],[[81,75]],[[82,75]],[[83,75]],0,0,0,[[79,75]],[[80,75]],[[81,75]],[[82,75]],[[83,75]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[78,[69,[61]]],49],[[79,[69,[61]]],49],[[80,[69,[61]]],49],[[84,[69,[61]]],49],[[85,[69,[61]]],49],[[86,[69,[61]]],49],[[81,[69,[61]]],49],[[82,[69,[61]]],49],[[83,[69,[61]]],49],[[87,[69,[61]]],49],[[88,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[89],[[]],[[]],[89,89],[[]],0,[89],[1],[1],[[]],[1],0,[[89,3],4],[[]],[[]],[89],[[],1],[[]],[89,71],[72],[57],[57],[89],[89,90],0,[[]],[[]],[[],7],[[],7],[[],10],[89],[89],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[91,75]],[[92,75]],[[93,75]],[[94,75]],[[95,75]],[[96,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[90,90],[91,91],[92,92],[97,97],[93,93],[98,98],[94,94],[99,99],[95,95],[100,100],[96,96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],91],[[],92],[[],97],[[],93],[[],98],[[],94],[[],99],[[],95],[[],100],[[],96],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[91,75]],[[92,75]],[[93,75]],[[94,75]],[[95,75]],[[96,75]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],0,0,[[90,3],4],[[91,3],4],[[92,3],4],[[97,3],4],[[93,3],4],[[98,3],4],[[94,3],4],[[99,3],4],[[95,3],4],[[100,3],4],[[96,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[91,75]],[[92,75]],[[93,75]],[[94,75]],[[95,75]],[[96,75]],0,0,0,[[91,75]],[[92,75]],[[93,75]],[[94,75]],[[95,75]],[[96,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[90,[69,[61]]],49],[[91,[69,[61]]],49],[[92,[69,[61]]],49],[[97,[69,[61]]],49],[[93,[69,[61]]],49],[[98,[69,[61]]],49],[[94,[69,[61]]],49],[[99,[69,[61]]],49],[[95,[69,[61]]],49],[[100,[69,[61]]],49],[[96,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[101],[[]],[[]],[101,101],[[]],0,[101],[1],[1],[[]],[1],0,[[101,3],4],[[]],[[]],[101],[[],1],[[]],[101,71],[72],[57],[57],[101],[101,102],0,[[]],[[]],[[],7],[[],7],[[],10],[101],[101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[103,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[102,102],[104,104],[105,105],[103,103],[106,106],[107,107],[108,108],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],104],[[],105],[[],103],[[],106],[[],107],[[],108],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[103,75]],[1],[1],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[102,3],4],[[104,3],4],[[105,3],4],[[103,3],4],[[106,3],4],[[107,3],4],[[108,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[103,75]],0,0,0,0,[[103,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[102,[69,[61]]],49],[[104,[69,[61]]],49],[[105,[69,[61]]],49],[[103,[69,[61]]],49],[[106,[69,[61]]],49],[[107,[69,[61]]],49],[[108,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[109],[[]],[[]],[109,109],[[]],0,[109],[1],[1],[[]],[1],0,[[109,3],4],[[]],[[]],[109],[[],1],[[]],[109,71],[72],[57],[57],[109],[109,110],0,[[]],[[]],[[],7],[[],7],[[],10],[109],[109],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[111,75]],[[112,75]],[[113,75]],[[114,75]],[[115,75]],[[116,75]],[[117,75]],[[118,75]],[[119,75]],[[120,75]],[[121,75]],[[122,75]],[[123,75]],[[124,75]],[[125,75]],[[126,75]],[[127,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110,110],[111,111],[128,128],[129,129],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[130,130],[131,131],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],111],[[],128],[[],129],[[],112],[[],113],[[],114],[[],115],[[],116],[[],117],[[],118],[[],119],[[],120],[[],121],[[],122],[[],123],[[],124],[[],125],[[],126],[[],127],[[],130],[[],131],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[111,75]],[[112,75]],[[113,75]],[[114,75]],[[115,75]],[[116,75]],[[117,75]],[[118,75]],[[119,75]],[[120,75]],[[121,75]],[[122,75]],[[123,75]],[[124,75]],[[125,75]],[[126,75]],[[127,75]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],0,[[110,3],4],[[111,3],4],[[128,3],4],[[129,3],4],[[112,3],4],[[113,3],4],[[114,3],4],[[115,3],4],[[116,3],4],[[117,3],4],[[118,3],4],[[119,3],4],[[120,3],4],[[121,3],4],[[122,3],4],[[123,3],4],[[124,3],4],[[125,3],4],[[126,3],4],[[127,3],4],[[130,3],4],[[131,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[111,75]],[[112,75]],[[113,75]],[[114,75]],[[115,75]],[[116,75]],[[117,75]],[[118,75]],[[119,75]],[[120,75]],[[121,75]],[[122,75]],[[123,75]],[[124,75]],[[125,75]],[[126,75]],[[127,75]],0,0,0,0,0,0,0,0,0,[[111,75]],[[112,75]],[[113,75]],[[114,75]],[[115,75]],[[116,75]],[[117,75]],[[118,75]],[[119,75]],[[120,75]],[[121,75]],[[122,75]],[[123,75]],[[124,75]],[[125,75]],[[126,75]],[[127,75]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[110,[69,[61]]],49],[[111,[69,[61]]],49],[[128,[69,[61]]],49],[[129,[69,[61]]],49],[[112,[69,[61]]],49],[[113,[69,[61]]],49],[[114,[69,[61]]],49],[[115,[69,[61]]],49],[[116,[69,[61]]],49],[[117,[69,[61]]],49],[[118,[69,[61]]],49],[[119,[69,[61]]],49],[[120,[69,[61]]],49],[[121,[69,[61]]],49],[[122,[69,[61]]],49],[[123,[69,[61]]],49],[[124,[69,[61]]],49],[[125,[69,[61]]],49],[[126,[69,[61]]],49],[[127,[69,[61]]],49],[[130,[69,[61]]],49],[[131,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[132],[[]],[[]],[132,132],[[]],0,[132],[1],[1],[[]],[1],0,[[132,3],4],[[]],[[]],[132],[[],1],[[]],[132,71],[72],[57],[57],[132],[132,133],0,[[]],[[]],[[],7],[[],7],[[],10],[132],[132],[[]],[[]],[[]],[[]],[[134,75]],[[135,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133,133],[134,134],[136,136],[135,135],[[]],[[]],[[]],[[]],[[],134],[[],136],[[],135],[1],[1],[1],[1],[1],[1],[1],[1],[[134,75]],[[135,75]],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[133,3],4],[[134,3],4],[[136,3],4],[[135,3],4],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[134,75]],[[135,75]],0,[[134,75]],[[135,75]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[133,[69,[61]]],49],[[134,[69,[61]]],49],[[136,[69,[61]]],49],[[135,[69,[61]]],49],0,0,0,0,0,0,0,0,0,[[]],[[]],0,[137],[[]],[[]],[137,137],[[]],0,[137],[1],[1],[[]],[1],0,[[137,3],4],[[]],[[]],[137],[[],1],[[]],[137,71],[72],[57],[57],[137],[137,138],0,[[]],[[]],[[],7],[[],7],[[],10],[137],[137],[[]],[[]],[[]],[[]],[[139,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138,138],[139,139],[140,140],[141,141],[[]],[[]],[[]],[[]],[[],139],[[],140],[[],141],[1],[1],[1],[1],[1],[1],[1],[1],[[139,75]],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[138,3],4],[[139,3],4],[[140,3],4],[[141,3],4],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[139,75]],0,[[139,75]],[[]],[[]],[[]],[[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[138,[69,[61]]],49],[[139,[69,[61]]],49],[[140,[69,[61]]],49],[[141,[69,[61]]],49],0,0,0,0,0,0,0,0,0,[[]],[[]],0,[142],[[]],[[]],[142,142],[[]],0,[142],[1],[1],[[]],[1],0,[[142,3],4],[[]],[[]],[142],[[],1],[[]],[142,71],[72],[57],[57],[142],[142,143],0,[[]],[[]],[[],7],[[],7],[[],10],[142],[142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[[]],[[]],[[]],[[]],[[]],[[]],[[],144],[[],145],[[],146],[[],147],[[],148],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[143,3],4],[[144,3],4],[[145,3],4],[[146,3],4],[[147,3],4],[[148,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[143,[69,[61]]],49],[[144,[69,[61]]],49],[[145,[69,[61]]],49],[[146,[69,[61]]],49],[[147,[69,[61]]],49],[[148,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[149],[[]],[[]],[149,149],[[]],0,[149],[1],[1],[[]],[1],0,[[149,3],4],[[]],[[]],[149],[[],1],[[]],[149,71],[72],[57],[57],[149],[149,150],0,[[]],[[]],[[],7],[[],7],[[],10],[149],[149],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150,150],[151,151],[152,152],[[]],[[]],[[]],[[],151],[[],152],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[150,3],4],[[151,3],4],[[152,3],4],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[150,[69,[61]]],49],[[151,[69,[61]]],49],[[152,[69,[61]]],49],0,0,0,0,0,0,0,[[]],[[]],0,[153],[[]],[[]],[153,153],[[]],0,[153],[1],[1],[[]],[1],0,[[153,3],4],[[]],[[]],[153],[[],1],[[]],[153,71],[72],[57],[57],[153],[153,154],0,[[]],[[]],[[],7],[[],7],[[],10],[153],[153],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[155,75]],[[156,75]],[[157,75]],[[158,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[154,154],[155,155],[159,159],[160,160],[161,161],[162,162],[163,163],[156,156],[164,164],[165,165],[157,157],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[158,158],[172,172],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],155],[[],159],[[],160],[[],161],[[],162],[[],163],[[],156],[[],164],[[],165],[[],157],[[],166],[[],167],[[],168],[[],169],[[],170],[[],171],[[],158],[[],172],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[155,75]],[[156,75]],[[157,75]],[[158,75]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],0,[[154,3],4],[[155,3],4],[[159,3],4],[[160,3],4],[[161,3],4],[[162,3],4],[[163,3],4],[[156,3],4],[[164,3],4],[[165,3],4],[[157,3],4],[[166,3],4],[[167,3],4],[[168,3],4],[[169,3],4],[[170,3],4],[[171,3],4],[[158,3],4],[[172,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[155,75]],[[156,75]],[[157,75]],[[158,75]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[155,75]],[[156,75]],[[157,75]],[[158,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[154,[69,[61]]],49],[[155,[69,[61]]],49],[[159,[69,[61]]],49],[[160,[69,[61]]],49],[[161,[69,[61]]],49],[[162,[69,[61]]],49],[[163,[69,[61]]],49],[[156,[69,[61]]],49],[[164,[69,[61]]],49],[[165,[69,[61]]],49],[[157,[69,[61]]],49],[[166,[69,[61]]],49],[[167,[69,[61]]],49],[[168,[69,[61]]],49],[[169,[69,[61]]],49],[[170,[69,[61]]],49],[[171,[69,[61]]],49],[[158,[69,[61]]],49],[[172,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[173],[[]],[[]],[173,173],[[]],0,[173],[1],[1],[[]],[1],0,[[173,3],4],[[]],[[]],[173],[[],1],[[]],[173,71],[72],[57],[57],[173],[173,174],0,[[]],[[]],[[],7],[[],7],[[],10],[173],[173],[[]],[[]],[[]],[[]],[[]],[[175,75]],[[176,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[174,174],[175,175],[177,177],[178,178],[176,176],[[]],[[]],[[]],[[]],[[]],[[],175],[[],177],[[],178],[[],176],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[175,75]],[[176,75]],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[174,3],4],[[175,3],4],[[177,3],4],[[178,3],4],[[176,3],4],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[175,75]],[[176,75]],0,0,[[175,75]],[[176,75]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[174,[69,[61]]],49],[[175,[69,[61]]],49],[[177,[69,[61]]],49],[[178,[69,[61]]],49],[[176,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[179],[[]],[[]],[179,179],[[]],0,[179],[1],[1],[[]],[1],0,[[179,3],4],[[]],[[]],[179],[[],1],[[]],[179,71],[72],[57],[57],[179],[179,180],0,[[]],[[]],[[],7],[[],7],[[],10],[179],[179],[[]],[[]],[[]],[[181,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[180,180],[182,182],[181,181],[[]],[[]],[[]],[[],182],[[],181],[1],[1],[1],[1],[1],[1],[[181,75]],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[180,3],4],[[182,3],4],[[181,3],4],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[]],[[]],[[]],0,[[181,75]],0,[[181,75]],0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[180,[69,[61]]],49],[[182,[69,[61]]],49],[[181,[69,[61]]],49],0,0,0,0,0,0,0,[[]],[[]],0,[183],[[]],[[]],[183,183],[[]],0,[183],[1],[1],[[]],[1],0,[[183,3],4],[[]],[[]],[183],[[],1],[[]],[183,71],[72],[57],[57],[183],[183,184],0,[[]],[[]],[[],7],[[],7],[[],10],[183],[183],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[185,75]],[[186,75]],[[187,75]],[[188,75]],[[189,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[184,184],[185,185],[190,190],[186,186],[187,187],[188,188],[191,191],[192,192],[189,189],[193,193],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],185],[[],190],[[],186],[[],187],[[],188],[[],191],[[],192],[[],189],[[],193],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[185,75]],[[186,75]],[[187,75]],[[188,75]],[[189,75]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[184,3],4],[[185,3],4],[[190,3],4],[[186,3],4],[[187,3],4],[[188,3],4],[[191,3],4],[[192,3],4],[[189,3],4],[[193,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[185,75]],[[186,75]],[[187,75]],[[188,75]],[[189,75]],0,[[185,75]],[[186,75]],[[187,75]],[[188,75]],[[189,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[184,[69,[61]]],49],[[185,[69,[61]]],49],[[190,[69,[61]]],49],[[186,[69,[61]]],49],[[187,[69,[61]]],49],[[188,[69,[61]]],49],[[191,[69,[61]]],49],[[192,[69,[61]]],49],[[189,[69,[61]]],49],[[193,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[194],[[]],[[]],[194,194],[[]],0,[194],[1],[1],[[]],[1],0,[[194,3],4],[[]],[[]],[194],[[],1],[[]],[194,71],[72],[57],[57],[194],[194,195],0,[[]],[[]],[[],7],[[],7],[[],10],[194],[194],[[]],[[]],[[]],[[]],[[]],[[196,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[195,195],[197,197],[196,196],[198,198],[199,199],[[]],[[]],[[]],[[]],[[]],[[],197],[[],196],[[],198],[[],199],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[196,75]],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[195,3],4],[[197,3],4],[[196,3],4],[[198,3],4],[[199,3],4],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[196,75]],0,0,[[196,75]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[]],[[]],[[195,[69,[61]]],49],[[197,[69,[61]]],49],[[196,[69,[61]]],49],[[198,[69,[61]]],49],[[199,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[200],[[]],[[]],[200,200],[[]],0,[200],[1],[1],[[]],[1],0,[[200,3],4],[[]],[[]],[200],[[],1],[[]],[200,71],[72],[57],[57],[200],[200,201],0,[[]],[[]],[[],7],[[],7],[[],10],[200],[200],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[202,75]],[[203,75]],[[204,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[201,201],[205,205],[206,206],[202,202],[207,207],[203,203],[204,204],[208,208],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],205],[[],206],[[],202],[[],207],[[],203],[[],204],[[],208],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[202,75]],[[203,75]],[[204,75]],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[201,3],4],[[205,3],4],[[206,3],4],[[202,3],4],[[207,3],4],[[203,3],4],[[204,3],4],[[208,3],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[202,75]],[[203,75]],[[204,75]],0,0,0,[[202,75]],[[203,75]],[[204,75]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[201,[69,[61]]],49],[[205,[69,[61]]],49],[[206,[69,[61]]],49],[[202,[69,[61]]],49],[[207,[69,[61]]],49],[[203,[69,[61]]],49],[[204,[69,[61]]],49],[[208,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[63],[[]],[[]],[63,63],[[]],0,[63],[1],[1],[[]],[1],0,[[63,3],4],[[]],[[]],[63],[[],1],[[]],[63,71],[72],[57],[57],[63],[63,209],0,[[]],[[]],[[],7],[[],7],[[],10],[63],[63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[210,75]],[[211,75]],[[212,75]],[[213,75]],[[214,75]],[[215,75]],[[216,75]],[[217,75]],[[218,75]],[[219,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[209,209],[210,210],[220,220],[221,221],[222,222],[223,223],[224,224],[211,211],[225,225],[226,226],[212,212],[227,227],[228,228],[229,229],[230,230],[231,231],[232,232],[213,213],[233,233],[214,214],[215,215],[216,216],[217,217],[234,234],[235,235],[218,218],[236,236],[237,237],[238,238],[239,239],[240,240],[241,241],[219,219],[242,242],[243,243],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],210],[[],220],[[],221],[[],222],[[],223],[[],224],[[],211],[[],225],[[],226],[[],212],[[],227],[[],228],[[],229],[[],230],[[],231],[[],232],[[],213],[[],233],[[],214],[[],215],[[],216],[[],217],[[],234],[[],235],[[],218],[[],236],[[],237],[[],238],[[],239],[[],240],[[],241],[[],219],[[],242],[[],243],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[210,75]],[[211,75]],[[212,75]],[[213,75]],[[214,75]],[[215,75]],[[216,75]],[[217,75]],[[218,75]],[[219,75]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],[[],[[7,[1,52]]]],0,[[209,3],4],[[210,3],4],[[220,3],4],[[221,3],4],[[222,3],4],[[223,3],4],[[224,3],4],[[211,3],4],[[225,3],4],[[226,3],4],[[212,3],4],[[227,3],4],[[228,3],4],[[229,3],4],[[230,3],4],[[231,3],4],[[232,3],4],[[213,3],4],[[233,3],4],[[214,3],4],[[215,3],4],[[216,3],4],[[217,3],4],[[234,3],4],[[235,3],4],[[218,3],4],[[236,3],4],[[237,3],4],[[238,3],4],[[239,3],4],[[240,3],4],[[241,3],4],[[219,3],4],[[242,3],4],[[243,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[210,75]],[[211,75]],[[212,75]],[[213,75]],[[214,75]],[[215,75]],[[216,75]],[[217,75]],[[218,75]],[[219,75]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[210,75]],[[211,75]],[[212,75]],[[213,75]],[[214,75]],[[215,75]],[[216,75]],[[217,75]],[[218,75]],[[219,75]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[209,[69,[61]]],49],[[210,[69,[61]]],49],[[220,[69,[61]]],49],[[221,[69,[61]]],49],[[222,[69,[61]]],49],[[223,[69,[61]]],49],[[224,[69,[61]]],49],[[211,[69,[61]]],49],[[225,[69,[61]]],49],[[226,[69,[61]]],49],[[212,[69,[61]]],49],[[227,[69,[61]]],49],[[228,[69,[61]]],49],[[229,[69,[61]]],49],[[230,[69,[61]]],49],[[231,[69,[61]]],49],[[232,[69,[61]]],49],[[213,[69,[61]]],49],[[233,[69,[61]]],49],[[214,[69,[61]]],49],[[215,[69,[61]]],49],[[216,[69,[61]]],49],[[217,[69,[61]]],49],[[234,[69,[61]]],49],[[235,[69,[61]]],49],[[218,[69,[61]]],49],[[236,[69,[61]]],49],[[237,[69,[61]]],49],[[238,[69,[61]]],49],[[239,[69,[61]]],49],[[240,[69,[61]]],49],[[241,[69,[61]]],49],[[219,[69,[61]]],49],[[242,[69,[61]]],49],[[243,[69,[61]]],49],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[244,245],[[[0,[246,247,248,249]],250],[[251,[[0,[246,247,248,249]]]]]],[[[0,[246,247,248,249]],[20,[252]]]],[[[0,[246,247,248,249]],252]],0,0,0,0,0,0,0,0,[[]],[[]],[1],[1],[1],[[]],[[],1],[[]],[253,254],[[],7],[[],7],[[],10],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,252],[[7,[255]]]],0,0,[5,[[7,[252,255]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[256,5],[257,257],[257,257],[257,257],[257,257],[257,257],[257,257],[257,257],[257,257],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[252,252],[250,250],[256,256],[258,258],[244,244],[259,259],[260,260],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],257],[[],257],[[],257],[[],257],[[],257],[[],257],[[],257],[[],257],0,0,[[],252],[[],250],[[],256],[[],258],[[],244],[[],259],[[],260],[1],[1],[1],[1],[1],[258],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[14,[[7,[252]]]],[14,[[7,[250]]]],[14,[[7,[256]]]],[14,[[7,[258]]]],[14,[[7,[244]]]],[14,[[7,[259]]]],[14,[[7,[260]]]],[1],[1],[1],[1],[1],[1],[1],[1],[[5,252],[[7,[255]]]],0,[[252,252],15],[[250,250],15],[[256,256],15],[[258,258],15],[[244,244],15],[[259,259],15],[[260,260],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[261,3],4],[3,[[7,[262]]]],[[252,3],4],[[250,3],4],[[256,3],4],[[258,3],4],[[244,3],4],[[259,3],4],[[259,3],4],[[260,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[263,[[7,[252,264]]]],[263,[[7,[250,264]]]],[263,[[7,[244,264]]]],[263,[[7,[260,264]]]],[263,[[7,[252,264]]]],[263,[[7,[250,264]]]],[263,[[7,[244,264]]]],[263,[[7,[260,264]]]],[5,7],[5,[[7,[256]]]],[5,[[7,[259]]]],[5,7],[[],[[20,[265]]]],[[],[[20,[265]]]],[[],[[20,[265]]]],[[],[[20,[265]]]],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[250,15],[5,[[7,[252,255]]]],0,0,0,0,0,[[252,252],252],[5,[[7,[258,266]]]],0,[[252,16],7],[[250,16],7],[[256,16],7],[[258,16],7],[[244,16],7],[[259,16],7],[[260,16],7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[252,263],[[7,[264]]]],[[250,263],[[7,[264]]]],[[244,263],[[7,[264]]]],[[260,263],[[7,[264]]]],[[252,263],[[7,[264]]]],[[250,263],[[7,[264]]]],[[244,263],[[7,[264]]]],[[260,263],[[7,[264]]]],[[261,5],[[7,[267]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],0,0,0,[[56,268],46],[57,269],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[14,[[7,[270]]]],[14,[[7,[57]]]],[14,[[7,[[46,[271]]]]]],[14,[[7,[15]]]],[14,[[7,[57]]]],[14,[[7,[45]]]],[1],[1],[1],[1],[1],[[272,3],4],[[273,3],4],[[274,3],4],[[275,3],4],[[276,3],4],[3,[[7,[262]]]],[3,[[7,[262]]]],[3,[[7,[262]]]],[3,[[7,[262]]]],[3,[[7,[262]]]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[16,7],[[270,16],7],[[57,16],7],[[57,16],7],[[45,16],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[272,5],[[7,[269,267]]]],[[273,5],[[7,[[46,[271]],267]]]],[[274,5],[[7,[57,267]]]],[[275,5],[[7,[45,267]]]],[[276,5],[[7,[270,267]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[277,5],[278,5],[279,5],[[]],[[]],[[]],[[]],[[]],[[]],[277,277],[278,278],[279,279],[[]],[[]],[[]],0,[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[280,15],[[0,[246,247]]]],[[]],[[]],[[]],0,[[],1],[[],1],[[],1],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[280,[[0,[246,247]]]],[50],[[9,280],[[7,[281]]]],[[],1],[[]],[[]],[[]],[[]],[[],[[7,[[46,[282,283]]]]]],[50,50],[[]],0,[1],[1],[1],[1],[1],[1],[[],[[285,[284]]]],[[],[[285,[284]]]],[[50,50],15],[[],15],[[50,3],4],[[]],[[],50],[[]],[[],1],[[],1],[[]],[[]],[[286,50],[[7,[15,51]]]],[6,286],[[[46,[271]]],50],[[286,50],7],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[]],[[]],[[],7],0,0,0,[[]],[[]],[287,287],[[]],0,[1],[1],[1],[[]],[[],1],[[]],[[6,[46,[288]],9],287],[[6,[46,[289]],5],280],[[]],[[],7],[[],7],[[],10],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[290,5],[291,5],[292,5],[293,5],[294,5],[295,5],[296,5],[297,5],[298,5],[299,5],[300,5],[301,5],[302,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[290,290],[291,291],[292,292],[293,293],[294,294],[295,295],[296,296],[297,297],[298,298],[299,299],[300,300],[301,301],[302,302],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[303,280,15],[[0,[246,247]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[53,280],[[7,[304,281]]]],0,[[53,280],[[7,[305,51]]]],[[[46,[18]]],305],0,0,[[303,280],[[0,[246,247]]]],0,[[]],[[]],[1],[1],[14,[[7,[305]]]],[1],[[]],[[],1],[[]],[[305,16],7],[[],7],[[],7],[[],10],[[]],0,0,[[303,280],[[0,[246,247]]]],0,0,0,0,0,0,0,0,[[53,280],[[7,[304,281]]]],[[53,9,280],[[7,[304,281]]]],[280,[[7,[304,281]]]],0,0,0,[280,[[7,[[46,[12]],51]]]],[[53,280],[[7,[306,51]]]],[[53,9,280],[[7,[306,51]]]],0,0,[[303,280],[[0,[246,247]]]],0,[[]],[[]],0,[1],[1],[14,[[7,[306]]]],[1],[[]],[[],1],[[]],0,[[306,16],7],[[],7],[[],7],[[],10],[[]],0,0,0,0,0,0,0,0,0,[280,[[7,[304,281]]]],[280,[[7,[304,281]]]],[[53,280],[[7,[304,281]]]],[[21,280],[[7,[304,281]]]],0,0,0,0,[280,[[7,[[46,[53]],51]]]],[280,[[7,[54,51]]]],[[53,280],[[7,[21,51]]]],[[21,280],[[7,[51]]]],0,0,0,[280,[[0,[246,247]]]],[[303,280],[[0,[246,247]]]],0,0,0,0,0,[280,[[7,[304,281]]]],[[53,280],[[7,[304,281]]]],[[[46,[271]]],[[7,[304,281]]]],0,[[303,280],[[0,[246,247]]]],0,0,0,0,[280,[[7,[304,281]]]],0,0,[[303,280],[[0,[246,247]]]],0,0,0,0,0,[[303,280],[[0,[246,247]]]],[[303,280],[[0,[246,247]]]],0,0,0,0,0,0,[[9,280],[[7,[304,281]]]],[[53,9,280],[[7,[304,281]]]],[[307,280],[[7,[304,281]]]],0,0,0,[[9,280],[[7,[[46,[29]],51]]]],[[53,9,280],[[7,[29,51]]]],[[307,280],[[7,[[46,[29]],51]]]],0,0,[[]],[[]],[1],[1],[14,[[7,[308]]]],[1],[[308,3],4],[[]],0,[[],1],[[]],[[308,16],7],[[],7],[[],7],[[],10],0,[[]],0,0,0,0,[[303,280],[[0,[246,247]]]],[[303,280],[[0,[246,247]]]],0,0,0,[[303,280],[[0,[246,247]]]],[[303,280],[[0,[246,247]]]],0,0,[[66,280],[[7,[304,281]]]],[[68,280],[[7,[304,281]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,66],[68,68],[58,58],[59,59],[309,309],[310,310],[67,67],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[14,[[7,[66]]]],[14,[[7,[68]]]],[14,[[7,[58]]]],[14,[[7,[59]]]],[14,[[7,[309]]]],[14,[[7,[310]]]],[14,[[7,[67]]]],[1],[1],[1],[1],[1],[1],[1],0,[[66,3],4],[[68,3],4],[[58,3],4],[[59,3],4],[[309,3],4],[[310,3],4],[[67,3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67,15],0,0,0,0,[[66,16],7],[[68,16],7],[[58,16],7],[[59,16],7],[[309,16],7],[[310,16],7],[[67,16],7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[303,280],[[0,[246,247]]]],[[303,280],[[0,[246,247]]]],0,[[303,280],[[0,[246,247]]]],0,0,0,0,0,[280,[[7,[304,281]]]],0,[280,[[7,[311,51]]]],0,0,[[303,280],[[0,[246,247]]]],0,[[]],[[]],[1],[1],[14,[[7,[311]]]],[1],[[]],[[],1],[[]],[[311,16],7],0,[[],7],[[],7],[[],10],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[312,312],[313,313],[314,314],[[]],[[]],[[]],0,0,[1],[1],[1],[1],[1],[1],[14,[[7,[312]]]],[14,[[7,[313]]]],[14,[[7,[314]]]],0,0,0,[1],[1],[1],[[312,312],15],[[313,313],15],[[314,314],15],[[],15],[[303,280],[[0,[246,247]]]],[[312,3],4],[[313,3],4],[[314,3],4],[[]],[[]],[[]],[[9,9,280],[[7,[314,51]]]],[[9,9,280],[[7,[313,51]]]],0,[[],1],[[],1],[[],1],[[]],[[]],[[]],0,0,0,0,0,[[312,16],7],[[313,16],7],[[314,16],7],0,0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[315,[247]]],[[315,[247]]]],[[[316,[247]]],[[316,[247]]]],[[]],[[]],[1],[1],[1],[1],[14,[[7,[[315,[317]]]]]],[14,[[7,[[316,[317]]]]]],0,0,[1],[1],[[[315,[318]],315],15],[[],15],[[[315,[319]],3],4],[[[316,[319]],3],4],[[]],[[]],[[9,9,280],[[7,[304,281]]]],[[9,9,280],[[7,[304,281]]]],[[],1],[[],1],[[]],[[]],0,0,[[[315,[320]],16],7],[[[316,[320]],16],7],0,0,[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],0,0,0,[[]],[[]],0,0,0,0,0,[321,5],[322,5],[[]],[[]],[[]],[[]],[321,321],[322,322],[[]],[[]],[1],[1],[1],[1],[1],[1],[[303,280],[[0,[246,247]]]],[[]],[[]],[[],1],[[],1],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],10],[[],10],[[]],[[]],0,0,0,0,0,0,0,[[323,280],[[7,[304,281]]]],0,[[9,9,280],[[7,[[46,[44]],51]]]],0,[[]],[[]],0,[1],[1],[14,[[7,[323]]]],[1],[[323,3],4],[[]],[[],1],[[]],[[323,16],7],[[],7],[[],7],[[],10],0,[[]],0,0,[[303,280],[[0,[246,247]]]],0,0,0,0,0,0,0,0,[[]],[[]],[1],[1],[1],[[51,3],4],[[51,3],4],[[]],[324,51],[281,[[7,[304,281]]]],[[],1],[[]],[51,325],[8],[51,[[20,[255]]]],[51,326],[51,9],[51,325],[51,327],[[],9],[[],7],[[],7],[[],10],[[]],0,0,0,[[]],[[]],[288,288],[[]],[1],[1],[1],[[]],[5,7],[5,[[7,[288]]]],[[],1],[[]],[[288,53],15],[[]],[[],7],[[],7],[[],10],[[]],0,[[]],[[]],[1],[1],[1],[[]],[[],1],[[]],[[[328,[[0,[248,320]]]]],325],[[],7],[[],7],[[],10],[[]]],"c":[],"p":[[15,"usize"],[3,"Error"],[3,"Formatter"],[6,"Result"],[15,"str"],[6,"DbConnectionPool"],[4,"Result"],[3,"Demand"],[3,"String"],[3,"TypeId"],[3,"ApiTokenData"],[3,"Challenge"],[3,"ChallengeHighlights"],[8,"Deserializer"],[15,"bool"],[8,"Serializer"],[4,"ReviewRanking"],[3,"AdvisorReview"],[6,"Result"],[4,"Option"],[3,"Fund"],[3,"FundStageDates"],[3,"FundWithLegacyFields"],[3,"Goal"],[3,"InsertGoal"],[3,"Group"],[4,"Ordering"],[3,"Proposal"],[3,"FullProposalInfo"],[3,"ProposalVotePlan"],[3,"Category"],[3,"Proposer"],[4,"ChallengeType"],[4,"ProposalChallengeInfo"],[3,"ProposalVotePlanCommon"],[3,"SerdeProposalChallengeInfo"],[3,"ChallengeInfo"],[6,"ChallengeSqlValues"],[3,"ChallengeInfo"],[6,"ChallengeSqlValues"],[3,"Snapshot"],[3,"Voter"],[3,"Contribution"],[3,"Vote"],[3,"VoteOptions"],[3,"Vec"],[3,"Voteplan"],[6,"DbConnection"],[6,"QueryResult"],[3,"ApiToken"],[4,"HandleError"],[4,"Error"],[15,"i32"],[3,"FundWithNext"],[3,"FundNextInfo"],[8,"Iterator"],[15,"i64"],[4,"Constraint"],[4,"OrderBy"],[3,"table"],[8,"Backend"],[3,"BoxedSelectStatement"],[3,"table"],[3,"RANDOM"],[15,"u64"],[3,"SearchQuery"],[4,"SearchResponse"],[3,"SearchCountQuery"],[3,"AstPass"],[3,"table"],[3,"UpdateTarget"],[3,"OnClauseWrapper"],[3,"star"],[3,"creation_time"],[8,"AsExpression"],[3,"expire_time"],[3,"token"],[3,"star"],[3,"internal_id"],[3,"id"],[3,"rewards_total"],[3,"proposers_rewards"],[3,"fund_id"],[3,"challenge_type"],[3,"title"],[3,"description"],[3,"challenge_url"],[3,"highlights"],[3,"table"],[3,"star"],[3,"id"],[3,"proposal_id"],[3,"impact_alignment_rating_given"],[3,"feasibility_rating_given"],[3,"auditability_rating_given"],[3,"ranking"],[3,"assessor"],[3,"impact_alignment_note"],[3,"feasibility_note"],[3,"auditability_note"],[3,"table"],[3,"star"],[3,"value"],[3,"stake_public_key"],[3,"reward_address"],[3,"voting_key"],[3,"voting_group"],[3,"snapshot_tag"],[3,"table"],[3,"star"],[3,"id"],[3,"registration_snapshot_time"],[3,"next_registration_snapshot_time"],[3,"voting_power_threshold"],[3,"fund_start_time"],[3,"fund_end_time"],[3,"next_fund_start_time"],[3,"insight_sharing_start"],[3,"proposal_submission_start"],[3,"refine_proposals_start"],[3,"finalize_proposals_start"],[3,"proposal_assessment_start"],[3,"assessment_qa_start"],[3,"snapshot_start"],[3,"voting_start"],[3,"voting_end"],[3,"tallying_end"],[3,"fund_name"],[3,"fund_goal"],[3,"results_url"],[3,"survey_url"],[3,"table"],[3,"star"],[3,"id"],[3,"fund_id"],[3,"goal_name"],[3,"table"],[3,"star"],[3,"fund_id"],[3,"token_identifier"],[3,"group_id"],[3,"table"],[3,"star"],[3,"proposal_id"],[3,"proposal_brief"],[3,"proposal_importance"],[3,"proposal_goal"],[3,"proposal_metrics"],[3,"table"],[3,"star"],[3,"proposal_id"],[3,"proposal_solution"],[3,"table"],[3,"star"],[3,"id"],[3,"proposal_funds"],[3,"proposal_impact_score"],[3,"challenge_id"],[3,"proposal_id"],[3,"proposal_category"],[3,"proposal_title"],[3,"proposal_summary"],[3,"proposal_public_key"],[3,"proposal_url"],[3,"proposal_files_url"],[3,"proposer_name"],[3,"proposer_contact"],[3,"proposer_url"],[3,"proposer_relevant_experience"],[3,"chain_proposal_id"],[3,"chain_vote_options"],[3,"extra"],[3,"table"],[3,"star"],[3,"id"],[3,"chain_proposal_index"],[3,"proposal_id"],[3,"chain_voteplan_id"],[3,"table"],[3,"star"],[3,"last_updated"],[3,"tag"],[3,"table"],[3,"star"],[3,"id"],[3,"chain_vote_start_time"],[3,"chain_vote_end_time"],[3,"chain_committee_end_time"],[3,"fund_id"],[3,"chain_voteplan_id"],[3,"chain_voteplan_payload"],[3,"chain_vote_encryption_key"],[3,"token_identifier"],[3,"table"],[3,"star"],[3,"voting_power"],[3,"voting_key"],[3,"voting_group"],[3,"snapshot_tag"],[3,"table"],[3,"star"],[3,"proposal"],[3,"time"],[3,"choice"],[3,"fragment_id"],[3,"caster"],[3,"voteplan_id"],[3,"raw_fragment"],[3,"star"],[3,"id"],[3,"proposal_funds"],[3,"proposal_impact_score"],[3,"challenge_id"],[3,"reviews_count"],[3,"chain_vote_start_time"],[3,"chain_vote_end_time"],[3,"chain_committee_end_time"],[3,"fund_id"],[3,"chain_proposal_index"],[3,"proposal_id"],[3,"proposal_category"],[3,"proposal_title"],[3,"proposal_summary"],[3,"proposal_public_key"],[3,"proposal_url"],[3,"proposal_files_url"],[3,"proposer_name"],[3,"proposer_contact"],[3,"proposer_url"],[3,"proposer_relevant_experience"],[3,"chain_proposal_id"],[3,"chain_vote_options"],[3,"extra"],[3,"chain_voteplan_payload"],[3,"chain_vote_encryption_key"],[3,"challenge_type"],[3,"proposal_solution"],[3,"proposal_brief"],[3,"proposal_importance"],[3,"proposal_goal"],[3,"proposal_metrics"],[3,"chain_voteplan_id"],[3,"group_id"],[3,"Cors"],[3,"Builder"],[8,"Filter"],[8,"Clone"],[8,"Send"],[8,"Sync"],[3,"Tls"],[3,"TlsServer"],[3,"ServiceSettings"],[4,"ApplicationExitCode"],[3,"ExitCode"],[8,"Error"],[3,"CorsOrigin"],[3,"Command"],[3,"AllowedOrigins"],[4,"LogLevel"],[3,"Log"],[3,"CorsOriginVisitor"],[3,"Error"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"Error"],[8,"Error"],[8,"Fn"],[3,"OffsetDateTime"],[6,"Fraction"],[15,"u8"],[3,"Rfc3339Deserializer"],[3,"VecU8Deserializer"],[3,"I64Deserializer"],[3,"VoteOptionsDeserializer"],[3,"FractionDeserializer"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[6,"SharedContext"],[3,"Rejection"],[3,"u5"],[3,"Global"],[15,"char"],[8,"FromIterator"],[3,"ApiTokenManager"],[3,"Context"],[3,"GenesisBlock"],[3,"PathBuf"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"BoxedFilter"],[8,"Reply"],[3,"GroupedReviews"],[3,"ChallengeWithProposals"],[6,"ProposalsByVoteplanIdAndIndex"],[3,"ProposalVoteplanIdAndIndexes"],[4,"Table"],[4,"Column"],[3,"ServiceVersion"],[3,"VoterInfo"],[3,"VotersInfo"],[3,"DelegatorInfo"],[3,"SnapshotInfoInput"],[3,"RawSnapshotInput"],[8,"Deserialize"],[8,"PartialEq"],[8,"Debug"],[8,"Serialize"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"VoteCasterAndVoteplanId"],[6,"PoolError"],[6,"Response"],[4,"Value"],[3,"StatusCode"],[3,"HandlerResult"],[3,"SerdeToProposalChallengeInfoError"],[13,"Text"],[13,"Range"],[13,"Column"]]},\
"vit_servicing_station_server":{"doc":"","t":"HHHHHHENNNDHHHHHHMLLLLFFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLL","n":["CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","ConfigTracingError","InitSubscriber","InstallOpenTelemetryPipeLine","Io","LogGuard","META","META","META","META","META","META","_nonblocking_worker_guard","borrow","borrow","borrow_mut","borrow_mut","check_and_build_proper_path","config_tracing","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","init","init","into","into","into_request","into_request","main","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"vit_servicing_station_server"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,7,7,8,7,8,0,0,7,8,7,8,7,7,8,8,8,7,8,8,8,8,7,8,7,8,7,8,0,8,8,8,7,8,7,8,7,8,7,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,2],[[3,[5,[4]],[5,[6]]],[[9,[7,8]]]],[10],[10],[10],[10],[10],[7],[10],[[8,11],12],[[8,11],12],[[]],[13,8],[[]],[14,8],[15,8],[[],10],[[],10],[[]],[[]],[[],16],[[],16],[[],17],[18],[8,[[5,[19]]]],[[],20],[[],9],[[],9],[[],9],[[],9],[[],21],[[],21],[[]],[[]]],"c":[],"p":[[3,"Path"],[6,"Result"],[4,"LogLevel"],[3,"PathBuf"],[4,"Option"],[3,"Url"],[3,"LogGuard"],[4,"ConfigTracingError"],[4,"Result"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"TraceError"],[3,"TryInitError"],[3,"Request"],[4,"ApplicationExitCode"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"TypeId"]]},\
"vit_servicing_station_tests":{"doc":"","t":"AAAAAAAAAAAADDLLALLLLMMLLLLLLLLLDLLLALALLLLLMLLLLALLLLDCLLMLLLLLLALLLLLLDLLLLLMLLLLLLLLLLLLLLLLLLDCLLMLLLLALLLLLLLLDLLLMLLLLLLLLLLLLCDCALLLMLLLLALLLLLLLLDLLLMLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLLLCCCCANNENDNDDNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAMLMALMLLLLLLMAMALLLLLLLLMLLLLLLLLLLLLMMDLLLLLLLLMLLLLLLLLLLLLLLLDMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLRDLMLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLMLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLDDDDNDDDDDNDDDNNDDNDDDEDDIMMMMMMMMMMMMMFMMMMMAMMMMMMMMMMMMMFMMMMAMMMMMMMMMMMMMMMMMFKMKMMKMMKMMFFFFMMMMMMMMMMFMMMMMMMMMMMMMMMMMMMMMMMMMFFMMMMMFMMMMMNDELLLLLLLFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLCCCAAACCAADLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLDDLMLLLLLLLLLMMLLLLLLLMMLLLLLLLLMLLMLLMMMMLFMLLMMMMMLLLLLLLLLLMMLLDLLLLLLMLLLLLLLLLLMLLMLLLLLLMLMLLLMLLLLMLLCCCCCCCCCCCCCCCCCAAACCCCADCCLLALLMLLLLLLLLLLLLLLLAMLLLLLDLLLLLLLLLLLLLLMLLMLMLLLLLDLLMLLLLLLLLLMLLLLLLLDLLLLLLLLLLLMLLLLCCCCDLLMLLLLLALLMLLLALCCCAAADLLMMLLLLLMLLLMLLLLLMMLDFMLLLLLLLLMLLLMLLMMMMMMLLLLMMMLDLLLLMLLLLLLLMMMMMLLLMMLLLLMLDLLLLLLLLLLLLLLLLMLMLCDCDDDDCIAMMMLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLAMMMLLLLLMMMMMMMMMLLLLLMMLLLLLKKKKCCCCMMMMMMMMMMMMMMMLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLMLLLMLLLLLLMLLLMLLMLLLMLLMLLLLLNDNNNNELLLLMLLLLLLLLLLLLLLMLLLLLLLLLFFFFMLLMLLLLLLLLLLLDENDFLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLDDDLLLLLLLLLLLMMLMLLLLLAMMMMMLLLLALRDLLLLLLLLLLLMLLMMLLLLLLRDLLLLLLLLLLLMLLMMLLLLLLDLLLLLLLLLLMLLLLLLRDDIDLLLLLLLLLLMLLLLLLLLLMMLLLLLLLLLLLLLLLLLKLMMMLMMLLLLLLLLLLLMMMMLLLLLLLLLLLDLLLLLLLLLLLMLLMLLLMLLLLDDDDDLLLLLLLLLLLLLLLLLLLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLLMMMLLLLLLLLLLLLLLLLLLMLMMMMMLLLLLLLLLLLHDRRMFFLLALLLLFLFFFFLLFALLLLWWNNNDENNMLLLLLLMLLLLLLLLALLLLLLLMLLFFLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLAFDNNNNDEDMMMMMAMAMMFMMMFMMMMMMMAMMNNNNDEMLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLDLMLMLMLMLLLLMLMLLLLLMMLLMLLLMLMLMLLMLMLMLLLLDLLLMLLLLFLLLLFMLLLLLLLLLLLLL","n":["common","cli","clients","data","db","load","logger","paths","raw_snapshot","server","snapshot","startup","VitCli","VitCliCommand","borrow","borrow_mut","commands","default","deref","deref_mut","drop","exe","exe","from","generate_tokens","init","into","new","try_from","try_into","type_id","vzip","VitCliCommand","api_token","borrow","borrow_mut","csv_data","csv_data","db","db","default","deref","deref_mut","drop","exe","from","init","into","new","token","try_from","try_into","type_id","vzip","CsvDataCommand","LoadCsvCommand","borrow","borrow_mut","command","deref","deref_mut","drop","from","init","into","load","load","new","try_from","try_into","type_id","vzip","LoadCsvCommand","advisor_reviews","borrow","borrow_mut","build","challenges","command","db_url","deref","deref_mut","drop","from","funds","goals","groups","init","into","new","proposals","proposals_voteplans","try_from","try_into","type_id","voteplans","vzip","DbCommand","InitDbCommand","borrow","borrow_mut","command","deref","deref_mut","drop","from","init","init","init","into","new","try_from","try_into","type_id","vzip","InitDbCommand","borrow","borrow_mut","build","command","db_url","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","vzip","ApiTokenAddCommand","ApiTokenCommand","ApiTokenGenerateCommand","add","add","borrow","borrow_mut","command","deref","deref_mut","drop","from","generate","generate","init","into","new","try_from","try_into","type_id","vzip","ApiTokenAddCommand","borrow","borrow_mut","build","command","db_url","deref","deref_mut","drop","from","init","into","new","tokens","tokens_as_str","try_from","try_into","type_id","vzip","ApiTokenGenerateCommand","borrow","borrow_mut","build","command","deref","deref_mut","drop","from","init","into","n","new","size","try_from","try_into","type_id","vzip","RawRestClient","RestClient","RestError","SearchRequestBuilder","rest","CannotDeserialize","CannotDeserializeResponse","Error","ErrorStatusCode","RawRestClient","RequestError","RestClient","SearchRequestBuilder","ServerIsNotUp","advisor_reviews","api_token","borrow","borrow","borrow_mut","borrow_mut","challenges","clone","clone_into","delegator_info","deref","deref","deref_mut","deref_mut","disable_log","drop","drop","enable_log","fmt","fmt","fmt","from","from","from","from","from","fund","funds","genesis","health","init","init","into","into","into","logger","logger","new","origin","path","path_builder","path_builder","proposal","proposals","proposals_by_voteplan_id_and_index","provide","put_raw_snapshot","put_snapshot_info","query","raw","raw","search","search","search_count","service_version","set_api_token","set_origin","set_timeout","snapshot_tags","source","timeout","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify_status_code","voter_info","vzip","vzip","source","text","RestClientLogger","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","enabled","fmt","from","init","into","is_enabled","log_post_body","log_request","log_response","log_text","set_enabled","to_owned","try_from","try_into","type_id","vzip","RestPathBuilder","address","admin","advisor_reviews","borrow","borrow_mut","challenges","clone","clone_into","deref","deref_mut","drop","fmt","from","fund","funds","genesis","health","init","into","new","path","proposal","proposals","proposals_with_group","raw_snapshot","root","search","search_count","service_version","snapshot_delegator_info","snapshot_info","snapshot_tags","snapshot_voter_info","to_owned","try_from","try_into","type_id","vzip","ORIGIN","RestClient","advisor_reviews","api_token","borrow","borrow_mut","challenges","client","clone","clone_into","delegator_info","deref","deref_mut","disable_log","drop","enable_log","fmt","from","fund","funds","genesis","get","health","init","into","log_response","log_text","logger","new","origin","path_builder","path_builder","post","proposal","proposals","proposals_by_voteplan_id_and_index","put","put_raw_snapshot","put_snapshot_info","search","search_count","service_version","set_api_token","set_origin","set_timeout","snapshot_tags","timeout","to_owned","try_from","try_into","type_id","voter_info","vzip","SearchRequestBuilder","borrow","borrow_mut","by_author","by_body","by_funds","by_funds_exact","by_impact_score","by_range","by_text","by_title","by_type","default","deref","deref_mut","drop","from","init","into","into","limit","offset","on","on_challenges","on_proposals","order_by_asc","order_by_desc","order_by_random","order_by_title","query","try_from","try_into","type_id","vzip","ArbitraryGenerator","ArbitrarySnapshotGenerator","ArbitraryValidVotePlanConfig","ArbitraryValidVotingTemplateGenerator","Challenge","ChallengeConfig","ChallengeTemplate","CsvConverter","CurrentFund","ExternalValidVotingTemplateGenerator","Fund","FundDates","FundInfo","FundTemplate","Io","Proposal","ProposalConfig","ProposalTemplate","Review","ReviewTemplate","SingleVotePlanParameters","Snapshot","TemplateLoad","ValidVotePlanGenerator","ValidVotePlanParameters","ValidVotingTemplateGenerator","assessment_qa_start","assessor","auditability_note","auditability_rating_given","calculate_challenges_total_funds","category_name","chain_vote_options","chain_vote_type","challenge_id","challenge_id","challenge_type","challenge_type","challenge_url","challenges","challenges","challenges","challenges","challenges","challenges_count","csv_converter","current_fund","current_fund_id","current_proposal_id","dates","description","feasibility_note","feasibility_rating_given","files_url","finalize_proposals_start","fund_goal","fund_id","fund_id","fund_name","funds","funds","funds","funds","funds","generator","generator","goal","goals","goals","groups","highlight","id","id","id","id_generator","id_generator","impact_alignment_note","impact_alignment_rating_given","info","insight_sharing_start","internal_id","internal_id","multivoteplan_snapshot","next_challenge","next_challenge_id","next_fund","next_fund_start_time","next_funds","next_proposal","next_proposal_id","next_registration_snapshot_time","next_review","next_review_id","parameters","parse_challenges","parse_funds","parse_proposals","parse_reviews","proposal_assessment_start","proposal_challenge_info","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_submission_start","proposal_summary","proposal_title","proposal_url","proposals","proposals","proposals","proposals","proposals","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","proposers_rewards","ranking","refine_proposals_start","registration_snapshot_time","results_url","reviews","reviews","reviews","reviews_count","rewards_info","rewards_total","rewards_total","survey_url","template_generator","template_generator","threshold","title","token","token_hash","tokens","vote_encryption_key","vote_options","vote_plan","vote_plans","voteplans","voteplans","voting_power_threshold","voting_start","voting_tally_end","voting_tally_start","CannotBuildCsvWithFunds","CsvConverter","Error","advisor_reviews","borrow","borrow","borrow_mut","borrow_mut","build_file","challenges","convert_advisor_review","convert_challenge","convert_fund","convert_goals","convert_group","convert_proposal","convert_proposal_to_voteplan_proposal","convert_voteplan","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","funds","goals","groups","init","init","into","into","proposals","proposals_voteplans","provide","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unix_timestamp_to_rfc3339","voteplans","vzip","vzip","ArbitraryGenerator","ArbitrarySnapshotGenerator","Snapshot","arbitrary","snapshot","voting","ArbitraryGenerator","ArbitrarySnapshotGenerator","generator","snapshot_generator","ArbitraryGenerator","borrow","borrow_mut","bytes","clone","clone_into","default","deref","deref_mut","drop","from","hash","id","id_generator","init","into","new","next_i32","next_u32","next_u64","random_index","random_size","to_owned","token","token_hash","tokens","try_from","try_into","type_id","valid_vote_plan_parameters","vote_plan_def","vote_plan_def_collection","vzip","ArbitrarySnapshotGenerator","FundDateTimes","advisor_reviews","assessment_qa_start","borrow","borrow","borrow_mut","borrow_mut","challenge_with_fund_id","challenges","challenges_with_fund_id","clone","clone_into","current_fund_id","current_proposal_id","default","deref","deref","deref_mut","deref_mut","drop","drop","end","finalize_proposals_start","from","from","fund_date_times","funds","gen_single_fund","gen_single_proposal","goals","goals_with_fund_id","id_generator","init","init","insight_sharing_start","into","into","next","next_snapshot","proposal_assessment_start","proposal_submission_start","proposals","rand_datetime_in_range","refine_proposals_start","review_with_proposal_id","snapshot","snapshot","snapshot_start","start","tallying_end","template_generator","to_owned","token","try_from","try_from","try_into","try_into","type_id","type_id","voteplan_with_fund_id","voteplans","voting_end","voting_start","vzip","vzip","Snapshot","advisor_reviews","advisor_reviews_mut","any_token","borrow","borrow_mut","challenges","challenges","challenges_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","fund_by_id","funds","funds","funds_mut","goals","goals","groups","init","into","new","proposal_by_id","proposals","proposals","proposals_mut","reviews","to_owned","token_hash","tokens","tokens","try_from","try_into","type_id","voteplans","voteplans","voteplans_mut","vzip","ArbitraryValidVotePlanConfig","ArbitraryValidVotingTemplateGenerator","ChallengeConfig","ChallengeTemplate","CurrentFund","ExternalValidVotingTemplateGenerator","FundDates","FundInfo","FundTemplate","ProposalConfig","ProposalTemplate","ReviewTemplate","SingleVotePlanParameters","TemplateLoad","ValidVotePlanGenerator","ValidVotePlanParameters","ValidVotingTemplateGenerator","builder","generator","parameters","parse_challenges","parse_funds","parse_proposals","parse_reviews","template","ArbitraryValidVotePlanConfig","ChallengeConfig","ProposalConfig","borrow","borrow_mut","challenge","challenge","challenges","challenges","clone","clone_into","default","deref","deref_mut","drop","from","get_challenges","init","into","next_challenge","next_fund","next_proposal","next_review","pop_proposal","proposal","template_generator","to_owned","try_from","try_into","type_id","vzip","ChallengeConfig","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","init","into","proposal","proposals","proposals","proposals_len","proposers_rewards","proposers_rewards","rewards_total","rewards_total","to_owned","try_from","try_into","type_id","vzip","ProposalConfig","borrow","borrow_mut","challenge_id","clone","clone_into","default","deref","deref_mut","drop","fmt","from","funds","funds","init","into","to_owned","try_from","try_into","type_id","vzip","ValidVotePlanGenerator","borrow","borrow_mut","build","convert_to_vote_plan","deref","deref_mut","drop","from","init","into","new","parameters","try_from","try_into","type_id","vzip","CurrentFund","FundDates","FundInfo","SingleVotePlanParameters","ValidVotePlanParameters","borrow","borrow_mut","current_fund","deref","deref_mut","drop","from","from","fund","init","into","next_funds","try_from","try_into","type_id","vote_plan","vzip","CurrentFund","FundDates","FundInfo","current","dates","info","CurrentFund","borrow","borrow_mut","calculate_challenges_total_funds","challenges_count","deref","deref_mut","drop","from","from_single","info","init","into","new","reviews_count","set_vote_encryption_key","to_fund","try_from","try_into","type_id","vote_options","vote_plans","vzip","FundDates","as_timestamp","assessment_qa_start","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","finalize_proposals_start","fmt","from","init","insight_sharing_start","into","into","next_fund_start_time","next_registration_snapshot_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","registration_snapshot_time","to_owned","try_from","try_into","type_id","voting_start","voting_tally_end","voting_tally_start","vzip","FundInfo","borrow","borrow_mut","clone","clone_into","dates","default","deref","deref_mut","drop","fmt","from","from","fund_goal","fund_id","fund_name","goals","groups","init","into","into","results_url","survey_url","to_owned","try_from","try_into","type_id","voting_power_threshold","vzip","SingleVotePlanParameters","alias","borrow","borrow_mut","deref","deref_mut","drop","from","from","init","into","proposals","set_vote_encryption_key","try_from","try_into","type_id","vote_encryption_key","vote_encryption_key","vote_plan","vote_plan","vzip","ArbitraryValidVotingTemplateGenerator","ChallengeTemplate","ExternalValidVotingTemplateGenerator","FundTemplate","ProposalChallengeInfoTemplate","ProposalTemplate","ReviewTemplate","TemplateLoad","ValidVotingTemplateGenerator","arbitrary","assessor","auditability_note","auditability_rating_given","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category_name","chain_vote_options","chain_vote_type","challenge_id","challenge_type","challenge_type","challenge_url","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","external","feasibility_note","feasibility_rating_given","files_url","from","from","from","from","from","fund_id","goal","highlight","id","id","id","id","impact_alignment_note","impact_alignment_rating_given","init","init","init","init","init","internal_id","internal_id","into","into","into","into","into","next_challenge","next_fund","next_proposal","next_review","parse_challenges","parse_funds","parse_proposals","parse_reviews","proposal_challenge_info","proposal_funds","proposal_id","proposal_id","proposal_impact_score","proposal_summary","proposal_title","proposal_url","proposer_name","proposer_relevant_experience","proposer_url","proposers_rewards","ranking","rewards_info","rewards_total","serialize","serialize","serialize","serialize","serialize","threshold","title","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","ArbitraryValidVotingTemplateGenerator","borrow","borrow_mut","challenge_type","challenges","clone","clone_into","default","deref","deref_mut","drop","from","funds","gen_challenge_url","gen_highlights","gen_http_address","generator","impact_score","init","into","new","next_challenge","next_challenge_id","next_challenge_id","next_fund","next_proposal","next_proposal_id","next_proposal_id","next_review","next_review_id","next_review_id","proposal","proposal_category","proposal_fund","proposals","proposals_challenge_info","proposer","reviews","to_owned","try_from","try_into","type_id","vzip","Challenge","ExternalValidVotingTemplateGenerator","Fund","Io","Proposal","Review","TemplateLoad","borrow","borrow","borrow_mut","borrow_mut","challenges","challenges_count","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","funds","init","init","into","into","new","next_challenge","next_fund","next_proposal","next_review","parse_challenges","parse_funds","parse_proposals","parse_reviews","proposals","proposals_count","provide","reviews","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DbInserter","DbInserterError","DieselError","RowId","_impl_queryable_by_name_for_rowid","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","connection","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","init","init","init","insert_advisor_reviews","insert_challenges","insert_funds","insert_proposals","insert_token","insert_tokens","insert_vote_plans","into","into","into","new","provide","row_id","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","SnapshotRandomizer","VitRestRequestGenerator","VotingPowerRequestGenerator","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","max_splits","max_splits","new","random","random_fund_id","random_group_id","random_proposal_id","random_token","random_usize","rest","rest_client","rest_client","snapshot","snapshot","snapshot_randomizer","to_owned","try_from","try_into","type_id","voting_power","vzip","DEFAULT_MAX_SPLITS","VitRestRequestGenerator","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","max_splits","new","next","rest_client","snapshot_randomizer","split","to_owned","try_from","try_into","type_id","vzip","DEFAULT_MAX_SPLITS","VotingPowerRequestGenerator","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","max_splits","new","next","rest_client","snapshot","split","to_owned","try_from","try_into","type_id","vzip","Logger","any_error","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","log_file","log_file","log_lines","new","try_from","try_into","type_id","vzip","BLOCK0_BIN","RawSnapshot","RawSnapshotBuilder","RawSnapshotExtension","RawSnapshotUpdater","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone_into","content","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","direct_voters_group","dreps","drop","drop","drop","empty","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","into_full_snapshot_infos","into_full_snapshot_infos","min_stake_threshold","raw_snapshot","representatives_group","serialize","tag","tag","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","update_timestamp","voting_power_cap","voting_registrations","voting_registrations_count","vzip","vzip","vzip","with_dreps","with_min_stake_threshold","with_tag","with_tag","with_timestamp","with_voting_power_cap","with_voting_registrations","with_voting_registrations_count","Server","borrow","borrow_mut","deref","deref_mut","drop","drop","from","init","into","is_token_valid","is_up","log_file","logger","new","process","rest_client","rest_client_with_token","settings","settings","try_from","try_into","type_id","vzip","Snapshot","SnapshotBuilder","SnapshotUpdater","VoterInfo","VotingPower","add_contributions_to_voter","add_new_arbitrary_voters","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone","clone","clone_into","clone_into","clone_into","content","contributions_count","default","default","delegations_count","delegations_power","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","groups","init","init","init","init","init","into","into","into","into","into","last_updated","serialize","serialize","snapshot","tag","tag","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_timestamp","update_voting_power","voter_info","voters_count","voting_group","voting_power","voting_power_saturation","vzip","vzip","vzip","vzip","vzip","with_contributions_count","with_entries_count","with_groups","with_tag","with_tag","with_timestamp","LAZY","NEXT_AVAILABLE_PORT_NUMBER","VIT_BIN_NAME","VIT_BIN_NAME","__private_field","__stability","__static_ref_initialize","borrow","borrow_mut","db","deref","deref","deref_mut","drop","empty_db","from","get_available_port","get_cli_exe","get_exe","get_working_directory","init","into","quick_start","server","try_from","try_into","type_id","vzip","","","CannotCreateDatabase","CannotExtractTempPath","DatabaseUrlEnvVar","DbBuilder","DbBuilderError","DbInserterError","MissingDatabaseUrlEnvVar","advisor_reviews","borrow","borrow","borrow_mut","borrow_mut","build","build_async","challenges","create_database","default","deref","deref","deref_mut","deref_mut","drop","drop","embedded_migrations","fmt","fmt","from","from","from","from","from","funds","init","init","initialize_db_with_migrations","initialize_db_with_migrations_async","insert_all","into","into","new","proposals","provide","source","to_string","tokens","try_from","try_from","try_insert_challenges","try_insert_funds","try_insert_proposals","try_insert_reviews","try_insert_tokens","try_insert_vote_plans","try_into","try_into","type_id","type_id","vzip","vzip","with_advisor_reviews","with_challenges","with_funds","with_proposals","with_snapshot","with_token","with_tokens","migrations","runner","BootstrapCommandBuilder","CargoError","DbBuilderError","FailToBootstrap","ProcessSpawnError","ServerBootstrapper","ServerBootstrapperError","ServerSettingsBuilder","address","allowed_origins","allowed_origins","block0_path","block0_paths","bootstrap","cert_file","command","cors","db_url","dump_settings","enable_api_tokens","exe","in_settings_file","load_settings","log_file","log_level","max_age_secs","out_settings_file","priv_key_file","service_version","service_version","settings","settings","settings_builder","CargoError","DbBuilderError","FailToBootstrap","ProcessSpawnError","ServerBootstrapper","ServerBootstrapperError","allowed_origins","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","init","init","into","into","new","provide","service_version","settings_builder","source","start","start_with_exe","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_allowed_origins","with_api_tokens","with_block0_path","with_db_path","with_localhost_address","with_log_level","with_service_version","BootstrapCommandBuilder","address","address","allowed_origins","allowed_origins","block0_path","block0_path","block0_paths","block0_paths","borrow","borrow_mut","build","cert_file","cert_file","db_url","db_url","default","deref","deref_mut","drop","enable_api_tokens","enable_api_tokens","exe","from","in_settings_file","in_settings_file","init","into","log_file","log_file","log_level","log_level","max_age_secs","max_age_secs","new","out_settings_file","out_settings_file","priv_key_file","priv_key_file","service_version","service_version","try_from","try_into","type_id","vzip","ServerSettingsBuilder","borrow","borrow_mut","build","cors","default","deref","deref_mut","drop","dump_settings","format_localhost_address","from","init","into","load_settings","settings","try_from","try_into","type_id","vzip","with_api_tokens","with_block0_folder_path","with_block0_path","with_cors","with_db_path","with_localhost_address","with_log_level","with_log_output_path","with_random_localhost_address"],"q":[[0,"vit_servicing_station_tests"],[1,"vit_servicing_station_tests::common"],[12,"vit_servicing_station_tests::common::cli"],[32,"vit_servicing_station_tests::common::cli::commands"],[54,"vit_servicing_station_tests::common::cli::commands::csv_data"],[72,"vit_servicing_station_tests::common::cli::commands::csv_data::load"],[97,"vit_servicing_station_tests::common::cli::commands::db"],[115,"vit_servicing_station_tests::common::cli::commands::db::init"],[132,"vit_servicing_station_tests::common::cli::commands::token"],[153,"vit_servicing_station_tests::common::cli::commands::token::add"],[172,"vit_servicing_station_tests::common::cli::commands::token::generate"],[190,"vit_servicing_station_tests::common::clients"],[195,"vit_servicing_station_tests::common::clients::rest"],[277,"vit_servicing_station_tests::common::clients::rest::Error"],[279,"vit_servicing_station_tests::common::clients::rest::logger"],[304,"vit_servicing_station_tests::common::clients::rest::path"],[343,"vit_servicing_station_tests::common::clients::rest::raw"],[396,"vit_servicing_station_tests::common::clients::rest::search"],[430,"vit_servicing_station_tests::common::data"],[577,"vit_servicing_station_tests::common::data::csv_converter"],[626,"vit_servicing_station_tests::common::data::generator"],[632,"vit_servicing_station_tests::common::data::generator::arbitrary"],[636,"vit_servicing_station_tests::common::data::generator::arbitrary::generator"],[669,"vit_servicing_station_tests::common::data::generator::arbitrary::snapshot_generator"],[735,"vit_servicing_station_tests::common::data::generator::snapshot"],[777,"vit_servicing_station_tests::common::data::generator::voting"],[802,"vit_servicing_station_tests::common::data::generator::voting::builder"],[833,"vit_servicing_station_tests::common::data::generator::voting::builder::challenge"],[859,"vit_servicing_station_tests::common::data::generator::voting::builder::proposal"],[880,"vit_servicing_station_tests::common::data::generator::voting::generator"],[897,"vit_servicing_station_tests::common::data::generator::voting::parameters"],[919,"vit_servicing_station_tests::common::data::generator::voting::parameters::fund"],[925,"vit_servicing_station_tests::common::data::generator::voting::parameters::fund::current"],[948,"vit_servicing_station_tests::common::data::generator::voting::parameters::fund::dates"],[980,"vit_servicing_station_tests::common::data::generator::voting::parameters::fund::info"],[1009,"vit_servicing_station_tests::common::data::generator::voting::parameters::vote_plan"],[1030,"vit_servicing_station_tests::common::data::generator::voting::template"],[1176,"vit_servicing_station_tests::common::data::generator::voting::template::arbitrary"],[1219,"vit_servicing_station_tests::common::data::generator::voting::template::external"],[1274,"vit_servicing_station_tests::common::db"],[1332,"vit_servicing_station_tests::common::load"],[1367,"vit_servicing_station_tests::common::load::rest"],[1391,"vit_servicing_station_tests::common::load::voting_power"],[1415,"vit_servicing_station_tests::common::logger"],[1433,"vit_servicing_station_tests::common::paths"],[1434,"vit_servicing_station_tests::common::raw_snapshot"],[1511,"vit_servicing_station_tests::common::server"],[1535,"vit_servicing_station_tests::common::snapshot"],[1652,"vit_servicing_station_tests::common::startup"],[1680,"vit_servicing_station_tests::common::startup::db"],[1748,"vit_servicing_station_tests::common::startup::db::embedded_migrations"],[1749,"vit_servicing_station_tests::common::startup::db::embedded_migrations::migrations"],[1750,"vit_servicing_station_tests::common::startup::server"],[1783,"vit_servicing_station_tests::common::startup::server::bootstrap"],[1835,"vit_servicing_station_tests::common::startup::server::command"],[1880,"vit_servicing_station_tests::common::startup::server::settings"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Gets working directory Uses std::env::current_exe() for …","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In order to test robustness of server bootstrapper we need …","","","","","","","","","","","","","","","","","","todo: add error mapping","","","","todo: add error mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","In order to test robustness of server bootstrapper we need …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","todo: add error mapping","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","todo: add error mapping","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,9,1,1,1,1,1,1,1,1,1,1,0,9,9,9,0,9,0,9,9,9,9,9,9,9,9,9,9,0,9,9,9,9,0,0,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,12,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0,0,0,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,25,25,0,25,0,25,0,0,25,22,35,22,25,22,25,22,22,22,22,22,25,22,25,22,22,25,22,22,25,25,22,22,25,25,25,22,22,22,22,22,25,22,22,25,0,35,22,35,0,22,35,22,22,22,25,22,22,54,0,22,0,22,22,22,22,22,22,22,25,35,22,25,22,25,22,25,22,25,22,22,22,25,148,148,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,0,0,0,0,65,0,0,0,0,0,65,0,0,0,65,65,0,0,65,0,0,0,0,0,0,0,89,63,63,63,87,62,62,62,82,62,62,60,60,0,59,80,95,100,87,0,74,76,76,88,60,63,63,62,89,88,88,60,88,0,59,82,95,100,0,95,61,59,88,88,60,61,60,63,71,76,63,63,87,89,62,60,0,84,95,84,89,74,84,95,89,84,95,83,0,0,0,0,89,62,62,62,63,62,89,62,62,62,0,59,81,95,100,62,62,62,81,60,63,89,89,88,59,95,100,87,61,81,60,88,76,80,61,60,0,0,59,85,87,85,87,0,59,88,89,89,89,68,0,0,67,67,68,67,68,67,67,0,0,0,0,0,0,0,0,67,68,67,68,67,68,68,68,67,68,67,67,67,67,68,67,68,67,67,68,68,67,68,67,68,67,68,0,67,67,68,0,0,0,0,0,0,0,0,0,0,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,76,77,77,76,77,76,76,76,76,76,76,76,76,76,77,76,77,76,77,76,77,77,77,76,76,76,76,76,76,76,76,77,76,77,77,76,77,77,77,77,76,0,77,76,76,77,77,77,77,76,76,76,77,76,77,76,77,76,76,76,77,77,77,76,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,80,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,80,80,80,80,80,80,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,0,74,74,74,74,74,74,74,74,0,74,74,74,74,74,74,0,74,0,0,0,0,0,0,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,0,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,0,0,0,0,0,0,0,63,63,63,61,62,60,63,92,61,62,60,63,92,62,62,62,62,62,60,60,61,62,60,63,92,61,62,60,63,92,61,62,60,63,92,61,62,60,63,92,60,61,62,60,63,92,61,62,60,63,92,0,63,63,62,61,62,60,63,92,60,61,60,61,60,63,92,63,63,61,62,60,63,92,62,60,61,62,60,63,92,84,84,84,84,0,0,0,0,62,62,62,63,62,62,62,62,62,62,62,60,63,61,60,61,62,60,63,92,61,60,61,62,60,63,92,61,62,60,63,92,61,62,60,63,92,61,62,60,63,92,61,62,60,63,92,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,65,0,65,65,65,65,0,100,65,100,65,100,100,100,100,100,65,100,65,100,65,65,65,100,65,65,100,100,65,100,65,100,100,100,100,100,0,0,0,0,100,100,65,100,65,100,65,100,65,100,65,100,65,100,65,0,0,104,0,0,106,102,104,106,102,104,102,106,106,102,104,106,102,104,106,102,104,104,104,106,102,104,104,106,102,104,106,106,106,106,106,106,106,106,102,104,106,104,102,104,104,106,102,104,106,102,104,106,102,104,106,102,104,0,0,0,108,108,108,108,108,108,108,108,108,108,108,109,112,108,108,108,108,108,108,108,0,109,112,112,108,109,108,108,108,108,0,108,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,0,0,0,0,0,40,114,115,40,114,115,114,115,40,40,40,40,114,40,114,115,40,114,115,40,114,114,40,114,115,40,40,114,115,40,114,115,115,40,114,115,40,114,115,149,40,114,115,114,40,40,114,40,40,114,115,40,40,114,115,40,114,115,114,114,114,114,40,114,115,114,114,114,115,114,114,114,114,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,0,0,0,0,0,126,126,41,130,50,131,126,41,130,50,131,126,130,126,41,50,131,41,50,131,41,130,41,130,131,131,41,130,50,131,126,41,130,50,131,126,50,131,41,130,50,131,126,50,131,50,131,41,130,50,131,126,41,130,50,131,131,126,126,130,41,130,50,131,126,41,130,50,131,126,50,50,131,126,41,130,41,50,131,41,130,50,131,126,41,130,50,131,126,41,130,50,131,126,130,126,50,130,131,131,131,41,130,50,131,126,130,130,130,130,126,130,0,0,0,0,133,0,0,133,133,0,133,133,133,133,0,133,0,0,0,0,133,133,0,0,133,133,133,133,0,0,137,137,137,0,0,137,137,136,136,137,136,137,136,136,136,136,136,136,137,136,137,136,137,0,137,137,136,137,137,137,137,136,136,137,0,0,136,136,137,136,136,137,137,137,136,136,137,136,136,136,136,136,136,136,137,136,137,136,137,136,136,136,136,136,136,136,0,0,0,135,135,135,135,0,0,0,144,141,144,144,144,0,144,0,145,144,0,144,144,144,0,144,144,144,144,144,141,144,0,145,141,135,135,135,135,0,0,141,141,135,141,135,141,141,135,141,135,141,135,135,135,141,135,135,135,135,141,135,141,135,141,135,141,141,135,141,141,135,141,135,141,135,141,135,141,135,141,141,141,141,141,141,141,0,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,0,145,145,145,145,145,145,145,145,0,145,145,145,145,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[],1],[2],[2],[2],0,0,[[]],[[1,3],[[5,[4]]]],[[],2],[[]],[6,1],[[],7],[[],7],[[],8],[[]],0,[9,10],[[]],[[]],0,[9,11],0,[9,12],[[],9],[2],[2],[2],0,[[]],[[],2],[[]],[6,9],0,[[],7],[[],7],[[],8],[[]],0,0,[[]],[[]],0,[2],[2],[2],[[]],[[],2],[[]],0,[11,13],[14,11],[[],7],[[],7],[[],8],[[]],0,[[13,[16,[15]]],13],[[]],[[]],[13,14],[[13,[16,[15]]],13],0,[[13,[16,[15]]],13],[2],[2],[2],[[]],[[13,[16,[15]]],13],[[13,[16,[15]]],13],[[13,[16,[15]]],13],[[],2],[[]],[14,13],[[13,[16,[15]]],13],[[13,[16,[15]]],13],[[],7],[[],7],[[],8],[[13,[16,[15]]],13],[[]],0,0,[[]],[[]],0,[2],[2],[2],[[]],0,[12,17],[[],2],[[]],[14,12],[[],7],[[],7],[[],8],[[]],0,[[]],[[]],[17,14],0,[[17,[16,[15]]],17],[2],[2],[2],[[]],[[],2],[[]],[14,17],[[],7],[[],7],[[],8],[[]],0,0,0,0,[10,18],[[]],[[]],0,[2],[2],[2],[[]],0,[10,19],[[],2],[[]],[14,10],[[],7],[[],7],[[],8],[[]],0,[[]],[[]],[18,14],0,[[18,[20,[4]]],18],[2],[2],[2],[[]],[[],2],[[]],[14,18],[18,18],[[18,21],18],[[],7],[[],7],[[],8],[[]],0,[[]],[[]],[19,14],0,[2],[2],[2],[[]],[[],2],[[]],[[19,3],19],[14,19],[[19,3],19],[[],7],[[],7],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[22,21],[[7,[[24,[4,[5,[23]]]],25]]]],0,[[]],[[]],[[]],[[]],[22,[[7,[[5,[26]],25]]]],[22,22],[[]],[[22,21,21],[[7,[27,25]]]],[2],[2],[2],[2],[22],[2],[2],[22],[[22,28],29],[[25,28],29],[[25,28],29],[[]],[30,22],[31,25],[32,25],[[]],[[22,21],[[7,[33,25]]]],[22,[[7,[33,25]]]],[22,[[7,[[5,[34]],25]]]],[22,[[7,[25]]]],[[],2],[[],2],[22,35],[[]],[[]],0,0,[36,22],0,0,[22,37],0,[[22,21,21],[[7,[38,25]]]],[[22,21],[[7,[[5,[38]],25]]]],[22,[[7,[[5,[38]],25]]]],[39],[[22,40],[[7,[25]]]],[[22,41],[[7,[25]]]],0,0,0,0,[[22,42],[[7,[43,25]]]],[[22,42],[[7,[44,25]]]],[22,[[7,[45,25]]]],[[22,4]],[[22,[20,[4]]]],[[22,46]],[22,[[7,[[5,[4]],25]]]],[25,[[48,[47]]]],0,[[]],[[],4],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[22,49],[[7,[25]]]],[[22,21,21],[[7,[50,25]]]],[[]],[[]],0,0,0,[[]],[[]],[51,51],[[]],[[],51],[2],[2],[2],0,[[51,28],29],[[]],[[],2],[[]],[51,52],[[51,21]],[[51,21]],[[51,49]],[[51,21]],[[51,52]],[[]],[[],7],[[],7],[[],8],[[]],0,0,[37,37],[[37,21],4],[[]],[[]],[37,4],[37,37],[[]],[2],[2],[2],[[37,28],29],[[]],[[37,21],4],[37,4],[37,4],[37,4],[[],2],[[]],[36,37],[[37,21],4],[[37,21,21],4],[37,4],[[37,21],4],[[37,21],4],0,[37,4],[37,4],[37,4],[[37,21,21],4],[[37,21],4],[37,4],[[37,21,21],4],[[]],[[],7],[[],7],[[],8],[[]],0,0,[[35,21],[[7,[49,25]]]],0,[[]],[[]],[35,[[7,[49,25]]]],[35,[[7,[53,31]]]],[35,35],[[]],[[35,21,21],[[7,[49,25]]]],[2],[2],[35],[2],[35],[[35,28],29],[[]],[[35,21],[[7,[49,25]]]],[35,[[7,[49,25]]]],[35,[[7,[49,25]]]],[[35,21],[[7,[49,31]]]],[35,[[7,[49,25]]]],[[],2],[[]],[[35,49]],[[35,21]],0,[36,35],0,[35,37],0,[[35,21,4],[[7,[49,31]]]],[[35,21,21],[[7,[49,25]]]],[[35,21],[[7,[49,25]]]],[[35,21],[[7,[49,25]]]],[[35,21,4],[[7,[49,31]]]],[[35,21,4],[[7,[49,25]]]],[[35,21,4],[[7,[49,25]]]],[[35,[20,[4]]],[[7,[49,25]]]],[[35,[20,[4]]],[[7,[49,25]]]],[35,[[7,[49,25]]]],[[35,4]],[[35,[20,[4]]]],[[35,46]],[35,[[7,[49,25]]]],0,[[]],[[],7],[[],7],[[],8],[[35,21,21],[[7,[49,25]]]],[[]],0,[[]],[[]],[[54,[20,[4]]],54],[[54,[20,[4]]],54],[[54,[48,[44]],[48,[44]]],54],[[54,44],54],[[54,44],54],[[54,[48,[44]],[48,[44]],55],54],[[54,[20,[4]],55],54],[[54,[20,[4]]],54],[[54,56],54],[[],54],[2],[2],[2],[[]],[[],2],[[]],[54,42],[[54,57],54],[[54,57],54],[[54,58],54],[54,54],[54,54],[[54,55],54],[[54,55],54],[54,54],[54,54],0,[[],7],[[],7],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[5,[26]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[5,[33]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],59],[[],60],0,[[],61],0,0,[[],62],0,0,[[],63],0,0,[6,[[7,[[64,[60]],65]]]],[6,[[7,[[64,[61]],65]]]],[6,[[7,[[64,[62]],65]]]],[6,[[7,[[64,[63]],65]]]],0,0,0,0,0,0,0,0,0,0,[[],[[5,[38]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],4],0,0,0,0,0,[[],[[5,[66]]]],0,0,0,0,0,0,0,0,[[67,[5,[23]],[16,[15]]],[[7,[68]]]],[[]],[[]],[[]],[[]],[[67,[5,[21]],[5,[[5,[4]]]],[16,[15]]],[[7,[68]]]],[[67,[5,[26]],[16,[15]]],[[7,[68]]]],[23,[[5,[4]]]],[26,[[5,[4]]]],[33,[[5,[4]]]],[69,[[5,[4]]]],[70,[[5,[4]]]],[38,[[5,[4]]]],[38,[[5,[4]]]],[66,[[5,[4]]]],[2],[2],[2],[2],[2],[2],[[68,28],29],[[68,28],29],[[]],[[]],[[67,[5,[33]],[16,[15]]],[[7,[68]]]],[[67,[5,[69]],[16,[15]]],[[7,[68]]]],[[67,[5,[70]],[16,[15]]],[[7,[68]]]],[[],2],[[],2],[[]],[[]],[[67,[5,[38]],[16,[15]]],[[7,[68]]]],[[67,[5,[38]],[16,[15]]],[[7,[68]]]],[39],[[],4],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[44,4],[[67,[5,[66]],[16,[15]]],[[7,[68]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[71],[71,71],[[]],[[],71],[2],[2],[2],[[]],[71,4],[71,72],0,[[],2],[[]],[[],71],[71,72],[71,3],[71,57],[[71,2],2],[71,2],[[]],[71],[71,4],[71,[[24,[4,73]]]],[[],7],[[],7],[[],8],[71,74],[71,75],[71,[[5,[75]]]],[[]],0,0,[76,[[5,[23]]]],0,[[]],[[]],[[]],[[]],[[76,72],26],[76,[[5,[26]]]],[[76,72],[[5,[26]]]],[76,76],[[]],0,0,[[],76],[2],[2],[2],[2],[2],[2],0,0,[[]],[[]],[76,77],[76,[[5,[33]]]],[76,33],[[76,33],38],[76,[[5,[78]]]],[[76,72],[[5,[78]]]],0,[[],2],[[],2],0,[[]],[[]],0,0,0,0,[76,[[5,[38]]]],[[79,79],79],0,[[76,72],23],[76,59],0,0,0,0,0,[[]],[76],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[76,72,77,4],66],[76,[[5,[66]]]],0,0,[[]],[[]],0,[59,[[5,[23]]]],[59,5],[59],[[]],[[]],[59,[[5,[26]]]],0,[59,5],[59,59],[[]],[2],[2],[2],[[59,28],29],[[]],[[59,72],[[48,[33]]]],[59,[[5,[33]]]],0,[59,5],[59,[[5,[78]]]],0,[59,[[5,[70]]]],[[],2],[[]],[[[5,[33]],[5,[38]],[5,[26]],[24,[4,73]],[5,[66]],[5,[23]],[5,[78]]],59],[[59,21],[[48,[38]]]],[59,[[5,[38]]]],0,[59,5],0,[[]],[59,4],[59,[[24,[4,73]]]],0,[[],7],[[],7],[[],8],[59,[[5,[66]]]],0,[59,5],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[80,81],80],[[80,[5,[81]]],80],0,[80,80],[[]],[[],80],[2],[2],[2],[[]],[80],[[],2],[[]],[80,60],[80,61],[80,62],[80,63],[80,82],0,0,[[]],[[],7],[[],7],[[],8],[[]],0,[[]],[[]],[81,81],[[]],[[],81],[2],[2],[2],[[81,28],29],[[]],[[],2],[[]],[[81,82],81],[[81,[5,[82]]],81],0,[81,2],[[81,57],81],0,[[81,57],81],0,[[]],[[],7],[[],7],[[],8],[[]],0,[[]],[[]],0,[82,82],[[]],[[],82],[2],[2],[2],[[82,28],29],[[]],[[82,44],82],0,[[],2],[[]],[[]],[[],7],[[],7],[[],8],[[]],0,[[]],[[]],[[83,84],59],[85,86],[2],[2],[2],[[]],[[],2],[[]],[74,83],0,[[],7],[[],7],[[],8],[[]],0,0,0,0,0,[[]],[[]],0,[2],[2],[2],[[]],[87,74],0,[[],2],[[]],0,[[],7],[[],7],[[],8],0,[[]],0,0,0,0,0,0,0,[[]],[[]],0,0,[2],[2],[2],[[]],[[75,88],87],0,[[],2],[[]],[[[5,[75]],88],87],0,[[87,4,21]],[[87,[5,[66]],[5,[26]]],33],[[],7],[[],7],[[],8],0,0,[[]],0,[79,44],0,[[]],[[]],[89,89],[[]],[[],89],[2],[2],[2],0,[[89,28],29],[[]],[[],2],0,[89,90],[[]],0,0,0,0,0,0,[[]],[[],7],[[],7],[[],8],0,0,0,[[]],0,[[]],[[]],[88,88],[[]],0,[[],88],[2],[2],[2],[[88,28],29],[89,88],[[]],0,0,0,0,0,[[],2],[[]],[88,33],0,0,[[]],[[],7],[[],7],[[],8],0,[[]],0,[85,4],[[]],[[]],[2],[2],[2],[[]],[75,85],[[],2],[[]],[85,[[5,[91]]]],[[85,4]],[[],7],[[],7],[[],8],[85,[[48,[4]]]],0,[85,75],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[61,61],[62,62],[60,60],[63,63],[92,92],[[]],[[]],[[]],[[]],[[]],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],0,[93,[[7,[61]]]],[93,[[7,[62]]]],[93,[[7,[60]]]],[93,[[7,[63]]]],[93,[[7,[92]]]],[2],[2],[2],[2],[2],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[],2],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[]],[[],60],[[],61],[[],62],[[],63],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[61,94],7],[[62,94],7],[[60,94],7],[[63,94],7],[[92,94],7],0,0,[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[95,56],0,[95,95],[[]],[[],95],[2],[2],[2],[[]],0,[95,4],[95,[[48,[96]]]],[95,4],0,[95,44],[[],2],[[]],[[],95],[95,60],[95,72],0,[95,61],[95,62],[95,72],0,[95,63],[95,72],0,[[95,60,44],62],[95,97],[95,44],0,[[95,56],98],[95,99],0,[[]],[[],7],[[],7],[[],8],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[100,2],[100,100],[[]],[2],[2],[2],[2],[2],[2],[[65,28],29],[[65,28],29],[[]],[101,65],[[]],0,[[],2],[[],2],[[]],[[]],[[6,6,6,6],[[7,[100,65]]]],[100,60],[100,61],[100,62],[100,63],[6,[[7,[[64,[60]],65]]]],[6,[[7,[[64,[61]],65]]]],[6,[[7,[[64,[62]],65]]]],[6,[[7,[[64,[63]],65]]]],0,[100,2],[39],0,[65,[[48,[47]]]],[[]],[[],4],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[103,[102]]]],0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[[104,28],29],[[104,28],29],[[]],[[]],[105,104],[[]],[[],2],[[],2],[[],2],[106,[[7,[104]]]],[106,[[7,[104]]]],[106,[[7,[104]]]],[106,[[7,[104]]]],[[106,73],[[7,[104]]]],[106,[[7,[104]]]],[106,[[7,[104]]]],[[]],[[]],[[]],[107,106],[39],0,[104,[[48,[47]]]],[[],4],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[]],[[]],[[]],0,0,0,[[]],[[]],[108,108],[[]],[2],[2],[2],[[108,28],29],[[]],[[],2],[[]],0,0,[59,108],0,[108,72],[108,4],[108],[108,4],[108,2],0,0,0,0,0,0,[[]],[[],7],[[],7],[[],8],0,[[]],0,0,[[]],[[]],[109,109],[[]],[2],[2],[2],[[109,28],29],[[]],[[],2],[[]],0,[[59,22],109],[109,[[7,[110,111]]]],0,0,[109],[[]],[[],7],[[],7],[[],8],[[]],0,0,[[]],[[]],[112,112],[[]],[2],[2],[2],[[112,28],29],[[]],[[],2],[[]],0,[[41,22],112],[112,[[7,[110,111]]]],0,0,[112],[[]],[[],7],[[],7],[[],8],[[]],0,[113,52],[[]],[[]],[2],[2],[2],[[]],[[],2],[[]],[113,6],0,[113,[[5,[4]]]],[6,113],[[],7],[[],7],[[],8],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[114,40],[115,40],[40,40],[[]],0,[[],40],[[],114],[2],[2],[2],[2],[2],[2],[93,[[7,[40]]]],0,0,[2],[2],[2],[[[20,[4]]],40],[[40,28],29],[[114,28],29],[[115,28],29],[[]],[[]],[[]],[40,115],[[],2],[[],2],[[],2],[[]],[[]],[[]],[116,[[7,[[5,[117]],118]]]],[[40,116],[[7,[[5,[[117,[119]]]],118]]]],0,0,0,[[40,94],7],0,0,[[]],[[],7],[[],7],[[],7],[40,[[7,[[5,[[117,[119]]]]]]]],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],0,0,0,0,[[]],[[]],[[]],[[114,120],114],[[114,121],114],[[114,[20,[4]]],114],[[115,[20,[4]]],115],[[114,44],114],[[114,122],114],[[114,[5,[[123,[119]]]]],114],[[114,2],114],0,[[]],[[]],[2],[2],[2],[124],[[]],[[],2],[[]],[[124,21],52],[[124,21],52],0,[124,113],[[125,30,6],124],0,[124,22],[[124,21],22],[124,30],0,[[],7],[[],7],[[],8],[[]],0,0,0,0,0,[[126,[5,[[128,[127]]]],129],126],[126,126],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[130,41],[126,41],[41,41],[50,50],[131,131],[[]],[[]],[[]],0,0,[[],41],[[],130],0,0,[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[93,[[7,[50]]]],[93,[[7,[131]]]],[2],[2],[2],[2],[2],[[50,50],52],[[131,131],52],[[],52],[[],52],[[41,28],29],[[130,28],29],[[50,28],29],[[131,28],29],[[126,28],29],[[]],[[]],[[]],[117,131],[[]],[41,126],[[]],0,[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],0,[[50,94],7],[[131,94],7],0,0,0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],0,[126,126],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[130,2],130],[[130,2],130],[[130,[5,[[20,[4]]]]],130],[[130,[20,[4]]],130],[[126,[20,[4]]],126],[[130,44],130],0,0,0,0,0,[[],132],[[],132],[[]],[[]],0,[2],[133,132],[2],[2],[[],4],[[]],[[],3],[[],6],[[],6],[[],6],[[],2],[[]],[134,[[7,[135]]]],0,[[],7],[[],7],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[136,[[7,[4,137]]]],[136,[[7,[4,137]]]],0,[136,[[7,[137]]]],[[],136],[2],[2],[2],[2],[2],[2],0,[[137,28],29],[[137,28],29],[[]],[138,137],[104,137],[[]],[139,137],0,[[],2],[[],2],[21,[[7,[137]]]],[21,[[7,[137]]]],[[136,107],[[7,[137]]]],[[]],[[]],[[],136],0,[39],[137,[[48,[47]]]],[[],4],0,[[],7],[[],7],[[136,107],[[7,[137]]]],[[136,107],[[7,[137]]]],[[136,107],[[7,[137]]]],[[136,107],[[7,[137]]]],[[136,107],[[7,[137]]]],[[136,107],[[7,[137]]]],[[],7],[[],7],[[],8],[[],8],[[]],[[]],[[136,[5,[23]]],136],[[136,[5,[26]]],136],[[136,[5,[33]]],136],[[136,[5,[38]]],136],[[136,59],136],[[136,73],136],[[136,[5,[73]]],136],0,[[],140],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[134,30],6],0,0,0,[[[16,[15]]],30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],141],[2],[2],[2],[2],[2],[2],[[135,28],29],[[135,28],29],[[]],[[]],[142,135],[137,135],[101,135],[[],2],[[],2],[[]],[[]],[[],141],[39],0,0,[135,[[48,[47]]]],[[141,134],[[7,[124,135]]]],[[141,134,6],[[7,[124,135]]]],[[],4],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[]],[[]],[[141,[20,[4]]],141],[[141,52],141],[[141,[20,[4]]],141],[[141,[20,[4]]],141],[[141,3],141],[[141,143],141],[[141,4],141],0,[[144,[20,[4]]],144],0,[[144,[20,[4]]],144],0,[[144,[48,[4]]],144],0,[[144,[48,[4]]],144],0,[[]],[[]],[144,14],[[144,15],144],0,[[144,[20,[4]]],144],0,[[],144],[2],[2],[2],[[144,52],144],0,0,[[]],[[144,15],144],0,[[],2],[[]],[[144,15],144],0,[[144,21],144],0,[[144,3],144],0,[6,144],[[144,15],144],0,[[144,15],144],0,[[144,[20,[4]]],144],0,[[],7],[[],7],[[],8],[[]],0,[[]],[[]],[145,30],0,[[],145],[2],[2],[2],[[134,30],6],[3,146],[[]],[[],2],[[]],[[[16,[15]]],30],0,[[],7],[[],7],[[],8],[[]],[[145,52],145],[[145,[16,[15]]],145],[[145,[20,[4]]],145],[[145,147],145],[[145,[20,[4]]],145],[[145,3],145],[[145,143],145],[[145,6],145],[145,145]],"c":[],"p":[[3,"VitCli"],[15,"usize"],[15,"u32"],[3,"String"],[3,"Vec"],[3,"PathBuf"],[4,"Result"],[3,"TypeId"],[3,"VitCliCommand"],[3,"ApiTokenCommand"],[3,"CsvDataCommand"],[3,"DbCommand"],[3,"LoadCsvCommand"],[3,"Command"],[3,"Path"],[8,"AsRef"],[3,"InitDbCommand"],[3,"ApiTokenAddCommand"],[3,"ApiTokenGenerateCommand"],[8,"Into"],[15,"str"],[3,"RestClient"],[3,"AdvisorReview"],[3,"HashMap"],[4,"Error"],[3,"Challenge"],[3,"DelegatorInfo"],[3,"Formatter"],[6,"Result"],[3,"ServiceSettings"],[3,"Error"],[3,"Error"],[3,"Fund"],[15,"u8"],[3,"RestClient"],[3,"Url"],[3,"RestPathBuilder"],[3,"FullProposalInfo"],[3,"Demand"],[3,"RawSnapshot"],[3,"Snapshot"],[3,"SearchQuery"],[4,"SearchResponse"],[15,"i64"],[3,"ServiceVersion"],[3,"Duration"],[8,"Error"],[4,"Option"],[3,"Response"],[3,"VoterInfo"],[3,"RestClientLogger"],[15,"bool"],[3,"Client"],[3,"SearchRequestBuilder"],[4,"Column"],[4,"ChallengeType"],[15,"u64"],[4,"Table"],[3,"Snapshot"],[3,"ChallengeTemplate"],[3,"FundTemplate"],[3,"ProposalTemplate"],[3,"ReviewTemplate"],[3,"LinkedList"],[4,"TemplateLoad"],[3,"Voteplan"],[3,"CsvConverter"],[4,"Error"],[3,"InsertGoal"],[3,"Group"],[3,"ArbitraryGenerator"],[15,"i32"],[3,"ApiTokenData"],[3,"ValidVotePlanParameters"],[3,"VotePlanDef"],[3,"ArbitrarySnapshotGenerator"],[3,"FundDateTimes"],[3,"Goal"],[3,"OffsetDateTime"],[3,"ArbitraryValidVotePlanConfig"],[3,"ChallengeConfig"],[3,"ProposalConfig"],[3,"ValidVotePlanGenerator"],[8,"ValidVotingTemplateGenerator"],[3,"SingleVotePlanParameters"],[3,"VotePlan"],[3,"CurrentFund"],[3,"FundInfo"],[3,"FundDates"],[3,"FundStageDates"],[3,"ProposalDef"],[3,"ProposalChallengeInfoTemplate"],[8,"Deserializer"],[8,"Serializer"],[3,"ArbitraryValidVotingTemplateGenerator"],[3,"ChallengeHighlights"],[3,"Category"],[4,"ProposalChallengeInfo"],[3,"Proposer"],[3,"ExternalValidVotingTemplateGenerator"],[3,"Error"],[3,"RowId"],[6,"Result"],[4,"DbInserterError"],[4,"Error"],[3,"DbInserter"],[6,"DbConnection"],[3,"SnapshotRandomizer"],[3,"VitRestRequestGenerator"],[3,"Request"],[4,"RequestFailure"],[3,"VotingPowerRequestGenerator"],[3,"Logger"],[3,"RawSnapshotBuilder"],[3,"RawSnapshotUpdater"],[3,"RepsVotersAssigner"],[3,"SnapshotInfo"],[4,"Error"],[3,"MainnetRewardAddress"],[3,"Dreps"],[3,"Value"],[6,"Fraction"],[3,"VotingRegistration"],[3,"Server"],[3,"Child"],[3,"SnapshotUpdater"],[3,"TestnetRewardAddress"],[3,"KeyContribution"],[3,"Identifier"],[3,"SnapshotBuilder"],[3,"VotingPower"],[3,"AtomicU32"],[3,"NEXT_AVAILABLE_PORT_NUMBER"],[3,"TempDir"],[4,"ServerBootstrapperError"],[3,"DbBuilder"],[4,"DbBuilderError"],[4,"ConnectionError"],[4,"VarError"],[3,"Runner"],[3,"ServerBootstrapper"],[3,"CargoError"],[4,"LogLevel"],[3,"BootstrapCommandBuilder"],[3,"ServerSettingsBuilder"],[4,"SocketAddr"],[3,"Cors"],[13,"CannotDeserializeResponse"],[8,"RawSnapshotExtension"]]},\
"vitup":{"doc":"","t":"GAAAAAAANEDHHHHHHHHHHNNNERNENNRRRNHHHHHHHHHHNNDNNNDDILMMMLLLLLFFLLLMMLMFFMLLLLLFLLLLLLLLLLLLMFMFLALLLLLLLMMMLAKKLMLMLLMMLLLLLLLLAMMLLLCCCCCACCCCCCCAAAADNNNEENNNNLMMLLLLLLLLLLLLLLFLLLFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMHHHHHHHENNHHHHHHHILLLLLLLLLLFLLLLLFLKKLLLLLLFFFFFNNENNDLLLLMLLLLLLMLLLLMLMLMLMLLLLMLLMLDMLLMLLLLLLLLLMLLLLLLLLLDIKAMAAFIKDLLLLLLLLLLLLLLMLLLLLLLLNNNNNENNNNNNNENNCELLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLALLLALLLLLLLLLAALLLLLLLLLLLLLLLALLLDLLLLMLLLLLLLLLLFLLLLMMMLLLLLMLNDEDNNDNENNDMMAMAMMMMMMMMMMMMMMMAMMMAMMDMLLLLLLLLLLLLLLLLLLMMLLLLLLNCNECNNENNCNECCNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLDLLLLMLLMLLLLLLLLMLLLLMMMMMMLLLLLLDLLLLMLLMLLLLLLLLMLLLLMLMMMMMMLLLLLLLCCCAAADLLLLLLMLLLLLLLLLLLLMMMLLLLLLDMLLLLLLLLLLLLLLLLLLMMLLLLLLDLLLLLLLLLLLLLLLLLLMMMMLLLLLLDLLLLLLLLLLLLLLMLLMMLLMMLLLLLLDDLLLLLLLLLLLLLLLLLLLLLMLLLMMMLLLLMMLMLLLLLLLLLLNNNNNEEENNNNNLLLLLLLLLLLLLLLALLLLLLLLLNNNNNEEDEDDDDNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLMMMLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNNNNEDDDNNAMMMMMMMMMMMMMMMMMAMMMMMMMAMMMMMMMMMMMMMMMMMMMMMDLLLLMLLMLLLMLLLLLMLLLLMMMMMMMMMLLLLLMLNNNENNNDDNNLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLCCCCDCLLLLLLLLLMLLLLLLMLMMLLMMMMMMMMMMMMMMMMMLLLLLMMMMMLDLLLLLLMLLLLLLLLLLLLLLLLLLNNNNNNENNENNNNELLLLLLLLAALLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLDENLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNEEDDNNNNNNNLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNENNEDNNNNNNNENNENNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAANNENENDNNENNENENNNNNNENEEEDNENNNNNDNDNNNNNNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNDDDLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLNNNEDDNHHHHHHHHHHHNNCDDRNDNHHHHHHHHHHHEDRNNEDDRDDENNNLAMMMMAMLLALALLMMMMMFLLLLMLLLLMLAMLLMAAMLMLFFLAMMMMAMMLLLMLMMAMMAMLMMMMMMMMMMMMMMMMMMMMMMMMDLMLLLLLLLLLMLLLLLLLLLLLDLLMMLLLLMMLFLLLLLLLLLMLMLLLMLLDCCCLLLLLLLMLCCLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLNNDENRRLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLCCREDRNENNLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLNNNNREDNNLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMNNRENDRRLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMLLNENNNLLLLLLLLLLLLLLLLLLFLLLLLLDLLLLLLLLLLLLMLLLLLLLLMLCCDLLLLLAMLLLLLLLALLLAMLLLLLLDDLLMLLLLMLLLLMLLLLLLLLLLMLLLLMLLMLLLLMMMMMMMMLLMLLLLLLLLMLLDLLLLLFFFFLLLLLLLMMMMLLLMLMLLLLLDDLLMLLLLLLLLMLLLLLLLLLLMLLLLMLLMLLLLMMMMMLLMLLLLLLLLMMMLLDLLLLLLLLLLLLLLLMLLLLLMLNRNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMLLLLLMMMMNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMAAAAAANNNNNEDDALLLLLLLLAMLLLLLALLMLLLLLLLLLLLLLMALLLLLLLLLMLMLLAANEDDDNNNNNNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNEDNNNDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLMLLLLLLLMLLLLLMLLNEDDDNNNNNNMMMNNNNNEDNNNDMMNNDDEGNNNENNNNNNNDNEDNDDENNNNNNENNMMMMMMAMAAMMAMMMMAMMMMAMMMMFMMMAAFMMMMMMDENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLFLLLLMLLLLLLLLMFNNNDDENRRLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLMMLFLLLLLLLLLLLLLLLHHDGENNHHNLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLNNDNDEGNENNNDDMAMMMAAMMMMMMMFAFMMMMDLLLLLLLLLLLLLLLMMMFLLMLLLLMNDGNNENGGLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLNNENHHDDDDMMFFFFLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLMLLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMWWWWWHHNNENNNNHHNNHHHHHDDDDDLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLFLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNENENDNNNLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLFFMLLFLLMLLLLLLLLLLLLLLLLLLLLLLNHHHHENNHHHHDNMLMLMLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMLLMLMLLLWWHHHHHHHNNENNNNHHHHHHHNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLACLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCALAALAFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWWWHHHHHHDDLLFLLLLLLLLLLLLLLLLLLFLLLLLLFLLLLLLLLLLCAAWWWWWWWWWWWWWWWWWWWWWWWWHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFFFFFFFFFFFFFFFFFFFFFFFFFWWHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFAWWWWWWWWWWWHHHHHHHHHHHHHHHHHHHHHHHHDHHHHHHHHHHHHHHHHHHHHHHHHLLLFLLLLLMLFFFFFFFFLLFLFFFLLLLWDDDLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLLLLLWWWHHHHFFFFFFFFFFFFWWWWWWWWWWWWWHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFFFFFFFFFFFFFDDLLLLLLMLLLLLLLLLFLLLLLLLLLLLLLLLMLLLLLLLLMLLLDDDDMMMAMMAMMMAADLLLMLLLLLLLLLLLMLLLLLLLLLDLLLLLLLLMLMLLLLLLLLLLLLLLDLLLMLLLLLLLLLLLMLLLLLLLLLLDLLLLMLLLLLLLLLLLMLLLLLLLLLADDRDGNNDNNDNENENLMMLLLLLLLLLLLLLAMLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLAMMAMMMLFMLLLLLLLLLLLMLLLMLLDGNNNENLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMLMMLLMLLLLLLLLLLLLLMRRREDRRRRNRMLLLLMLLLLLLLFLLLLLLLLLLLLLFLLLLLLLLMLLLLLLLLLLLWWWWWWWWHHHHHHHHHHDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLMLLLLLLLLLLMLLLLLLDLLLLLLLLMLLLALLLALLLMLALMFALLMLLLLMLMFFHFFFFNNNNNNNENDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNDIDDEDDEGDNEEDDMMMMMMLLMMMAMLLLMLLFFMLLLKKMKKMMMMMMMMAMMMMLLLMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMCCCDICCCCCCCCCCCMACCAKKMKKAADLLMLLLLLLMLLLLLLLLLLLNNNNEDDLLMLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLFLLLLMDDCDCEDNNNNNNNNDNGCCDDICCRLLLLMLMLMLMLMLLLLLLLLLLLLLLLLLLLMLLMMMLLLLLLLAMALMLLLLLLLLLLLLLLLLLLLLLLLLLLFLMLMLLLLLLLLLLLLLLLLMMMLLLCCMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLMLMLLLLLLKLLLMKLLMKLLLMKLLLMLMMLLMLLLLLMMMLLLLLLLMMMLLLLMLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMRRDGLLMLLLLLLLLLLLLLLMLLMMLLLMLLLLLLNDENNLLLLLLLLLLLLLLLLLLFFLLLLLLLLLMLLLLLLLLLLLNNNENNNNNNNNNNNNNNNGNCNCCCRLLALLLLLLLLLLLLLLLLLLALALLLLLMMMMMMMMMMMMMMMMMENDLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMLLMLLLMLLLLLLLMLLGDLLLLLLLLLLLLLLLLLLMLMMLLLLLMLDMMLLLLLLLLLLLMLLLMLLLLIIIRRDLLLLLLLLLLLLLLKKKLLLLMLMFFF","n":["Result","builders","cli","client","config","error","mode","testing","Archive","ArchiveConfError","ArchiveConfiguration","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Cert","Controller","DiscoverArchiveByFile","Error","FOLLOWER","Fund","Initial","Io","Json","LEADER_1","LEADER_2","LEADER_3","LegacyFund","META","META","META","META","META","META","META","META","META","META","NotImplemented","Qr","ReviewGenerator","Token","TooManyOptions","Url","VitBackendSettingsBuilder","VitVotePlanDefBuilder","WalletExtension","__clone_box","archive_db","assessors_per_proposal_count","block_folder","borrow","borrow","borrow_mut","borrow_mut","build","build_current_fund","build_servicing_station_parameters","build_topology","clone","clone_into","committee_wallet","committee_wallet","config","config","convert_to_blockchain_date","convert_to_human_date","current_id","default","deref","deref","deref_mut","deref_mut","discover_archive_input_files","drop","drop","dump_qrs","fmt","fmt","from","from","from","from","from","from","from","fund_name","generate_qr_and_hashes","generator","get_configuration_from_file_url","header","helpers","in_current_span","init","init","into","into","into_request","into_request","options","private","proposals_count","provide","reviews","save_qr_code","save_qr_code_hash","session_settings","session_settings","skip_qr_generation","skip_qr_generation","source","span","span","split_by","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","utils","vote_phases","voting_tokens","vzip","vzip","write_token","ArchiveConfError","ArchiveConfiguration","QrError","VitVotePlanDefBuilder","WalletExtension","archive","build_current_fund","build_servicing_station_parameters","convert_to_blockchain_date","convert_to_human_date","discover_archive_input_files","generate_qr_and_hashes","get_configuration_from_file_url","qr","static_data","time","vote_plan","ArchiveConfiguration","CannotFindArchiveDB","CannotFindBlock0Folder","DiscoverArchiveByFile","DiscoverArchiveByFileError","Error","ExpectedUrlToFolder","IncorrectFolderUrl","NotImplemented","Url","__clone_box","archive_db","block_folder","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","discover_archive_input_files","drop","drop","drop","find_archive_db","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_configuration_from_file_url","header","header","in_current_span","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","provide","provide","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","path","path","possible_extensions","possible_extensions","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Error","Image","Io","META","META","META","META","META","META","META","WalletExtension","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","generate_qr_and_hashes","header","in_current_span","init","into","into_request","pin_to_bytes","provide","save_qr_code","save_qr_code_hash","source","to_string","try_from","try_into","type_id","vzip","build_current_fund","build_next_funds","build_servicing_station_parameters","convert_to_blockchain_date","convert_to_human_date","Cert","Fund","Initial","LegacyFund","Token","VitVotePlanDefBuilder","borrow","borrow_mut","build","committee","committee_wallet","default","deref","deref_mut","drop","from","fund_name","fund_name","init","into","into_request","options","options","private","private","proposals_count","proposals_count","split_by","split_by","try_from","try_into","type_id","vote_phases","vote_phases","voting_token","voting_tokens","voting_tokens","vzip","ReviewGenerator","assessors_per_proposal_count","borrow","borrow_mut","current_id","deref","deref_mut","drop","from","generate","generate_assessor_name","generate_community_reviews","generate_review","generate_standard_reviews","generator","increment_id","init","into","into_request","new","try_from","try_into","type_id","vzip","DeploymentTree","SessionSettingsExtension","from_dir","logger","root","session_settings","tree","init","SessionSettingsExtension","from_dir","DeploymentTree","block0_path","borrow","borrow_mut","deref","deref_mut","drop","from","from","genesis_path","init","into","into_request","new","qr_codes_path","root","root_path","try_from","try_into","type_id","voting_token","vzip","wallet_search_pattern","wallet_secret","Advanced","Committee","Data","Diff","Generate","GenerateCommand","Import","Mock","MockFarm","Qr","Quick","Snapshot","Start","StartCommand","Time","Validate","ValidateError","VitCliCommand","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","diff","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","generate","has_subcommand","has_subcommand","has_subcommand","import","init","init","init","into","into","into","into_request","into_request","into_request","start","time","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","validate","vzip","vzip","vzip","DiffCommand","augment_args","augment_args_for_update","borrow","borrow_mut","color","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","get_formatter","group_id","init","into","into_request","local","output","target","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vit_station","vzip","All","CommitteeIdCommandArgs","DataCommandArgs","ExternalDataCommandArgs","Import","Perf","QrCommandArgs","Random","RandomDataCommandArgs","Reviews","Scores","SnapshotCommandArgs","address","challenges","committee","config","data","funds","global_pin","global_pin","initials","initials","initials_mapping","initials_mapping","log_level","log_level","log_level","output_directory","output_directory","output_directory","proposals","public_key","qr","reviews","skip_qr_generation","skip_qr_generation","snapshot","snapshot","testing","CommitteeIdCommandArgs","address","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","public_key","testing","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","All","AllRandomDataCommandArgs","Cert","DataCommandArgs","ExternalDataCommandArgs","Fund","Import","Initial","LegacyFund","Perf","PerfDataCommandArgs","Random","RandomDataCommandArgs","RandomReviewsDataCommandArgs","RandomScoresDataCommandArgs","Reviews","Scores","Token","__clone_box","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","command","command","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","eq","exec","exec","external","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","has_subcommand","has_subcommand","init","init","init","into","into","into","into_request","into_request","into_request","perf","random","serialize","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","ExternalDataCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","challenges","command","command_for_update","config","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","funds","group_id","init","into","into_request","log_level","output_directory","proposals","reviews","skip_qr_generation","snapshot","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","PerfDataCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","challenges","command","command_for_update","config","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","funds","group_id","init","into","into_request","log_level","move_single_user_secrets","output_directory","parts","proposals","reviews","single","snapshot","split_secrets","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","AllRandomDataCommandArgs","RandomReviewsDataCommandArgs","RandomScoresDataCommandArgs","all","reviews","scores","AllRandomDataCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","log_level","output_directory","snapshot","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","RandomReviewsDataCommandArgs","assessors_per_proposal_count","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","output_file","proposals","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","RandomScoresDataCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","maximal_score","minimal_score","output_file","proposals","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","QrCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","initials","initials_mapping","into","into_request","log_level","output_directory","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Snapshot","SnapshotCommandArgs","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","exec","fmt","from","from","from_arg_matches","from_arg_matches_mut","global_pin","group_id","init","init","initial","initials","initials_mapping","into","into","into_request","into_request","log_level","output_directory","serialize","skip_qr_generation","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","CannotFindProposalWithId","CannotParseRatingToFloat","Challenges","Csv","Ideascale","ImportCommand","ImportError","ImportFromIdeascaleFormatCommand","Io","Proposals","Reviews","Scores","Serialize","augment_subcommands","augment_subcommands_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","has_subcommand","ideascale","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","CannotFindProposalWithId","CannotParseRatingToFloat","Challenges","Csv","Csv","Error","Format","ImportChallenges","ImportFromIdeascaleFormatCommand","ImportProposals","ImportReviews","ImportScores","InputScores","Io","Json","Proposals","Reviews","Scores","Serialize","__clone_box","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_str","get_hash","group_id","group_id","group_id","group_id","has_subcommand","hash","header","in_current_span","init","init","init","init","init","init","init","init","input","input","input","input","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","output","output","output","partial_cmp","proposal_id","proposals","provide","rating_given","serialize","serialize","source","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AdvancedStartCommandArgs","CannotReadConfiguration","CannotReadParameters","CannotSpawnCommand","Farm","Join","Mock","MockError","MockFarmCommand","MockStartCommandArgs","QuickStartCommandArgs","ServerError","SetGlobalDefault","advanced","challenges","config","config","config","endpoint","endpoint","funds","https","initials","initials_mapping","jcli","jcli","jormungandr","jormungandr","log_level","log_level","log_level","mock","mode","mode","next_vote_timestamp","params","private","proposals","proposals","quick","reviews","slot_duration","slots_in_epoch","snapshot","snapshot","snapshot_timestamp","tally_end_epoch","tally_end_timestamp","tally_start_epoch","tally_start_timestamp","testing_directory","testing_directory","token","token","token","version","vitup_log_level","vitup_log_level","vote_start_epoch","vote_start_timestamp","voting_power","AdvancedStartCommandArgs","augment_args","augment_args_for_update","borrow","borrow_mut","challenges","command","command_for_update","config","deref","deref_mut","drop","endpoint","exec","fmt","from","from_arg_matches","from_arg_matches_mut","funds","group_id","init","into","into_request","jcli","jormungandr","log_level","mode","proposals","reviews","snapshot","testing_directory","token","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vitup_log_level","vzip","CannotReadConfiguration","CannotReadParameters","CannotSpawnCommand","Error","Farm","Join","Mock","MockFarmCommand","MockStartCommandArgs","ServerError","SetGlobalDefault","augment_args","augment_args","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","command","command","command_for_update","command_for_update","config","config","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","log_level","params","provide","source","to_string","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","FOLLOWER","LEADER_1","LEADER_2","LEADER_3","QuickStartCommandArgs","VitBackendSettingsBuilder","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","deref","deref_mut","drop","endpoint","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","https","init","initials","initials_mapping","into","into_request","jcli","jormungandr","log_level","mode","next_vote_timestamp","private","proposals","slot_duration","slots_in_epoch","snapshot","snapshot_timestamp","tally_end_epoch","tally_end_timestamp","tally_start_epoch","tally_start_timestamp","testing_directory","token","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","version","vitup_log_level","vote_start_epoch","vote_start_timestamp","voting_power","vzip","TimeCommand","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","config","deref","deref_mut","drop","exec","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","init","into","into_request","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","Challenge","Config","Config","Data","Deployment","Deployment","Error","Ideascale","Ideascale","IdeascaleError","Io","Proposal","Review","Template","ValidateCommand","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","config","deployment","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","header","ideascale","in_current_span","init","init","into","into","into_request","into_request","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","ConfigValidateCommand","Error","ValidationError","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","config","deref","deref","deref_mut","deref_mut","drop","drop","exec","fmt","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","header","in_current_span","init","init","into","into","into_request","into_request","provide","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","Assert","BadGateway","Challenges","Check","CheckError","CheckIter","DeploymentValidateCommand","Fund","Proposals","Reviews","Settings","Times","VotePlan","WalletBackend","__clone_box","__clone_box","address","augment_args","augment_args_for_update","back_idx","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","exec","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","get","group_id","header","header","idx","in_current_span","init","init","init","init","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","iter","len","marker","next","next_back","nth","par_bridge","progress_with","provide","size_hint","source","to_bytes","to_owned","to_owned","to_string","to_string","to_units","to_utf16chars","to_utf8chars","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","CannotFindChallengeWithId","CannotFindChallengeWithId","Challenge","ChallengeError","Data","EmptyProposalFunds","Error","IdeascaleValidateCommand","IllegalChars","Io","Io","Parse","Parse","Parse","Proposal","ProposalError","ProposalFundsIllegalChar","Review","ReviewError","RewardsTotalMismatchWithProposersRewards","Template","Template","Template","Template","WrongFundId","ZeroRewardsTotal","add_prefix","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_and_eventually_fix_private_data","check_and_eventually_fix_proposal_funds","check_and_eventually_fix_proposal_syntax","check_proposals_wrong_syntax","command","command_for_update","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","exec","fix","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","generate_vit_database","group_id","header","header","header","header","in_current_span","in_current_span","in_current_span","in_current_span","init","init","init","init","init","input","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mail_replacement","output","parse_proposals_as_value","prefix","provide","provide","provide","provide","save_proposals","source","source","source","source","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_to_fix_proposals_missing_type","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","validate_challenges","validate_proposals","validate_reviews","vote_plan_def","vzip","vzip","vzip","vzip","vzip","args","rest","Accept","Clear","Command","Control","ControlCommand","Count","CountPersistentLogCommand","Custom","Disruption","DisruptionCommand","Files","Files","FilesCommand","Fragments","FragmentsCommand","Get","Health","Hold","List","List","Logs","LogsCommand","Mock","MockCommand","MockFilesCommand","MockStartCommand","MockStartCustomCommand","PersistentLog","PersistentLogCommand","Reject","Reset","Reset","SetAvailable","SetErrorCode","SetErrorCodeCommand","SetFundId","SetFundIdCommand","SetUnavailable","Standard","Start","Status","Stop","Utils","UtilsCommand","VitupClientCommand","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","code","command","command","command","command","command","command","command","command","command","command","command","command","command","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","endpoint","exec","exec","exec","exec","exec","exec","exec","exec","exec","exec","exec","exec","exec","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","folder","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","fund_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","has_subcommand","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","params","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Error","Reqwest","Serde","VitupAdminRestClient","VitupDisruptionRestClient","VitupRest","accept_all_fragments","address","address","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_logs","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","derive_with_port","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","get","get_logs","header","hold_all_fragments","in_current_span","init","init","init","init","inner","inner","into","into","into","into","into_request","into_request","into_request","into_request","is_up","is_up","list_files","list_files","make_available","make_unavailable","new","new_with_token","path","post","post_skip_response","provide","reject_all_fragments","reset","reset_fragments_behavior","reset_with_config","set_error_code","set_fund_id","source","start_custom","start_default","status","stop","to_string","token","token","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AboveThreshold","AroundLevel","BelowThreshold","Block0Initial","Block0Initials","Blockchain","Blockchain","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CannotCreateFile","CannotWriteToFile","CertificatesBuilder","Config","ConfigBuilder","DIRECT_VOTING_GROUP","External","Initials","Io","META","META","META","META","META","META","META","META","META","META","META","MigrationError","MigrationFilesBuilder","REP_VOTING_GROUP","Real","Representative","Role","Service","StaticData","VOTE_TIME_FORMAT","VoteBlockchainTime","VotePlan","VoteTime","Voter","Wallet","ZeroFunds","__clone_box","additional","additional","block0","block0_time","block_content_max_size","blockchain","blockchain","borrow","borrow_mut","builder","calculate_vote_duration","certs","clone","clone_into","committees","config","consensus_leader_ids","current_fund","data","date_format","default","deref","deref_mut","deserialize","down_script_content","drop","extend_from_initials_file","fmt","from","https","init","initials","initials","into","into_request","linear_fees","migrations","mode","next_funds","print_report","private","protocol","read_config","read_voter_hirs","serialize","service","service","slot_duration","slots_per_epoch","snapshot","static_data","tally_end","tally_start","to_owned","try_from","try_into","tx_max_expiry_epochs","type_id","up_script_content","version","vote_plan","vote_plan","vote_start","vote_time","vote_time","vzip","above_threshold","address","below_threshold","count","funds","funds","level","name","pin","pin","pin","pin","pin","role","role","role","role","role","role","zero_funds","find_best_match","tally_end_timestamp","tally_start_timestamp","vote_start_timestamp","AdditionalServices","__clone_box","archive","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","explorer","fmt","from","init","into","into_request","serialize","to_owned","try_from","try_into","type_id","vzip","Blockchain","__clone_box","block0_date_as_unix","block0_time","block_content_max_size","borrow","borrow_mut","clone","clone_into","committees","consensus_leader_ids","default","default_block0_time","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","linear_fees","serialize","slot_duration","to_owned","try_from","try_into","tx_max_expiry_epochs","type_id","vzip","ConfigBuilder","ReviewGenerator","VitVotePlanDefBuilder","WalletExtension","block0_initials","block0_initials_count","block_content_max_size","borrow","borrow_mut","build","challenges_count","config","consensus_leaders_ids","convert_to_blockchain_date","convert_to_human_date","default","deref","deref_mut","drop","extend_block0_initials","fees","from","fund_id","generate_qr_and_hashes","init","initials","into","into_request","next_vote_timestamp","next_vote_timestamp_from_string","next_vote_timestamp_from_string_if_some","private","proposals_count","reviews_count","set_external_committees","slot_duration_in_seconds","snapshot_initials","snapshot_timestamp","snapshot_timestamp_from_string","snapshot_timestamp_from_string_if_some","try_from","try_into","type_id","use_https","version","vote_timing","voting_power","vzip","CannotCreateFile","CannotWriteToFile","CertificatesBuilder","Error","Io","SERVER_CRT","SERVER_KEY","borrow","borrow","borrow_mut","borrow_mut","build","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","provide","server_crt_content","server_key_content","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Block0Initial","Block0Initials","DIRECT_VOTING_GROUP","Error","Initials","REP_VOTING_GROUP","Representative","Role","UnknownRole","Voter","__clone_box","__clone_box","block0","block0","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from_str","from_str","from_str","get_hash","hash","header","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","provide","serialize","serialize","snapshot","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AboveThreshold","AroundLevel","BelowThreshold","External","GRACE_VALUE","Initial","Initials","Wallet","ZeroFunds","__clone_box","__clone_box","any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","convert_to_external_utxo","count","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","extend","extend_from_external","external_templates","fmt","fmt","from","from","init","init","into","into","into_request","into_request","new_above_threshold","new_from_external","new_random_wallet","push","serialize","serialize","templates","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zero_funds_count","zero_funds_pin","above_threshold","address","below_threshold","count","funds","funds","level","name","pin","pin","pin","pin","pin","role","role","role","role","role","role","zero_funds","CannotCreateFile","CannotWriteToFile","DOWN","Error","Io","MigrationFilesBuilder","UP","VERSION","borrow","borrow","borrow_mut","borrow_mut","build","default","deref","deref","deref_mut","deref_mut","down_script_content","drop","drop","fmt","fmt","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","up_script_content","vzip","vzip","Interactive","Mode","Monitor","Service","Standard","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","fmt","fmt","from","header","init","into","into","into_request","parse_mode_from_str","to_owned","to_string","try_from","try_into","type_id","vzip","Service","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","https","init","into","into_request","serialize","to_owned","try_from","try_into","type_id","version","vzip","CurrentFund","NextFund","StaticData","__clone_box","borrow","borrow_mut","clone","clone_into","current","current_fund","default","deref","deref_mut","deserialize","drop","fmt","from","info","init","into","into_request","next","next_funds","serialize","to_owned","try_from","try_into","type_id","vzip","CurrentFund","CurrentFundDates","__clone_box","__clone_box","assessment_qa_start","borrow","borrow","borrow_mut","borrow_mut","challenges","clone","clone","clone_into","clone_into","dates","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","finalize_proposals_start","fmt","fmt","from","from","fund_info","init","init","insight_sharing_start","into","into","into_request","into_request","next_snapshot_time","next_vote_start_time","options","proposal_assessment_start","proposal_submission_start","proposals","refine_proposals_start","reviews","serialize","serialize","snapshot_time","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","voting_power","vzip","vzip","FundInfo","__clone_box","borrow","borrow_mut","clone","clone_into","default_goals","default_groups","default_result_url","default_survey_url","deref","deref_mut","deserialize","drop","fmt","from","from","fund_id","fund_name","goals","groups","init","into","into_request","results_url","serialize","survey_url","to_owned","try_from","try_into","type_id","vzip","NextFund","NextFundDates","__clone_box","__clone_box","assessment_qa_start","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","dates","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","finalize_proposals_start","fmt","fmt","from","from","fund_info","init","init","insight_sharing_start","into","into","into_request","into_request","next_snapshot_time","next_vote_start_time","proposal_assessment_start","proposal_submission_start","refine_proposals_start","serialize","serialize","snapshot_time","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","voting_start","voting_tally_end","voting_tally_start","vzip","vzip","VotePlan","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","private","serialize","to_owned","try_from","try_into","type_id","vote_time","vzip","Blockchain","FORMAT","Real","VoteBlockchainTime","VoteTime","__clone_box","__clone_box","blockchain","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","from","init","init","into","into","into_request","into_request","real","real_from_str","serialize","serialize","slots_per_epoch","tally_end","tally_start","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vote_start","vzip","vzip","wait_for_tally_end","wait_for_tally_start","wait_for_vote_start","find_best_match","tally_end_timestamp","tally_start_timestamp","vote_start_timestamp","AssertionFailed","Block0","Block0ConfigurationError","Block0EncodeError","Block0Error","Builder","CannotFindConfig","CannotFindSnapshotFile","Certs","ChainAddressError","ChainBech32Error","ClientRestError","ControllerError","Data","EnvironmentIsDown","Error","FragmentSender","FragmentVerifier","GlobError","ImageReadError","ImportError","Interactive","IoError","Main","MockError","MonitorResourcesError","NoChallengeIdAndGroupFound","NoChallengeIdFound","Node","ParseTime","ProxyNotFound","SerdeError","SerdeYamlError","SetGlobalDefault","SnapshotIntialReadError","SyncTimeoutOccurred","TemplateLoadError","TransactionNotInBlock","UnknownLogLevel","ValgrindError","Validate","VerificationFailed","VitRestError","VitServerBootstrapperError","VitStationControllerError","Wallet","WalletProxyController","WalletProxyError","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","in_current_span","init","into","into_request","provide","source","to_string","try_from","try_into","type_id","vzip","alias","group","id","info","info","node","proposal_id","status","timeout","interactive","mock","monitor","service","spawn","standard","Describe","Exit","Explorer","Send","Show","VitInteractiveCommand","VitInteractiveCommandExec","VitUserInteractionController","args","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","controller","controller","controller_mut","deref","deref","deref_mut","deref_mut","describe","drop","drop","explorers","fmt","from","from","from_arg_matches","from_arg_matches_mut","has_subcommand","init","init","into","into","into_request","into_request","parse_and_exec","proxies","show","tear_down","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","vit_controller","vit_controller_mut","vit_stations","vzip","vzip","describe","show","All","Describe","DescribeAll","DescribeVitStations","DescribeWalletProxies","Nodes","Proxies","Stations","Topology","VotePlan","Wallets","alias","alias","alias","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","command","command","command","command_for_update","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","exec","exec","exec","exec","fmt","fmt","fmt","fmt","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","group_id","has_subcommand","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","BlockHeight","FragmentCount","Fragments","Logs","PeerStats","Show","ShowStatus","Stats","Status","VotePlans","VoteTimeStatus","alias","alias","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate_date","command","command","command","command_for_update","command_for_update","command_for_update","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","exec","exec","exec","fmt","fmt","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","has_subcommand","init","init","init","into","into","into","into_request","into_request","into_request","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","VitUserInteractionController","borrow","borrow_mut","default","deref","deref_mut","drop","explorers","explorers","finalize","from","init","into","into_request","new","proxies","proxies","proxies_mut","try_from","try_into","type_id","vit_stations","vit_stations","vit_stations_mut","vzip","All","Describe","DescribeAll","DescribeVitStations","DescribeWalletProxies","Nodes","Proxies","Stations","Topology","VotePlan","Wallets","alias","alias","alias","BlockHeight","FragmentCount","Fragments","Logs","PeerStats","Show","ShowStatus","Stats","Status","VotePlans","VoteTimeStatus","alias","alias","Accept","CannotParseUuid","Configuration","Context","ContextError","ContextLock","Crypto","Disabled","Forget","FragmentRecieveStrategy","Hyper","IO","InvalidCertificate","InvalidKey","Io","Jammed","Ledger","LedgerState","Mock","MockConfigError","MockState","Moderate","NetworkCongestion","NetworkCongestionData","NetworkCongestionMode","None","Normal","ParseConfiguration","Pending","ReadConfiguration","Reject","RestError","Rusls","SpawnCommand","address","available","block0_bin","block0_configuration","block_account_endpoint_counter","block_content_size_avg","config","config","congestion","context","controller","error_code","farm","fragment_logs","fragment_strategy","is_private","ledger","ledger_state","ledger_state","local","mempool_tx_count","mempool_usage_ratio","mock_state","mode","network_congestion","port","protocol","read_config","received_fragments","received_fragments_count","rejected_fragments_count","rest","snapshot","start_rest_server","state","token","version","vit_state","voters","working_dir","Configuration","Error","ParseConfiguration","ReadConfiguration","SpawnCommand","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","fmt","fmt","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","local","port","protocol","provide","read_config","serialize","source","to_owned","to_string","token","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","working_dir","write_config","Disabled","Jammed","Moderate","NetworkCongestion","NetworkCongestionData","NetworkCongestionMode","Normal","PRIVATE_FRAGMENT_SIZE","PUBLIC_FRAGMENT_SIZE","__clone_box","__clone_box","__clone_box","block_content_size_avg","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","calculate","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","fragments_total_size","from","from","from","init","init","init","into","into","into","into_request","into_request","into_request","is_private","jammed_percentage","mempool_tx_count","mempool_usage_ratio","mode","new","received_fragments_count","rejected_fragments_count","set_mode","shift_slot_back","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","CALLSITE","CALLSITE","Context","ContextLock","Error","Io","Ledger","META","META","Mock","address","address","api_token","available","block0_bin","borrow","borrow","borrow_mut","borrow_mut","check_if_rest_available","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","protocol","provide","reset","set_api_token","source","state","state","state_mut","to_string","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip","working_dir","CannotFindMock","Certs","Config","Config","Context","ContextError","ContextLock","Controller","ControllerError","EnvironmentAlreadyExist","Io","Io","MockBootstrap","MockController","address","config","config","configuration","configuration","context","controller","https","local","mock_id","mock_id","port","process","protocol","read_config","rest","start_rest_server","state","token","working_directory","working_directory","Config","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","fmt","from","init","into","into_request","local","port","protocol","read_config","serialize","to_owned","token","try_from","try_into","type_id","vzip","working_directory","CannotFindMock","Context","ContextLock","Controller","EnvironmentAlreadyExist","Error","Io","MockId","MockState","address","address","api_token","borrow","borrow","borrow_mut","borrow_mut","config","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","get_active_mocks","header","in_current_span","init","init","into","into","into_request","into_request","new","protocol","provide","set_api_token","shutdown_mock","source","start_mock","start_mock_on_random_port","state","state_mut","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","working_dir","Certs","Config","Error","Io","LAZY","LAZY","MockBootstrap","MockController","NEXT_AVAILABLE_PORT_NUMBER","OCCUPIED_PORTS","__private_field","__private_field","__stability","__stability","__static_ref_initialize","__static_ref_initialize","address","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","configuration","configuration","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_available_port","header","https","https","in_current_span","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_up","mock_id","mock_id","new","port","port","process","provide","serialize","shutdown","source","spawn","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","working_directory","working_directory","","","","","","CALLSITE","CALLSITE","CannotParseUuid","Crypto","Error","Hyper","IO","InvalidCertificate","InvalidKey","META","META","Rest","Rusls","S","S","S","S","S","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","as_ref","as_ref","authorize_token","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_active_mocks","header","in_current_span","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","provide","shutdown_mock","source","start_mock_on_random_port","start_rest_server","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Accept","CannotFindFragment","Error","Forget","FragmentRecieveStrategy","Ledger","LedgerState","None","Pending","Reject","__clone_box","absolute_slot_count","accounts","active_vote_plans","batch_message","block0_configuration","block0_hash","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","curr_slot_start_time","current_blockchain_age","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","expiry_date","fees","fmt","fmt","fmt","fmt","fragment_logs","fragment_logs","fragment_strategy","from","from","from","from","header","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","is_fragment_valid","is_transaction_valid","ledger","message","new","override_fragment_status","provide","received_fragments","received_fragments","set_fragment_status","set_fragment_strategy","set_status_for_fragment_id","set_status_for_recent_fragment","settings","source","statuses","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Builder","CALLSITE","CALLSITE","CALLSITE","CALLSITE","Error","Io","Ledger","META","META","META","META","MockState","Snapshot","available","block0_bin","block0_bin","block_account_endpoint","block_account_endpoint_counter","borrow","borrow","borrow_mut","borrow_mut","controller","decrement_block_account_endpoint","defined_wallets","deref","deref","deref_mut","deref_mut","drop","drop","error_code","fmt","fmt","from","from","from","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","ledger","ledger_mut","ledger_state","network_congestion","new","node_stats","provide","reset_block_account_endpoint","set_block_account_endpoint","set_congestion","set_fund_id","set_version","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_fund","version","version","vit","vit_mut","vit_state","voters","voters","voters_mut","vzip","vzip","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CannotParseUuid","Crypto","Error","Hyper","IO","InvalidCertificate","InvalidKey","META","META","META","META","META","META","META","Rusls","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","admin","admin_filter","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","control","cors","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","health_handler","in_current_span","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","load_cert","load_private_key","node","provide","reject","search","source","ssl","start_rest_server","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vit_ss","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","","","","CALLSITE","CALLSITE","META","META","S","S","__StaticPath","__StaticPath","__clone_box","__clone_box","admin_filter","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","from","from","fund_put_filter","init","init","into","into","into_request","into_request","put_fund","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","control_filter","handlers","routes","","","","","","","","","","","","","","","","","","","","","","","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","authorize_token","command_accept","command_available","command_block_account","command_congestion_jammed","command_congestion_moderate","command_congestion_normal","command_congestion_reset","command_create_snapshot","command_error_code","command_forget","command_fund_id","command_pending","command_reject","command_reset","command_reset_block_account","command_reset_mock","command_update_accept","command_update_forget","command_update_fund","command_update_pending","command_update_reject","command_version","file_lister_handler","update_fragment_id","","","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","S","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","control_filter","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","cors_filter","default_headers","handlers","","","","","","","","","","","","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","GetMessageStatusesQuery","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","META","as_fragment_ids","borrow","borrow_mut","debug_message","deref","deref_mut","deserialize","drop","fmt","fragment_ids","from","get_account","get_account_votes","get_account_votes_with_plan","get_active_vote_plans","get_fragment_logs","get_fragment_statuses","get_node_stats","get_settings","init","into","into_identifier","into_request","parse_account_id","post_fragments","post_message","try_from","try_into","type_id","vzip","","ForcedErrorCode","GeneralException","InvalidBatch","account_does_not_exist","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","code","code","code","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","hex_encoding_malformed","init","init","init","into","into","into","into_request","into_request","into_request","proposal_not_found","report_invalid","summary","summary","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","","","","CALLSITE","CALLSITE","META","META","filter_challenges","filter_proposals","limit_and_offset","make_error","mock_order_by_error","search","search_count","search_impl","sort_challenges","sort_proposals","load_cert","load_private_keyget_all_funds","get_all_proposals","get_challenge_by_id","get_challenge_by_id_and_group_id","get_challenges","get_delegator_info","get_fund","get_fund_by_id","get_proposal","get_proposal_by_idx","get_review_by_id","get_tags","get_voters_info","ArbitraryVoterHIR","VoterSnapshot","arbitrary_with","arbitrary_with","borrow","borrow","borrow_mut","borrow_mut","contributions","contributions_by_stake_public_key_and_snapshot_tag","contributions_by_voting_key_and_voter_group_and_snapshot_tag","default","deref","deref","deref_mut","deref_mut","drop","drop","epoch_now","fmt","fmt","from","from","from_config_or_default","init","init","insert_contributions","insert_voters","into","into","into_request","into_request","put_snapshot_tag","snapshot_by_tag","snapshot_tags","tags","total_voting_power_by_voting_group_and_snapshot_tag","try_from","try_from","try_into","try_into","type_id","type_id","voters","voters_by_voting_key_and_snapshot_tag","vzip","vzip","ExplorerMonitorController","MonitorController","VitStationMonitorController","WalletProxyMonitorController","controller","controller","controller","explorer","hersir_controller","inner","main","progress_bar","progress_bar","progress_bar","vit_station","wallet","ExplorerMonitorController","alias","borrow","borrow_mut","controller","deref","deref_mut","drop","finish_monitoring","from","init","into","into_request","is_up","new","progress_bar","progress_bar","progress_bar_failure","progress_bar_start","progress_bar_success","shutdown","status","try_from","try_into","type_id","vzip","MonitorController","borrow","borrow_mut","build_progress_bar","deref","deref_mut","drop","finalize","from","hersir_controller","init","inner","into","into_request","monitor_nodes","new","spawn_explorer","spawn_node","spawn_vit_station","spawn_vit_station_archiver","spawn_wallet_proxy","spawn_wallet_proxy_custom","try_from","try_into","type_id","vzip","VitStationMonitorController","alias","borrow","borrow_mut","controller","deref","deref_mut","drop","finish_monitoring","from","init","into","into_request","is_up","new","progress_bar","progress_bar","progress_bar_failure","progress_bar_start","progress_bar_success","rest","shutdown","status","try_from","try_into","type_id","vzip","WalletProxyMonitorController","alias","borrow","borrow_mut","client","controller","deref","deref_mut","drop","finish_monitoring","from","init","into","into_request","is_up","new","progress_bar","progress_bar","progress_bar_failure","progress_bar_start","progress_bar_success","shutdown","status","try_from","try_into","type_id","vzip","manager","APIToken","APITokenManager","API_TOKEN_HEADER","ControlContext","ControlContextLock","Idle","InvalidHeader","ManagerService","ParseError","Running","ServerStopper","Starting","State","Stopping","TokenError","UnauthorizedToken","__clone_box","address","api_token","as_ref","base32_len","base32_len","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone_into","context","control_context","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","file_lister","fmt","fmt","fmt","from","from","from","from","from","from_string","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","into_response","is_token_valid","new","new","provide","rest","runtime","server_stopper","service","setup","should_start","should_stop","source","start_rest_server","state","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verification_token","vzip","vzip","vzip","working_directory","write_base32","write_base32","ControlContext","ControlContextLock","Idle","Running","Starting","State","Stopping","__clone_box","address","address","api_token","api_token","api_token_mut","borrow","borrow","borrow_mut","borrow_mut","clear_requests","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","fmt","fmt","from","from","header","init","init","into","into","into_request","into_request","new","request_to_start","request_to_stop","serialize","server_stopper","server_stopper","set_parameters","set_server_stopper","setup","setup","setup_mut","should_start","should_stop","start","state","state","state_mut","stop","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","working_directory","working_directory","BLOCKCHAIN","COMMITTEE","COMMITTEES","Error","FolderDump","NETWORK","PRIVATE_DATA","PRIVATE_KEYS","QR_CODES","RootFolderDoesNotExist","WALLET","blockchain_items","borrow","borrow","borrow_mut","borrow_mut","content","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","dump_json","fmt","fmt","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","is_storage","new","provide","push_blockchain","push_network","push_path","push_private_data_keys","push_qr_code","push_wallet_private_keys","root","serialize","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","","","","","","","","","S","S","S","S","S","S","S","S","S","S","ServerStopper","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__StaticPath","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","authorize_token","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","file_lister_handler","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","report_invalid","start_default_handler","start_handler","start_rest_server","status_handler","stop","stop_handler","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ManagerService","borrow","borrow_mut","clear_requests","control_context","deref","deref_mut","drop","from","init","into","into_request","new","request_to_start","request_to_stop","runtime","setup","spawn","try_from","try_into","type_id","vzip","NetworkSpawnParams","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","endpoint","fmt","from","init","interactive","into","into_request","leader_node","monitor","new","nodes_params","passive_node","protocol","proxy_params","service","session_settings","session_settings","spawn_network","standard","to_owned","token","token","try_from","try_into","type_id","version","version","vzip","working_directory","spawn_network","vit_interaction","POOLS","spawn_network","single_run","spawn_network","spawn_network","CannotBootstrap","CannotBootstrapExplorer","CannotCreateFile","CannotGetWallet","CannotSpawnNode","CannotWriteYamlFile","Controller","DataError","DbBuilder","DbGenerator","ExplorerController","FragmentIsPendingForTooLong","FragmentNotInMemPoolLogs","GrpcError","InvalidEnclaveLeaderIds","InvalidFragmentLogs","InvalidFragmentLogs","InvalidNetworkStats","InvalidNodeStats","Io","Io","Io","Migration","NoExplorerDefinedInSettings","NoVitStationArchiverDefinedInSettings","NoVitStationDefinedInSettings","NoWalletProxiesDefinedInSettings","NodeFailedToBootstrap","NodeFailedToBootstrap","NodeFailedToShutdown","NodeFailedToShutdown","PortAlreadyBinded","PortAlreadyBinded","Reqwest","Reqwest","RestError","RestError","SerializationError","Valgrind","ValidVotePlanParameters","ValidVotingTemplateGenerator","VitController","VitControllerBuilder","VitControllerError","VitSettings","VitStationController","VitStationControllerError","VitStationSettings","WalletProxyController","WalletProxyController","WalletProxyControllerError","WalletProxyError","WalletProxySettings","WalletProxySpawnParams","alias","alias","alias","alias","archive_conf","base_address","borrow","borrow_mut","client","committees","controller_builder","controllers","current_fund","deref","deref_mut","drop","explorer_process","from","from","generate_database","generate_random_database","hersir_controller","init","into","into_request","next_challenge","next_fund","next_funds","next_proposal","next_review","node_backend_address","parameters","process","process","protocol","protocol","proxy_address","rest_client","settings","settings","settings","status","status","try_from","try_into","type_id","valgrind","version","vit_settings","vit_station_address","vit_stations","vzip","wallet_proxies","alias","alias","alias","duration","logs","logs","message","alias","alias","alias","alias","cause","cause","duration","duration","fragment_id","fragment_id","logs","logs","logs","logs","message","path","path","DataError","DbGenerator","ExplorerController","ValidVotePlanParameters","ValidVotingTemplateGenerator","VitController","VitControllerBuilder","VitControllerError","VitStationController","VitStationControllerError","VitStationSettings","WalletProxyController","WalletProxyControllerError","WalletProxyError","WalletProxySettings","WalletProxySpawnParams","current_fund","explorer","generate_database","generate_random_database","main","next_challenge","next_fund","next_funds","next_proposal","next_review","vit_station","wallet_proxy","ExplorerController","address","alias","alias","borrow","borrow_mut","client","deref","deref_mut","drop","explorer_process","from","init","into","into_request","new","shutdown","status","try_from","try_into","type_id","vzip","CannotBootstrap","CannotBootstrapExplorer","CannotGetWallet","Controller","Error","VitController","VitControllerBuilder","__clone_box","archive_conf","archive_conf","block0_file","blockchain","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","committee","committees","controlled_wallets","controller_builder","default","defined_nodes","defined_vote_plan","defined_vote_plans","defined_wallets","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","explorer","fmt","fmt","from","from","from","from","header","hersir_controller","hersir_controller","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","new","new","provide","settings","source","spawn_explorer","spawn_node","spawn_vit_station","spawn_vit_station_archive","spawn_wallet_proxy","spawn_wallet_proxy_custom","to_owned","to_string","topology","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vit_settings","vit_settings","vote_plans","vzip","vzip","vzip","wait_for_bootstrap","wallet","wallet","wallets","working_directory","alias","ArbitraryValidVotingTemplateGenerator","BootstrapCommandBuilder","DataError","DbBuilder","DbGenerator","Error","ExternalValidVotingTemplateGenerator","InvalidFragmentLogs","Io","NoVitStationArchiverDefinedInSettings","NoVitStationDefinedInSettings","NodeFailedToBootstrap","NodeFailedToShutdown","PortAlreadyBinded","Reqwest","RestClient","RestError","Result","VIT_CONFIG","VIT_STATION_LOG","ValidVotePlanGenerator","ValidVotePlanParameters","ValidVotingTemplateGenerator","VitStationController","VitStationSettings","_DERIVE_core_fmt_Debug_FOR_Error","__clone_box","__clone_box","__clone_box","address","address","advisor_reviews","advisor_reviews","allowed_origins","allowed_origins","block0_path","block0_path","block0_paths","block0_paths","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","build_async","cert_file","cert_file","challenge_type","challenges","challenges","challenges","challenges","challenges_count","clone","clone","clone","clone_into","clone_into","clone_into","controller","current_fund","data","db_url","db_url","default","default","default","delegator_info","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","disable_log","drop","drop","drop","drop","drop","drop","drop","dump_settings_to_file","enable_api_tokens","enable_api_tokens","enable_log","exe","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","fund","funds","funds","funds","funds","gen_challenge_url","gen_highlights","gen_http_address","generate_database","generate_random_database","generator","genesis","header","health","impact_score","in_current_span","in_settings_file","in_settings_file","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","log_file","log_file","log_level","log_level","max_age_secs","max_age_secs","new","new","new","new","new","new","next_challenge","next_challenge","next_challenge","next_challenge_id","next_challenge_id","next_fund","next_fund","next_fund","next_funds","next_proposal","next_proposal","next_proposal","next_proposal_id","next_proposal_id","next_review","next_review","next_review","next_review_id","next_review_id","out_settings_file","out_settings_file","parameters","path_builder","priv_key_file","priv_key_file","proposal","proposal","proposal_category","proposal_fund","proposals","proposals","proposals","proposals","proposals_by_voteplan_id_and_index","proposals_challenge_info","proposals_count","proposer","provide","put_raw_snapshot","put_snapshot_info","raw","reviews","reviews","search","search_count","service_version","service_version","service_version","set_api_token","set_origin","set_timeout","snapshot_tags","source","to_owned","to_owned","to_owned","to_string","tokens","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","voter_info","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_advisor_reviews","with_challenges","with_funds","with_proposals","with_snapshot","with_token","with_tokens","alias","alias","duration","logs","logs","message","VIT_CONFIG","VIT_STATION_LOG","VitStationController","VitStationSettings","address","alias","alias","as_named_process","borrow","borrow_mut","challenges","check_running","delegator_info","deref","deref_mut","drop","drop","from","init","into","into_request","process","proposals","put_raw_snapshot","rest_client","settings","shutdown","snapshot_tags","status","status","try_from","try_into","type_id","voter_info","vzip","wait","DbBuilder","DbGenerator","Error","Io","Migration","borrow","borrow","borrow_mut","borrow_mut","build","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","from","from","generate_database","generate_random_database","header","in_current_span","init","init","into","into","into_request","into_request","new","parameters","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CannotCreateFile","CannotSpawnNode","CannotWriteYamlFile","Error","FragmentIsPendingForTooLong","FragmentNotInMemPoolLogs","GrpcError","InvalidEnclaveLeaderIds","InvalidFragmentLogs","InvalidNetworkStats","InvalidNodeStats","Io","NoExplorerDefinedInSettings","NoWalletProxiesDefinedInSettings","NodeFailedToBootstrap","NodeFailedToShutdown","PortAlreadyBinded","Reqwest","RestError","Result","SerializationError","WalletProxyController","WalletProxyController","WalletProxyControllerError","WalletProxySettings","WalletProxySpawnParams","_DERIVE_core_fmt_Debug_FOR_Error","borrow","borrow_mut","controller","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","header","in_current_span","init","into","into_request","provide","settings","source","spawn_params","to_string","try_from","try_into","type_id","vzip","alias","alias","alias","alias","cause","cause","duration","duration","fragment_id","fragment_id","logs","logs","logs","logs","message","path","path","Error","Valgrind","WalletProxyController","address","alias","alias","as_named_process","block0","borrow","borrow","borrow_mut","borrow_mut","check_running","client","client","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","header","in_current_span","init","init","into","into","into_request","into_request","new","process","provide","settings","settings","shutdown","source","status","status","to_string","try_from","try_from","try_into","try_into","type_id","type_id","valgrind","vzip","vzip","VitStationSettings","WalletProxySettings","__clone_box","address","base_address","base_node_backend_address","base_vit_address","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","node_backend_address","node_backend_address","prepare","protocol","proxy_address","to_owned","try_from","try_into","type_id","vit_address","vit_station_address","vzip","WalletProxySpawnParams","alias","base_address","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","override_settings","protocol","try_from","try_into","type_id","version","vzip","with_base_address","with_protocol","with_version","PrepareSettings","PrepareVitServerSettings","PrepareWalletProxySettings","VIT_STATION","VIT_STATION_ARCHIVE","VitSettings","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","from","init","into","into_request","new","prepare","prepare","prepare","to_owned","try_from","try_into","type_id","vit_stations","vzip","wallet_proxies","spawn_network","vitup_setup","vitup_setup_default"],"q":[[0,"vitup"],[8,"vitup::builders"],[134,"vitup::builders::helpers"],[151,"vitup::builders::helpers::archive"],[225,"vitup::builders::helpers::archive::DiscoverArchiveByFileError"],[229,"vitup::builders::helpers::qr"],[273,"vitup::builders::helpers::static_data"],[276,"vitup::builders::helpers::time"],[278,"vitup::builders::helpers::vote_plan"],[316,"vitup::builders::reviews"],[340,"vitup::builders::utils"],[347,"vitup::builders::utils::logger"],[348,"vitup::builders::utils::session_settings"],[350,"vitup::builders::utils::tree"],[374,"vitup::cli"],[470,"vitup::cli::diff"],[501,"vitup::cli::generate"],[540,"vitup::cli::generate::committee"],[568,"vitup::cli::generate::data"],[658,"vitup::cli::generate::data::external"],[692,"vitup::cli::generate::data::perf"],[729,"vitup::cli::generate::data::random"],[735,"vitup::cli::generate::data::random::all"],[764,"vitup::cli::generate::data::random::reviews"],[792,"vitup::cli::generate::data::random::scores"],[821,"vitup::cli::generate::qr"],[851,"vitup::cli::generate::snapshot"],[899,"vitup::cli::import"],[937,"vitup::cli::import::ideascale"],[1153,"vitup::cli::start"],[1214,"vitup::cli::start::advanced"],[1253,"vitup::cli::start::mock"],[1345,"vitup::cli::start::quick"],[1401,"vitup::cli::time"],[1427,"vitup::cli::validate"],[1492,"vitup::cli::validate::config"],[1539,"vitup::cli::validate::deployment"],[1655,"vitup::cli::validate::ideascale"],[1816,"vitup::client"],[1818,"vitup::client::args"],[2251,"vitup::client::rest"],[2353,"vitup::config"],[2473,"vitup::config::Block0Initial"],[2493,"vitup::config::VoteTime"],[2497,"vitup::config::additional"],[2521,"vitup::config::blockchain"],[2552,"vitup::config::builder"],[2600,"vitup::config::certs"],[2645,"vitup::config::initials"],[2729,"vitup::config::initials::block0"],[2792,"vitup::config::initials::block0::Initial"],[2812,"vitup::config::migrations"],[2858,"vitup::config::mode"],[2888,"vitup::config::service"],[2912,"vitup::config::static_data"],[2941,"vitup::config::static_data::current"],[3001,"vitup::config::static_data::info"],[3033,"vitup::config::static_data::next"],[3091,"vitup::config::vote_plan"],[3115,"vitup::config::vote_time"],[3173,"vitup::config::vote_time::VoteTime"],[3177,"vitup::error"],[3281,"vitup::error::Error"],[3290,"vitup::mode"],[3296,"vitup::mode::interactive"],[3353,"vitup::mode::interactive::args"],[3355,"vitup::mode::interactive::args::describe"],[3465,"vitup::mode::interactive::args::show"],[3551,"vitup::mode::interactive::controller"],[3576,"vitup::mode::interactive::describe"],[3590,"vitup::mode::interactive::show"],[3603,"vitup::mode::mock"],[3677,"vitup::mode::mock::config"],[3731,"vitup::mode::mock::congestion"],[3807,"vitup::mode::mock::context"],[3869,"vitup::mode::mock::farm"],[3904,"vitup::mode::mock::farm::config"],[3932,"vitup::mode::mock::farm::context"],[3990,"vitup::mode::mock::farm::controller"],[4103,"vitup::mode::mock::farm::rest"],[4252,"vitup::mode::mock::ledger_state"],[4344,"vitup::mode::mock::mock_state"],[4424,"vitup::mode::mock::rest"],[5226,"vitup::mode::mock::rest::admin"],[5276,"vitup::mode::mock::rest::control"],[5279,"vitup::mode::mock::rest::control::handlers"],[5360,"vitup::mode::mock::rest::control::routes"],[5963,"vitup::mode::mock::rest::cors"],[5965,"vitup::mode::mock::rest::node"],[5966,"vitup::mode::mock::rest::node::handlers"],[6056,"vitup::mode::mock::rest::reject"],[6111,"vitup::mode::mock::rest::search"],[6128,"vitup::mode::mock::rest::ssl"],[6130,"vitup::mode::mock::rest::vit_ss"],[6208,"vitup::mode::mock::snapshot"],[6255,"vitup::mode::monitor"],[6271,"vitup::mode::monitor::explorer"],[6297,"vitup::mode::monitor::main"],[6323,"vitup::mode::monitor::vit_station"],[6350,"vitup::mode::monitor::wallet"],[6377,"vitup::mode::service"],[6378,"vitup::mode::service::manager"],[6479,"vitup::mode::service::manager::context"],[6549,"vitup::mode::service::manager::file_lister"],[6608,"vitup::mode::service::manager::rest"],[6843,"vitup::mode::service::manager::service"],[6865,"vitup::mode::spawn"],[6903,"vitup::mode::spawn::interactive"],[6905,"vitup::mode::spawn::monitor"],[6907,"vitup::mode::spawn::service"],[6909,"vitup::mode::spawn::standard"],[6910,"vitup::mode::standard"],[7017,"vitup::mode::standard::VitControllerError"],[7018,"vitup::mode::standard::VitStationControllerError"],[7024,"vitup::mode::standard::WalletProxyError"],[7041,"vitup::mode::standard::controllers"],[7069,"vitup::mode::standard::controllers::explorer"],[7091,"vitup::mode::standard::controllers::main"],[7184,"vitup::mode::standard::controllers::main::Error"],[7185,"vitup::mode::standard::controllers::vit_station"],[7452,"vitup::mode::standard::controllers::vit_station::Error"],[7458,"vitup::mode::standard::controllers::vit_station::controller"],[7494,"vitup::mode::standard::controllers::vit_station::data"],[7540,"vitup::mode::standard::controllers::wallet_proxy"],[7596,"vitup::mode::standard::controllers::wallet_proxy::Error"],[7613,"vitup::mode::standard::controllers::wallet_proxy::controller"],[7667,"vitup::mode::standard::controllers::wallet_proxy::settings"],[7698,"vitup::mode::standard::controllers::wallet_proxy::spawn_params"],[7721,"vitup::mode::standard::settings"],[7751,"vitup::testing"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","start advanced backend from scratch","Committee Id","generate data only","Prints differences between new deployment and target env","Generates fund data","","Import data","start mock env","start multiple mock environments","generate qrs","start backend from scratch","generate snapshot data only","Starts catalyst backend","","Convert time defined in config to UTC","Validates static ideascale data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Apply coloring during diff","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","Local environment to compare","Output file. If not defined it will output to stdout","Target environment to compare","","","","","","Vit servicing station server binary","","generate all random data","","","","generate data from external data","generate data for performance tests","","generate random data","","generate reviews random data","generate reviews random data","","","challenges import json","","configuration","","funds import json","","","how many qr to generate","how many addresses to generate","","","","","","Careful! directory would be removed before export","Careful! directory would be removed before export","Careful! directory would be removed before export","proposals import json","","","reviews import json","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","generate all random data","","","","","","generate data from external data","","","generate data for performance tests","","generate random data","","","","generate reviews random data","generate reviews random data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","challenges import json","","","configuration","","","","","","Returns the argument unchanged.","","","funds import json","","","Calls <code>U::from(self)</code>.","","","Careful! directory would be removed before export","proposals import json","reviews import json","","","","","","","","","","","","","","challenges import json","","","configuration","","","","","","Returns the argument unchanged.","","","funds import json","","","Calls <code>U::from(self)</code>.","","","","Careful! directory would be removed before export","","proposals import json","reviews import json","","","","","","","","","","","","","","","","","","","","","","","how many qr to generate","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","Careful! directory would be removed before export","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","Careful! directory would be removed before export","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Careful! directory would be removed before export","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","how many qr to generate","","Calls <code>U::from(self)</code>.","","","Careful! directory would be removed before export","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","how many addresses to generate","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Careful! directory would be removed before export","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","challenges import json","how many qr to generate","","path to config file","endopint in format: 127.0.0.1:80","endopint in format: 127.0.0.1:80","funds import json","use https mode for backend","how many addresses to generate","json file which define funds for each account example: { …","path or name of the jcli to test","path or name of the jcli to test","path or name of the jormungandr node to test","path or name of the jormungandr node to test","level for all nodes","","level for all nodes","","interactive mode introduce easy way to interact with …","interactive mode introduce easy way to interact with …","vote tally end epoch of vote plan","","switch to private voting type","proposals import json","proposals number","","challenges import json","slot duration","slots in epoch","","","snapshot timestamp","vote tally end epoch of vote plan","vote tally end epoch of vote plan","vote start epoch of vote plan","vote start epoch of vote plan","set a directory in which the tests will be run, allowing …","set a directory in which the tests will be run, allowing …","token, only applicable if service mode is used","","token, only applicable if service mode is used","switch to private voting type","","","vote start epoch of vote plan","","voting power threshold for participating in voting","","","","","","challenges import json","","","how many qr to generate","","","","endopint in format: 127.0.0.1:80","","","Returns the argument unchanged.","","","funds import json","","","Calls <code>U::from(self)</code>.","","path or name of the jcli to test","path or name of the jormungandr node to test","level for all nodes","interactive mode introduce easy way to interact with …","proposals import json","challenges import json","","set a directory in which the tests will be run, allowing …","token, only applicable if service mode is used","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","path to config file","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","endopint in format: 127.0.0.1:80","","","Returns the argument unchanged.","","","","use https mode for backend","","how many addresses to generate","json file which define funds for each account example: { …","Calls <code>U::from(self)</code>.","","path or name of the jcli to test","path or name of the jormungandr node to test","level for all nodes","interactive mode introduce easy way to interact with …","vote tally end epoch of vote plan","switch to private voting type","proposals number","slot duration","slots in epoch","","snapshot timestamp","vote tally end epoch of vote plan","vote tally end epoch of vote plan","vote start epoch of vote plan","vote start epoch of vote plan","set a directory in which the tests will be run, allowing …","token, only applicable if service mode is used","","","","","","switch to private voting type","","vote start epoch of vote plan","","voting power threshold for participating in voting","","","","","","","","","Path to configuration file","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","target config","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","An iterator over the variants of Self","","","","","","","","","","","target address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","should i fix data is possible","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","input folder","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","should i fix data is possible","proposals import json","","prefix","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","start backend from scratch","","start mock env","","persistent log commands","","start custom","disruption","","start advanced backend from scratch","files commands","","","","start advanced backend from scratch","","","","","start backend from scratch","","mock","","","","","persistent log comamnds","","","","","","","","","","","start default","start commands","status command","stop command","utilscount commands  ","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Prints wallets, nodes which can be used. Draw topology","Exit interactive mode","Sends Explorer queries","send fragments","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Prints everything","","","","","Prints available node with aliases that can be used","Prints wallet proxies","Prints Vit Stations","Prints trusted peer info","Prints Votes Plan","Prints available wallets with aliases that can be used","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prints block height","Prints fragments counts","Prints received fragment list","Prints logs, can filter logs to print only errors or …","Prints peers stats","","","Prints stats","Prints which nodes are upp","Active Vote Plans","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Prints everything","","","","","Prints available node with aliases that can be used","Prints wallet proxies","Prints Vit Stations","Prints trusted peer info","Prints Votes Plan","Prints available wallets with aliases that can be used","","","","Prints block height","Prints fragments counts","Prints received fragment list","Prints logs, can filter logs to print only errors or …","Prints peers stats","","","Prints stats","Prints which nodes are upp","Active Vote Plans","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","key: Tag - a unique identifier of the current snapshot …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","API Token wrapper type","","Header where token should be present in requests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","send query to a running node","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In order to test robustness of server bootstrapper we need …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","send query to a running node","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,71,3,17,0,0,71,0,3,3,0,0,0,71,0,0,0,0,0,0,0,0,0,0,17,3,0,71,3,17,0,0,0,2,16,51,16,2,3,2,3,2,0,0,2,2,2,45,2,2,2,0,0,51,2,2,3,2,3,0,2,3,2,3,3,2,3,3,3,3,3,3,45,0,51,0,3,0,3,2,3,2,3,2,3,45,45,45,3,0,483,483,2,2,2,2,3,2,2,45,2,3,2,3,2,3,2,3,0,45,45,2,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,28,17,0,0,28,28,17,17,16,16,16,16,17,28,16,17,28,16,16,16,17,28,16,17,28,0,16,17,28,0,16,17,17,28,28,16,17,17,17,28,0,17,28,17,28,16,17,28,16,17,28,16,17,28,17,28,17,16,17,28,16,17,28,16,17,28,16,17,28,16,17,28,484,485,484,485,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,26,0,26,483,483,26,26,26,26,26,26,0,0,0,0,0,71,71,0,71,71,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,486,0,58,0,0,0,0,486,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,63,64,64,62,62,0,62,63,63,64,63,64,62,0,62,62,0,0,62,63,64,62,63,64,62,63,64,62,63,64,62,63,64,62,63,64,62,63,64,62,63,64,0,62,63,64,62,63,64,62,63,64,62,63,64,62,63,64,62,63,64,0,62,63,64,0,62,63,64,62,63,64,62,63,64,0,0,62,63,64,62,63,64,62,63,64,62,63,64,62,63,64,0,62,63,64,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,0,67,67,67,67,67,67,67,67,67,67,67,67,67,67,74,0,0,0,73,73,0,73,0,74,74,0,70,77,0,77,0,77,82,84,82,84,82,84,77,82,84,77,82,84,77,70,0,77,77,84,0,77,70,0,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,74,0,71,0,0,71,73,0,71,73,0,73,0,0,0,74,74,71,71,73,74,73,74,73,74,71,73,74,71,71,71,73,74,73,74,73,74,71,73,74,71,71,73,74,71,71,73,74,0,73,74,71,73,74,71,73,74,73,74,73,74,73,74,71,73,74,71,73,74,71,0,0,71,71,73,74,71,73,74,71,73,74,71,73,74,73,74,73,74,71,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,0,0,0,0,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,84,84,84,83,84,83,84,84,84,83,84,83,83,84,83,84,84,84,83,84,84,84,84,84,83,83,84,84,84,83,84,83,84,84,83,84,84,83,84,83,84,83,84,84,84,83,86,86,90,86,85,0,0,0,86,90,90,90,86,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,85,85,85,85,85,85,85,85,85,86,86,90,87,86,0,0,0,0,0,0,0,0,86,87,90,90,90,86,87,91,92,93,94,91,92,93,94,90,90,90,91,92,93,87,86,89,94,90,91,92,93,87,86,89,94,87,87,87,90,91,92,93,94,90,91,92,93,94,90,91,92,93,87,86,89,94,90,91,92,93,87,86,89,94,87,89,90,91,92,93,87,86,89,94,87,87,90,91,92,93,94,90,91,92,93,87,86,86,94,93,90,91,92,93,87,86,86,86,86,86,89,94,90,91,92,93,94,90,91,92,93,94,87,87,91,92,93,94,90,87,86,86,90,91,92,93,87,86,89,94,91,92,93,94,90,91,92,93,87,86,89,94,90,91,92,93,87,86,89,94,91,92,94,87,89,93,86,89,87,89,86,87,86,90,91,92,93,87,86,89,94,90,91,92,93,87,86,89,94,90,91,92,93,87,86,89,94,90,91,92,93,94,90,91,92,93,94,90,91,92,93,87,86,89,94,0,100,100,100,100,100,100,0,0,0,0,100,100,0,98,98,99,101,98,108,98,108,108,108,98,108,98,108,98,99,108,0,98,108,108,99,108,98,108,0,98,108,108,98,108,108,108,108,108,108,98,108,98,99,108,108,98,108,108,108,108,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,100,100,100,0,100,100,100,0,0,100,100,99,101,99,101,99,101,100,99,101,100,99,101,99,101,99,101,99,101,100,99,101,100,99,101,100,99,101,99,101,100,100,99,101,100,100,100,100,100,100,100,100,100,99,101,99,101,99,101,100,100,99,101,100,99,101,100,99,101,100,99,99,100,100,100,99,99,101,100,99,101,100,99,101,100,99,101,99,101,99,101,100,0,0,0,0,0,0,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,114,110,111,114,110,111,0,110,111,0,114,114,114,114,0,110,110,110,111,110,111,110,110,0,0,110,111,110,111,110,111,110,110,111,111,110,111,111,111,111,110,110,110,111,0,111,110,111,110,111,110,111,111,111,111,110,111,110,111,110,111,110,110,110,111,0,0,113,115,115,115,113,115,113,115,115,115,115,113,115,113,115,113,115,115,113,113,115,113,115,115,115,113,113,115,113,115,113,115,113,113,113,115,113,115,113,115,113,115,115,115,113,112,116,116,0,0,0,0,116,116,116,116,116,116,112,116,117,118,118,118,117,118,116,117,112,118,116,117,112,116,117,116,117,118,118,118,116,117,112,118,116,117,112,118,116,117,112,118,116,118,116,116,112,112,118,116,117,112,112,118,118,117,118,116,112,117,112,118,116,117,112,118,116,117,112,117,118,116,117,112,116,117,117,117,117,117,117,117,112,117,112,117,116,117,116,112,117,117,117,118,116,117,112,118,116,117,112,118,116,117,112,118,118,118,116,117,112,130,135,114,0,114,130,0,0,130,114,130,130,134,135,114,0,130,114,0,135,114,130,134,135,135,135,129,129,129,129,114,130,134,135,129,114,130,134,135,129,129,129,129,129,129,129,114,130,134,135,129,114,130,134,135,129,114,130,134,135,129,129,129,114,114,130,130,134,134,135,135,129,114,114,114,114,114,114,114,130,130,130,130,134,134,134,135,135,135,129,129,129,129,114,130,134,135,114,130,134,135,129,114,130,134,135,129,129,114,130,134,135,129,114,130,134,135,129,129,129,129,114,130,134,135,129,114,130,134,135,114,130,134,135,129,114,130,134,135,129,114,130,134,135,129,129,114,130,134,135,129,129,129,129,129,129,129,114,130,134,135,0,0,145,142,0,140,0,152,0,148,154,0,140,146,0,144,0,142,144,145,143,150,140,0,154,0,0,0,0,151,0,145,144,145,144,144,0,144,0,144,148,146,146,146,154,0,0,139,155,156,149,153,139,155,156,149,153,154,140,142,143,144,145,146,148,150,151,152,154,140,142,143,144,145,146,148,150,151,152,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,156,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,139,140,142,143,144,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,155,139,155,156,149,153,154,140,142,143,144,145,146,148,150,151,152,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,149,139,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,139,154,140,142,143,144,155,156,145,146,148,149,150,151,152,153,0,157,157,0,0,0,141,158,158,158,141,147,157,158,141,147,157,141,158,141,147,157,158,141,147,157,158,158,141,147,157,157,157,158,141,141,147,147,157,157,157,158,141,157,141,157,158,141,147,157,141,147,158,141,147,157,158,141,147,157,158,141,141,147,141,141,158,158,158,158,158,157,141,141,141,141,141,141,157,147,147,147,147,157,158,158,158,141,147,157,158,141,147,157,158,141,147,157,158,141,147,157,186,186,186,0,0,0,181,0,0,0,0,0,0,0,0,0,0,0,191,191,0,0,0,0,186,0,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,181,49,0,0,0,0,0,0,0,49,186,186,5,0,5,178,170,170,0,5,5,5,0,5,0,5,5,170,173,170,196,5,0,5,5,5,5,190,5,5,5,5,195,5,0,5,5,5,170,0,0,196,5,202,5,0,0,5,0,5,170,12,178,0,12,12,5,5,5,170,5,190,195,0,5,12,0,202,5,487,488,489,490,491,488,490,491,487,489,490,492,491,487,489,490,492,491,488,492,493,493,493,493,0,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,0,170,170,170,170,170,170,170,170,170,170,170,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,0,0,0,173,173,173,173,173,173,173,173,173,0,0,173,173,173,173,173,173,173,173,0,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,184,184,0,0,184,0,0,182,184,182,184,182,182,182,184,182,184,182,184,184,184,182,184,184,184,184,182,184,182,184,182,184,184,182,182,184,184,182,184,182,184,182,184,182,184,0,0,0,0,0,0,49,0,185,49,178,49,0,178,178,49,185,178,49,185,178,49,178,49,178,49,178,49,185,178,49,185,178,49,178,49,185,49,49,178,49,49,185,185,178,49,185,49,49,49,49,49,49,185,185,178,49,185,178,49,185,178,49,185,185,178,49,178,178,49,49,185,178,49,185,178,49,185,178,49,185,178,49,185,186,186,186,186,0,0,0,186,186,174,186,174,174,186,174,186,174,186,174,186,0,174,174,174,186,174,186,174,186,174,186,174,174,174,174,186,174,186,174,186,174,186,174,186,174,174,186,174,174,186,174,174,186,174,186,174,186,174,186,174,186,174,174,487,488,489,490,491,488,490,491,487,489,490,492,491,487,489,490,492,491,488,492,191,191,0,0,191,0,0,0,190,191,190,191,190,190,190,191,190,191,190,190,191,191,191,190,191,191,191,191,190,191,190,191,190,191,191,191,191,190,191,190,191,190,191,190,190,191,192,0,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,192,0,192,192,192,192,192,192,0,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,0,0,0,196,196,196,196,196,0,196,196,196,196,196,196,196,196,0,196,196,196,0,196,196,196,196,196,196,196,0,0,197,198,198,197,198,197,198,197,197,198,197,198,197,197,198,197,198,197,198,197,198,197,198,198,197,198,197,198,197,197,198,198,197,198,197,198,198,198,197,198,198,197,198,197,197,198,198,197,198,197,198,197,198,197,198,197,197,198,0,199,199,199,199,199,0,0,0,0,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,0,0,200,201,201,200,201,200,201,200,201,200,201,200,200,201,200,201,200,201,200,201,200,201,201,200,201,200,201,200,200,201,201,200,201,200,201,201,201,201,201,201,200,201,201,200,201,200,201,200,201,200,201,201,201,201,200,201,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,181,0,181,0,0,181,12,181,181,12,181,12,181,12,181,12,181,12,181,12,181,12,181,12,181,12,181,12,181,181,12,181,12,181,12,181,12,181,181,181,12,12,12,12,181,12,181,12,181,12,181,12,12,181,12,12,12,12,493,493,493,493,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,0,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,494,495,495,496,497,498,499,498,496,0,0,0,0,0,0,228,228,228,228,228,0,0,0,0,228,228,226,228,226,228,228,228,0,226,226,226,228,226,228,0,226,228,230,228,226,228,228,228,228,226,228,226,228,226,228,226,230,0,226,226,228,226,228,226,228,228,228,226,226,230,226,228,0,0,231,0,0,0,0,231,231,231,231,231,231,232,233,234,232,233,234,232,233,234,231,231,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,232,233,234,231,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,231,232,233,234,238,238,238,238,238,0,0,238,238,238,0,239,235,239,235,239,235,238,238,238,239,235,238,239,235,235,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,239,235,238,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,238,239,235,0,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,231,0,0,0,0,231,231,231,231,231,231,232,233,234,238,238,238,238,238,0,0,238,238,238,0,239,235,285,102,0,0,0,0,102,245,285,0,102,102,102,102,106,245,106,0,106,0,0,245,0,0,0,285,245,103,285,103,285,0,102,103,249,243,243,279,243,244,0,249,0,0,243,243,0,279,279,242,279,0,243,240,244,244,0,242,243,240,240,0,279,244,244,0,0,0,249,240,243,243,243,240,0,0,103,103,103,240,240,103,240,103,240,240,240,103,240,103,240,240,103,240,103,103,240,103,103,103,103,103,240,103,240,103,240,103,240,240,240,103,0,240,103,240,103,240,240,103,240,103,240,103,240,103,240,0,245,245,245,0,0,0,245,0,0,242,245,244,244,242,245,244,242,245,244,242,242,245,244,242,245,244,242,245,244,242,245,244,242,245,244,242,245,244,242,242,245,244,242,245,244,242,245,244,242,245,244,242,242,244,244,242,242,244,244,242,0,242,245,244,242,245,244,242,245,244,242,245,244,242,245,244,0,0,0,0,0,106,106,0,0,106,249,249,249,249,249,249,106,249,106,249,249,249,106,249,106,249,106,106,106,249,106,106,106,106,106,106,249,106,249,106,249,106,249,249,106,249,249,106,249,249,249,106,249,106,249,106,249,106,249,249,106,249,107,259,0,259,0,0,0,107,0,107,107,259,0,0,258,0,258,265,262,0,0,265,255,265,262,255,262,255,0,0,0,258,255,265,255,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,255,255,255,255,255,255,255,255,107,0,0,107,107,0,107,0,0,258,258,258,258,107,258,107,258,258,107,258,107,258,107,107,107,258,107,107,107,258,107,107,258,107,258,107,258,107,258,258,107,258,258,107,258,258,258,258,107,258,107,258,107,258,107,258,107,258,259,259,0,259,0,0,0,0,0,0,263,264,0,0,0,0,262,265,263,264,262,259,265,263,264,262,259,265,262,265,263,263,264,264,262,259,265,263,264,262,259,265,263,264,262,262,259,262,259,259,265,263,264,262,259,259,259,259,0,259,265,265,259,265,263,264,262,259,265,263,264,262,259,265,263,264,262,259,262,265,262,265,265,262,262,259,262,262,259,265,259,265,263,264,262,259,265,263,264,262,259,265,263,264,262,259,265,263,264,262,259,265,265,0,0,0,0,0,0,0,257,257,0,257,257,257,257,0,0,257,257,0,0,0,0,0,0,0,0,0,0,266,267,268,269,270,266,267,268,269,270,0,257,266,267,268,269,270,257,266,267,268,269,270,266,267,268,269,270,266,267,268,269,270,257,266,267,268,269,270,257,266,267,268,269,270,257,266,267,268,269,270,257,257,257,257,257,257,257,257,257,266,267,268,269,270,0,257,257,257,266,267,268,269,270,257,266,267,268,269,270,257,266,267,268,269,270,257,0,257,0,0,266,267,268,269,270,257,257,266,267,268,269,270,257,266,267,268,269,270,257,266,267,268,269,270,257,266,267,268,269,270,285,252,0,285,0,252,0,285,285,285,285,279,279,279,279,279,279,279,285,252,279,285,252,285,285,279,279,279,285,252,279,285,252,279,285,252,279,279,285,285,252,252,279,279,279,279,285,252,252,285,252,252,279,285,252,279,285,252,279,285,252,0,0,279,279,279,0,252,279,279,279,279,279,279,279,252,279,285,285,252,279,285,252,279,285,252,279,285,252,279,285,252,253,0,0,0,0,0,253,253,0,0,0,0,0,253,243,243,243,243,243,243,253,243,253,243,243,243,243,253,243,253,243,253,243,253,253,243,253,253,253,253,253,253,253,243,253,243,253,243,253,243,243,243,243,243,243,253,243,243,243,243,243,253,253,243,253,243,253,243,253,243,243,243,243,243,243,243,243,243,243,253,0,0,0,0,0,0,0,0,0,102,102,0,102,102,102,102,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,0,0,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,0,0,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,102,102,102,102,102,102,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,0,102,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,0,0,0,102,0,0,102,0,0,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,0,102,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,0,0,0,0,0,0,0,0,0,0,0,339,340,0,339,340,339,340,339,340,339,340,339,340,339,340,339,340,339,340,339,340,0,339,340,339,340,339,340,0,339,340,339,340,339,340,339,340,339,340,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,0,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,374,374,374,0,374,374,374,374,374,374,374,0,0,0,0,0,0,0,0,374,374,0,374,0,0,0,374,374,374,374,0,0,0,0,379,251,380,379,251,380,379,251,380,379,251,380,379,251,380,379,251,380,379,251,380,379,251,380,379,379,251,380,379,251,380,379,251,380,379,379,0,380,379,251,380,379,251,380,379,251,380,379,251,380,379,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,299,392,299,392,299,392,299,299,299,299,299,392,299,392,299,392,0,299,392,299,392,299,299,392,299,299,299,392,299,392,299,299,299,299,299,299,392,299,392,299,392,299,299,299,392,0,0,0,0,394,404,405,0,399,399,0,394,404,405,0,0,0,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,0,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,399,0,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,404,0,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,0,0,0,0,0,0,163,416,0,416,163,0,163,0,163,0,416,410,422,422,410,410,410,420,410,416,420,410,416,410,410,410,410,0,437,420,410,416,420,410,416,420,410,416,410,410,410,410,0,410,416,416,420,410,410,416,416,410,416,416,420,410,416,420,410,416,420,410,416,416,420,420,410,416,0,437,422,0,422,422,422,416,0,422,410,416,420,410,416,420,410,416,420,410,416,420,420,410,416,422,410,410,0,0,163,163,163,0,163,163,422,422,422,422,422,422,163,422,163,422,163,163,422,163,422,163,163,422,163,163,163,163,163,422,163,163,422,163,422,163,422,163,422,422,422,163,422,422,422,422,422,422,422,422,422,422,422,422,422,422,163,163,422,163,422,163,422,163,422,163,422,422,0,0,0,0,0,0,0,0,0,424,0,160,160,424,160,424,160,160,424,160,424,160,160,424,0,424,424,160,424,424,424,424,160,424,160,424,160,424,0,160,424,160,160,160,160,160,160,160,160,424,424,160,424,160,424,160,424,160,424,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,423,427,428,429,430,431,432,433,434,435,436,427,428,429,430,431,432,433,434,435,436,0,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,0,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,0,0,0,0,0,423,0,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,423,427,428,429,430,431,432,433,434,435,436,0,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,0,438,438,438,438,438,438,438,438,438,438,438,438,0,438,438,438,0,438,438,438,438,438,0,438,438,0,0,438,438,438,438,438,438,438,438,438,438,0,0,0,0,0,0,0,25,25,213,25,213,213,25,0,136,0,0,213,213,213,213,222,213,213,213,136,222,213,136,213,222,222,213,222,213,222,213,222,213,222,213,222,213,213,216,0,0,0,0,0,0,0,0,0,0,213,0,0,0,0,396,407,409,406,444,406,10,10,409,444,444,0,10,10,10,10,396,10,10,0,0,18,10,10,10,403,403,10,403,403,481,477,407,409,406,481,481,407,0,407,409,407,409,10,10,10,409,406,18,481,450,10,450,500,501,502,501,501,502,502,503,504,505,506,507,508,503,506,505,506,503,504,505,506,504,507,508,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,403,403,10,403,403,0,0,0,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,396,25,25,25,25,0,0,0,18,444,444,18,444,444,25,18,444,25,18,444,18,18,444,444,18,444,444,18,18,18,18,444,25,18,444,25,18,444,25,18,444,25,25,444,25,25,18,25,18,18,25,444,25,18,444,25,18,444,25,18,444,18,25,18,25,18,18,18,18,18,18,18,25,444,444,25,18,444,25,18,444,25,18,18,18,444,444,25,18,0,444,18,444,18,500,0,0,0,0,0,0,0,222,222,222,222,222,222,222,222,0,222,0,0,0,0,0,0,0,0,0,408,461,440,453,453,408,457,453,453,453,453,453,453,456,457,453,408,461,440,222,456,457,453,408,461,440,222,456,457,453,457,453,453,461,408,457,461,440,440,408,461,440,408,461,440,0,10,0,453,453,457,453,461,408,456,457,453,408,461,440,222,456,457,453,408,461,440,222,408,456,457,453,408,461,440,222,0,453,453,408,453,408,222,222,456,457,453,408,408,461,440,222,222,222,222,408,408,457,461,440,461,461,461,0,0,461,408,222,408,461,222,453,453,456,457,453,408,461,440,222,456,457,453,408,408,461,440,222,456,457,453,408,461,440,222,453,453,453,453,453,453,456,457,453,408,461,440,403,461,440,461,461,403,461,440,10,403,461,440,461,461,403,461,440,461,461,453,453,456,408,453,453,408,461,461,461,408,457,461,440,408,461,440,461,222,408,408,408,461,440,408,408,453,408,453,408,408,408,408,222,408,461,440,222,457,456,457,453,408,461,440,222,456,457,453,408,461,440,222,456,457,453,408,461,440,222,408,456,457,453,408,461,440,222,457,457,457,457,457,457,457,501,502,501,501,502,502,0,0,0,0,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,136,0,0,136,136,477,136,477,136,477,477,136,477,136,477,136,136,136,477,136,136,136,136,0,0,136,136,477,136,477,136,477,136,477,477,136,136,136,477,136,477,136,477,136,477,136,213,213,213,0,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,0,213,0,213,0,0,0,0,213,213,0,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,0,213,0,213,213,213,213,213,503,504,505,506,507,508,503,506,505,506,503,504,505,506,504,507,508,0,216,0,409,409,409,409,409,409,216,409,216,409,409,409,409,216,409,216,409,409,216,216,216,409,216,216,216,216,409,216,409,216,409,216,409,409,216,409,409,409,216,409,409,216,409,216,409,216,409,216,409,409,216,0,0,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,481,0,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,406,0,0,0,0,0,0,450,450,450,450,450,450,450,450,450,450,450,450,450,450,509,510,511,450,450,450,450,450,450,450,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,0,[[]],[[]],[[]],[[]],[2,[[4,[3]]]],[[5,[7,[6]],7],8],[[5,7,[7,[6]],9],10],[2,11],[2,2],[[]],0,0,[[2,5],2],0,[5,12],[5],0,[[],2],[13],[13],[13],[13],[[[15,[14]]],[[4,[16,17]]]],[13],[13],[[2,18,19,[21,[20]]],[[4,[3]]]],[[3,22],23],[[3,22],23],[[]],[24,3],[25,3],[17,3],[[]],[26,3],[27,3],0,[[7,19,5,[21,[20]]],[[4,[26]]]],0,[[[21,[20]]],[[4,[16,28]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],0,[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],0,0,0,[34],0,[[[21,[20]]]],[[[21,[20]]]],[[2,35],2],0,[2,2],0,[3,[[37,[36]]]],[[2,38],2],0,0,[[]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],0,0,0,[[]],[[]],[[2,[21,[20]]],[[4,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[16,16],[[]],[13],[13],[13],[13],[13],[13],[[[15,[14]]],[[4,[16,17]]]],[13],[13],[13],[[[21,[20]]],[[4,[16,28]]]],[[16,22],23],[[17,22],23],[[17,22],23],[[28,22],23],[[28,22],23],[[]],[[]],[40,17],[28,17],[[]],[[[21,[20]]],[[4,[16,28]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],[34],[34],[17,[[37,[36]]]],[[]],[[],14],[[],14],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[13],[13],[13],[[26,22],23],[[26,22],23],[41,26],[[]],[24,26],[[7,19,5,[21,[20]]],[[4,[26]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[]],[[],33],[42,[[7,[43]]]],[34],[[[21,[20]]]],[[[21,[20]]]],[26,[[37,[36]]]],[[],14],[[],4],[[],4],[[],39],[[]],[[5,[7,[6]],7],8],[5,[[7,[44]]]],[[5,7,[7,[6]],9],10],[5,12],[5],0,0,0,0,0,0,[[]],[[]],[45,[[7,[46]]]],[[45,47],45],0,[[],45],[13],[13],[13],[[]],[[45,14],45],0,[[],13],[[]],[[],33],[[45,43],45],0,[[45,48],45],0,[[45,13],45],0,[[45,13],45],0,[[],4],[[],4],[[],39],[[45,12],45],0,[[45,49,50],45],[[45,7],45],0,[[]],0,0,[[]],[[]],0,[13],[13],[13],[[]],[[51,[7,[52]]],[[54,[[7,[53]]]]]],[51,14],[[51,52,[15,[14]]],53],[[51,52,[15,[14]]],53],[[51,52,[15,[14]]],53],0,[51],[[],13],[[]],[[],33],[55,51],[[],4],[[],4],[[],39],[[]],0,0,[[[21,[20]]],35],0,0,0,0,[56,[[4,[57]]]],0,[[[21,[20]]],35],0,[58,59],[[]],[[]],[13],[13],[13],[60,58],[[]],[58,59],[[],13],[[]],[[],33],[[[21,[20]]],58],[58,59],0,[58,59],[[],4],[[],4],[[],39],[58,59],[[]],[58,14],[[58,[15,[14]]],59],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[13],[13],[13],[13],[13],[13],0,[13],[13],[13],[62,54],[63,54],[64,54],[[62,22],23],[[63,22],23],[[64,22],23],[[]],[[]],[[]],[65,[[4,[62,66]]]],[65,[[4,[63,66]]]],[65,[[4,[64,66]]]],[65,[[4,[62,66]]]],[65,[[4,[63,66]]]],[65,[[4,[64,66]]]],0,[42,48],[42,48],[42,48],0,[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[62,65],[[4,[66]]]],[[63,65],[[4,[66]]]],[[64,65],[[4,[66]]]],[[62,65],[[4,[66]]]],[[63,65],[[4,[66]]]],[[64,65],[[4,[66]]]],0,[[]],[[]],[[]],0,[61,61],[61,61],[[]],[[]],0,[[],61],[[],61],[13],[13],[13],[67,54],[[67,22],23],[[]],[65,[[4,[67,66]]]],[65,[[4,[67,66]]]],[48,68],[[],[[37,[69]]]],[[],13],[[]],[[],33],0,0,0,[[],4],[[],4],[[],39],[[67,65],[[4,[66]]]],[[67,65],[[4,[66]]]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,61],[61,61],[[]],[[]],[[],61],[[],61],[13],[13],[13],[70,54],[[70,22],23],[[]],[65,[[4,[70,66]]]],[65,[[4,[70,66]]]],[[],[[37,[69]]]],[[],13],[[]],[[],33],0,0,[[],4],[[],4],[[],39],[[70,65],[[4,[66]]]],[[70,65],[[4,[66]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[61,61],[61,61],[61,61],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[71,71],[[]],[[],61],[[],61],[[],61],[[],61],[13],[13],[13],[13],[13],[13],[72,[[4,[71]]]],[13],[13],[13],[[71,71],48],[73,54],[74,54],0,[[73,22],23],[[74,22],23],[[71,22],[[4,[75]]]],[[]],[[]],[[]],[65,[[4,[73,66]]]],[65,[[4,[74,66]]]],[65,[[4,[73,66]]]],[65,[[4,[74,66]]]],[42,48],[42,48],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],0,0,[[71,76],4],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[73,65],[[4,[66]]]],[[74,65],[[4,[66]]]],[[73,65],[[4,[66]]]],[[74,65],[[4,[66]]]],[[]],[[]],[[]],0,[61,61],[61,61],[[]],[[]],0,[[],61],[[],61],0,[13],[13],[13],[77,54],[[77,22],23],[[]],[65,[[4,[77,66]]]],[65,[[4,[77,66]]]],0,[[],[[37,[69]]]],[[],13],[[]],[[],33],0,0,0,0,0,0,[[],4],[[],4],[[],39],[[77,65],[[4,[66]]]],[[77,65],[[4,[66]]]],[[]],0,[61,61],[61,61],[[]],[[]],0,[[],61],[[],61],0,[13],[13],[13],[78,54],[[78,22],23],[[]],[65,[[4,[78,66]]]],[65,[[4,[78,66]]]],0,[[],[[37,[69]]]],[[],13],[[]],[[],33],0,[[78,58,[21,[20]]],54],0,0,0,0,0,0,[[78,58],54],[[],4],[[],4],[[],39],[[78,65],[[4,[66]]]],[[78,65],[[4,[66]]]],[[]],0,0,0,0,0,0,0,[61,61],[61,61],[[]],[[]],[[],61],[[],61],0,[13],[13],[13],[79,54],[[79,22],23],[[]],[65,[[4,[79,66]]]],[65,[[4,[79,66]]]],[[],[[37,[69]]]],[[],13],[[]],[[],33],0,0,0,[[],4],[[],4],[[],39],[[79,65],[[4,[66]]]],[[79,65],[[4,[66]]]],[[]],0,0,[61,61],[61,61],[[]],[[]],[[],61],[[],61],[13],[13],[13],[80,54],[[80,22],23],[[]],[65,[[4,[80,66]]]],[65,[[4,[80,66]]]],[[],[[37,[69]]]],[[],13],[[]],[[],33],0,0,[[],4],[[],4],[[],39],[[80,65],[[4,[66]]]],[[80,65],[[4,[66]]]],[[]],0,[61,61],[61,61],[[]],[[]],[[],61],[[],61],[13],[13],[13],[81,54],[[81,22],23],[[]],[65,[[4,[81,66]]]],[65,[[4,[81,66]]]],[[],[[37,[69]]]],[[],13],[[]],[[],33],0,0,0,0,[[],4],[[],4],[[],39],[[81,65],[[4,[66]]]],[[81,65],[[4,[66]]]],[[]],0,[61,61],[61,61],[[]],[[]],[[],61],[[],61],[13],[13],[13],[82,54],[[82,22],23],[[]],[65,[[4,[82,66]]]],[65,[[4,[82,66]]]],0,[[],[[37,[69]]]],[[],13],0,0,[[]],[[],33],0,0,[[],4],[[],4],[[],39],[[82,65],[[4,[66]]]],[[82,65],[[4,[66]]]],[[]],0,0,[61,61],[61,61],[[]],[[]],[[]],[[]],[[],61],[[],61],[13],[13],[13],[13],[72,[[4,[83]]]],[13],[13],[84,54],[[84,22],23],[[]],[[]],[65,[[4,[84,66]]]],[65,[[4,[84,66]]]],0,[[],[[37,[69]]]],[[],13],[[],13],0,0,0,[[]],[[]],[[],33],[[],33],0,0,[[83,76],4],0,[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[84,65],[[4,[66]]]],[[84,65],[[4,[66]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[61,61],[61,61],[[]],[[]],[[],61],[[],61],[13],[13],[13],[85,[[4,[86]]]],[[85,22],23],[[]],[65,[[4,[85,66]]]],[65,[[4,[85,66]]]],[42,48],0,[[],13],[[]],[[],33],[[],4],[[],4],[[],39],[[85,65],[[4,[66]]]],[[85,65],[[4,[66]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,87],[[]],[[87,87],88],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[72,[[4,[87]]]],[72,[[4,[89]]]],[13],[13],[13],[13],[13],[13],[13],[13],[[87,87],48],[[],48],[90,[[4,[86]]]],[91,[[4,[86]]]],[92,[[4,[86]]]],[93,[[4,[86]]]],[94,[[4,[86]]]],[[90,22],23],[[91,22],23],[[92,22],23],[[93,22],23],[[87,22],23],[[86,22],23],[[86,22],23],[[94,22],23],0,[[]],[[]],[[]],[[]],[[]],[95,86],[96,86],[24,86],[[]],[27,86],[[]],[[]],[65,[[4,[90,66]]]],[65,[[4,[91,66]]]],[65,[[4,[92,66]]]],[65,[[4,[93,66]]]],[65,[[4,[94,66]]]],[65,[[4,[90,66]]]],[65,[[4,[91,66]]]],[65,[[4,[92,66]]]],[65,[[4,[93,66]]]],[65,[[4,[94,66]]]],[42,[[4,[87]]]],[[],97],[[],[[37,[69]]]],[[],[[37,[69]]]],[[],[[37,[69]]]],[[],[[37,[69]]]],[42,48],[87],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,0,[[87,87],[[37,[88]]]],0,0,[34],0,[[87,76],4],[[89,76],4],[86,[[37,[36]]]],[[]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[90,65],[[4,[66]]]],[[91,65],[[4,[66]]]],[[92,65],[[4,[66]]]],[[93,65],[[4,[66]]]],[[94,65],[[4,[66]]]],[[90,65],[[4,[66]]]],[[91,65],[[4,[66]]]],[[92,65],[[4,[66]]]],[[93,65],[[4,[66]]]],[[94,65],[[4,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,61],[61,61],[[]],[[]],0,[[],61],[[],61],0,[13],[13],[13],0,[98,54],[[98,22],23],[[]],[65,[[4,[98,66]]]],[65,[[4,[98,66]]]],0,[[],[[37,[69]]]],[[],13],[[]],[[],33],0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],39],[[98,65],[[4,[66]]]],[[98,65],[[4,[66]]]],0,[[]],0,0,0,0,0,0,0,0,0,0,0,[61,61],[61,61],[61,61],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[],61],[[],61],[[],61],[[],61],0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[99,[[4,[100]]]],[101,[[4,[100]]]],[[99,22],23],[[101,22],23],[[100,22],23],[[100,22],23],[[]],[[]],[102,100],[57,100],[[]],[103,100],[24,100],[104,100],[105,100],[106,100],[107,100],[65,[[4,[99,66]]]],[65,[[4,[101,66]]]],[65,[[4,[99,66]]]],[65,[[4,[101,66]]]],[[],[[37,[69]]]],[[],[[37,[69]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],0,0,[34],[100,[[37,[36]]]],[[],14],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[99,65],[[4,[66]]]],[[101,65],[[4,[66]]]],[[99,65],[[4,[66]]]],[[101,65],[[4,[66]]]],[[]],[[]],[[]],0,0,0,0,0,0,[61,61],[61,61],[[]],[[]],[[],61],[[],61],[13],[13],[13],0,[108,54],[[108,22],23],[[]],[65,[[4,[108,66]]]],[65,[[4,[108,66]]]],[[],[[37,[69]]]],0,[[],13],0,0,[[]],[[],33],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],39],[[108,65],[[4,[66]]]],[[108,65],[[4,[66]]]],0,0,0,0,0,[[]],0,[61,61],[61,61],[[]],[[]],[[],61],[[],61],0,[13],[13],[13],[109,54],[[109,22],23],[[]],[65,[[4,[109,66]]]],[65,[[4,[109,66]]]],[[],[[37,[69]]]],[[],13],[[]],[[],33],[[],4],[[],4],[[],39],[[109,65],[[4,[66]]]],[[109,65],[[4,[66]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,61],[61,61],[[]],[[]],[[]],[[]],[[],61],[[],61],0,0,[13],[13],[13],[13],[13],[13],[110,[[4,[111]]]],[[110,22],23],[[111,22],23],[[111,22],23],[[]],[112,111],[113,111],[114,111],[[]],[65,[[4,[110,66]]]],[65,[[4,[110,66]]]],[42,48],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],0,[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[34],[111,[[37,[36]]]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[110,65],[[4,[66]]]],[[110,65],[[4,[66]]]],[[]],[[]],0,0,0,[61,61],[61,61],[[]],[[]],[[]],[[]],[[],61],[[],61],0,[13],[13],[13],[13],[13],[13],[115,[[4,[113]]]],[[115,22],23],[[113,22],23],[[113,22],23],[[]],[[]],[65,[[4,[115,66]]]],[65,[[4,[115,66]]]],[[],[[37,[69]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[34],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[115,65],[[4,[66]]]],[[115,65],[[4,[66]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],0,[61,61],[61,61],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[116,116],[117,117],[[]],[[]],[[],61],[[],61],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[118,[[4,[112]]]],[[116,119],[[4,[120,112]]]],[[118,22],23],[[116,22],23],[[116,22],23],[[112,22],23],[[112,22],23],[[]],[[]],[[]],[121,112],[[]],[65,[[4,[118,66]]]],[65,[[4,[118,66]]]],[[117,13],[[37,[116]]]],[[],[[37,[69]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],0,[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],117],[117,13],0,[117,37],[117,37],[[117,13],37],[[],122],[123,124],[34],[117],[112,[[37,[36]]]],[[],125],[[]],[[]],[[],14],[[],14],[[],126],[[],127],[[],128],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[118,65],[[4,[66]]]],[[118,65],[[4,[66]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[129,42],14],[61,61],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[129,48,14]],[[129,48],[[4,[130]]]],[[129,131],[[4,[130]]]],[[129,[133,[132]]],[[4,[130]]]],[[],61],[[],61],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[129,[[4,[114]]]],0,[[129,22],23],[[114,22],23],[[114,22],23],[[130,22],23],[[130,22],23],[[134,22],23],[[134,22],23],[[135,22],23],[[135,22],23],[[]],[24,114],[135,114],[130,114],[[]],[134,114],[136,114],[137,114],[[]],[24,130],[137,130],[27,130],[137,134],[27,134],[[]],[[]],[137,135],[27,135],[65,[[4,[129,66]]]],[65,[[4,[129,66]]]],[[129,59,59,59,59,13,13,13],[[4,[114]]]],[[],[[37,[69]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],0,[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,[[129,[21,[20]]],[[4,[[7,[131]],130]]]],0,[34],[34],[34],[34],[[129,[21,[20]],7],[[4,[130]]]],[114,[[37,[36]]]],[130,[[37,[36]]]],[134,[[37,[36]]]],[135,[[37,[36]]]],[[],14],[[],14],[[],14],[[],14],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[129,[21,[20]]],[[4,[[7,[131]],130]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[129,65],[[4,[66]]]],[[129,65],[[4,[66]]]],[[129,[21,[20]],138],[[4,[[133,[132]],135]]]],[[129,[21,[20]],48,[133,[132]]],[[4,[[7,[131]],130]]]],[[129,[21,[20]]],[[4,[[133,[53]],134]]]],[[129,13],6],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],0,[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,[139,54],[[140,141],54],[[142,141],54],[[143,141],54],[[144,141],54],[[145,141],54],[[146,147],54],[[148,147],54],[[149,147],54],[[150,147],54],[151,54],[152,54],[153,54],[[139,22],23],[[154,22],23],[[140,22],23],[[142,22],23],[[143,22],23],[[144,22],23],[[155,22],23],[[156,22],23],[[145,22],23],[[146,22],23],[[148,22],23],[[149,22],23],[[150,22],23],[[151,22],23],[[152,22],23],[[153,22],23],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,[[4,[139,66]]]],[65,[[4,[154,66]]]],[65,[[4,[140,66]]]],[65,[[4,[142,66]]]],[65,[[4,[143,66]]]],[65,[[4,[144,66]]]],[65,[[4,[155,66]]]],[65,[[4,[156,66]]]],[65,[[4,[145,66]]]],[65,[[4,[146,66]]]],[65,[[4,[148,66]]]],[65,[[4,[149,66]]]],[65,[[4,[150,66]]]],[65,[[4,[151,66]]]],[65,[[4,[152,66]]]],[65,[[4,[153,66]]]],[65,[[4,[139,66]]]],[65,[[4,[154,66]]]],[65,[[4,[140,66]]]],[65,[[4,[142,66]]]],[65,[[4,[143,66]]]],[65,[[4,[144,66]]]],[65,[[4,[155,66]]]],[65,[[4,[156,66]]]],[65,[[4,[145,66]]]],[65,[[4,[146,66]]]],[65,[[4,[148,66]]]],[65,[[4,[149,66]]]],[65,[[4,[150,66]]]],[65,[[4,[151,66]]]],[65,[[4,[152,66]]]],[65,[[4,[153,66]]]],0,[[],[[37,[69]]]],[[],[[37,[69]]]],[[],[[37,[69]]]],[[],[[37,[69]]]],[[],[[37,[69]]]],[42,48],[42,48],[42,48],[42,48],[42,48],[42,48],[42,48],[42,48],[42,48],[42,48],[42,48],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[139,65],[[4,[66]]]],[[154,65],[[4,[66]]]],[[140,65],[[4,[66]]]],[[142,65],[[4,[66]]]],[[143,65],[[4,[66]]]],[[144,65],[[4,[66]]]],[[155,65],[[4,[66]]]],[[156,65],[[4,[66]]]],[[145,65],[[4,[66]]]],[[146,65],[[4,[66]]]],[[148,65],[[4,[66]]]],[[149,65],[[4,[66]]]],[[150,65],[[4,[66]]]],[[151,65],[[4,[66]]]],[[152,65],[[4,[66]]]],[[153,65],[[4,[66]]]],[[139,65],[[4,[66]]]],[[154,65],[[4,[66]]]],[[140,65],[[4,[66]]]],[[142,65],[[4,[66]]]],[[143,65],[[4,[66]]]],[[144,65],[[4,[66]]]],[[155,65],[[4,[66]]]],[[156,65],[[4,[66]]]],[[145,65],[[4,[66]]]],[[146,65],[[4,[66]]]],[[148,65],[[4,[66]]]],[[149,65],[[4,[66]]]],[[150,65],[[4,[66]]]],[[151,65],[[4,[66]]]],[[152,65],[[4,[66]]]],[[153,65],[[4,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[141,[[4,[157]]]],[158,14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[141,[[4,[157]]]],[13],[13],[13],[13],[13],[13],[13],[13],[[158,[15,[14]]],158],[13],[13],[13],[13],[[157,22],23],[[157,22],23],[[]],[158,141],[[]],[158,147],[[]],[[]],[159,157],[27,157],[[158,[15,[14]]],[[4,[14,157]]]],[141,[[4,[[7,[14]],157]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[141,[[4,[157]]]],[[]],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[158,48],[141,48],[141,[[4,[160,157]]]],[147,[[4,[160,157]]]],[141,[[4,[157]]]],[141,[[4,[157]]]],[14,158],[[14,14],158],[[158,[15,[14]]],14],[[158,[15,[14]]],[[4,[161,157]]]],[[158,[15,[14]]],[[4,[157]]]],[34],[141,[[4,[157]]]],[141,[[4,[157]]]],[141,[[4,[157]]]],[[141,5],[[4,[161,157]]]],[[141,162],[[4,[157]]]],[[141,55],[[4,[157]]]],[157,[[37,[36]]]],[[147,5],[[4,[14,157]]]],[147,[[4,[14,157]]]],[147,[[4,[163,157]]]],[147,[[4,[14,157]]]],[[],14],[158,37],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,0,0,0,0,0,[[]],[[]],0,[5,120],0,[5,5],[[]],0,0,0,0,0,[[],[[7,[164]]]],[[],5],[13],[13],[72,[[4,[5]]]],0,[13],[[5,[21,[20]],165],54],[[5,22],23],[[]],0,[[],13],0,0,[[]],[[],33],0,0,0,0,[[5,[37,[18]]]],0,[[5,[21,[20]]],[[54,[166]]]],[[[0,[[21,[20]],167]]],[[54,[5]]]],[[[21,[20]]],[[54,[[7,[168]]]]]],[[5,76],4],0,0,0,0,0,0,0,0,[[]],[[],4],[[],4],0,[[],39],0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,[[]],[[]],[169,169],[[]],[[],169],[13],[13],[72,[[4,[169]]]],[13],0,[[169,22],23],[[]],[[],13],[[]],[[],33],[[169,76],4],[[]],[[],4],[[],4],[[],39],[[]],0,[1],[170,171],0,0,[[]],[[]],[170,170],[[]],0,0,[[],170],[[],172],[13],[13],[72,[[4,[170]]]],[13],[[170,22],23],[[]],[[],13],[[]],[[],33],0,[[170,76],4],0,[[]],[[],4],[[],4],0,[[],39],[[]],0,0,0,0,[[173,174],173],[[173,13,42],173],[[173,55],173],[[]],[[]],[173,5],[[173,13],173],0,[[173,[7,[175]]],173],0,0,[[],173],[13],[13],[13],[[173,[7,[168]],165],173],[[173,176]],[[]],[[173,177],173],0,[[],13],[[173,178],173],[[]],[[],33],[[173,172],173],[[173,14],173],[[173,[37,[14]]],173],[[173,48],173],[[173,55],173],[[173,13],173],[[173,[7,[179]]]],[[173,43],173],[[173,180],173],[[173,172],173],[[173,14],173],[[173,[37,[14]]],173],[[],4],[[],4],[[],39],[173,173],[[173,14],173],[[173,181],173],[[173,97],173],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[182,[21,[20]]],[[4,[183,184]]]],[[],182],[13],[13],[13],[13],[13],[13],[[184,22],23],[[184,22],23],[[]],[[]],[24,184],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[34],0,0,[184,[[37,[36]]]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[1],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[178,178],[49,49],[[]],[[]],[[],178],[[],49],[13],[13],[13],[13],[13],[13],[72,[[4,[178]]]],[72,[[4,[49]]]],[13],[13],[13],[[49,49],48],[[],48],[[178,22],23],[[49,22],23],[[49,22],23],[[185,22],23],[[185,22],23],[[]],[[]],[[]],[42,4],[42,[[4,[49]]]],[42,4],[[],97],[49],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],[34],[[178,76],4],[[49,76],4],0,[[]],[[]],[[],14],[[],14],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[1],[1],[174,48],[[]],[[]],[[]],[[]],[174,174],[186,186],[[]],[[]],[[[7,[187]]],[[7,[186]]]],[174,13],[[],174],[13],[13],[13],[13],[72,[[4,[174]]]],[72,[[4,[186]]]],[13],[13],[[174,174]],[[174,[7,[168]],165]],[[174,188],[[7,[189]]]],[[174,22],23],[[186,22],23],[[]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[[13,42],174],[[[7,[168]],165],174],[97,186],[[174,186]],[[174,76],4],[[186,76],4],[[174,97,165,188],[[19,[189,14]]]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[]],[[]],[174,13],[174,[[37,[14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[190,[21,[20]]],[[4,[59,191]]]],[[],190],[13],[13],[13],[13],0,[13],[13],[[191,22],23],[[191,22],23],[[]],[[]],[24,191],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[34],[191,[[37,[36]]]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],0,[[]],[[]],0,0,0,0,0,[1],[[]],[[]],[192,192],[[]],[13],[13],[13],[[192,192],48],[[],48],[[192,22],23],[[192,22],23],[[]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[],13],[[]],[192,193],[[],33],[42,[[4,[192,194]]]],[[]],[[],14],[[],4],[[],4],[[],39],[[]],0,[1],[[]],[[]],[195,195],[[]],[[],195],[13],[13],[72,[[4,[195]]]],[13],[[195,22],23],[[]],0,[[],13],[[]],[[],33],[[195,76],4],[[]],[[],4],[[],4],[[],39],0,[[]],0,0,0,[1],[[]],[[]],[196,196],[[]],0,0,[[],196],[13],[13],[72,[[4,[196]]]],[13],[[196,22],23],[[]],0,[[],13],[[]],[[],33],0,0,[[196,76],4],[[]],[[],4],[[],4],[[],39],[[]],0,0,[1],[1],0,[[]],[[]],[[]],[[]],0,[197,197],[198,198],[[]],[[]],0,[[],197],[[],198],[13],[13],[13],[13],[72,[[4,[197]]]],[72,[[4,[198]]]],[13],[13],0,[[197,22],23],[[198,22],23],[[]],[[]],0,[[],13],[[],13],0,[[]],[[]],[[],33],[[],33],0,0,0,0,0,0,0,0,[[197,76],4],[[198,76],4],0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],0,[[]],[[]],0,[1],[[]],[[]],[199,199],[[]],[[],[[7,[14]]]],[[],[[7,[14]]]],[[],14],[[],14],[13],[13],[72,[[4,[199]]]],[13],[[199,22],23],[[]],[177,199],0,0,0,0,[[],13],[[]],[[],33],0,[[199,76],4],0,[[]],[[],4],[[],4],[[],39],[[]],0,0,[1],[1],0,[[]],[[]],[[]],[[]],[200,200],[201,201],[[]],[[]],0,[[],200],[[],201],[13],[13],[13],[13],[72,[[4,[200]]]],[72,[[4,[201]]]],[13],[13],0,[[200,22],23],[[201,22],23],[[]],[[]],0,[[],13],[[],13],0,[[]],[[]],[[],33],[[],33],0,0,0,0,0,[[200,76],4],[[201,76],4],0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],0,0,0,[[]],[[]],0,[1],[[]],[[]],[202,202],[[]],[[],202],[13],[13],[72,[[4,[202]]]],[13],[[202,22],23],[[]],[[],13],[[]],[[],33],0,[[202,76],4],[[]],[[],4],[[],4],[[],39],0,[[]],0,0,0,0,0,[1],[1],[[55,55,55,55],181],[[]],[[]],[[]],[[]],[181,181],[12,12],[[]],[[]],[[],181],[[],12],[13],[13],[13],[13],[72,[[4,[181]]]],[72,[[4,[12]]]],[13],[13],[[181,22],23],[[12,22],23],[[]],[12,181],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[[172,172,172],181],[[[15,[14]],[15,[14]],[15,[14]]],[[54,[181]]]],[[181,76],4],[[12,76],4],0,0,0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],0,[[]],[[]],[[12,203]],[[12,203]],[[12,203]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[13],[13],[13],[[204,22],23],[[204,22],23],[205,204],[105,204],[206,204],[207,204],[57,204],[208,204],[184,204],[111,204],[41,204],[209,204],[136,204],[210,204],[137,204],[211,204],[212,204],[213,204],[214,204],[215,204],[216,204],[157,204],[25,204],[100,204],[217,204],[24,204],[[]],[218,204],[86,204],[219,204],[220,204],[221,204],[3,204],[222,204],[27,204],[121,204],[223,204],[224,204],[225,204],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[]],[[],33],[34],[204,[[37,[36]]]],[[],14],[[],4],[[],4],[[],39],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,61],[61,61],[[]],[[]],[[]],[[]],[[],61],[[],61],0,0,[226,227],[13],[13],[13],[13],0,[13],[13],0,[[228,22],23],[[]],[[]],[65,[[4,[228,66]]]],[65,[[4,[228,66]]]],[42,48],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[[226,[7,[14]],229],[[4,[223]]]],0,0,[226],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[228,65],[[4,[66]]]],[[228,65],[[4,[66]]]],0,[226,230],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[231,226],54],[[232,230]],[[233,226],54],[[234,230]],[[231,22],23],[[232,22],23],[[233,22],23],[[234,22],23],[[]],[[]],[[]],[[]],[65,[[4,[231,66]]]],[65,[[4,[232,66]]]],[65,[[4,[233,66]]]],[65,[[4,[234,66]]]],[65,[[4,[231,66]]]],[65,[[4,[232,66]]]],[65,[[4,[233,66]]]],[65,[[4,[234,66]]]],[[],[[37,[69]]]],[[],[[37,[69]]]],[[],[[37,[69]]]],[42,48],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[231,65],[[4,[66]]]],[[232,65],[[4,[66]]]],[[233,65],[[4,[66]]]],[[234,65],[[4,[66]]]],[[231,65],[[4,[66]]]],[[232,65],[[4,[66]]]],[[233,65],[[4,[66]]]],[[234,65],[[4,[66]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[61,61],[61,61],[61,61],[61,61],[61,61],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[235,236,237],172],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[238,226]],[[239,226]],[[235,226]],[[238,22],23],[[239,22],23],[[235,22],23],[[]],[[]],[[]],[65,[[4,[238,66]]]],[65,[[4,[239,66]]]],[65,[[4,[235,66]]]],[65,[[4,[238,66]]]],[65,[[4,[239,66]]]],[65,[[4,[235,66]]]],[[],[[37,[69]]]],[[],[[37,[69]]]],[42,48],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[238,65],[[4,[66]]]],[[239,65],[[4,[66]]]],[[235,65],[[4,[66]]]],[[238,65],[[4,[66]]]],[[239,65],[[4,[66]]]],[[235,65],[[4,[66]]]],[[]],[[]],[[]],0,[[]],[[]],[[],230],[13],[13],[13],[230],0,[230],[[]],[[],13],[[]],[[],33],[[],230],[230],0,[230,7],[[],4],[[],4],[[],39],[230],0,[230,7],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[21,[20]]],[[4,[240,103]]]],0,0,0,0,0,[241,[[4,[102]]]],0,0,0,0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[240,240],[[]],[13],[13],[13],[13],[72,[[4,[240]]]],[13],[13],[[240,22],23],[[103,22],23],[[103,22],23],[[]],[[]],[24,103],[27,103],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],0,0,0,[34],[[[21,[20]]],[[4,[240,103]]]],[[240,76],4],[103,[[37,[36]]]],[[]],[[],14],0,[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[]],[[]],0,[[240,[21,[20]]],[[4,[103]]]],0,0,0,0,0,0,0,0,0,[1],[1],[1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[242,243],244],[242,242],[245,245],[244,244],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[242,22],23],[[245,22],23],[[244,22],23],[[242,13],13],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],0,[[242,246,243],244],0,0,0,[247,242],0,0,[[242,245]],[[248,55],248],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[249,250],0,[249,[[37,[14]]]],[249,48],[249,[[7,[43]]]],[[]],[[]],[[]],[[]],[249,[[37,[251]]]],0,[13],[13],[13],[13],[13],[13],[[106,22],23],[[106,22],23],[[]],[252,106],[[]],[24,106],[253,106],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[[240,[37,[5]]],[[4,[249,106]]]],[249,166],[34],[[249,5],[[4,[106]]]],[[249,14]],[106,[[37,[36]]]],[249,243],0,[249,243],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[249,254],[[]],[[]],[249,59],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[21,[20]]],[[54,[255]]]],0,[256,[[4,[257]]]],0,0,0,0,0,[1],[[]],[[]],[255,255],[[]],[[],255],[13],[13],[72,[[4,[255]]]],[13],[[255,22],23],[[]],[[],13],[[]],[[],33],0,0,0,[[[21,[20]]],[[54,[255]]]],[[255,76],4],[[]],0,[[],4],[[],4],[[],39],[[]],0,0,0,0,0,0,0,0,0,0,[258,250],0,[258,[[37,[14]]]],[[]],[[]],[[]],[[]],0,[13],[13],[13],[13],[13],[13],[[107,22],23],[[107,22],23],[[]],[[]],[24,107],[259,107],[258,[[19,[14,162]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[255,258],[258,166],[34],[[258,14]],[[258,14],[[4,[162,107]]]],[107,[[37,[36]]]],[[258,14,162],[[4,[162,107]]]],[[258,14],[[4,[162,107]]]],0,[258,19],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[]],[[]],[258,59],0,0,0,0,0,0,0,0,0,0,0,0,[[],260],[[],261],[[],260],[[],[[261,[162]]]],[262,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[13],[263,260],[13],[13],[264,261],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[262],[13],[13],[[262,22],23],[[259,22],23],[[259,22],23],[[]],[[]],[[]],[[]],[[]],[184,259],[103,259],[24,259],[[],162],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[265,265],0,[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[262,48],0,0,[14,265],[[265,162],265],[262,162],0,[34],[[262,76],4],[262],[259,[[37,[36]]]],[265,[[4,[262,259]]]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],[[]],[[265,[21,[20]]],265],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[266,42],[267,42],[268,42],[269,42],[270,42],[[14,[272,[[271,[258]]]]],[[4,[273]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[266,266],[267,267],[268,268],[269,269],[270,270],[[]],[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[257,22],23],[[257,22],23],[274,257],[102,257],[[]],[275,257],[276,257],[277,257],[24,257],[[]],[[]],[[]],[[]],[[]],[256,[[4,[278,273]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[34],[[14,256],[[4,[278,273]]]],[257,[[37,[36]]]],[[14,256],[[4,[278,273]]]],[256,[[4,[257]]]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[1],[279,55],[279,280],[279,[[7,[281]]]],[[279,[7,[282]],48],283],0,[279,284],[[]],[[]],[[]],[[]],[[]],[[]],[285,285],[[]],[279,286],[279,248],[13],[13],[13],[13],[13],[13],[13],[13],[13],[279,287],[279,176],[[285,22],23],[[285,22],23],[[252,22],23],[[252,22],23],[279,[[7,[288]]]],0,0,[[]],[[]],[211,252],[[]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],[282,48],[289,48],0,[[279,282],290],[291,[[4,[279,252]]]],[[248,288,285]],[34],[279,[[7,[282]]]],0,[[279,288,285,[4,[292,211]]]],[[279,285]],[[279,14,285],[[4,[252]]]],[[279,285],[[37,[293]]]],[279,294],[252,[[37,[36]]]],[[279,[7,[290]]],[[19,[14,295]]]],[[]],[[],14],[[],14],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[243,[[7,[43]]]],0,[243,55],0,[[]],[[]],[[]],[[]],0,[243],[243,7],[13],[13],[13],[13],[13],[13],0,[[253,22],23],[[253,22],23],[[]],[3,253],[296,253],[[]],[252,253],[24,253],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[243,279],[243,279],0,0,[[5,240],[[4,[243,253]]]],[243,297],[34],[243],[[243,55]],[[243,245]],[[243,177]],[[243,14]],[253,[[37,[36]]]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[243,298]],[243,254],0,[243,247],[243,247],0,[243,299],0,[243,299],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[300,42],[301,42],[302,42],[303,42],[304,42],[305,42],[306,42],[307,42],[308,42],[309,42],[310,42],[311,42],[312,42],[313,42],[314,42],[315,42],[316,42],[317,42],[318,42],[319,42],[320,42],[321,42],[322,42],[323,42],[324,42],[325,42],[326,42],[327,42],[328,42],[329,42],[330,42],[331,42],[332,42],[333,42],[334,42],[335,42],[336,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[300,300],[301,301],[302,302],[303,303],[304,304],[305,305],[306,306],[307,307],[308,308],[309,309],[310,310],[311,311],[312,312],[313,313],[314,314],[315,315],[316,316],[317,317],[318,318],[319,319],[320,320],[321,321],[322,322],[323,323],[324,324],[325,325],[326,326],[327,327],[328,328],[329,329],[330,330],[331,331],[332,332],[333,333],[334,334],[335,335],[336,336],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[102,22],23],[[102,22],23],[277,102],[276,102],[275,102],[274,102],[24,102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[],[[4,[278,273]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,0,0,[34],0,0,[102,[[37,[36]]]],0,[241,[[4,[102]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[1],[1],[241,[[0,[337,338]]]],[339,42],[340,42],[[]],[[]],[[]],[[]],[339,339],[340,340],[[]],[[]],[13],[13],[13],[13],[13],[13],[[]],[[]],[241,[[0,[337,338]]]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[[298,241],[[4,[278,273]]]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[14,241],[[4,[273]]]],[241,[[4,[278,273]]]],[[48,241],[[4,[278,273]]]],[[55,241],[[4,[278,273]]]],[241,[[4,[278,273]]]],[241,[[4,[278,273]]]],[241,[[4,[278,273]]]],[241,[[4,[278,273]]]],[180,[[4,[278,273]]]],[[162,241],[[4,[278,273]]]],[241,[[4,[278,273]]]],[[177,241],[[4,[278,273]]]],[241,[[4,[278,273]]]],[241,[[4,[278,273]]]],[241,[[4,[278,273]]]],[241,[[4,[278,273]]]],[[241,5],[[4,[278,273]]]],[[14,241],[[4,[278,273]]]],[[14,241],[[4,[278,273]]]],[[298,241],[[4,[278,273]]]],[[14,241],[[4,[278,273]]]],[[14,241],[[4,[278,273]]]],[[14,241],[[4,[278,273]]]],[241,[[4,[278,273]]]],[[14,279,285],[[4,[278,273]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[341,42],[342,42],[343,42],[344,42],[345,42],[346,42],[347,42],[348,42],[349,42],[350,42],[351,42],[352,42],[353,42],[354,42],[355,42],[356,42],[357,42],[358,42],[359,42],[360,42],[361,42],[362,42],[363,42],[364,42],[365,42],[366,42],[367,42],[368,42],[369,42],[370,42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[341,341],[342,342],[343,343],[344,344],[345,345],[346,346],[347,347],[348,348],[349,349],[350,350],[351,351],[352,352],[353,353],[354,354],[355,355],[356,356],[357,357],[358,358],[359,359],[360,360],[361,361],[362,362],[363,363],[364,364],[365,365],[366,366],[367,367],[368,368],[369,369],[370,370],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[241,371],[[0,[337,338]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],372],[[],373],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[374,[[4,[[7,[290]],102]]]],[[]],[[]],[[14,241],[[4,[278,273]]]],[13],[13],[72,[[4,[374]]]],[13],[[374,22],23],0,[[]],[[14,241],[[4,[278,273]]]],[[14,241],[[4,[278,273]]]],[[375,14,241],[[4,[278,273]]]],[241,[[4,[278,273]]]],[241,[[4,[278,273]]]],[[374,241],[[4,[278,273]]]],[241,[[4,[278,273]]]],[241,[[4,[278,273]]]],[[],13],[[]],[14,[[4,[376,273]]]],[[],33],[42,[[4,[376,273]]]],[[377,241],[[4,[278,273]]]],[[378,241],[[4,[278,273]]]],[[],4],[[],4],[[],39],[[]],0,0,0,0,[[],379],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[[251,22],23],[[380,22],23],[[379,22],23],[[]],[[]],[[]],[[],379],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],[177,379],[273,[[4,[278,273]]]],0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[]],[[]],[[]],0,0,0,0,0,0,0,[[[7,[381]]],[[4,[[7,[381]],273]]]],[[[7,[382]]],[[4,[[7,[382]],273]]]],[[7,[37,[97]],[37,[97]]],7],[[42,162],273],[[],273],[[383,241],[[4,[278,273]]]],[[384,241],[[4,[278,273]]]],[[383,241],[[4,[385,273]]]],[[[7,[381]],[37,[386]]],[[7,[381]]]],[[[7,[382]],[37,[386]]],[[7,[382]]]],[20,[[4,[[7,[387]],102]]]],[20,[[4,[388,102]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[241,[[4,[278,273]]]],[[14,241],[[4,[278,273]]]],[[177,241],[[4,[278,273]]]],[[177,[0,[[15,[14]],167]],241],[[4,[278,273]]]],[241,[[4,[278,273]]]],[[14,14,241],[[4,[278,273]]]],[241,[[4,[278,273]]]],[[177,241],[[4,[278,273]]]],[[177,241],[[4,[278,273]]]],[[389,241],[[4,[278,273]]]],[[177,241],[[4,[278,273]]]],[241,[[4,[278,273]]]],[[14,14,241],[[4,[278,273]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[299,42,42],[[7,[390]]]],[[299,42,42,42],[[7,[390]]]],[[],299],[13],[13],[13],[13],[13],[13],[[],391],[[299,22],23],[[392,22],23],[[]],[[]],[37,[[4,[299,296]]]],[[],13],[[],13],[[299,[7,[390]]]],[[299,[7,[393]]]],[[]],[[]],[[],33],[[],33],[[299,14,391]],[[299,[15,[14]]],[[37,[391]]]],0,[299,[[7,[14]]]],[[299,42,42],391],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],0,[[299,42,42],[[7,[393]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[394,395],[[]],[[]],0,[13],[13],[13],[394],[[]],[[],13],[[]],[[],33],[394,48],[[396,397],394],[394,397],0,[394],[394],[394],[394],[394,[[54,[398]]]],[[],4],[[],4],[[],39],[[]],0,[[]],[[]],[[399,42,14],397],[13],[13],[13],[399],[[]],0,[[],13],0,[[]],[[],33],[399],[[18,400],399],[399,[[54,[394]]]],[[399,401],[[54,[402]]]],[[399,10,403,14],[[54,[404]]]],[[399,14],[[54,[404]]]],[[399,42],[[54,[405]]]],[[399,406],[[54,[405]]]],[[],4],[[],4],[[],39],[[]],0,[404,395],[[]],[[]],0,[13],[13],[13],[404],[[]],[[],13],[[]],[[],33],[404,48],[[407,397],404],[404,397],0,[404],[404],[404],[404,408],[404],[404,[[54,[398]]]],[[],4],[[],4],[[],39],[[]],0,[405,395],[[]],[[]],[405,119],0,[13],[13],[13],[405],[[]],[[],13],[[]],[[],33],[405,48],[[409,397],405],[405,397],0,[405],[405],[405],[405],[405,[[54,[398]]]],[[],4],[[],4],[[],39],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],0,0,[410],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[[7,[411,412]]]]]],[[],[[4,[[7,[413,412]]]]]],[410,410],[[]],0,0,[13],[13],[13],[13],[13],[13],[13],[13],[13],[[],[[415,[414]]]],[[],[[415,[414]]]],[[410,410],48],[[],48],0,[[410,22],[[4,[75]]]],[[416,22],[[4,[75]]]],[[416,22],[[4,[75]]]],[[]],[[],410],[[]],[417,416],[[]],[14,[[4,[410,416]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],[416,[[419,[418]]]],[[420,410],48],[14,[[4,[420,416]]]],[[[7,[43,412]]],410],[34],0,0,0,0,0,0,0,[416,[[37,[36]]]],[421],0,[[]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],0,[[]],[[]],[[]],0,[[],4],[[],4],0,0,0,0,0,0,0,[1],[422,250],0,[422,[[37,[14]]]],0,[[422,14]],[[]],[[]],[[]],[[]],[422],[163,163],[[]],[13],[13],[13],[13],[72,[[4,[163]]]],[13],[13],[[163,163],48],[[],48],[[163,22],23],[[163,22],23],[[]],[[]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[[[21,[20]],5,[37,[14]]],422],[422,48],[422,48],[[163,76],4],[422,37],0,[[422,5]],[[422,423]],[422,5],0,[422,5],0,0,[422],[422,163],0,[422,163],[422],[[]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[]],[[]],[422,59],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[13],[13],[13],[13],[72,[[4,[160]]]],[13],[13],[[[21,[20]]],[[4,[160,424]]]],[[424,22],23],[[424,22],23],[[]],[[]],[425,424],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[426,48],[[[21,[20]]],160],[34],[[160,[15,[14]]]],[[160,[15,[14]]]],[[160,[21,[20]]]],[[160,[15,[14]]]],[[160,[15,[14]]]],[[160,[15,[14]]]],0,[[160,76],4],[424,[[37,[36]]]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[427,42],[428,42],[429,42],[430,42],[431,42],[432,42],[433,42],[434,42],[435,42],[436,42],[[14,[272,[[271,[422]]]]],[[4,[273]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[423,423],[427,427],[428,428],[429,429],[430,430],[431,431],[432,432],[433,433],[434,434],[435,435],[436,436],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[421,[[4,[278,273]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[273,[[4,[278,194]]]],[421,[[4,[278,273]]]],[[421,5],[[4,[278,273]]]],[421],[421,[[4,[278,273]]]],[423],[421,[[4,[278,273]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[437],0,[13],[13],[13],[[]],[[],13],[[]],[[],33],[421,437],[437,48],[437,48],0,[437,5],[437],[[],4],[[],4],[[],39],[[]],0,[1],[[]],[[]],[438,438],[[]],[13],[13],[13],0,[[438,22],23],[[]],[[],13],0,[[]],[[],33],[[438,42],401],0,[[14,166,35,[37,[14]],14,[21,[20]]],438],[438,[[7,[401]]]],[[438,42],401],0,[438,406],0,[438,35],0,[[192,438,403,5],54],0,[[]],[438,[[37,[14]]]],0,[[],4],[[],4],[[],39],[438,14],0,[[]],0,[[438,5,403],54],[[],439],0,[[438,5,403],54],[[421,438,403],54],[[438,5,403],54],[[438,5,403],54],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,[13],[13],[13],0,[[]],[8,10],[[10,440],[[4,[14,136]]]],[10,[[4,[14,136]]]],0,[[],13],[[]],[[],33],[[],132],[[],138],0,[[],52],[[],53],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],39],0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],132],[[],138],0,[[],52],[[],53],0,0,0,[396,14],[396,42],0,[[]],[[]],[396,441],[13],[13],[13],0,[[]],[[],13],[[]],[[],33],[[395,442],396],[396,[[37,[443]]]],[396,398],[[],4],[[],4],[[],39],[[]],0,0,0,0,0,0,0,[1],[[444,16],444],0,[18,59],[[444,445],444],[[]],[[]],[[]],[[]],[[]],[[]],[[444,35],[[4,[18,25]]]],[18,18],[[]],[[444,446],444],0,[18,[[7,[447]]]],0,[[],444],[18,7],[[18,42],[[54,[6]]]],[18,[[7,[6]]]],[18,7],[13],[13],[13],[13],[13],[13],[13],[13],[13],[[444,448],444],[[25,22],23],[[25,22],23],[[]],[[]],[218,25],[[]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[18,449],0,[[]],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],444],[[450,449],18],[34],[18,9],[25,[[37,[36]]]],[18,[[54,[396]]]],[[18,401],[[54,[451]]]],[[18,10,403,14],[[54,[407]]]],[[18,14],[[54,[407]]]],[[18,42],[[54,[409]]]],[[18,406],[[54,[409]]]],[[]],[[],14],[[444,11],444],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[18,450],0,[[444,[7,[46]]],444],[[]],[[]],[[]],[407,[[4,[25]]]],[[444,189],444],[[18,42],[[54,[447]]]],[[444,[7,[189]]],444],[18,452],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1],[1],[1],[[453,[15,[14]]],453],0,[[408,42],[[4,[[19,[14,[7,[454,412]],455]],214]]]],0,[[453,[15,[14]]],453],0,[[453,[37,[14]]],453],0,[[453,[37,[14]]],453],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[456,403],247],[457,[[4,[14,458]]]],[453,459],[457,460],[[453,20],453],0,[461,462],[408,[[4,[[7,[381,412]],214]]]],0,0,0,[440,13],[408,408],[461,461],[440,440],[[]],[[]],[[]],0,0,0,[[453,[15,[14]]],453],0,[[],457],[[],453],[[],461],[[408,42,42],[[4,[463,214]]]],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[408],[13],[13],[13],[13],[13],[13],[13],[[42,464],[[4,[36]]]],[[453,48],453],0,[408],0,[[408,22],[[4,[75]]]],[[222,22],23],[[222,22],23],[[]],[[]],[[]],[[]],[464,408],[[]],[[]],[214,222],[24,222],[159,222],[[]],[[408,42],[[4,[298,214]]]],[408,[[4,[298,214]]]],0,0,0,[461,14],[461,[[37,[465]]]],[461,14],0,0,0,[408,[[4,[[7,[43,412]],214]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[408,[[4,[214]]]],[461,391],[[]],[[453,20],453],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[408,466],[[]],[[]],[[]],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[453,20],453],0,[[453,42],453],0,[[453,55],453],0,[10,456],[[],457],[59,453],[467,408],[[],461],[[59,59,59,59],[[4,[440,137]]]],[[],132],[461,132],[440,132],[461,177],0,[[],138],[461,138],[440,138],0,[[],52],[461,52],[440,52],[461,177],0,[[],53],[461,53],[440,53],[461,177],0,[[453,20],453],0,0,[408,468],[[453,20],453],0,[[408,42,42],[[4,[382,214]]]],[[461,132,391],52],[461,469],[461,391],[[408,42],[[4,[[7,[382,412]],214]]]],0,0,0,[408,[[4,[[7,[382,412]],214]]]],[[461,462],470],[440,13],[461,471],[34],[[408,472],[[4,[214]]]],[[408,473],[[4,[214]]]],0,0,0,[[408,383],[[4,[385,214]]]],[[408,383],[[4,[391,214]]]],[[453,[15,[14]]],453],[408,[[4,[254,214]]]],0,[[408,14]],[[408,[15,[14]]]],[[408,120]],[408,[[4,[[7,[14,412]],214]]]],[222,[[37,[36]]]],[[]],[[]],[[]],[[],14],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[408,42,42],[[4,[474,214]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[457,[7,[454,412]]],457],[[457,[7,[381,412]]],457],[[457,[7,[298,412]]],457],[[457,[7,[382,412]]],457],[[457,247],457],[[457,475],457],[[457,[7,[475,412]]],457],0,0,0,0,0,0,0,0,0,0,[407,250],[407,395],0,[407,476],[[]],[[]],[407,[[4,[[7,[381]],222]]]],[407,48],[[407,42,42],[[4,[463,222]]]],[13],[13],[407],[13],[[]],[[],13],[[]],[[],33],0,[[407,42],[[4,[[7,[382]],222]]]],[[407,472],[[4,[222]]]],0,0,[407],[407,[[4,[[7,[14]],222]]]],[407,398],0,[[],4],[[],4],[[],39],[[407,42,42],[[4,[474,222]]]],[[]],[407,[[4,[398,222]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[477,403],[[4,[14,136]]]],[13],[13],[13],[13],[13],[13],[[136,22],23],[[136,22],23],[[]],[458,136],[[]],[191,136],[24,136],[[10,440],[[4,[14,136]]]],[10,[[4,[14,136]]]],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[10,477],0,[34],[136,[[37,[36]]]],[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[13],[13],[13],[[213,22],23],[[213,22],23],[478,213],[159,213],[[]],[479,213],[216,213],[24,213],[480,213],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[]],[[],33],[34],0,[213,[[37,[36]]]],0,[[],14],[[],4],[[],4],[[],39],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[409,14],[409,395],0,[409,476],[409,[[7,[43]]]],[[]],[[]],[[]],[[]],[409,48],[409,119],0,[13],[13],[13],[13],[409],[13],[13],[[216,22],23],[[216,22],23],[[]],[[]],[121,216],[[[0,[29,30,31]]],[[32,[[0,[29,30,31]]]]]],[[]],[[],13],[[],13],[[]],[[]],[[],33],[[],33],[[395,481,[272,[[271,[398]]]],482],[[4,[409,216]]]],0,[34],[409,481],0,[409],[216,[[37,[36]]]],[409,398],0,[[],14],[[],4],[[],4],[[],4],[[],4],[[],39],[[],39],0,[[]],[[]],0,0,[1],[481,14],[481,250],[481,[[37,[250]]]],[481,250],[[]],[[]],[481,481],[[]],[13],[13],[13],[[481,22],23],[[]],[[],13],[[]],[[],33],[481,14],0,[[35,19],481],0,0,[[]],[[],4],[[],4],[[],39],[481,14],0,[[]],0,0,0,[[]],[[]],[13],[13],[13],[[]],[[],13],[[]],[[],33],[[[15,[14]]],406],[[406,481]],0,[[],4],[[],4],[[],39],0,[[]],[[406,[15,[14]]],406],[[406,166],406],[[406,254],406],0,0,0,0,0,0,[1],[[]],[[]],[450,450],[[]],[13],[13],[13],[[450,22],23],[[]],[[],13],[[]],[[],33],[[35,[37,[16]]],450],[35],[[35,19]],[[11,170,35]],[[]],[[],4],[[],4],[[],39],0,[[]],0,[[18,10,438,403],54],[[5,59],54],[[48,13,59],54]],"c":[],"p":[[3,"Private"],[3,"VitBackendSettingsBuilder"],[4,"Error"],[4,"Result"],[3,"Config"],[3,"VotePlanDef"],[3,"Vec"],[3,"CurrentFund"],[3,"Settings"],[3,"ValidVotePlanParameters"],[3,"Topology"],[3,"VoteBlockchainTime"],[15,"usize"],[3,"String"],[8,"Into"],[3,"ArchiveConfiguration"],[4,"Error"],[3,"VitController"],[3,"HashMap"],[3,"Path"],[8,"AsRef"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Error"],[4,"Error"],[3,"Error"],[4,"DiscoverArchiveByFileError"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[3,"Request"],[3,"Demand"],[3,"SessionSettings"],[8,"Error"],[4,"Option"],[3,"Span"],[3,"TypeId"],[4,"ParseError"],[4,"ImageError"],[15,"str"],[15,"u8"],[3,"FundInfo"],[3,"VitVotePlanDefBuilder"],[3,"VotePlanTemplate"],[6,"WalletAlias"],[15,"bool"],[4,"Role"],[3,"TokenIdentifier"],[3,"ReviewGenerator"],[3,"ProposalTemplate"],[3,"ReviewTemplate"],[6,"Result"],[15,"u32"],[4,"Level"],[3,"SetGlobalDefaultError"],[3,"DeploymentTree"],[3,"PathBuf"],[3,"TempDir"],[3,"Command"],[4,"VitCliCommand"],[4,"StartCommand"],[4,"GenerateCommand"],[3,"ArgMatches"],[6,"Error"],[3,"DiffCommand"],[3,"PatchFormatter"],[3,"Id"],[3,"CommitteeIdCommandArgs"],[4,"Initial"],[8,"Deserializer"],[4,"DataCommandArgs"],[4,"RandomDataCommandArgs"],[3,"Error"],[8,"Serializer"],[3,"ExternalDataCommandArgs"],[3,"PerfDataCommandArgs"],[3,"AllRandomDataCommandArgs"],[3,"RandomReviewsDataCommandArgs"],[3,"RandomScoresDataCommandArgs"],[3,"QrCommandArgs"],[3,"Snapshot"],[3,"SnapshotCommandArgs"],[4,"ImportCommand"],[4,"Error"],[4,"Format"],[4,"Ordering"],[3,"InputScores"],[4,"ImportFromIdeascaleFormatCommand"],[3,"ImportProposals"],[3,"ImportChallenges"],[3,"ImportScores"],[3,"ImportReviews"],[3,"Error"],[3,"ParseFloatError"],[15,"u64"],[3,"AdvancedStartCommandArgs"],[3,"MockStartCommandArgs"],[4,"Error"],[3,"MockFarmCommand"],[4,"Error"],[4,"Error"],[3,"JoinError"],[3,"Error"],[4,"Error"],[4,"Error"],[3,"QuickStartCommandArgs"],[3,"TimeCommand"],[4,"ValidateCommand"],[4,"Error"],[4,"CheckError"],[4,"Error"],[4,"Error"],[3,"ConfigValidateCommand"],[4,"Check"],[3,"CheckIter"],[3,"DeploymentValidateCommand"],[3,"ValgrindClient"],[3,"Duration"],[4,"Error"],[3,"IterBridge"],[3,"ProgressBar"],[3,"ProgressBarIter"],[3,"Utf8CharSplitter"],[3,"Utf16CharSplitter"],[3,"Utf16CharMerger"],[3,"Utf8CharMerger"],[3,"IdeascaleValidateCommand"],[4,"ProposalError"],[4,"Value"],[3,"ChallengeTemplate"],[3,"LinkedList"],[4,"ReviewError"],[4,"ChallengeError"],[4,"Error"],[4,"TemplateLoad"],[3,"FundTemplate"],[3,"VitupClientCommand"],[4,"DisruptionCommand"],[3,"VitupDisruptionRestClient"],[4,"LogsCommand"],[4,"FilesCommand"],[4,"ControlCommand"],[4,"FragmentsCommand"],[4,"MockCommand"],[3,"VitupAdminRestClient"],[4,"MockStartCommand"],[3,"MockStartCustomCommand"],[4,"MockFilesCommand"],[4,"UtilsCommand"],[4,"PersistentLogCommand"],[3,"CountPersistentLogCommand"],[4,"Command"],[3,"SetFundIdCommand"],[3,"SetErrorCodeCommand"],[4,"Error"],[3,"VitupRest"],[3,"Error"],[3,"FolderDump"],[3,"Response"],[15,"u16"],[4,"State"],[4,"BorrowedFormatItem"],[4,"Discrimination"],[4,"Protocol"],[8,"Debug"],[3,"VoterHIR"],[3,"AdditionalServices"],[3,"Blockchain"],[3,"SecondsSinceUnixEpoch"],[3,"OffsetDateTime"],[3,"ConfigBuilder"],[3,"Initials"],[3,"ConsensusLeaderId"],[3,"LinearFee"],[15,"i32"],[3,"Initials"],[3,"CommitteeIdDef"],[3,"Initials"],[4,"VoteTime"],[3,"CertificatesBuilder"],[3,"Certs"],[4,"Error"],[4,"Error"],[4,"Initial"],[3,"InitialUTxO"],[8,"Fn"],[4,"WalletTemplate"],[3,"MigrationFilesBuilder"],[4,"Error"],[4,"Mode"],[4,"SessionMode"],[4,"Infallible"],[3,"Service"],[3,"StaticData"],[3,"CurrentFund"],[3,"CurrentFundDates"],[3,"FundInfo"],[3,"NextFund"],[3,"NextFundDates"],[3,"VotePlan"],[3,"JormungandrRest"],[4,"Error"],[4,"Error"],[4,"FragmentVerifierError"],[4,"Block0ConfigurationError"],[4,"FragmentSenderError"],[4,"Error"],[3,"GlobError"],[4,"Error"],[4,"Parse"],[4,"Error"],[4,"Error"],[4,"ConsumptionBenchmarkError"],[4,"Error"],[4,"WalletError"],[4,"Error"],[4,"Error"],[4,"ServerBootstrapperError"],[4,"Error"],[4,"Error"],[4,"InteractiveCommandError"],[4,"Block0Error"],[4,"Block0Error"],[3,"VitInteractiveCommandExec"],[3,"UserInteractionController"],[4,"VitInteractiveCommand"],[3,"ConsoleWriter"],[3,"VitUserInteractionController"],[4,"Describe"],[3,"DescribeVitStations"],[3,"DescribeAll"],[3,"DescribeWalletProxies"],[3,"VoteTimeStatus"],[3,"BlockchainConfiguration"],[3,"BlockDate"],[4,"Show"],[3,"ShowStatus"],[3,"Configuration"],[6,"ContextLock"],[3,"NetworkCongestion"],[3,"MockState"],[3,"NetworkCongestionData"],[4,"NetworkCongestionMode"],[15,"f64"],[3,"Snapshot"],[3,"BlockDate"],[3,"Context"],[4,"SocketAddr"],[3,"ForcedErrorCode"],[4,"Error"],[4,"Error"],[3,"ServiceVersion"],[3,"Config"],[6,"ContextLock"],[4,"Error"],[3,"Context"],[4,"Error"],[3,"AtomicU16"],[3,"HashSet"],[3,"MockController"],[3,"NEXT_AVAILABLE_PORT_NUMBER"],[3,"OCCUPIED_PORTS"],[3,"MockBootstrap"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"Mutex"],[3,"Arc"],[3,"Rejection"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"Error"],[8,"Reply"],[3,"LedgerState"],[6,"Ledger"],[3,"VotePlanStatus"],[4,"Fragment"],[3,"FragmentsProcessingSummary"],[3,"Hash"],[4,"FragmentRecieveStrategy"],[3,"SystemTime"],[4,"BlockDateGenerator"],[3,"FragmentLog"],[3,"Transaction"],[6,"FragmentId"],[3,"Block0Configuration"],[3,"Ledger"],[3,"Hash"],[3,"SettingsDto"],[4,"FragmentStatus"],[4,"Error"],[3,"NodeStatsDto"],[3,"Fund"],[3,"VoterSnapshot"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[8,"Filter"],[8,"Clone"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"BoxedFilter"],[3,"Cors"],[3,"HeaderMap"],[3,"GetMessageStatusesQuery"],[6,"VotePlanId"],[3,"Identifier"],[3,"FragmentsBatch"],[3,"Bytes"],[3,"GeneralException"],[3,"InvalidBatch"],[3,"Challenge"],[3,"FullProposalInfo"],[3,"SearchQuery"],[3,"SearchCountQuery"],[4,"SearchResponse"],[4,"OrderBy"],[3,"Certificate"],[3,"PrivateKey"],[6,"ProposalsByVoteplanIdAndIndex"],[3,"Contribution"],[15,"i64"],[3,"ArbitraryVoterHIR"],[3,"Voter"],[3,"ExplorerMonitorController"],[6,"NodeAlias"],[3,"ExplorerController"],[3,"ProgressBarController"],[4,"Status"],[3,"MonitorController"],[3,"MonitorController"],[3,"SpawnParams"],[3,"Node"],[8,"ValidVotingTemplateGenerator"],[3,"VitStationMonitorController"],[3,"WalletProxyMonitorController"],[3,"WalletProxySpawnParams"],[3,"VitStationController"],[3,"RestClient"],[3,"WalletProxyController"],[3,"APIToken"],[3,"u5"],[3,"Global"],[3,"u5"],[15,"char"],[8,"FromIterator"],[4,"TokenError"],[4,"DecodeError"],[3,"Body"],[3,"Response"],[3,"APITokenManager"],[6,"ControlContextLock"],[3,"ControlContext"],[3,"ServerStopper"],[4,"Error"],[3,"Error"],[3,"DirEntry"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"__StaticPath"],[3,"ManagerService"],[3,"NetworkSpawnParams"],[3,"UserInteraction"],[3,"ExternalValidVotingTemplateGenerator"],[3,"Explorer"],[3,"ExplorerProcess"],[3,"Output"],[3,"VitControllerBuilder"],[3,"BlockchainConfiguration"],[4,"CommitteeTemplate"],[4,"Wallet"],[3,"ExplorerTemplate"],[3,"Controller"],[3,"VitSettings"],[3,"JormungandrProcess"],[4,"TestingDirectory"],[3,"BootstrapCommandBuilder"],[3,"AdvisorReview"],[3,"RandomState"],[3,"ValidVotePlanGenerator"],[3,"DbBuilder"],[4,"DbBuilderError"],[3,"Command"],[8,"Future"],[3,"ArbitraryValidVotingTemplateGenerator"],[4,"ChallengeType"],[3,"DelegatorInfo"],[3,"ServiceSettings"],[3,"ChallengeHighlights"],[3,"RestClient"],[3,"Url"],[3,"RestPathBuilder"],[3,"Category"],[4,"ProposalChallengeInfo"],[3,"Proposer"],[3,"RawSnapshot"],[3,"Snapshot"],[3,"VoterInfo"],[3,"ApiTokenData"],[3,"NamedProcess"],[3,"DbGenerator"],[3,"ScanError"],[4,"MockClientError"],[4,"RestError"],[3,"WalletProxySettings"],[3,"Child"],[8,"WalletExtension"],[13,"CannotFindArchiveDB"],[13,"CannotFindBlock0Folder"],[8,"SessionSettingsExtension"],[13,"AboveThreshold"],[13,"External"],[13,"BelowThreshold"],[13,"AroundLevel"],[13,"Wallet"],[13,"ZeroFunds"],[13,"Real"],[13,"ProxyNotFound"],[13,"NoChallengeIdAndGroupFound"],[13,"SyncTimeoutOccurred"],[13,"AssertionFailed"],[13,"TransactionNotInBlock"],[13,"NoChallengeIdFound"],[13,"CannotGetWallet"],[13,"NodeFailedToBootstrap"],[13,"NodeFailedToShutdown"],[13,"NodeFailedToBootstrap"],[13,"NodeFailedToShutdown"],[13,"FragmentNotInMemPoolLogs"],[13,"FragmentIsPendingForTooLong"],[13,"CannotCreateFile"],[13,"CannotWriteYamlFile"],[8,"PrepareVitServerSettings"],[8,"PrepareWalletProxySettings"],[8,"PrepareSettings"]]},\
"voter_registration_mock":{"doc":"","t":"F","n":["main"],"q":[[0,"voter_registration_mock"]],"d":[""],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[4,"Error"],[4,"Result"]]},\
"voting_tools_rs":{"doc":"Rust implementation of voting tools","t":"DNNGIDDNNNENNNDNNNNDENDDNNDDNNNEDDAMAAAMMMMMAMMMAMMMMMAMMMMMMMMMMMMMFMMMMKAAMMMAAAKMFMMMMMMMMMMMMMMMDHHNEHHLLLLLLLLLLMMMMLLLLLLMLFMLLLLLLLLLLLLLLLLMMMMFLLLLLLLLLLLLMWWWWWWSRDDDDNNRRRRCDRCDDDRCDDDDDDDDRREDDRRDLLLLLLLLLLLLLLLLLLLFFFFFFFFFFFFLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLALLLLLLLLLLLLLMMFFFLLLLLLLLMLLLLLLLLMMLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLGFCCAAWDLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWDLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLWDDLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKKCCDLLLLLMLLLLLLMLALLMMMMMAALLLLAMALGDILLLLLLLLLLLLLLLLLLLLLAAAWHHHHHHFFHHHHHHHHHHRRFWHHHHHHHGHLLOOLLLLLLLLFLLLLLLLLLLLLLLLLLLDFDMMLLLLLLLLLLLLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRRRLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOCCCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRRRRRRRRRLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRLLLLLOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLOOOOCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRRRRRRLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOCCCCCCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRLLLLLOOOOOOOOOOOOLLLLLLDLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLDLLLLLLDLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOODLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRLLLOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLOOCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRLLLLLOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRLLLLOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLLLLLLLOOOCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRLLLLLOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLOOOOCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRLLLLLOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLOOOOCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRLLLLLOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLOOOOCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRLLLLLOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLDLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRLLLLOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLOOOCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLDLLLDDDLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRLLLLOOOOOOLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDDLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLOOOOOOOCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRRRRLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOODLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOCCCCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLDLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRRLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLOOOOOOOOOCCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLDLLLLLLDLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRLLLLLOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLOOOOCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLDDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRLLLLOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLOOOCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRLLLLLOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLDLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRLLLLLOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLDLLLLLLDLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLDLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLOOOOOOCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLDDLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRRRRRLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOCCCCCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLDDLLLDLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLOOOOOCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRRRRRRRRLLLLLLLLLLLLLOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLOOOOOOOOOOOOCCCCCCCCCCCCCGGLLRLLLLLALLLLLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLRRRRRRLLLLLLOOOOOOOOOOOOOOOOOOOOLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLOOOOOCCCCCCNNNNNNNNNNNNECECECNECNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAAAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLFLLLLFLLLLLLLLDLLLLLFLLLLFLLLLLLLLDLLLLLFLLLLFLLLLLLLLDLLLLLFLLLLFLLLLLLLLILNNNNNDNNNNDENNNNNNLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMMLLLMMMLLLLLLLMLLLLLLMMMMMMMMMMMMCCCCCCCCCCCCCCCRRHHHHHHHHCAFFDLLLLLLLLLLLMLLLLLMMMLLLLLDDIKMMAACCCAADLLMLLLLLLLLLLLLLLLDIKLLLLLLLLLLMLLLLLLLLAFRRRRRRRRFFDLLLALLLLLLMLALLLMLLLLMMFFFFLFRGFAFRRRRRRRRFFAHDGHRRRRRRGGGLLLLLLFLLLLFFLFMMFLLLFFL","n":["Args","CborDeserializationFailed","CddlParsingFailed","Conn","DataProvider","Db","DbConfig","Delegated","Direct","DryRun","DryRunCommand","EmptyDelegations","IncorrectVotingPurpose","InvalidAddressPrefix","InvalidRegistration","MismatchedSignature","ObsoleteRegistration","RawBinCborRegistrationFailure","RawBinCborSignatureFailure","RegistrationCorruptedBin","RegistrationError","RegistrationFormat","Sig","Signature","SignatureError","SignatureFormat","SlotNo","SnapshotEntry","StakeKeyWrongNetwork","StakeKeyWrongType","StakePublicKeyError","VotingKey","VotingPowerArgs","VotingPurpose","cli","connect_timeout","data","data_provider","db","db","db_host","db_pass","db_user","dry_run","error","errors","expected_voting_purpose","expected_voting_purpose","exports","host","inner","keepalives_idle","keepalives_interval","keepalives_retries","logic","max_slot","max_slot","min_slot","min_slot","name","network_id","network_id","nonce","out_file","password","registration","registration_bad_bin","rewards_address","show_error_warning","slot","spec_61284","spec_61285","stake_key","stake_values","test_api","testing","tx_id","tx_id","user","validation","vectors","verification","vote_registrations","voting_key","voting_power","voting_power","voting_purpose","mock_json_file","actual","actual","err","err","err","err","err","err","err","expected","expected","hash_bytes","Args","CALLSITE","CALLSITE","DryRun","DryRunCommand","META","META","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command_for_update","db","db_host","db_pass","db_user","deref","deref","deref_mut","deref_mut","drop","drop","dry_run","eq","error_log_file","expected_voting_purpose","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","into_request","into_request","max_slot","min_slot","network_id","out_file","show_error_warning","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","mock_json_file","","","","","","","CATALYST","DELEGATIONS_OR_DIRECT","DbHost","DbName","DbPass","DbUser","Delegated","Direct","KEY_61284","KEY_61285","NETWORK_ID","NONCE","NetworkId","Nonce","PAYMENT_ADDRESS","PubKey","RawRegistration","Registration","RewardsAddress","STAKE_ADDRESS","Sig","Signature","SignedRegistration","SlotNo","SnapshotEntry","StakeAddr","StakeKeyHex","StakePubKey","TxId","VOTE_KEY","VOTE_PURPOSE","VotingKey","VotingKeyHex","VotingPurpose","WEIGHT","WITNESS","__WrapperDbPass","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_strategy_of_0","_strategy_of_0","_strategy_of_0","_strategy_of_0","_strategy_of_0","_strategy_of_0","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","_to_fn_ptr","add","add","add","add","add_assign","add_assign","add_assign","add_assign","arbitrary","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","arbitrary_with","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","assert","base32_len","base32_len","base32_len","base32_len","base32_len","base32_len","bin_reg","bin_sig","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cbor","check_base32","check_base32","check_base32","check_base32","check_base32","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","convert","crypto2","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","direct_from_hex","div","div","div","div","div_assign","div_assign","div_assign","div_assign","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expose_secret","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hex","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","get_hash","get_hash","hash","hash","header","header","header","header","header","header","header","header","header","header","header","hex_bytes","hex_impls","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inner_mut","inspect_cip36_reg","inspect_cip36_sig","inspect_metamap_reg","inspect_metamap_sig","inspect_nonce","inspect_rewards_addr","inspect_stake_key","inspect_voting_key","inspect_voting_purpose","inspect_witness","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_i64","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_resettable","is_valid","json_reg","json_sig","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","network_id","new","new","new","new","new","new","new","new","new","new","new","new","new","nonce","nonce","ox_hex","ox_hex_","ox_hex_sig","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","raw_reg_conversion","raw_sig_conversion","registration","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rewards_address","rewards_address","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","slot","slot","stake_key","stake_key","stake_key_hash","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","to_cbor","to_cbor","to_cbor","to_cbor","to_cbor","to_cbor","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_signed","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","tx_id","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_signature_bin","voting_key","voting_key","voting_power","voting_purpose","voting_purpose","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","write_base32","write_base32","write_base32","write_base32","write_base32","zeroize","Inputs","arbitrary_signed_registration","PubKey","Sig","pub_key","sig","","PubKey","__clone_box","_strategy_of_0","_to_fn_ptr","arbitrary_with","as_ref","base32_len","base32_len","borrow","borrow_mut","check_base32","check_base32","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","encode_hex","encode_hex_upper","eq","equivalent","fmt","from","from_hex","get_hash","hash","init","into","into_request","network_id","partial_cmp","serialize","to_hex","to_owned","try_from","try_into","ty","type_id","vzip","write_base32","write_base32","","Sig","__clone_box","_strategy_of_0","_to_fn_ptr","arbitrary_with","as_ref","base32_len","base32_len","borrow","borrow_mut","check_base32","check_base32","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","encode_hex","encode_hex_upper","eq","equivalent","fmt","from","from_hex","init","into","into_request","partial_cmp","serialize","to_owned","try_from","try_into","type_id","vzip","write_base32","write_base32","","HexBytes","V","__clone_box","_strategy_of_0","_to_fn_ptr","arbitrary_with","as_mut","as_ref","base32_len","base32_len","borrow","borrow","borrow_mut","borrow_mut","check_base32","check_base32","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","encode_hex","encode_hex_upper","eq","equivalent","expecting","fmt","fmt","fmt","from","from","header","init","init","into","into","into_request","into_request","serialize","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","visit_str","vzip","vzip","write_base32","write_base32","Mainnet","NetworkId","NetworkInfoFromStrError","Testnet","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from_str","from_str","from_str","header","header","in_current_span","init","init","into","into","into_request","into_request","into_resettable","provide","serialize","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DataProvider","stake_values","vote_registrations","Conn","Db","DbConfig","__clone_box","borrow","borrow_mut","clone","clone_into","connect_timeout","deref","deref_mut","deserialize","drop","fmt","from","host","init","inner","into","into_request","keepalives_idle","keepalives_interval","keepalives_retries","name","password","queries","schema","to_owned","try_from","try_into","type_id","types","user","utils","vzip","Conn","Db","DbQuery","borrow","borrow_mut","connect","deref","deref_mut","drop","exec","fmt","from","init","into","into_request","sql_string","stake_values","stake_values","try_from","try_into","type_id","vote_registrations","vote_registrations","vzip","stake_value","staked_utxo_ada","vote_registrations","","CALLSITE","CALLSITE","CALLSITE","META","META","META","decode","query","CALLSITE","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","META","STAKED_ADA","STAKE_CREDENTIAL","staked_utxo_ada","","CALLSITE","CALLSITE","CALLSITE","META","META","META","METADATA_KEY","Row","SIGNATURE_KEY","__clone_box","__clone_box","__static_cond","__static_cond","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","convert_row","default","default","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","init","init","into","into","into_request","into_request","meta_table","query","sig_table","table","table","target","target","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ada_pots","block","collateral_tx_in","collateral_tx_out","cost_model","datum","delegation","delisted_pool","epoch","epoch_param","epoch_stake","epoch_sync_time","extra_key_witness","ma_tx_mint","ma_tx_out","meta","multi_asset","param_proposal","pool_hash","pool_metadata_ref","pool_offline_data","pool_offline_fetch_error","pool_owner","pool_relay","pool_retire","pool_update","pot_transfer","redeemer","redeemer_data","reference_tx_in","reserve","reserved_pool_ticker","reward","schema_version","script","slot_leader","stake_address","stake_deregistration","stake_registration","treasury","tx","tx_in","tx_metadata","tx_out","withdrawal","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","block_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","deposits","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch_no","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","reserves","rewards","slot_no","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","treasury","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utxo","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","ada_pots","block_id","deposits","epoch_no","fees","id","reserves","rewards","slot_no","treasury","utxo","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","block_no","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch_no","epoch_slot_no","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","id","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","op_cert","op_cert_counter","previous_id","proto_major","proto_minor","size","slot_leader_id","slot_no","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_count","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vrf_key","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","block","block_no","epoch_no","epoch_slot_no","hash","id","op_cert","op_cert_counter","previous_id","proto_major","proto_minor","size","slot_leader_id","slot_no","time","tx_count","vrf_key","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","star","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx_in_id","tx_out_id","tx_out_index","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","collateral_tx_in","id","tx_in_id","tx_out_id","tx_out_index","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","add","address","address_has_script","address_raw","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_hash","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","index","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inline_datum_id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","mul","mul","multi_assets_descr","payment_cred","reference_script_id","stake_address_id","star","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","address","address_has_script","address_raw","collateral_tx_out","data_hash","id","index","inline_datum_id","multi_assets_descr","payment_cred","reference_script_id","stake_address_id","tx_id","value","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","as_expression","as_expression","as_expression","as_expression","block_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","costs","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","mul","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","block_id","cost_model","costs","hash","id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","bytes","datum","hash","id","tx_id","value","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","active_epoch_no","add","add","add","add","add","add","add","add","addr_id","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_index","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","mul","mul","mul","pool_hash_id","redeemer_id","slot_no","star","sub","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","active_epoch_no","addr_id","cert_index","delegation","id","pool_hash_id","redeemer_id","slot_no","tx_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","add","as_expression","as_expression","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","execute","execute","execute","fmt","fmt","fmt","from","from","from","hash_raw","id","init","init","init","into","into","into","into_request","into_request","into_request","mul","star","sub","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","delisted_pool","hash_raw","id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","blk_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","end_time","execute","execute","execute","execute","execute","execute","execute","execute","execute","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","mul","no","out_sum","star","start_time","sub","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_count","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","blk_count","end_time","epoch","fees","id","no","out_sum","start_time","tx_count","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","block_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coins_per_utxo_size","collateral_percent","cost_model_id","decentralisation","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch_no","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","extra_entropy","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","influence","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key_deposit","max_bh_size","max_block_ex_mem","max_block_ex_steps","max_block_size","max_collateral_inputs","max_epoch","max_tx_ex_mem","max_tx_ex_steps","max_tx_size","max_val_size","min_fee_a","min_fee_b","min_pool_cost","min_utxo_value","monetary_expand_rate","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","nonce","optimal_pool_count","pool_deposit","price_mem","price_step","protocol_major","protocol_minor","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","treasury_growth_rate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","block_id","coins_per_utxo_size","collateral_percent","cost_model_id","decentralisation","epoch_no","epoch_param","extra_entropy","id","influence","key_deposit","max_bh_size","max_block_ex_mem","max_block_ex_steps","max_block_size","max_collateral_inputs","max_epoch","max_tx_ex_mem","max_tx_ex_steps","max_tx_size","max_val_size","min_fee_a","min_fee_b","min_pool_cost","min_utxo_value","monetary_expand_rate","nonce","optimal_pool_count","pool_deposit","price_mem","price_step","protocol_major","protocol_minor","treasury_growth_rate","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","addr_id","amount","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","drop","drop","drop","drop","drop","drop","epoch_no","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","pool_id","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","addr_id","amount","epoch_no","epoch_stake","id","pool_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","no","seconds","star","state","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","epoch_sync_time","id","no","seconds","state","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","execute","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","hash","id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","mul","mul","star","sub","sub","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","extra_key_witness","hash","id","tx_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","ident","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","quantity","star","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","id","ident","ma_tx_mint","quantity","tx_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","ident","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","quantity","star","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx_out_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","id","ident","ma_tx_out","quantity","tx_out_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","network_name","star","start_time","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","id","meta","network_name","start_time","version","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fingerprint","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","name","policy","star","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","fingerprint","id","multi_asset","name","policy","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coins_per_utxo_size","collateral_percent","cost_model_id","decentralisation","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","entropy","epoch_no","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","id","influence","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","key","key_deposit","max_bh_size","max_block_ex_mem","max_block_ex_steps","max_block_size","max_collateral_inputs","max_epoch","max_tx_ex_mem","max_tx_ex_steps","max_tx_size","max_val_size","min_fee_a","min_fee_b","min_pool_cost","min_utxo_value","monetary_expand_rate","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","optimal_pool_count","pool_deposit","price_mem","price_step","protocol_major","protocol_minor","registered_tx_id","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","treasury_growth_rate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","coins_per_utxo_size","collateral_percent","cost_model_id","decentralisation","entropy","epoch_no","id","influence","key","key_deposit","max_bh_size","max_block_ex_mem","max_block_ex_steps","max_block_size","max_collateral_inputs","max_epoch","max_tx_ex_mem","max_tx_ex_steps","max_tx_size","max_val_size","min_fee_a","min_fee_b","min_pool_cost","min_utxo_value","monetary_expand_rate","optimal_pool_count","param_proposal","pool_deposit","price_mem","price_step","protocol_major","protocol_minor","registered_tx_id","treasury_growth_rate","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","drop","execute","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","hash_raw","id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","mul","star","sub","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","view","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","hash_raw","id","pool_hash","view","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","pool_id","registered_tx_id","star","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","hash","id","pool_id","pool_metadata_ref","registered_tx_id","url","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","id","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","json","mul","mul","mul","pmr_id","pool_id","star","sub","sub","sub","ticker_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","bytes","hash","id","json","pmr_id","pool_id","pool_offline_data","ticker_name","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","fetch_error","fetch_time","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","pmr_id","pool_id","retry_count","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","fetch_error","fetch_time","id","pmr_id","pool_id","pool_offline_fetch_error","retry_count","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","addr_id","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","execute","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","mul","mul","mul","pool_update_id","star","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","addr_id","id","pool_owner","pool_update_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","dns_name","dns_srv_name","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","ipv4","ipv6","mul","mul","mul","port","star","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","dns_name","dns_srv_name","id","ipv4","ipv6","pool_relay","port","update_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","announced_tx_id","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_index","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash_id","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","retiring_epoch","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","announced_tx_id","cert_index","hash_id","id","pool_retire","retiring_epoch","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","active_epoch_no","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_index","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fixed_cost","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","hash_id","id","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","margin","meta_id","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","pledge","registered_tx_id","reward_addr_id","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vrf_key_hash","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","active_epoch_no","cert_index","fixed_cost","hash_id","id","margin","meta_id","pledge","pool_update","registered_tx_id","reward_addr_id","vrf_key_hash","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_index","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","reserves","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","treasury","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","cert_index","id","pot_transfer","reserves","treasury","tx_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","id","index","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","mul","mul","purpose","redeemer_data_id","script_hash","star","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_mem","unit_steps","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","fee","id","index","purpose","redeemer","redeemer_data_id","script_hash","tx_id","unit_mem","unit_steps","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","bytes","hash","id","redeemer_data","tx_id","value","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","star","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","tx_in_id","tx_out_id","tx_out_index","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","id","reference_tx_in","tx_in_id","tx_out_id","tx_out_index","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","addr_id","amount","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_index","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","addr_id","amount","cert_index","id","reserve","tx_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","div","drop","drop","drop","drop","execute","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","id","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","mul","name","pool_hash","star","sub","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","id","name","pool_hash","reserved_pool_ticker","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","addr_id","amount","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","earned_epoch","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","mul","pool_id","spendable_epoch","star","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","addr_id","amount","earned_epoch","id","pool_id","reward","spendable_epoch","type_","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","stage_one","stage_three","stage_two","star","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","id","schema_version","stage_one","stage_three","stage_two","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","id","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","json","mul","mul","mul","serialised_size","star","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","bytes","hash","id","json","script","serialised_size","tx_id","type_","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","div","div","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","id","init","init","init","init","init","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","mul","pool_hash_id","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","description","hash","id","pool_hash_id","slot_leader","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash_raw","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","script_hash","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","view","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","hash_raw","id","script_hash","stake_address","tx_id","view","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","addr_id","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_index","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","epoch_no","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","mul","redeemer_id","star","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","addr_id","cert_index","epoch_no","id","redeemer_id","stake_deregistration","tx_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","addr_id","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_index","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","drop","drop","drop","drop","drop","drop","epoch_no","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","addr_id","cert_index","epoch_no","id","stake_registration","tx_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","addr_id","amount","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert_index","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","addr_id","amount","cert_index","id","treasury","tx_id","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","block_id","block_index","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","default","default","default","default","deposit","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fee","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","id","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","invalid_before","invalid_hereafter","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","out_sum","script_size","size","star","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_contract","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","block_id","block_index","deposit","fee","hash","id","invalid_before","invalid_hereafter","out_sum","script_size","size","tx","valid_contract","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","redeemer_id","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_in_id","tx_out_id","tx_out_index","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","id","redeemer_id","tx_in","tx_in_id","tx_out_id","tx_out_index","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","json","key","mul","mul","mul","star","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","bytes","id","json","key","tx_id","tx_metadata","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","add","add","address","address_has_script","address_raw","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_hash","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","div","div","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","id","index","init","init","init","init","init","init","init","init","init","init","init","init","init","inline_datum_id","into","into","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","mul","mul","payment_cred","reference_script_id","stake_address_id","star","sub","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","address","address_has_script","address_raw","data_hash","id","index","inline_datum_id","payment_cred","reference_script_id","stake_address_id","tx_id","tx_out","value","BoxedQuery","SqlType","__clone_box","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","deref","deref_mut","distinct","drop","dsl","except","except_all","execute","fmt","from","from_clause","init","internal_into_boxed","intersect","intersect_all","into","into_request","into_update_target","join_target","limit","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","FROM_CLAUSE","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","add","add","add","add","add","addr_id","amount","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","div","div","drop","drop","drop","drop","drop","drop","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","redeemer_id","star","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","addr_id","amount","id","redeemer_id","tx_id","withdrawal","Cert","Following","Lagging","Leader","Member","Mint","Multisig","PlutusV1","PlutusV2","Refund","Reserves","Reward","Rewardtype","RewardtypeMapping","Scriptpurposetype","ScriptpurposetypeMapping","Scripttype","ScripttypeMapping","Spend","Syncstatetype","SyncstatetypeMapping","Timelock","Treasury","__clone_box","__clone_box","__clone_box","__clone_box","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","db_enum_impl_Rewardtype","db_enum_impl_Scriptpurposetype","db_enum_impl_Scripttype","db_enum_impl_Syncstatetype","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","to_owned","to_owned","to_owned","to_owned","to_sql","to_sql","to_sql","to_sql","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","RewardtypeMapping","__clone_box","borrow","borrow_mut","clone","clone_into","db_str_representation","deref","deref_mut","drop","from","from_db_binary_representation","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","ScriptpurposetypeMapping","__clone_box","borrow","borrow_mut","clone","clone_into","db_str_representation","deref","deref_mut","drop","from","from_db_binary_representation","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","ScripttypeMapping","__clone_box","borrow","borrow_mut","clone","clone_into","db_str_representation","deref","deref_mut","drop","from","from_db_binary_representation","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","SyncstatetypeMapping","__clone_box","borrow","borrow_mut","clone","clone_into","db_str_representation","deref","deref_mut","drop","from","from_db_binary_representation","init","into","into_request","to_owned","try_from","try_into","type_id","vzip","RegexExpressionMethods","regex_matches","CborDeserializationFailed","CddlParsingFailed","EmptyDelegations","IncorrectVotingPurpose","InvalidAddressPrefix","InvalidRegistration","MismatchedSignature","ObsoleteRegistration","RawBinCborRegistrationFailure","RawBinCborSignatureFailure","RegistrationCorruptedBin","RegistrationError","RegistrationFormat","SignatureError","SignatureFormat","StakeKeyWrongNetwork","StakeKeyWrongType","StakePublicKeyError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","errors","fmt","fmt","fmt","fmt","from","from","from","header","in_current_span","init","init","init","into","into","into","into_request","into_request","into_request","provide","registration","registration_bad_bin","serialize","serialize","serialize","slot","spec_61284","spec_61285","to_string","try_from","try_from","try_from","try_into","try_into","try_into","tx_id","type_id","type_id","type_id","vzip","vzip","vzip","actual","actual","err","err","err","err","err","err","err","expected","expected","hash_bytes","Args","Conn","DataProvider","Db","DbConfig","DryRunCommand","Sig","Signature","SlotNo","SnapshotEntry","VotingKey","VotingPowerArgs","VotingPurpose","show_error_warning","voting_power","ABS_MAX_SLOT","ABS_MIN_SLOT","CALLSITE","CALLSITE","CALLSITE","CALLSITE","META","META","META","META","VotingPowerArgs","args","convert_to_snapshot_entry","voting_power","VotingPowerArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","expected_voting_purpose","fmt","from","init","into","into_request","max_slot","min_slot","network_id","to_owned","try_from","try_into","type_id","vzip","MockDbProvider","SnapshotOutputAssert","VerifiableSnapshotOutput","assert","db_sync_instance","output","test_api","vectors","MockDbProvider","SnapshotOutputAssert","VerifiableSnapshotOutput","fake","output_assertions","MockDbProvider","borrow","borrow_mut","db_sync_instance","deref","deref_mut","drop","fmt","from","from","init","into","into_request","stake_values","try_from","try_into","type_id","vote_registrations","vzip","SnapshotOutputAssert","VerifiableSnapshotOutput","assert","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","into_request","new","output","reward_address","stake_key","try_from","try_into","type_id","voting_key","voting_power","vzip","cip15","generate_signed_registration","METADATA_HASH_HEX","METADATA_HASH_HEX_FROM_PLAYGROUND","NONCE","REWARD_ADDRESS","SIGNATURE","STAKE_KEY","STAKE_PRIVATE_KEY","VOTING_KEY","vector","vector_json","ValidationCtx","__clone_box","borrow","borrow_mut","cbor","clone","clone_into","default","deref","deref_mut","drop","expected_voting_purpose","from","hash","init","into","into_request","network_id","to_owned","try_from","try_into","type_id","validate_key_type","validate_network_id","validate_signature","validate_stake_key","validate_voting_power","validate_voting_purpose","vzip","cbor_to_bytes","BLAKE_2B_256_HASH_SIZE","Blake2b256","hash","cip15","generate_signed_registration","METADATA_HASH_HEX","METADATA_HASH_HEX_FROM_PLAYGROUND","NONCE","REWARD_ADDRESS","SIGNATURE","STAKE_KEY","STAKE_PRIVATE_KEY","VOTING_KEY","vector","vector_json","verify","CALLSITE","CddlConfig","Invalids","META","REG_BIN","REG_JSON","REG_SLOT_NO","REG_TX_ID","SIG_BIN","SIG_JSON","StakeKeyHash","Unregistered","Valids","borrow","borrow_mut","default","deref","deref_mut","drop","filter_registrations","from","init","into","into_request","is_valid_rewards_address","latest_registrations","new","prefix_hex","spec_61284","spec_61285","stake_key_hash","try_from","try_into","type_id","validate_reg_cddl","validate_sig_cddl","vzip"],"q":[[0,"voting_tools_rs"],[87,"voting_tools_rs::DryRunCommand"],[88,"voting_tools_rs::RegistrationError"],[100,"voting_tools_rs::cli"],[164,"voting_tools_rs::cli::DryRunCommand"],[165,"voting_tools_rs::data"],[986,"voting_tools_rs::data::arbitrary"],[988,"voting_tools_rs::data::crypto2"],[992,"voting_tools_rs::data::crypto2::pub_key"],[1036,"voting_tools_rs::data::crypto2::sig"],[1075,"voting_tools_rs::data::hex_bytes"],[1132,"voting_tools_rs::data::network_id"],[1183,"voting_tools_rs::data_provider"],[1186,"voting_tools_rs::db"],[1221,"voting_tools_rs::db::inner"],[1245,"voting_tools_rs::db::queries"],[1248,"voting_tools_rs::db::queries::stake_value"],[1257,"voting_tools_rs::db::queries::staked_utxo_ada"],[1270,"voting_tools_rs::db::queries::vote_registrations"],[1328,"voting_tools_rs::db::schema"],[1373,"voting_tools_rs::db::schema::ada_pots"],[1421,"voting_tools_rs::db::schema::ada_pots::columns"],[1813,"voting_tools_rs::db::schema::ada_pots::dsl"],[1834,"voting_tools_rs::db::schema::block"],[1882,"voting_tools_rs::db::schema::block::columns"],[2578,"voting_tools_rs::db::schema::block::dsl"],[2611,"voting_tools_rs::db::schema::collateral_tx_in"],[2659,"voting_tools_rs::db::schema::collateral_tx_in::columns"],[2805,"voting_tools_rs::db::schema::collateral_tx_in::dsl"],[2814,"voting_tools_rs::db::schema::collateral_tx_out"],[2862,"voting_tools_rs::db::schema::collateral_tx_out::columns"],[3380,"voting_tools_rs::db::schema::collateral_tx_out::dsl"],[3407,"voting_tools_rs::db::schema::cost_model"],[3455,"voting_tools_rs::db::schema::cost_model::columns"],[3593,"voting_tools_rs::db::schema::cost_model::dsl"],[3602,"voting_tools_rs::db::schema::datum"],[3650,"voting_tools_rs::db::schema::datum::columns"],[3820,"voting_tools_rs::db::schema::datum::dsl"],[3831,"voting_tools_rs::db::schema::delegation"],[3879,"voting_tools_rs::db::schema::delegation::columns"],[4181,"voting_tools_rs::db::schema::delegation::dsl"],[4198,"voting_tools_rs::db::schema::delisted_pool"],[4246,"voting_tools_rs::db::schema::delisted_pool::columns"],[4322,"voting_tools_rs::db::schema::delisted_pool::dsl"],[4327,"voting_tools_rs::db::schema::epoch"],[4375,"voting_tools_rs::db::schema::epoch::columns"],[4673,"voting_tools_rs::db::schema::epoch::dsl"],[4690,"voting_tools_rs::db::schema::epoch_param"],[4738,"voting_tools_rs::db::schema::epoch_param::columns"],[6732,"voting_tools_rs::db::schema::epoch_param::dsl"],[6799,"voting_tools_rs::db::schema::epoch_stake"],[6847,"voting_tools_rs::db::schema::epoch_stake::columns"],[7029,"voting_tools_rs::db::schema::epoch_stake::dsl"],[7040,"voting_tools_rs::db::schema::epoch_sync_time"],[7088,"voting_tools_rs::db::schema::epoch_sync_time::columns"],[7230,"voting_tools_rs::db::schema::epoch_sync_time::dsl"],[7239,"voting_tools_rs::db::schema::extra_key_witness"],[7287,"voting_tools_rs::db::schema::extra_key_witness::columns"],[7395,"voting_tools_rs::db::schema::extra_key_witness::dsl"],[7402,"voting_tools_rs::db::schema::ma_tx_mint"],[7450,"voting_tools_rs::db::schema::ma_tx_mint::columns"],[7596,"voting_tools_rs::db::schema::ma_tx_mint::dsl"],[7605,"voting_tools_rs::db::schema::ma_tx_out"],[7653,"voting_tools_rs::db::schema::ma_tx_out::columns"],[7799,"voting_tools_rs::db::schema::ma_tx_out::dsl"],[7808,"voting_tools_rs::db::schema::meta"],[7856,"voting_tools_rs::db::schema::meta::columns"],[7992,"voting_tools_rs::db::schema::meta::dsl"],[8001,"voting_tools_rs::db::schema::multi_asset"],[8049,"voting_tools_rs::db::schema::multi_asset::columns"],[8183,"voting_tools_rs::db::schema::multi_asset::dsl"],[8192,"voting_tools_rs::db::schema::param_proposal"],[8240,"voting_tools_rs::db::schema::param_proposal::columns"],[10234,"voting_tools_rs::db::schema::param_proposal::dsl"],[10301,"voting_tools_rs::db::schema::pool_hash"],[10349,"voting_tools_rs::db::schema::pool_hash::columns"],[10453,"voting_tools_rs::db::schema::pool_hash::dsl"],[10460,"voting_tools_rs::db::schema::pool_metadata_ref"],[10508,"voting_tools_rs::db::schema::pool_metadata_ref::columns"],[10682,"voting_tools_rs::db::schema::pool_metadata_ref::dsl"],[10693,"voting_tools_rs::db::schema::pool_offline_data"],[10741,"voting_tools_rs::db::schema::pool_offline_data::columns"],[10985,"voting_tools_rs::db::schema::pool_offline_data::dsl"],[11000,"voting_tools_rs::db::schema::pool_offline_fetch_error"],[11048,"voting_tools_rs::db::schema::pool_offline_fetch_error::columns"],[11262,"voting_tools_rs::db::schema::pool_offline_fetch_error::dsl"],[11275,"voting_tools_rs::db::schema::pool_owner"],[11323,"voting_tools_rs::db::schema::pool_owner::columns"],[11435,"voting_tools_rs::db::schema::pool_owner::dsl"],[11442,"voting_tools_rs::db::schema::pool_relay"],[11490,"voting_tools_rs::db::schema::pool_relay::columns"],[11734,"voting_tools_rs::db::schema::pool_relay::dsl"],[11749,"voting_tools_rs::db::schema::pool_retire"],[11797,"voting_tools_rs::db::schema::pool_retire::columns"],[11979,"voting_tools_rs::db::schema::pool_retire::dsl"],[11990,"voting_tools_rs::db::schema::pool_update"],[12038,"voting_tools_rs::db::schema::pool_update::columns"],[12474,"voting_tools_rs::db::schema::pool_update::dsl"],[12497,"voting_tools_rs::db::schema::pot_transfer"],[12545,"voting_tools_rs::db::schema::pot_transfer::columns"],[12727,"voting_tools_rs::db::schema::pot_transfer::dsl"],[12738,"voting_tools_rs::db::schema::redeemer"],[12786,"voting_tools_rs::db::schema::redeemer::columns"],[13124,"voting_tools_rs::db::schema::redeemer::dsl"],[13143,"voting_tools_rs::db::schema::redeemer_data"],[13191,"voting_tools_rs::db::schema::redeemer_data::columns"],[13361,"voting_tools_rs::db::schema::redeemer_data::dsl"],[13372,"voting_tools_rs::db::schema::reference_tx_in"],[13420,"voting_tools_rs::db::schema::reference_tx_in::columns"],[13566,"voting_tools_rs::db::schema::reference_tx_in::dsl"],[13575,"voting_tools_rs::db::schema::reserve"],[13623,"voting_tools_rs::db::schema::reserve::columns"],[13805,"voting_tools_rs::db::schema::reserve::dsl"],[13816,"voting_tools_rs::db::schema::reserved_pool_ticker"],[13864,"voting_tools_rs::db::schema::reserved_pool_ticker::columns"],[13968,"voting_tools_rs::db::schema::reserved_pool_ticker::dsl"],[13975,"voting_tools_rs::db::schema::reward"],[14023,"voting_tools_rs::db::schema::reward::columns"],[14279,"voting_tools_rs::db::schema::reward::dsl"],[14294,"voting_tools_rs::db::schema::schema_version"],[14342,"voting_tools_rs::db::schema::schema_version::columns"],[14488,"voting_tools_rs::db::schema::schema_version::dsl"],[14497,"voting_tools_rs::db::schema::script"],[14545,"voting_tools_rs::db::schema::script::columns"],[14789,"voting_tools_rs::db::schema::script::dsl"],[14804,"voting_tools_rs::db::schema::slot_leader"],[14852,"voting_tools_rs::db::schema::slot_leader::columns"],[14990,"voting_tools_rs::db::schema::slot_leader::dsl"],[14999,"voting_tools_rs::db::schema::stake_address"],[15047,"voting_tools_rs::db::schema::stake_address::columns"],[15217,"voting_tools_rs::db::schema::stake_address::dsl"],[15228,"voting_tools_rs::db::schema::stake_deregistration"],[15276,"voting_tools_rs::db::schema::stake_deregistration::columns"],[15496,"voting_tools_rs::db::schema::stake_deregistration::dsl"],[15509,"voting_tools_rs::db::schema::stake_registration"],[15557,"voting_tools_rs::db::schema::stake_registration::columns"],[15739,"voting_tools_rs::db::schema::stake_registration::dsl"],[15750,"voting_tools_rs::db::schema::treasury"],[15798,"voting_tools_rs::db::schema::treasury::columns"],[15980,"voting_tools_rs::db::schema::treasury::dsl"],[15991,"voting_tools_rs::db::schema::tx"],[16039,"voting_tools_rs::db::schema::tx::columns"],[16521,"voting_tools_rs::db::schema::tx::dsl"],[16546,"voting_tools_rs::db::schema::tx_in"],[16594,"voting_tools_rs::db::schema::tx_in::columns"],[16776,"voting_tools_rs::db::schema::tx_in::dsl"],[16787,"voting_tools_rs::db::schema::tx_metadata"],[16835,"voting_tools_rs::db::schema::tx_metadata::columns"],[17009,"voting_tools_rs::db::schema::tx_metadata::dsl"],[17020,"voting_tools_rs::db::schema::tx_out"],[17068,"voting_tools_rs::db::schema::tx_out::columns"],[17538,"voting_tools_rs::db::schema::tx_out::dsl"],[17563,"voting_tools_rs::db::schema::withdrawal"],[17611,"voting_tools_rs::db::schema::withdrawal::columns"],[17793,"voting_tools_rs::db::schema::withdrawal::dsl"],[17804,"voting_tools_rs::db::types"],[17931,"voting_tools_rs::db::types::db_enum_impl_Rewardtype"],[17951,"voting_tools_rs::db::types::db_enum_impl_Scriptpurposetype"],[17971,"voting_tools_rs::db::types::db_enum_impl_Scripttype"],[17991,"voting_tools_rs::db::types::db_enum_impl_Syncstatetype"],[18011,"voting_tools_rs::db::utils"],[18013,"voting_tools_rs::error"],[18090,"voting_tools_rs::error::RegistrationError"],[18102,"voting_tools_rs::exports"],[18117,"voting_tools_rs::logic"],[18131,"voting_tools_rs::logic::args"],[18157,"voting_tools_rs::test_api"],[18163,"voting_tools_rs::testing"],[18165,"voting_tools_rs::testing::test_api"],[18170,"voting_tools_rs::testing::test_api::fake"],[18189,"voting_tools_rs::testing::test_api::output_assertions"],[18211,"voting_tools_rs::testing::vectors"],[18213,"voting_tools_rs::testing::vectors::cip15"],[18223,"voting_tools_rs::validation"],[18252,"voting_tools_rs::validation::cbor"],[18253,"voting_tools_rs::validation::hash"],[18256,"voting_tools_rs::vectors"],[18258,"voting_tools_rs::vectors::cip15"],[18268,"voting_tools_rs::verification"],[18269,"voting_tools_rs::verification::verify"]],"d":["CLI arguments for snapshot tool","","","Type alias for the connection type provided to diesel code","Abstraction trait over data provider for voting tools. …","A handle to the db-sync database instance","Information required to connect to a database","Delegated voting","Direct voting","Sub command for internal testing or dry runs","Sub command for internal testing or dry runs","","","","A registration that failed validation, along with the error","","","","","Registrations with a corrupted raw cbor binary require …","An error encountered during parsing and validation of a …","The registration couldn’t be parsed from json -&gt; struct","An ED25519 signature","A signature for a registration as defined in CIP-15","","The signature couldn’t be parsed from json -&gt; struct","A slot number","Single element in a snapshot","","","","The source of voting power for a given registration","Arguments to the <code>voting_power</code> function","A <code>u64</code> used to identify the purpose of a particular …","","The time limit in seconds applied to each socket-level …","","","","Name of the cardano-db-sync database","Host for the cardano-db-sync database connection","Password for the cardano-db-sync database connection","User to connect to the  cardano-db-sync database with","This parameter should be used only for voting tool dry …","","","The voting purpose to use in queries","The voting purpose we expect registrations to have","","The hostname to connect to","The actual signature","The number of seconds of inactivity after which a …","The time interval between TCP keepalive probes","The maximum number of TCP keepalive probes that will be …","","Upper bound for slot number to be included in queries","The upper bound for slots to include","Lower bound for slot number to be included in queries","The lower bound for slots to include","The name of the database","The network to validate signatures against","The network to validate addresses against","Registration Nonce","File to output the signed transaction to","The corresponding password for this user","","","Mainnet rewards address","If there are errors, we want to notify the user, but it’…","","","","Stake public key","Retrieves stakes values for given array of addresses","Test api for internal tests as well for building mocks and …","","Registration transaction id","","The user to connect with","","Test vectors for various CIPs","","Get all vote registrations and signatures between two slot …","Registration content","Calculate voting power info by querying a db-sync instance","Voting power expressed in ada","Voting purpose","Mock json file containing content of db sync db. This …","The actual voting purpose","","","","","","","","","The expected voting purpose","","","CLI arguments for snapshot tool","","","Sub command for internal testing or dry runs","Sub command for internal testing or dry runs","","","","","","","","","","","","","Name of the cardano-db-sync database","Host for the cardano-db-sync database connection","Password for the cardano-db-sync database connection","User to connect to the  cardano-db-sync database with","","","","","","","This parameter should be used only for voting tool dry …","","","The voting purpose to use in queries","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Upper bound for slot number to be included in queries","Lower bound for slot number to be included in queries","The network to validate signatures against","File to output the signed transaction to","If there are errors, we want to notify the user, but it’…","","","","","","","","","","","","","Mock json file containing content of db sync db. This …","","","","","","","The voting purpose for catalyst registrations","","Database host","Database name","Database password","Database user","Delegated voting","Direct voting","","","","","","","","","A Raw Registration from the DB.","A catalyst registration on Cardano in either CIP-15 or …","A rewards address in a catalyst registation","","","A signature for a registration as defined in CIP-15","A Catalyst registration in either CIP-15 or CIP-36 format, …","A slot number","Single element in a snapshot","","","","","","","The source of voting power for a given registration","","A <code>u64</code> used to identify the purpose of a particular …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cip 15/36: 61284 raw binary","cip 15/36: 61285 raw binaryreate a direct voting power source from a hex string …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Decode a <code>RewardsAddress</code> from a hex string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The actual signature","","","","","","","","","","","","","","","","","","","","","","To produce the witness field in the case of a staking …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Attempt to convert this to an <code>i64</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cip 15/36: 61284 json from DB.","cip 15/36: 61285 json from DB.","","","","","","","","","","","","","","","","","","","","","","","","Registration Nonce","","","","","","","","","","","","The registration","","","","","","","","","","Mainnet rewards address","","","","","","","","","","","","","","","","","","The signature","The slot the registration was found in.","The slot the registration was found in.","","Stake public key","Stake Key Hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The id of the transaction that created this registration","registration tx_id","Registration transaction id","","","","","","","","","","","","","","","","","","","","","The signature is generated by:","","Registration content","Voting power expressed in ada","","Voting purpose","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An ED25519 public key","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Create a public key from a string slice containing hex …","","","","Calls <code>U::from(self)</code>.","","The network tag (0 = testnet, 1 = mainnet)","","","Convert this to the hex representation (without leading “…","","","","Get the type (i.e. the top 4 bits of the leading byte)","","","","","","An ED25519 signature","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Create a public key from a string slice containing hex …","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A simple wrapper around some bytes that are serialized and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","An identifier for a cardano network","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Abstraction trait over data provider for voting tools. …","Retrieves stakes values for given array of addresses","Get all vote registrations and signatures between two slot …","","","Information required to connect to a database","","","","","","The time limit in seconds applied to each socket-level …","","","","","","Returns the argument unchanged.","The hostname to connect to","","Inner module to hide database internals from database code","Calls <code>U::from(self)</code>.","","The number of seconds of inactivity after which a …","The time interval between TCP keepalive probes","The maximum number of TCP keepalive probes that will be …","The name of the database","The corresponding password for this user","","","","","","","Extra types defined in postgres","The user to connect with","General purpose utilities for working with the db-sync …","","Type alias for the connection type provided to diesel code","A handle to the db-sync database instance","Types which can be easily used as an ergonomic “query …","","","Connect to the database with the provided credentials","","","","Execute a query against the database","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","Query the stake values","","","","","This query is detailed in …","","","","","","","","","","","","","","","","","","","","","","","","","","DB columns","Get ALL UTXO for all possible Stake Addresses. Given a …","","","","","","","","","","","","","","","","","","","","","","","Attempt to parse a row into a <code>SignedRegistration</code> struct","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","This query doesn’t exactly match the query in the doc. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …elper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table structeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Extension trait for working with <code>~</code> in a more idiomatic …","","","","","","","A registration that failed validation, along with the error","","","","","Registrations with a corrupted raw cbor binary require …","An error encountered during parsing and validation of a …","The registration couldn’t be parsed from json -&gt; struct","","The signature couldn’t be parsed from json -&gt; struct","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","The actual voting purpose","","","","","","","","","The expected voting purpose","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculate voting power info by querying a db-sync instance","Arguments to the <code>voting_power</code> function","","","","","","","","","","","","The voting purpose we expect registrations to have","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","The upper bound for slots to include","The lower bound for slots to include","The network to validate addresses against","","","","","","Mock db provider based on <code>InMemoryDbSync</code> struct from …","Fluent api for <code>SnapshotEntry</code> assertions","Allows <code>SnapshotEntry</code> struct to be assertable","returns assertion struct","","","Test api for internal tests as well for building mocks and …","Test vectors for various CIPs","","","","","","Mock db provider based on <code>InMemoryDbSync</code> struct from …","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Fluent api for <code>SnapshotEntry</code> assertions","Allows <code>SnapshotEntry</code> struct to be assertable","returns assertion struct","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Creates new instance based on <code>SnapshotEntry</code> reference","","Asserts reward address field from <code>SnapshotEntry</code>","Asserts stake public key field from <code>SnapshotEntry</code>","","","","Asserts delegations address field from <code>SnapshotEntry</code>","Asserts expected voting power field from <code>SnapshotEntry</code>","","CIP-15 test vectors","Generate a random signed registration","The result of:","Computed by putting the metadata into the cbor playground","CIP-15 test vector nonce","CIP-15 test vector reward address","CIP-15 test vector signature","CIP-15 test vector stake key","The private key corresponding to <code>STAKE_KEY</code>","CIP-15 test vector voting key","The full CIP-15 test vector","The json we expect to get from db-sync corresponding to …","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","The signature is generated by:","A stake key must be a type 14 or 15 shelley address, and …","Delegated voting power must have at least one delegation","The voting purpose must simply match the voting purpose …","","","","","Helper function to generate the <code>blake2b_256</code> hash of a byte …","CIP-15 test vectors","Generate a random signed registration","The result of:","Computed by putting the metadata into the cbor playground","CIP-15 test vector nonce","CIP-15 test vector reward address","CIP-15 test vector signature","CIP-15 test vector stake key","The private key corresponding to <code>STAKE_KEY</code>","CIP-15 test vector voting key","The full CIP-15 test vector","The json we expect to get from db-sync corresponding to …","","","Cddl schema: …","Registrations which failed cddl and or sig checks","","","","","DB columns","","","<code>Network_id</code> + Blake2b-224( Stake Public Key )","Unregistered voters stake","Contains the most recent registration for each public …","","","","","","","Query gathers all possible registration transactions Each …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Reward addresses start with a single header byte …","Each stake key can have multiple registrations, the latest …","","encoding of hex strings with a 0x prefix","","","The registration has a 32 byte “Stake Public Key”.  …","","","","Validate raw registration binary against 61284 CDDL spec","Validate raw signature binary against 61285 CDDL spec",""],"i":[0,75,75,0,0,0,0,44,44,12,0,75,75,75,0,75,75,75,75,0,0,75,0,0,75,75,0,0,75,75,75,0,0,0,0,83,0,0,0,15,15,15,15,15,0,532,15,9,0,83,46,83,83,83,0,15,9,15,9,83,15,9,39,15,83,532,532,39,0,533,532,532,39,543,0,0,39,533,83,0,0,0,543,39,0,39,39,544,545,546,547,548,549,550,551,552,553,545,546,554,0,0,0,12,0,0,0,15,15,12,12,15,12,15,12,15,15,15,15,15,15,15,12,15,12,15,12,15,12,0,15,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,12,15,15,15,15,0,15,12,15,12,15,12,15,12,15,12,15,12,544,0,0,0,0,0,0,29,0,0,0,0,0,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,46,6,47,31,32,33,34,35,36,37,48,49,28,5,29,30,38,0,0,0,0,0,0,0,0,0,0,0,0,28,5,29,30,28,5,29,30,0,6,31,32,28,5,29,30,38,31,32,33,34,35,36,37,38,39,31,31,32,32,38,38,47,47,44,45,46,6,47,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,44,45,46,6,47,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,0,31,31,32,32,38,38,44,45,46,6,47,31,32,33,34,35,36,37,48,49,28,5,29,30,38,44,45,46,6,47,31,32,33,34,35,36,37,48,49,28,5,29,30,38,31,32,28,5,29,30,31,32,33,34,35,36,37,28,5,29,30,38,0,28,5,29,30,44,45,46,6,47,39,31,31,32,32,33,33,34,34,35,35,36,36,37,37,48,49,28,28,5,5,29,29,30,30,38,38,44,45,46,6,47,39,31,31,32,32,33,33,34,34,35,35,36,36,37,37,48,49,28,28,5,5,29,29,30,30,38,38,44,45,46,6,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,44,28,5,29,30,28,5,29,30,44,45,46,6,47,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,31,32,38,31,32,38,44,45,46,6,39,31,32,33,34,35,36,37,28,5,29,30,38,31,32,28,5,29,30,38,48,44,45,46,6,47,39,31,31,32,32,33,33,34,34,35,35,36,36,37,37,48,49,28,28,28,28,28,28,28,28,5,5,5,5,5,5,5,5,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,38,44,45,46,6,47,39,31,31,32,32,33,33,33,34,34,34,35,35,35,36,36,36,37,37,37,48,49,28,28,5,5,29,29,30,30,38,38,38,33,33,33,34,34,34,35,35,35,36,36,36,37,37,37,48,48,48,28,28,28,5,5,5,29,29,29,30,30,30,31,32,31,32,31,32,33,34,35,36,37,28,5,29,30,0,0,44,45,46,6,47,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,31,32,33,34,35,36,37,28,5,29,30,38,46,31,32,33,34,35,36,37,28,5,29,30,38,0,0,0,0,0,0,0,0,0,0,44,45,46,6,47,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,5,31,32,33,34,35,36,37,28,5,29,30,38,44,45,46,6,47,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,29,6,47,47,28,5,29,30,28,5,29,30,0,31,32,33,34,35,36,37,48,28,5,29,30,38,45,39,0,0,0,31,32,28,5,29,30,47,47,6,28,5,29,30,28,5,29,30,45,39,44,45,46,6,39,31,32,33,34,35,36,37,28,5,29,30,38,6,6,47,45,39,6,28,5,29,30,28,5,29,30,44,45,32,28,29,38,44,45,46,6,47,31,32,33,34,35,36,37,48,49,28,5,29,30,38,47,31,32,33,34,35,36,37,28,5,29,30,44,45,46,6,47,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,44,45,46,6,47,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,6,47,39,44,45,46,6,47,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,6,45,39,39,45,39,44,45,46,6,47,39,31,32,33,34,35,36,37,48,49,28,5,29,30,38,31,31,32,32,38,38,49,0,0,0,0,0,0,0,0,57,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,76,0,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,0,0,77,0,0,77,77,77,77,77,78,77,78,77,77,77,77,77,78,77,78,77,77,78,77,77,77,77,77,78,78,77,77,78,77,77,78,77,78,77,78,77,77,77,77,78,77,78,77,78,77,78,78,77,77,77,68,0,0,68,68,68,81,68,81,68,68,68,81,68,81,68,81,68,68,68,68,81,81,68,81,68,68,68,68,81,81,68,81,68,81,68,81,68,81,68,68,68,81,68,81,68,81,68,81,68,81,0,543,543,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,83,83,83,83,83,83,83,0,0,83,83,83,83,0,83,0,83,0,0,0,84,84,84,84,84,84,84,84,84,84,84,84,88,84,84,84,84,84,84,84,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,91,0,0,90,91,90,91,90,91,90,91,0,90,91,90,91,90,91,90,91,90,91,90,91,90,91,90,91,90,91,0,0,0,90,91,90,91,90,91,90,91,90,91,90,91,90,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,93,0,93,93,93,93,93,0,93,93,93,93,93,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,93,93,93,93,93,93,93,93,93,93,93,93,0,0,0,0,0,0,0,0,0,0,0,103,108,109,110,111,112,113,114,115,116,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,0,103,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,0,103,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,0,103,108,109,110,111,112,113,114,115,116,117,0,103,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,0,103,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,108,109,110,111,112,113,114,115,116,117,0,0,0,0,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,0,103,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,0,103,108,109,110,111,112,113,114,115,116,117,103,108,109,110,111,112,113,114,115,116,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,118,0,118,118,118,118,118,0,118,118,118,118,118,0,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,0,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,121,122,123,124,125,126,127,128,129,130,131,132,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,0,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,120,121,122,123,124,125,126,127,129,130,131,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,0,0,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,0,0,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,120,121,122,123,124,125,126,127,129,130,131,132,0,0,0,0,0,0,0,0,0,120,121,122,123,124,125,126,127,128,129,130,131,132,0,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,0,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,0,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,119,120,133,121,122,123,124,125,126,127,128,129,130,131,134,135,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,136,0,136,136,136,136,136,0,136,136,136,136,136,0,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,136,136,136,136,136,136,136,136,136,136,136,136,0,0,0,0,0,137,138,139,140,141,0,0,0,0,0,0,0,0,0,0,0,0,138,139,140,141,138,139,140,141,137,138,139,140,141,137,138,139,140,141,137,138,139,140,141,137,138,139,140,141,138,139,140,141,137,138,139,140,141,137,138,139,140,141,138,139,140,141,137,138,139,140,141,137,138,139,140,141,137,138,139,140,141,137,138,139,140,141,0,137,138,139,140,141,137,138,139,140,141,137,138,139,140,141,138,139,140,141,0,138,139,140,141,137,138,139,140,141,137,138,139,140,141,137,138,139,140,141,0,0,0,137,138,139,140,141,137,138,139,140,141,137,138,139,140,141,0,0,0,0,0,0,0,0,0,0,0,142,142,0,142,142,142,142,142,0,142,142,142,142,142,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,142,142,142,142,142,142,142,142,142,142,142,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,144,145,146,151,152,153,154,147,148,155,156,149,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,145,146,147,148,149,150,0,0,0,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,0,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,144,145,146,147,148,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,0,0,143,144,145,146,151,152,153,154,147,148,155,156,149,150,0,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,144,145,146,147,148,149,150,0,0,0,0,0,144,145,146,147,148,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,0,143,144,145,146,151,152,153,154,147,148,155,156,149,150,0,143,144,145,146,151,152,153,154,147,148,155,156,149,150,143,144,145,146,151,152,153,154,147,148,155,156,149,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,157,157,0,157,157,157,157,157,0,157,157,157,157,157,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,157,157,157,157,157,157,157,157,157,157,157,157,0,0,0,0,0,158,159,161,160,162,0,0,0,0,0,0,0,0,0,0,0,0,159,160,159,161,160,162,0,158,159,161,160,162,158,159,161,160,162,158,159,161,160,162,158,159,161,160,162,0,159,161,160,162,158,159,161,160,162,158,159,161,160,162,159,160,158,159,161,160,162,158,159,161,160,162,158,159,161,160,162,158,159,161,160,162,0,0,158,159,161,160,162,158,159,161,160,162,158,159,161,160,162,159,160,0,159,160,158,159,161,160,162,158,159,161,160,162,158,159,161,160,162,158,159,161,160,162,158,159,161,160,162,158,159,161,160,162,0,0,0,0,0,0,0,0,0,0,0,163,163,0,163,163,163,163,163,0,163,163,163,163,163,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,163,163,163,163,163,163,163,163,163,163,163,163,0,0,0,0,0,0,164,165,167,166,168,169,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,165,166,165,167,166,168,169,164,165,167,166,168,169,164,165,167,166,168,169,0,164,165,167,166,168,169,164,165,167,166,168,169,165,167,166,168,169,164,165,167,166,168,169,164,165,167,166,168,169,165,166,164,165,167,166,168,169,164,165,167,166,168,169,164,165,167,166,168,169,164,165,167,166,168,169,0,0,164,165,167,166,168,169,164,165,167,166,168,169,164,165,167,166,168,169,165,166,0,165,166,164,165,167,166,168,169,164,165,167,166,168,169,164,165,167,166,168,169,0,164,165,167,166,168,169,0,164,165,167,166,168,169,164,165,167,166,168,169,0,0,0,0,0,0,0,0,0,0,0,0,0,170,170,0,170,170,170,170,170,0,170,170,170,170,170,0,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,0,170,170,170,170,170,170,170,170,170,170,170,170,0,0,0,0,0,0,0,0,0,171,172,173,174,175,176,177,178,179,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172,173,174,175,176,177,178,179,0,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,0,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,0,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,172,173,174,175,176,177,178,179,0,0,0,0,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,0,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,171,172,173,174,175,176,177,178,179,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,180,0,180,180,180,180,180,0,180,180,180,180,180,0,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,0,180,180,180,180,180,180,180,180,180,180,180,180,0,0,0,181,182,183,0,0,182,182,183,181,182,183,181,182,183,181,182,183,181,182,183,182,183,181,182,183,181,182,183,182,181,182,183,181,182,183,181,182,183,181,182,183,0,0,181,182,183,181,182,183,181,182,183,182,0,182,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,181,182,183,0,0,0,0,0,0,0,184,184,0,184,184,184,184,184,0,184,184,184,184,184,0,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,0,184,184,184,184,184,184,184,184,184,184,184,184,0,0,0,0,0,0,0,0,0,185,186,187,188,189,190,191,192,193,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,186,187,188,189,190,191,192,193,186,187,188,189,190,191,192,193,0,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,186,187,188,189,190,191,185,186,187,188,189,190,191,192,193,0,185,186,187,188,189,190,191,192,193,0,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,0,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,186,187,188,189,190,191,0,0,0,0,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,0,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,185,186,187,188,189,190,191,192,193,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194,194,0,194,194,194,194,194,0,194,194,194,194,194,0,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,194,0,194,194,194,194,194,194,194,194,194,194,194,194,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,0,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,0,0,0,0,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,0,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,0,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,0,0,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,0,0,0,0,0,0,0,0,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,0,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,227,215,216,217,218,219,220,221,222,223,224,225,228,226,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,229,0,229,229,229,229,229,0,229,229,229,229,229,0,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,0,229,229,229,229,229,229,229,229,229,229,229,229,0,0,0,0,0,0,230,231,232,233,234,235,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,232,233,234,235,0,0,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,231,232,233,234,235,230,231,232,233,234,235,0,230,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,0,230,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,231,232,233,234,235,0,0,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,230,231,232,233,234,235,0,0,0,0,0,0,0,0,0,0,0,0,0,236,236,0,236,236,236,236,236,0,236,236,236,236,236,0,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,0,236,236,236,236,236,236,236,236,236,236,236,236,0,0,0,0,0,237,238,239,240,241,0,0,0,0,0,0,0,0,0,0,0,0,238,239,240,238,239,240,241,237,238,239,240,241,237,238,239,240,241,237,238,239,240,241,237,238,239,240,241,238,239,240,241,237,238,239,240,241,237,238,239,240,241,238,239,240,237,238,239,240,241,237,238,239,240,241,237,238,239,240,241,237,238,239,240,241,0,237,238,239,240,241,237,238,239,240,241,237,238,239,240,241,238,239,240,0,0,0,0,238,239,240,237,238,239,240,241,237,238,239,240,241,237,238,239,240,241,237,238,239,240,241,237,238,239,240,241,237,238,239,240,241,0,0,0,0,0,0,0,0,0,0,0,242,242,0,242,242,242,242,242,0,242,242,242,242,242,0,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,0,242,242,242,242,242,242,242,242,242,242,242,242,0,0,0,0,243,244,246,245,0,0,0,0,0,0,244,245,244,246,245,243,244,246,245,243,244,246,245,243,244,246,245,243,244,246,245,244,246,245,243,244,246,245,243,244,246,245,244,245,243,244,246,245,243,244,246,245,243,244,246,245,243,244,246,245,0,0,243,244,246,245,243,244,246,245,243,244,246,245,244,245,0,244,245,243,244,246,245,243,244,246,245,243,244,246,245,0,243,244,246,245,243,244,246,245,243,244,246,245,0,0,0,0,0,0,0,0,0,247,247,0,247,247,247,247,247,0,247,247,247,247,247,0,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,0,247,247,247,247,247,247,247,247,247,247,247,247,0,0,0,0,0,248,249,250,251,252,0,0,0,0,0,0,0,0,0,0,0,0,249,250,251,252,249,250,251,252,248,249,250,251,252,248,249,250,251,252,248,249,250,251,252,248,249,250,251,252,249,250,251,252,248,249,250,251,252,248,249,250,251,252,249,250,251,252,248,249,250,251,252,248,249,250,251,252,248,249,250,251,252,248,249,250,251,252,0,0,248,249,250,251,252,248,249,250,251,252,248,249,250,251,252,249,250,251,252,0,0,249,250,251,252,248,249,250,251,252,248,249,250,251,252,248,249,250,251,252,0,248,249,250,251,252,248,249,250,251,252,248,249,250,251,252,0,0,0,0,0,0,0,0,0,0,0,253,253,0,253,253,253,253,253,0,253,253,253,253,253,0,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,0,253,253,253,253,253,253,253,253,253,253,253,253,0,0,0,0,0,254,255,256,257,258,0,0,0,0,0,0,0,0,0,0,0,0,255,256,257,258,255,256,257,258,254,255,256,257,258,254,255,256,257,258,254,255,256,257,258,254,255,256,257,258,255,256,257,258,254,255,256,257,258,254,255,256,257,258,255,256,257,258,254,255,256,257,258,254,255,256,257,258,254,255,256,257,258,254,255,256,257,258,0,0,254,255,256,257,258,254,255,256,257,258,254,255,256,257,258,255,256,257,258,0,0,255,256,257,258,254,255,256,257,258,254,255,256,257,258,254,255,256,257,258,0,254,255,256,257,258,254,255,256,257,258,254,255,256,257,258,0,0,0,0,0,0,0,0,0,0,0,259,259,0,259,259,259,259,259,0,259,259,259,259,259,0,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,0,259,259,259,259,259,259,259,259,259,259,259,259,0,0,0,0,0,260,261,262,263,264,0,0,0,0,0,0,0,0,0,0,0,0,261,262,261,262,263,264,260,261,262,263,264,260,261,262,263,264,260,261,262,263,264,260,261,262,263,264,261,262,263,264,260,261,262,263,264,260,261,262,263,264,261,260,261,262,263,264,260,261,262,263,264,260,261,262,263,264,260,261,262,263,264,0,260,261,262,263,264,260,261,262,263,264,260,261,262,263,264,261,0,0,0,261,262,260,261,262,263,264,260,261,262,263,264,260,261,262,263,264,260,261,262,263,264,0,260,261,262,263,264,260,261,262,263,264,0,0,0,0,0,0,0,0,0,0,0,265,265,0,265,265,265,265,265,0,265,265,265,265,265,0,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,0,265,265,265,265,265,265,265,265,265,265,265,265,0,0,0,0,0,266,267,268,269,270,0,0,0,0,0,0,0,0,0,0,0,0,267,267,268,269,270,266,267,268,269,270,266,267,268,269,270,266,267,268,269,270,266,267,268,269,270,267,268,269,270,266,267,268,269,270,266,267,268,269,270,267,266,267,268,269,270,266,267,268,269,270,0,266,267,268,269,270,266,267,268,269,270,0,266,267,268,269,270,266,267,268,269,270,266,267,268,269,270,267,0,0,0,267,266,267,268,269,270,266,267,268,269,270,266,267,268,269,270,266,267,268,269,270,266,267,268,269,270,266,267,268,269,270,0,0,0,0,0,0,0,0,0,0,0,271,271,0,271,271,271,271,271,0,271,271,271,271,271,0,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,0,271,271,271,271,271,271,271,271,271,271,271,271,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,0,0,0,0,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,0,0,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,0,0,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,0,0,0,0,0,0,0,0,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,0,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,272,273,274,304,275,276,277,278,279,280,281,282,283,284,285,286,287,305,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,306,306,0,306,306,306,306,306,0,306,306,306,306,306,0,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,0,306,306,306,306,306,306,306,306,306,306,306,306,0,0,0,0,307,308,309,310,0,0,0,0,0,0,308,308,309,310,307,308,309,310,307,308,309,310,307,308,309,310,307,308,309,310,308,309,310,307,308,309,310,307,308,309,310,308,307,308,309,310,307,308,309,310,307,308,309,310,307,308,309,310,0,0,307,308,309,310,307,308,309,310,307,308,309,310,308,0,308,307,308,309,310,307,308,309,310,307,308,309,310,307,308,309,310,0,307,308,309,310,307,308,309,310,0,0,0,0,0,0,0,0,0,311,311,0,311,311,311,311,311,0,311,311,311,311,311,0,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,0,311,311,311,311,311,311,311,311,311,311,311,311,0,0,0,0,0,0,312,313,314,316,317,315,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,313,314,315,313,314,316,317,315,312,313,314,316,317,315,312,313,314,316,317,315,312,313,314,316,317,315,312,313,314,316,317,315,313,314,316,317,315,312,313,314,316,317,315,312,313,314,316,317,315,313,314,315,312,313,314,316,317,315,312,313,314,316,317,315,312,313,314,316,317,315,312,313,314,316,317,315,0,0,312,313,314,316,317,315,312,313,314,316,317,315,312,313,314,316,317,315,313,314,315,0,0,0,313,314,315,312,313,314,316,317,315,312,313,314,316,317,315,312,313,314,316,317,315,312,313,314,316,317,315,0,312,313,314,316,317,315,312,313,314,316,317,315,0,0,0,0,0,0,0,0,0,0,0,0,0,318,318,0,318,318,318,318,318,0,318,318,318,318,318,0,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,0,318,318,318,318,318,318,318,318,318,318,318,318,0,0,0,0,0,0,0,0,319,320,321,323,324,325,326,322,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,320,321,322,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,0,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,320,321,322,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,0,0,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,0,320,321,322,0,0,0,320,321,322,0,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,319,320,321,323,324,325,326,322,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,327,327,0,327,327,327,327,327,0,327,327,327,327,327,0,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,0,327,327,327,327,327,327,327,327,327,327,327,327,0,0,0,0,0,0,0,328,329,330,331,332,334,333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,329,330,331,332,333,329,330,331,332,334,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,329,330,331,332,334,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,329,330,332,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,0,0,328,329,330,331,332,334,333,328,329,330,331,332,334,333,0,328,329,330,331,332,334,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,329,330,332,333,0,0,0,0,329,330,331,332,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,328,329,330,331,332,334,333,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,335,335,0,335,335,335,335,335,0,335,335,335,335,335,0,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,335,0,335,335,335,335,335,335,335,335,335,335,335,335,0,0,0,0,336,337,338,339,0,0,0,0,0,0,337,338,339,0,337,338,339,336,337,338,339,336,337,338,339,336,337,338,339,336,337,338,339,337,338,339,336,337,338,339,336,337,338,339,337,338,339,336,337,338,339,336,337,338,339,336,337,338,339,336,337,338,339,0,336,337,338,339,336,337,338,339,336,337,338,339,337,338,339,0,0,337,338,339,336,337,338,339,336,337,338,339,336,337,338,339,336,337,338,339,336,337,338,339,336,337,338,339,0,0,0,0,0,0,0,0,0,340,340,0,340,340,340,340,340,0,340,340,340,340,340,0,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,340,0,340,340,340,340,340,340,340,340,340,340,340,340,0,0,0,0,0,0,0,0,341,342,343,345,346,347,348,344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,342,343,344,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,342,343,344,0,0,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,0,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,0,0,342,343,344,0,0,342,343,344,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,0,341,342,343,345,346,347,348,344,341,342,343,345,346,347,348,344,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,349,349,0,349,349,349,349,349,0,349,349,349,349,349,0,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,349,0,349,349,349,349,349,349,349,349,349,349,349,349,0,0,0,0,0,0,350,351,352,353,354,355,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,351,352,353,354,355,0,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,0,350,351,352,353,354,355,350,351,352,353,354,355,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,0,0,350,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,351,352,353,354,355,0,0,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,350,351,352,353,354,355,0,0,0,0,0,0,0,0,0,0,0,0,0,356,356,0,356,356,356,356,356,0,356,356,356,356,356,0,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,356,0,356,356,356,356,356,356,356,356,356,356,356,356,0,0,0,0,0,0,0,0,0,0,0,0,357,358,359,360,368,361,362,363,364,365,366,367,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,359,360,361,362,363,364,365,366,367,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,0,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,358,359,360,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,0,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,0,0,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,0,0,358,359,360,361,362,363,364,365,366,367,0,0,0,0,358,359,360,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,0,357,358,359,360,368,361,362,363,364,365,366,367,357,358,359,360,368,361,362,363,364,365,366,367,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,369,369,0,369,369,369,369,369,0,369,369,369,369,369,0,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,369,0,369,369,369,369,369,369,369,369,369,369,369,369,0,0,0,0,0,0,370,371,372,373,374,375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,371,372,373,374,375,371,372,373,374,375,370,371,372,373,374,375,370,371,372,373,374,375,0,370,371,372,373,374,375,370,371,372,373,374,375,371,372,373,374,375,370,371,372,373,374,375,370,371,372,373,374,375,371,372,373,374,375,370,371,372,373,374,375,370,371,372,373,374,375,370,371,372,373,374,375,370,371,372,373,374,375,0,370,371,372,373,374,375,370,371,372,373,374,375,370,371,372,373,374,375,371,372,373,374,375,0,0,371,372,373,374,375,370,371,372,373,374,375,0,370,371,372,373,374,375,370,371,372,373,374,375,0,370,371,372,373,374,375,370,371,372,373,374,375,370,371,372,373,374,375,0,0,0,0,0,0,0,0,0,0,0,0,0,376,376,0,376,376,376,376,376,0,376,376,376,376,376,0,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,0,376,376,376,376,376,376,376,376,376,376,376,376,0,0,0,0,0,0,0,0,0,0,377,378,379,380,381,382,385,383,386,384,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,378,379,380,381,382,383,384,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,378,379,380,381,382,383,384,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,0,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,0,0,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,378,379,380,381,382,383,384,0,0,0,0,378,379,380,381,382,383,384,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,0,377,378,379,380,381,382,385,383,386,384,0,0,377,378,379,380,381,382,385,383,386,384,377,378,379,380,381,382,385,383,386,384,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,387,387,0,387,387,387,387,387,0,387,387,387,387,387,0,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,387,0,387,387,387,387,387,387,387,387,387,387,387,387,0,0,0,0,0,0,388,389,391,390,392,393,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,389,390,389,391,390,392,393,388,389,391,390,392,393,388,389,391,390,392,393,0,388,389,391,390,392,393,388,389,391,390,392,393,389,391,390,392,393,388,389,391,390,392,393,388,389,391,390,392,393,389,390,388,389,391,390,392,393,388,389,391,390,392,393,388,389,391,390,392,393,388,389,391,390,392,393,0,0,388,389,391,390,392,393,388,389,391,390,392,393,388,389,391,390,392,393,389,390,0,389,390,388,389,391,390,392,393,388,389,391,390,392,393,388,389,391,390,392,393,0,388,389,391,390,392,393,0,388,389,391,390,392,393,388,389,391,390,392,393,0,0,0,0,0,0,0,0,0,0,0,0,0,394,394,0,394,394,394,394,394,0,394,394,394,394,394,0,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,394,0,394,394,394,394,394,394,394,394,394,394,394,394,0,0,0,0,0,395,396,397,398,399,0,0,0,0,0,0,0,0,0,0,0,0,396,397,398,399,396,397,398,399,395,396,397,398,399,395,396,397,398,399,395,396,397,398,399,395,396,397,398,399,396,397,398,399,395,396,397,398,399,395,396,397,398,399,396,397,398,399,395,396,397,398,399,395,396,397,398,399,395,396,397,398,399,395,396,397,398,399,0,395,396,397,398,399,395,396,397,398,399,395,396,397,398,399,396,397,398,399,0,396,397,398,399,395,396,397,398,399,395,396,397,398,399,395,396,397,398,399,0,0,0,395,396,397,398,399,395,396,397,398,399,395,396,397,398,399,0,0,0,0,0,0,0,0,0,0,0,400,400,0,400,400,400,400,400,0,400,400,400,400,400,0,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,0,400,400,400,400,400,400,400,400,400,400,400,400,0,0,0,0,0,0,401,402,403,404,405,406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,402,403,404,405,406,0,0,402,403,404,405,406,401,402,403,404,405,406,401,402,403,404,405,406,0,401,402,403,404,405,406,401,402,403,404,405,406,402,403,404,405,406,401,402,403,404,405,406,401,402,403,404,405,406,402,403,404,405,406,401,402,403,404,405,406,401,402,403,404,405,406,401,402,403,404,405,406,401,402,403,404,405,406,0,401,402,403,404,405,406,401,402,403,404,405,406,401,402,403,404,405,406,402,403,404,405,406,0,402,403,404,405,406,401,402,403,404,405,406,401,402,403,404,405,406,401,402,403,404,405,406,0,401,402,403,404,405,406,401,402,403,404,405,406,401,402,403,404,405,406,0,0,0,0,0,0,0,0,0,0,0,0,0,407,407,0,407,407,407,407,407,0,407,407,407,407,407,0,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,407,0,407,407,407,407,407,407,407,407,407,407,407,407,0,0,0,0,408,409,410,411,0,0,0,0,0,0,409,409,410,411,408,409,410,411,408,409,410,411,408,409,410,411,408,409,410,411,409,410,411,408,409,410,411,408,409,410,411,409,408,409,410,411,408,409,410,411,408,409,410,411,408,409,410,411,0,408,409,410,411,408,409,410,411,408,409,410,411,409,0,0,0,409,408,409,410,411,408,409,410,411,408,409,410,411,408,409,410,411,408,409,410,411,408,409,410,411,0,0,0,0,0,0,0,0,0,412,412,0,412,412,412,412,412,0,412,412,412,412,412,0,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,412,0,412,412,412,412,412,412,412,412,412,412,412,412,0,0,0,0,0,0,0,0,413,414,415,420,416,417,418,419,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,414,415,416,417,418,419,0,0,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,414,415,416,417,418,419,413,414,415,420,416,417,418,419,0,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,0,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,414,415,416,417,418,419,0,0,0,414,415,416,417,418,419,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,0,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,413,414,415,420,416,417,418,419,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,421,421,0,421,421,421,421,421,0,421,421,421,421,421,0,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,0,421,421,421,421,421,421,421,421,421,421,421,421,0,0,0,0,0,422,423,424,425,426,0,0,0,0,0,0,0,0,0,0,0,0,423,424,425,426,423,424,425,426,422,423,424,425,426,422,423,424,425,426,422,423,424,425,426,422,423,424,425,426,423,424,425,426,422,423,424,425,426,422,423,424,425,426,423,424,425,426,422,423,424,425,426,422,423,424,425,426,422,423,424,425,426,422,423,424,425,426,0,422,423,424,425,426,422,423,424,425,426,422,423,424,425,426,423,424,425,426,0,0,0,0,423,424,425,426,422,423,424,425,426,422,423,424,425,426,422,423,424,425,426,422,423,424,425,426,422,423,424,425,426,422,423,424,425,426,0,0,0,0,0,0,0,0,0,0,0,427,427,0,427,427,427,427,427,0,427,427,427,427,427,0,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,427,0,427,427,427,427,427,427,427,427,427,427,427,427,0,0,0,0,0,0,0,0,428,429,430,432,433,434,435,431,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,429,430,431,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,0,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,429,430,431,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,0,0,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,0,429,430,431,0,0,429,430,431,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,0,0,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,428,429,430,432,433,434,435,431,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,436,436,0,436,436,436,436,436,0,436,436,436,436,436,0,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,436,0,436,436,436,436,436,436,436,436,436,436,436,436,0,0,0,0,0,437,438,440,439,441,0,0,0,0,0,0,0,0,0,0,0,0,438,439,438,440,439,441,437,438,440,439,441,437,438,440,439,441,437,438,440,439,441,437,438,440,439,441,438,440,439,441,437,438,440,439,441,437,438,440,439,441,0,438,439,437,438,440,439,441,437,438,440,439,441,437,438,440,439,441,437,438,440,439,441,0,0,437,438,440,439,441,437,438,440,439,441,437,438,440,439,441,438,439,0,0,438,439,437,438,440,439,441,437,438,440,439,441,437,438,440,439,441,437,438,440,439,441,437,438,440,439,441,437,438,440,439,441,0,0,0,0,0,0,0,0,0,0,0,442,442,0,442,442,442,442,442,0,442,442,442,442,442,0,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,0,442,442,442,442,442,442,442,442,442,442,442,442,0,0,0,0,0,0,443,444,446,447,448,445,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,444,445,444,446,447,448,445,443,444,446,447,448,445,443,444,446,447,448,445,443,444,446,447,448,445,443,444,446,447,448,445,444,446,447,448,445,443,444,446,447,448,445,443,444,446,447,448,445,444,445,443,444,446,447,448,445,443,444,446,447,448,445,443,444,446,447,448,445,443,444,446,447,448,445,0,0,443,444,446,447,448,445,443,444,446,447,448,445,443,444,446,447,448,445,444,445,0,0,444,445,443,444,446,447,448,445,443,444,446,447,448,445,443,444,446,447,448,445,0,443,444,446,447,448,445,0,443,444,446,447,448,445,443,444,446,447,448,445,0,0,0,0,0,0,0,0,0,0,0,0,0,449,449,0,449,449,449,449,449,0,449,449,449,449,449,0,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,449,0,449,449,449,449,449,449,449,449,449,449,449,449,0,0,0,0,0,0,0,450,451,452,453,454,455,456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,451,452,453,454,455,456,0,451,452,453,454,455,456,450,451,452,453,454,455,456,450,451,452,453,454,455,456,0,450,451,452,453,454,455,456,450,451,452,453,454,455,456,451,452,453,454,455,456,450,451,452,453,454,455,456,450,451,452,453,454,455,456,451,452,453,454,455,456,450,451,452,453,454,455,456,0,450,451,452,453,454,455,456,450,451,452,453,454,455,456,450,451,452,453,454,455,456,0,450,451,452,453,454,455,456,450,451,452,453,454,455,456,450,451,452,453,454,455,456,451,452,453,454,455,456,0,0,451,452,453,454,455,456,450,451,452,453,454,455,456,450,451,452,453,454,455,456,450,451,452,453,454,455,456,0,450,451,452,453,454,455,456,450,451,452,453,454,455,456,450,451,452,453,454,455,456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,457,457,0,457,457,457,457,457,0,457,457,457,457,457,0,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,0,457,457,457,457,457,457,457,457,457,457,457,457,0,0,0,0,0,0,458,459,460,461,462,463,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,459,460,461,462,463,0,459,460,461,462,463,458,459,460,461,462,463,458,459,460,461,462,463,0,458,459,460,461,462,463,458,459,460,461,462,463,459,460,461,462,463,458,459,460,461,462,463,458,459,460,461,462,463,459,460,461,462,463,458,459,460,461,462,463,0,458,459,460,461,462,463,458,459,460,461,462,463,458,459,460,461,462,463,0,458,459,460,461,462,463,458,459,460,461,462,463,458,459,460,461,462,463,459,460,461,462,463,0,459,460,461,462,463,458,459,460,461,462,463,458,459,460,461,462,463,458,459,460,461,462,463,0,458,459,460,461,462,463,458,459,460,461,462,463,458,459,460,461,462,463,0,0,0,0,0,0,0,0,0,0,0,0,0,464,464,0,464,464,464,464,464,0,464,464,464,464,464,0,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,0,464,464,464,464,464,464,464,464,464,464,464,464,0,0,0,0,0,0,465,466,467,468,469,470,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,466,467,468,469,470,0,0,466,467,468,469,470,465,466,467,468,469,470,465,466,467,468,469,470,0,465,466,467,468,469,470,465,466,467,468,469,470,466,467,468,469,470,465,466,467,468,469,470,465,466,467,468,469,470,466,467,468,469,470,465,466,467,468,469,470,465,466,467,468,469,470,465,466,467,468,469,470,465,466,467,468,469,470,0,465,466,467,468,469,470,465,466,467,468,469,470,465,466,467,468,469,470,466,467,468,469,470,0,466,467,468,469,470,465,466,467,468,469,470,465,466,467,468,469,470,465,466,467,468,469,470,0,465,466,467,468,469,470,465,466,467,468,469,470,465,466,467,468,469,470,0,0,0,0,0,0,0,0,0,0,0,0,0,471,471,0,471,471,471,471,471,0,471,471,471,471,471,0,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,0,471,471,471,471,471,471,471,471,471,471,471,471,0,0,0,0,0,0,0,0,0,0,0,0,0,472,473,483,474,475,476,477,478,479,480,481,484,482,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,473,474,475,476,477,478,479,480,481,482,473,483,474,475,476,477,478,479,480,481,484,482,0,0,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,473,483,474,475,476,477,478,479,480,481,484,482,0,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,473,474,475,476,477,478,479,480,481,482,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,0,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,0,0,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,0,0,473,474,475,476,477,478,479,480,481,482,0,0,0,0,473,474,475,476,477,478,479,480,481,482,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,0,472,473,483,474,475,476,477,478,479,480,481,484,482,472,473,483,474,475,476,477,478,479,480,481,484,482,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,485,485,0,485,485,485,485,485,0,485,485,485,485,485,0,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,0,485,485,485,485,485,485,485,485,485,485,485,485,0,0,0,0,0,0,486,487,488,489,490,491,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,487,488,489,490,491,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,0,486,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,487,488,489,490,491,0,0,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,0,0,0,486,487,488,489,490,491,486,487,488,489,490,491,486,487,488,489,490,491,0,0,0,0,0,0,0,0,0,0,0,0,0,492,492,0,492,492,492,492,492,0,492,492,492,492,492,0,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,0,492,492,492,492,492,492,492,492,492,492,492,492,0,0,0,0,0,0,493,494,495,497,498,496,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,494,495,496,494,495,497,498,496,493,494,495,497,498,496,493,494,495,497,498,496,0,493,494,495,497,498,496,493,494,495,497,498,496,494,495,497,498,496,493,494,495,497,498,496,493,494,495,497,498,496,494,495,496,493,494,495,497,498,496,493,494,495,497,498,496,493,494,495,497,498,496,493,494,495,497,498,496,0,493,494,495,497,498,496,493,494,495,497,498,496,493,494,495,497,498,496,0,0,494,495,496,0,494,495,496,493,494,495,497,498,496,493,494,495,497,498,496,493,494,495,497,498,496,0,493,494,495,497,498,496,493,494,495,497,498,496,493,494,495,497,498,496,0,0,0,0,0,0,0,0,0,0,0,0,0,499,499,0,499,499,499,499,499,0,499,499,499,499,499,0,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,499,0,499,499,499,499,499,499,499,499,499,499,499,499,0,0,0,0,0,0,0,0,0,0,0,0,0,500,501,502,503,508,509,510,511,504,505,512,506,507,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,501,502,503,504,505,506,507,0,0,0,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,0,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,501,502,503,504,505,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,0,0,500,501,502,503,508,509,510,511,504,505,512,506,507,0,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,501,502,503,504,505,506,507,0,0,0,0,501,502,503,504,505,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,0,500,501,502,503,508,509,510,511,504,505,512,506,507,0,500,501,502,503,508,509,510,511,504,505,512,506,507,500,501,502,503,508,509,510,511,504,505,512,506,507,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,513,513,0,513,513,513,513,513,0,513,513,513,513,513,0,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,513,0,513,513,513,513,513,513,513,513,513,513,513,513,0,0,0,0,0,0,514,515,516,517,518,519,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,515,516,517,518,519,0,0,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,0,514,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,515,516,517,518,519,0,0,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,0,514,515,516,517,518,519,514,515,516,517,518,519,514,515,516,517,518,519,0,0,0,0,0,0,0,0,0,0,0,521,523,523,520,520,521,522,522,522,520,520,521,0,0,0,0,0,0,521,0,0,522,520,520,521,522,523,520,520,520,520,520,520,521,521,521,521,521,521,522,522,522,522,522,522,523,523,523,523,523,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,0,0,0,0,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,520,521,522,523,0,526,526,526,526,526,0,526,526,526,526,0,526,526,526,526,526,526,526,526,0,528,528,528,528,528,0,528,528,528,528,0,528,528,528,528,528,528,528,528,0,529,529,529,529,529,0,529,529,529,529,0,529,529,529,529,529,529,529,529,0,530,530,530,530,530,0,530,530,530,530,0,530,530,530,530,530,530,530,530,0,555,75,75,75,75,75,0,75,75,75,75,0,0,75,75,75,75,75,75,75,532,533,75,532,533,75,532,533,75,532,533,75,532,533,75,75,532,75,75,532,533,75,532,533,75,75,75,532,533,75,532,533,75,532,533,75,532,532,75,532,533,533,532,532,75,75,532,533,75,532,533,533,75,532,533,75,532,533,545,546,547,548,549,550,551,552,553,545,546,554,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,0,0,0,556,534,40,0,0,0,0,0,0,0,0,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,534,0,0,556,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,540,540,540,0,540,540,540,540,540,540,540,540,0,540,540,540,540,540,540,540,540,540,540,0,0,0,0,540,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,73,73,73,73,0,73,73,73,73,0,0,73,0,73,73,0,73,73,73,0,0,73],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,0,0,0,[[],[[4,[2,3]]]],0,0,0,0,0,0,0,0,[[5,5],[[1,[[7,[6]]]]]],0,[[8,8,9],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,10],[10,10],[10,10],[10,10],[[]],[[]],[[]],[[]],[[],10],[[],10],0,0,0,0,[11],[11],[11],[11],[11],[11],0,[[12,12],13],[[],[[1,[14]]]],0,[[15,16],17],[[12,16],17],[[]],[[]],[18,[[20,[15,19]]]],[18,[[20,[12,19]]]],[18,[[20,[15,19]]]],[18,[[20,[12,19]]]],[[],[[22,[21]]]],[23,13],[[],11],[[],11],[[]],[[]],[[],24],[[],24],0,0,0,0,[[],1],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[15,18],[[20,[19]]]],[[12,18],[[20,[19]]]],[[15,18],[[20,[19]]]],[[12,18],[[20,[19]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[27,27],[27,27],[27,27],[27,27],[27,27],[27,27],[[]],[[]],[[]],[[]],[[]],[[]],[[28,28]],[[5,5]],[[29,29]],[[30,30]],[[28,28]],[[5,5]],[[29,29]],[[30,30]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31],[32],[33,23],[34,23],[35,23],[36,23],[37,23],[38],[39,40],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[20,[[7,[41,42]]]]]],[[],[[20,[[7,[43,42]]]]]],[[],[[20,[[7,[43,42]]]]]],[[],[[20,[[7,[41,42]]]]]],[[],[[20,[[7,[43,42]]]]]],[[],[[20,[[7,[41,42]]]]]],[44,44],[45,45],[46,46],[6,6],[47,47],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[48,48],[49,49],[28,28],[5,5],[29,29],[30,30],[38,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[31,31],50],[[32,32],50],[[28,28],50],[[5,5],50],[[29,29],50],[[30,30],50],[31,51],[32,51],[33,51],[34,51],[35,51],[36,51],[37,51],[28,51],[5,51],[29,51],[30,51],[38,51],0,[[],28],[[],5],[[],29],[[],30],[11],[11],[11],[11],[11],[11],[31],[11],[11],[32],[11],[33],[11],[34],[11],[35],[11],[36],[11],[37],[11],[11],[11],[28],[11],[5],[29],[11],[30],[11],[11],[38],[11],[11],[11],[11],[11],[11],[11],[31],[11],[32],[11],[33],[34],[11],[35],[11],[36],[11],[11],[37],[11],[11],[11],[28],[5],[11],[11],[29],[30],[11],[11],[38],[52,[[20,[44]]]],[52,[[20,[45]]]],[52,[[20,[46]]]],[52,[[20,[6]]]],[52,[[20,[39]]]],[52,[[20,[31]]]],[52,[[20,[32]]]],[52,[[20,[33]]]],[52,[[20,[34]]]],[52,[[20,[35]]]],[52,[[20,[36]]]],[52,[[20,[37]]]],[52,[[20,[48]]]],[52,[[20,[49]]]],[52,[[20,[28]]]],[52,[[20,[5]]]],[52,[[20,[29]]]],[52,[[20,[30]]]],[52,[[20,[38]]]],[23,[[20,[44,53]]]],[[28,28]],[[5,5]],[[29,29]],[[30,30]],[[28,28]],[[5,5]],[[29,29]],[[30,30]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[55,[54]]]],[[],[[55,[54]]]],[[],[[55,[54]]]],[[],[[55,[54]]]],[[],[[55,[54]]]],[[],[[55,[54]]]],[[44,44],13],[[45,45],13],[[46,46],13],[[6,6],13],[[39,39],13],[[31,31],13],[[32,32],13],[[33,33],13],[[34,34],13],[[35,35],13],[[36,36],13],[[37,37],13],[[28,28],13],[[5,5],13],[[29,29],13],[[30,30],13],[[38,38],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[48,56],[[44,16],17],[[45,16],17],[[46,16],17],[[6,16],17],[[47,16],17],[[39,16],17],[[31,16],17],[[31,16],17],[[32,16],17],[[32,16],17],[[33,16],17],[[33,16],17],[[34,16],17],[[34,16],17],[[35,16],17],[[35,16],17],[[36,16],17],[[36,16],17],[[37,16],17],[[37,16],17],[[48,16],17],[[49,16],17],[[28,16],17],[[28,16],17],[[28,16],17],[[28,16],17],[[28,16],17],[[28,16],17],[[28,16],17],[[28,16],17],[[5,16],17],[[5,16],17],[[5,16],17],[[5,16],17],[[5,16],17],[[5,16],17],[[5,16],17],[[5,16],17],[[29,16],17],[[29,16],17],[[29,16],17],[[29,16],17],[[29,16],17],[[29,16],17],[[29,16],17],[[29,16],17],[[30,16],17],[[30,16],17],[[30,16],17],[[30,16],17],[[30,16],17],[[30,16],17],[[30,16],17],[[30,16],17],[[38,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,31],[57,32],[[]],[[]],[56,33],[23,33],[23,34],[[]],[56,34],[[]],[23,35],[56,35],[56,36],[[]],[23,36],[[]],[56,37],[23,37],[[]],[[]],[58,28],[[]],[[]],[58,5],[58,29],[[]],[58,30],[[]],[[[60,[59]]],38],[[]],[23,[[20,[38,53]]]],[23,20],[23,[[20,[33]]]],[23,20],[23,[[20,[34]]]],[23,20],[23,20],[23,[[20,[35]]]],[23,20],[23,20],[23,20],[23,[[20,[36]]]],[23,20],[23,20],[23,20],[23,[[20,[37]]]],[23,20],[23,20],[23,[[20,[48]]]],[23,[[20,[28]]]],[23,20],[23,20],[23,20],[23,[[20,[5]]]],[23,20],[23,20],[23,20],[23,[[20,[29]]]],[23,20],[23,[[20,[30]]]],[23,20],[[],58],[[],58],[31],[32],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[31],[32],[33],[34],[35],[36],[37],[28],[5],[29],[30],[38],0,[31],[32],[33],[34],[35],[36],[37],[28],[5],[29],[30],[38],[65,[[20,[[7,[65]],[20,[45,[67,[66]]]]]]]],[65,[[20,[[7,[65]],[20,[46,[67,[66]]]]]]]],[[],[[20,[7,[20,[45,[67,[66]]]]]]]],[[],[[20,[7,[20,[46,[67,[66]]]]]]]],[[],[[20,[28,[20,[45,[67,[66]]]]]]]],[68,[[20,[38,[20,[45,[67,[66]]]]]]]],[[],[[20,[32,[20,[45,[67,[66]]]]]]]],[[],[[20,[44,[20,[45,[67,[66]]]]]]]],[7,[[22,[29]]]],[[],[[20,[[20,[46,[67,[66]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[22,[69]]]],[31],[32],[33],[34],[35],[36],[37],[28],[5],[29],[30],[38],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],[[71,[70]]]],[6,20],0,0,[[28,28]],[[5,5]],[[29,29]],[[30,30]],[[28,28]],[[5,5]],[[29,29]],[[30,30]],0,[[],31],[[],32],[[],33],[[],34],[[],35],[[],36],[[],37],[[],48],[[],28],[[],5],[[],29],[[],30],[[],38],0,0,[72,20],[72,20],[72,20],[[31,31],[[22,[50]]]],[[32,32],[[22,[50]]]],[[28,28],[[22,[50]]]],[[5,5],[[22,[50]]]],[[29,29],[[22,[50]]]],[[30,30],[[22,[50]]]],[[47,68],[[20,[45,[67,[66]]]]]],[47,[[20,[46,[67,[66]]]]]],0,[[28,28]],[[5,5]],[[29,29]],[[30,30]],[[28,28]],[[5,5]],[[29,29]],[[30,30]],0,0,[[44,72],20],[[45,72],20],[[46,72],20],[[6,72],20],[[39,72],20],[[31,72],20],[[32,72],20],[[33,72],20],[[34,72],20],[[35,72],20],[[36,72],20],[[37,72],20],[[28,72],20],[[5,72],20],[[29,72],20],[[30,72],20],[[38,72],20],0,0,0,0,0,0,[[28,28]],[[5,5]],[[29,29]],[[30,30]],[[28,28]],[[5,5]],[[29,29]],[[30,30]],[44,65],[45,65],[32,65],[28,65],[29,65],[38,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[47,73,68],[[20,[6,[67,[66]]]]]],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[6,[7,[74]]],[[20,[75]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[49],0,[[28,38,31,30],6],0,0,0,0,0,0,[26],[27,27],[[]],[[]],[57],[[],11],[[],11],[[]],[[]],[[],[[20,[[7,[41,42]]]]]],[[],[[20,[[7,[43,42]]]]]],[57,57],[[]],[[57,57],50],[11],[11],[52,[[20,[57]]]],[11],[[],[[55,[54]]]],[[],[[55,[54]]]],[[57,57],13],[[],13],[[57,16],17],[[]],[23,[[20,[57,53]]]],[[],58],[57],[[],11],[[]],[[],24],[57,[[22,[68]]]],[[57,57],[[22,[50]]]],[[57,72],20],[57,56],[[]],[[],20],[[],20],[57,74],[[],25],[[]],[[],20],[[],20],0,0,[26],[27,27],[[]],[[]],[76],[[],11],[[],11],[[]],[[]],[[],[[20,[[7,[43,42]]]]]],[[],[[20,[[7,[41,42]]]]]],[76,76],[[]],[[76,76],50],[11],[11],[52,[[20,[76]]]],[11],[[],[[55,[54]]]],[[],[[55,[54]]]],[[76,76],13],[[],13],[[76,16],17],[[]],[23,[[20,[76,53]]]],[[],11],[[]],[[],24],[[76,76],[[22,[50]]]],[[76,72],20],[[]],[[],20],[[],20],[[],25],[[]],[[],20],[[],20],0,0,0,[26],[27,27],[[]],[[]],[77],[77],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],[[20,[[7,[43,42]]]]]],[[],[[20,[[7,[41,42]]]]]],[77,77],[[]],[11],[11],[11],[11],[52,[[20,[77]]]],[11],[11],[[],[[55,[54]]]],[[],[[55,[54]]]],[[77,77],13],[[],13],[[78,16],17],[16,[[20,[79]]]],[[77,16],17],[[77,16],17],[[]],[[]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[],11],[[],11],[[]],[[]],[[],24],[[],24],[[77,72],20],[[]],[[],56],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[78,23],[[20,[80]]]],[[]],[[]],[[],20],[[],20],0,0,0,0,[26],[[]],[[]],[[]],[[]],[68,68],[[]],[11],[11],[11],[11],[11],[11],[[68,68],13],[[],13],[[68,16],17],[[68,16],17],[[81,16],17],[[81,16],17],[[]],[[]],[23,20],[23,20],[23,[[20,[68]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[]],[[],11],[[],11],[[]],[[]],[[],24],[[],24],[[],[[71,[70]]]],[82],[[68,72],20],[[]],[[],56],[[],56],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[]],[[]],0,[[],[[4,[2,3]]]],[[5,5],[[1,[[7,[6]]]]]],0,0,0,[26],[[]],[[]],[83,83],[[]],0,[11],[11],[52,[[20,[83]]]],[11],[[83,16],17],[[]],0,[[],11],0,[[]],[[],24],0,0,0,0,0,0,0,[[]],[[],20],[[],20],[[],25],0,0,0,[[]],0,0,0,[[]],[[]],[83,[[1,[84]]]],[11],[11],[11],[[84,85],1],[[84,16],17],[[]],[[],11],[[]],[[],24],[[],56],[84,[[4,[2,3]]]],[84,[[4,[2,3]]]],[[],20],[[],20],[[],25],[[84,5,5],[[1,[[7,[6]]]]]],[[84,5,5],[[1,[[7,[6]]]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,[56,[[88,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[69,8],[[20,[[4,[[7,[74]],89]],[67,[66]]]]]],0,0,0,0,0,0,0,0,0,0,[26],[26],0,0,[[]],[[]],[[]],[[]],[90,90],[91,91],[[]],[[]],[[],[[1,[6,92]]]],[[],90],[[],91],[11],[11],[11],[11],[11],[11],[[90,16],17],[[91,16],17],[[]],[[]],[[],11],[[],11],[[]],[[]],[[],24],[[],24],0,[[69,69],88],0,0,0,[90],[91],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[93],[[]],[[]],[93,93],[[]],0,[93],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[93,16],17],[[]],[93],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[93,101],[102],[69],[69],[93],[93,103],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[93],[93],[[]],[[93,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[108,87]],[[109,87]],[[110,87]],[[111,87]],[[112,87]],[[113,87]],[[114,87]],[[115,87]],[[116,87]],[[117,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[103,103],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],108],[[],109],[[],110],[[],111],[[],112],[[],113],[[],114],[[],115],[[],116],[[],117],0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[108,87]],[[109,87]],[[110,87]],[[111,87]],[[112,87]],[[113,87]],[[114,87]],[[115,87]],[[116,87]],[[117,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],0,[[103,16],17],[[108,16],17],[[109,16],17],[[110,16],17],[[111,16],17],[[112,16],17],[[113,16],17],[[114,16],17],[[115,16],17],[[116,16],17],[[117,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[108,87]],[[109,87]],[[110,87]],[[111,87]],[[112,87]],[[113,87]],[[114,87]],[[115,87]],[[116,87]],[[117,87]],0,0,0,0,[[108,87]],[[109,87]],[[110,87]],[[111,87]],[[112,87]],[[113,87]],[[114,87]],[[115,87]],[[116,87]],[[117,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[103,[106,[105]]],107],[[108,[106,[105]]],107],[[109,[106,[105]]],107],[[110,[106,[105]]],107],[[111,[106,[105]]],107],[[112,[106,[105]]],107],[[113,[106,[105]]],107],[[114,[106,[105]]],107],[[115,[106,[105]]],107],[[116,[106,[105]]],107],[[117,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[118],[[]],[[]],[118,118],[[]],0,[118],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[118,16],17],[[]],[118],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[118,101],[102],[69],[69],[118],[118,119],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[118],[118],[[]],[[118,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[120,87]],[[121,87]],[[122,87]],[[123,87]],[[124,87]],[[125,87]],[[126,87]],[[127,87]],[[128,87]],[[129,87]],[[130,87]],[[131,87]],[[132,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[119,119],[120,120],[133,133],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[134,134],[135,135],[132,132],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],120],[[],133],[[],121],[[],122],[[],123],[[],124],[[],125],[[],126],[[],127],[[],128],[[],129],[[],130],[[],131],[[],134],[[],135],[[],132],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[120,87]],[[121,87]],[[122,87]],[[123,87]],[[124,87]],[[125,87]],[[126,87]],[[127,87]],[[129,87]],[[130,87]],[[131,87]],[[132,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,0,[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[119,16],17],[[120,16],17],[[133,16],17],[[121,16],17],[[122,16],17],[[123,16],17],[[124,16],17],[[125,16],17],[[126,16],17],[[127,16],17],[[128,16],17],[[129,16],17],[[130,16],17],[[131,16],17],[[134,16],17],[[135,16],17],[[132,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[120,87]],[[121,87]],[[122,87]],[[123,87]],[[124,87]],[[125,87]],[[126,87]],[[127,87]],[[129,87]],[[130,87]],[[131,87]],[[132,87]],0,0,0,0,0,0,0,0,0,[[120,87]],[[121,87]],[[122,87]],[[123,87]],[[124,87]],[[125,87]],[[126,87]],[[127,87]],[[128,87]],[[129,87]],[[130,87]],[[131,87]],[[132,87]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[119,[106,[105]]],107],[[120,[106,[105]]],107],[[133,[106,[105]]],107],[[121,[106,[105]]],107],[[122,[106,[105]]],107],[[123,[106,[105]]],107],[[124,[106,[105]]],107],[[125,[106,[105]]],107],[[126,[106,[105]]],107],[[127,[106,[105]]],107],[[128,[106,[105]]],107],[[129,[106,[105]]],107],[[130,[106,[105]]],107],[[131,[106,[105]]],107],[[134,[106,[105]]],107],[[135,[106,[105]]],107],[[132,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[136],[[]],[[]],[136,136],[[]],0,[136],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[136,16],17],[[]],[136],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[136,101],[102],[69],[69],[136],[136,137],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[136],[136],[[]],[[136,[106,[105]]],107],[[]],0,0,0,0,0,[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,[[138,87]],[[139,87]],[[140,87]],[[141,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137,137],[138,138],[139,139],[140,140],[141,141],[[]],[[]],[[]],[[]],[[]],[[],138],[[],139],[[],140],[[],141],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[138,87]],[[139,87]],[[140,87]],[[141,87]],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[137,16],17],[[138,16],17],[[139,16],17],[[140,16],17],[[141,16],17],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[138,87]],[[139,87]],[[140,87]],[[141,87]],0,[[138,87]],[[139,87]],[[140,87]],[[141,87]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[137,[106,[105]]],107],[[138,[106,[105]]],107],[[139,[106,[105]]],107],[[140,[106,[105]]],107],[[141,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[142],[[]],[[]],[142,142],[[]],0,[142],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[142,16],17],[[]],[142],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[142,101],[102],[69],[69],[142],[142,143],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[142],[142],[[]],[[142,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[144,87]],[[145,87]],[[146,87]],[[147,87]],[[148,87]],[[149,87]],[[150,87]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[143,143],[144,144],[145,145],[146,146],[151,151],[152,152],[153,153],[154,154],[147,147],[148,148],[155,155],[156,156],[149,149],[150,150],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],144],[[],145],[[],146],[[],151],[[],152],[[],153],[[],154],[[],147],[[],148],[[],155],[[],156],[[],149],[[],150],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[144,87]],[[145,87]],[[146,87]],[[147,87]],[[148,87]],[[149,87]],[[150,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[143,16],17],[[144,16],17],[[145,16],17],[[146,16],17],[[151,16],17],[[152,16],17],[[153,16],17],[[154,16],17],[[147,16],17],[[148,16],17],[[155,16],17],[[156,16],17],[[149,16],17],[[150,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[144,87]],[[145,87]],[[146,87]],[[147,87]],[[148,87]],[[149,87]],[[150,87]],0,0,0,0,0,[[144,87]],[[145,87]],[[146,87]],[[147,87]],[[148,87]],[[149,87]],[[150,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[143,[106,[105]]],107],[[144,[106,[105]]],107],[[145,[106,[105]]],107],[[146,[106,[105]]],107],[[151,[106,[105]]],107],[[152,[106,[105]]],107],[[153,[106,[105]]],107],[[154,[106,[105]]],107],[[147,[106,[105]]],107],[[148,[106,[105]]],107],[[155,[106,[105]]],107],[[156,[106,[105]]],107],[[149,[106,[105]]],107],[[150,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[157],[[]],[[]],[157,157],[[]],0,[157],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[157,16],17],[[]],[157],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[157,101],[102],[69],[69],[157],[157,158],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[157],[157],[[]],[[157,[106,[105]]],107],[[]],0,0,0,0,0,[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,[[159,87]],[[160,87]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[158,158],[159,159],[161,161],[160,160],[162,162],[[]],[[]],[[]],[[]],[[]],0,[[],159],[[],161],[[],160],[[],162],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[159,87]],[[160,87]],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[158,16],17],[[159,16],17],[[161,16],17],[[160,16],17],[[162,16],17],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[159,87]],[[160,87]],0,[[159,87]],[[160,87]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[158,[106,[105]]],107],[[159,[106,[105]]],107],[[161,[106,[105]]],107],[[160,[106,[105]]],107],[[162,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[163],[[]],[[]],[163,163],[[]],0,[163],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[163,16],17],[[]],[163],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[163,101],[102],[69],[69],[163],[163,164],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[163],[163],[[]],[[163,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[165,87]],[[166,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[164,164],[165,165],[167,167],[166,166],[168,168],[169,169],[[]],[[]],[[]],[[]],[[]],[[]],[[],165],[[],167],[[],166],[[],168],[[],169],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[165,87]],[[166,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[164,16],17],[[165,16],17],[[167,16],17],[[166,16],17],[[168,16],17],[[169,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[165,87]],[[166,87]],0,[[165,87]],[[166,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[164,[106,[105]]],107],[[165,[106,[105]]],107],[[167,[106,[105]]],107],[[166,[106,[105]]],107],[[168,[106,[105]]],107],[[169,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[170],[[]],[[]],[170,170],[[]],0,[170],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[170,16],17],[[]],[170],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[170,101],[102],[69],[69],[170],[170,171],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[170],[170],[[]],[[170,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[172,87]],[[173,87]],[[174,87]],[[175,87]],[[176,87]],[[177,87]],[[178,87]],[[179,87]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],172],[[],173],[[],174],[[],175],[[],176],[[],177],[[],178],[[],179],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[172,87]],[[173,87]],[[174,87]],[[175,87]],[[176,87]],[[177,87]],[[178,87]],[[179,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[171,16],17],[[172,16],17],[[173,16],17],[[174,16],17],[[175,16],17],[[176,16],17],[[177,16],17],[[178,16],17],[[179,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[172,87]],[[173,87]],[[174,87]],[[175,87]],[[176,87]],[[177,87]],[[178,87]],[[179,87]],0,0,0,0,[[172,87]],[[173,87]],[[174,87]],[[175,87]],[[176,87]],[[177,87]],[[178,87]],[[179,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[171,[106,[105]]],107],[[172,[106,[105]]],107],[[173,[106,[105]]],107],[[174,[106,[105]]],107],[[175,[106,[105]]],107],[[176,[106,[105]]],107],[[177,[106,[105]]],107],[[178,[106,[105]]],107],[[179,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[180],[[]],[[]],[180,180],[[]],0,[180],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[180,16],17],[[]],[180],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[180,101],[102],[69],[69],[180],[180,181],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[180],[180],[[]],[[180,[106,[105]]],107],[[]],0,0,0,[26],[26],[26],0,0,[[182,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[181,181],[182,182],[183,183],[[]],[[]],[[]],[[],182],[[],183],[11],[11],[11],[11],[11],[11],[[182,87]],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[181,16],17],[[182,16],17],[[183,16],17],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[182,87]],0,[[182,87]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[181,[106,[105]]],107],[[182,[106,[105]]],107],[[183,[106,[105]]],107],0,0,0,0,0,0,0,[26],[[]],0,[184],[[]],[[]],[184,184],[[]],0,[184],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[184,16],17],[[]],[184],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[184,101],[102],[69],[69],[184],[184,185],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[184],[184],[[]],[[184,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[186,87]],[[187,87]],[[188,87]],[[189,87]],[[190,87]],[[191,87]],[[192,87]],[[193,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],186],[[],187],[[],188],[[],189],[[],190],[[],191],[[],192],[[],193],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[186,87]],[[187,87]],[[188,87]],[[189,87]],[[190,87]],[[191,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],0,[[185,16],17],[[186,16],17],[[187,16],17],[[188,16],17],[[189,16],17],[[190,16],17],[[191,16],17],[[192,16],17],[[193,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[186,87]],[[187,87]],[[188,87]],[[189,87]],[[190,87]],[[191,87]],0,0,0,0,[[186,87]],[[187,87]],[[188,87]],[[189,87]],[[190,87]],[[191,87]],[[192,87]],[[193,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[185,[106,[105]]],107],[[186,[106,[105]]],107],[[187,[106,[105]]],107],[[188,[106,[105]]],107],[[189,[106,[105]]],107],[[190,[106,[105]]],107],[[191,[106,[105]]],107],[[192,[106,[105]]],107],[[193,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[194],[[]],[[]],[194,194],[[]],0,[194],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[194,16],17],[[]],[194],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[194,101],[102],[69],[69],[194],[194,195],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[194],[194],[[]],[[194,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[196,87]],[[197,87]],[[198,87]],[[199,87]],[[200,87]],[[201,87]],[[202,87]],[[203,87]],[[204,87]],[[205,87]],[[206,87]],[[207,87]],[[208,87]],[[209,87]],[[210,87]],[[211,87]],[[212,87]],[[213,87]],[[214,87]],[[215,87]],[[216,87]],[[217,87]],[[218,87]],[[219,87]],[[220,87]],[[221,87]],[[222,87]],[[223,87]],[[224,87]],[[225,87]],[[226,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[227,227],[215,215],[216,216],[217,217],[218,218],[219,219],[220,220],[221,221],[222,222],[223,223],[224,224],[225,225],[228,228],[226,226],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],196],[[],197],[[],198],[[],199],[[],200],[[],201],[[],202],[[],203],[[],204],[[],205],[[],206],[[],207],[[],208],[[],209],[[],210],[[],211],[[],212],[[],213],[[],214],[[],227],[[],215],[[],216],[[],217],[[],218],[[],219],[[],220],[[],221],[[],222],[[],223],[[],224],[[],225],[[],228],[[],226],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[196,87]],[[197,87]],[[198,87]],[[199,87]],[[200,87]],[[201,87]],[[202,87]],[[203,87]],[[204,87]],[[205,87]],[[206,87]],[[207,87]],[[208,87]],[[209,87]],[[210,87]],[[211,87]],[[212,87]],[[213,87]],[[214,87]],[[215,87]],[[216,87]],[[217,87]],[[218,87]],[[219,87]],[[220,87]],[[221,87]],[[222,87]],[[223,87]],[[224,87]],[[225,87]],[[226,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],0,[[195,16],17],[[196,16],17],[[197,16],17],[[198,16],17],[[199,16],17],[[200,16],17],[[201,16],17],[[202,16],17],[[203,16],17],[[204,16],17],[[205,16],17],[[206,16],17],[[207,16],17],[[208,16],17],[[209,16],17],[[210,16],17],[[211,16],17],[[212,16],17],[[213,16],17],[[214,16],17],[[227,16],17],[[215,16],17],[[216,16],17],[[217,16],17],[[218,16],17],[[219,16],17],[[220,16],17],[[221,16],17],[[222,16],17],[[223,16],17],[[224,16],17],[[225,16],17],[[228,16],17],[[226,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[196,87]],[[197,87]],[[198,87]],[[199,87]],[[200,87]],[[201,87]],[[202,87]],[[203,87]],[[204,87]],[[205,87]],[[206,87]],[[207,87]],[[208,87]],[[209,87]],[[210,87]],[[211,87]],[[212,87]],[[213,87]],[[214,87]],[[215,87]],[[216,87]],[[217,87]],[[218,87]],[[219,87]],[[220,87]],[[221,87]],[[222,87]],[[223,87]],[[224,87]],[[225,87]],[[226,87]],0,0,0,0,0,0,0,0,[[196,87]],[[197,87]],[[198,87]],[[199,87]],[[200,87]],[[201,87]],[[202,87]],[[203,87]],[[204,87]],[[205,87]],[[206,87]],[[207,87]],[[208,87]],[[209,87]],[[210,87]],[[211,87]],[[212,87]],[[213,87]],[[214,87]],[[215,87]],[[216,87]],[[217,87]],[[218,87]],[[219,87]],[[220,87]],[[221,87]],[[222,87]],[[223,87]],[[224,87]],[[225,87]],[[226,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[195,[106,[105]]],107],[[196,[106,[105]]],107],[[197,[106,[105]]],107],[[198,[106,[105]]],107],[[199,[106,[105]]],107],[[200,[106,[105]]],107],[[201,[106,[105]]],107],[[202,[106,[105]]],107],[[203,[106,[105]]],107],[[204,[106,[105]]],107],[[205,[106,[105]]],107],[[206,[106,[105]]],107],[[207,[106,[105]]],107],[[208,[106,[105]]],107],[[209,[106,[105]]],107],[[210,[106,[105]]],107],[[211,[106,[105]]],107],[[212,[106,[105]]],107],[[213,[106,[105]]],107],[[214,[106,[105]]],107],[[227,[106,[105]]],107],[[215,[106,[105]]],107],[[216,[106,[105]]],107],[[217,[106,[105]]],107],[[218,[106,[105]]],107],[[219,[106,[105]]],107],[[220,[106,[105]]],107],[[221,[106,[105]]],107],[[222,[106,[105]]],107],[[223,[106,[105]]],107],[[224,[106,[105]]],107],[[225,[106,[105]]],107],[[228,[106,[105]]],107],[[226,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[229],[[]],[[]],[229,229],[[]],0,[229],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[229,16],17],[[]],[229],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[229,101],[102],[69],[69],[229],[229,230],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[229],[229],[[]],[[229,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[231,87]],[[232,87]],[[233,87]],[[234,87]],[[235,87]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[230,230],[231,231],[232,232],[233,233],[234,234],[235,235],[[]],[[]],[[]],[[]],[[]],[[]],[[],231],[[],232],[[],233],[[],234],[[],235],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[231,87]],[[232,87]],[[233,87]],[[234,87]],[[235,87]],[11],[11],[11],[11],[11],[11],0,[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[230,16],17],[[231,16],17],[[232,16],17],[[233,16],17],[[234,16],17],[[235,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[231,87]],[[232,87]],[[233,87]],[[234,87]],[[235,87]],0,0,[[231,87]],[[232,87]],[[233,87]],[[234,87]],[[235,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[230,[106,[105]]],107],[[231,[106,[105]]],107],[[232,[106,[105]]],107],[[233,[106,[105]]],107],[[234,[106,[105]]],107],[[235,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[236],[[]],[[]],[236,236],[[]],0,[236],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[236,16],17],[[]],[236],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[236,101],[102],[69],[69],[236],[236,237],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[236],[236],[[]],[[236,[106,[105]]],107],[[]],0,0,0,0,0,[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,[[238,87]],[[239,87]],[[240,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[237,237],[238,238],[239,239],[240,240],[241,241],[[]],[[]],[[]],[[]],[[]],[[],238],[[],239],[[],240],[[],241],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[238,87]],[[239,87]],[[240,87]],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[237,16],17],[[238,16],17],[[239,16],17],[[240,16],17],[[241,16],17],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[238,87]],[[239,87]],[[240,87]],0,0,0,0,[[238,87]],[[239,87]],[[240,87]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[237,[106,[105]]],107],[[238,[106,[105]]],107],[[239,[106,[105]]],107],[[240,[106,[105]]],107],[[241,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[242],[[]],[[]],[242,242],[[]],0,[242],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[242,16],17],[[]],[242],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[242,101],[102],[69],[69],[242],[242,243],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[242],[242],[[]],[[242,[106,[105]]],107],[[]],0,0,0,0,[26],[26],[26],[26],0,0,0,0,0,0,[[244,87]],[[245,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[243,243],[244,244],[246,246],[245,245],[[]],[[]],[[]],[[]],[[],244],[[],246],[[],245],[11],[11],[11],[11],[11],[11],[11],[11],[[244,87]],[[245,87]],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[243,16],17],[[244,16],17],[[246,16],17],[[245,16],17],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[244,87]],[[245,87]],0,[[244,87]],[[245,87]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[243,[106,[105]]],107],[[244,[106,[105]]],107],[[246,[106,[105]]],107],[[245,[106,[105]]],107],0,0,0,0,0,0,0,0,0,[26],[[]],0,[247],[[]],[[]],[247,247],[[]],0,[247],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[247,16],17],[[]],[247],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[247,101],[102],[69],[69],[247],[247,248],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[247],[247],[[]],[[247,[106,[105]]],107],[[]],0,0,0,0,0,[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,[[249,87]],[[250,87]],[[251,87]],[[252,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[248,248],[249,249],[250,250],[251,251],[252,252],[[]],[[]],[[]],[[]],[[]],[[],249],[[],250],[[],251],[[],252],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[249,87]],[[250,87]],[[251,87]],[[252,87]],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[248,16],17],[[249,16],17],[[250,16],17],[[251,16],17],[[252,16],17],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[249,87]],[[250,87]],[[251,87]],[[252,87]],0,0,[[249,87]],[[250,87]],[[251,87]],[[252,87]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[248,[106,[105]]],107],[[249,[106,[105]]],107],[[250,[106,[105]]],107],[[251,[106,[105]]],107],[[252,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[253],[[]],[[]],[253,253],[[]],0,[253],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[253,16],17],[[]],[253],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[253,101],[102],[69],[69],[253],[253,254],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[253],[253],[[]],[[253,[106,[105]]],107],[[]],0,0,0,0,0,[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,[[255,87]],[[256,87]],[[257,87]],[[258,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[254,254],[255,255],[256,256],[257,257],[258,258],[[]],[[]],[[]],[[]],[[]],[[],255],[[],256],[[],257],[[],258],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[255,87]],[[256,87]],[[257,87]],[[258,87]],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[254,16],17],[[255,16],17],[[256,16],17],[[257,16],17],[[258,16],17],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[255,87]],[[256,87]],[[257,87]],[[258,87]],0,0,[[255,87]],[[256,87]],[[257,87]],[[258,87]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[254,[106,[105]]],107],[[255,[106,[105]]],107],[[256,[106,[105]]],107],[[257,[106,[105]]],107],[[258,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[259],[[]],[[]],[259,259],[[]],0,[259],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[259,16],17],[[]],[259],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[259,101],[102],[69],[69],[259],[259,260],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[259],[259],[[]],[[259,[106,[105]]],107],[[]],0,0,0,0,0,[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,[[261,87]],[[262,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[260,260],[261,261],[262,262],[263,263],[264,264],[[]],[[]],[[]],[[]],[[]],[[],261],[[],262],[[],263],[[],264],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[261,87]],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[260,16],17],[[261,16],17],[[262,16],17],[[263,16],17],[[264,16],17],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[261,87]],0,0,0,[[261,87]],[[262,87]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[260,[106,[105]]],107],[[261,[106,[105]]],107],[[262,[106,[105]]],107],[[263,[106,[105]]],107],[[264,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[265],[[]],[[]],[265,265],[[]],0,[265],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[265,16],17],[[]],[265],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[265,101],[102],[69],[69],[265],[265,266],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[265],[265],[[]],[[265,[106,[105]]],107],[[]],0,0,0,0,0,[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,[[267,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[266,266],[267,267],[268,268],[269,269],[270,270],[[]],[[]],[[]],[[]],[[]],[[],267],[[],268],[[],269],[[],270],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[267,87]],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],0,[[266,16],17],[[267,16],17],[[268,16],17],[[269,16],17],[[270,16],17],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[267,87]],0,0,0,[[267,87]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[266,[106,[105]]],107],[[267,[106,[105]]],107],[[268,[106,[105]]],107],[[269,[106,[105]]],107],[[270,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[271],[[]],[[]],[271,271],[[]],0,[271],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[271,16],17],[[]],[271],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[271,101],[102],[69],[69],[271],[271,272],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[271],[271],[[]],[[271,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[273,87]],[[274,87]],[[275,87]],[[276,87]],[[277,87]],[[278,87]],[[279,87]],[[280,87]],[[281,87]],[[282,87]],[[283,87]],[[284,87]],[[285,87]],[[286,87]],[[287,87]],[[288,87]],[[289,87]],[[290,87]],[[291,87]],[[292,87]],[[293,87]],[[294,87]],[[295,87]],[[296,87]],[[297,87]],[[298,87]],[[299,87]],[[300,87]],[[301,87]],[[302,87]],[[303,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[272,272],[273,273],[274,274],[304,304],[275,275],[276,276],[277,277],[278,278],[279,279],[280,280],[281,281],[282,282],[283,283],[284,284],[285,285],[286,286],[287,287],[305,305],[288,288],[289,289],[290,290],[291,291],[292,292],[293,293],[294,294],[295,295],[296,296],[297,297],[298,298],[299,299],[300,300],[301,301],[302,302],[303,303],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],273],[[],274],[[],304],[[],275],[[],276],[[],277],[[],278],[[],279],[[],280],[[],281],[[],282],[[],283],[[],284],[[],285],[[],286],[[],287],[[],305],[[],288],[[],289],[[],290],[[],291],[[],292],[[],293],[[],294],[[],295],[[],296],[[],297],[[],298],[[],299],[[],300],[[],301],[[],302],[[],303],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[273,87]],[[274,87]],[[275,87]],[[276,87]],[[277,87]],[[278,87]],[[279,87]],[[280,87]],[[281,87]],[[282,87]],[[283,87]],[[284,87]],[[285,87]],[[286,87]],[[287,87]],[[288,87]],[[289,87]],[[290,87]],[[291,87]],[[292,87]],[[293,87]],[[294,87]],[[295,87]],[[296,87]],[[297,87]],[[298,87]],[[299,87]],[[300,87]],[[301,87]],[[302,87]],[[303,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,0,[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[272,16],17],[[273,16],17],[[274,16],17],[[304,16],17],[[275,16],17],[[276,16],17],[[277,16],17],[[278,16],17],[[279,16],17],[[280,16],17],[[281,16],17],[[282,16],17],[[283,16],17],[[284,16],17],[[285,16],17],[[286,16],17],[[287,16],17],[[305,16],17],[[288,16],17],[[289,16],17],[[290,16],17],[[291,16],17],[[292,16],17],[[293,16],17],[[294,16],17],[[295,16],17],[[296,16],17],[[297,16],17],[[298,16],17],[[299,16],17],[[300,16],17],[[301,16],17],[[302,16],17],[[303,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[273,87]],[[274,87]],[[275,87]],[[276,87]],[[277,87]],[[278,87]],[[279,87]],[[280,87]],[[281,87]],[[282,87]],[[283,87]],[[284,87]],[[285,87]],[[286,87]],[[287,87]],[[288,87]],[[289,87]],[[290,87]],[[291,87]],[[292,87]],[[293,87]],[[294,87]],[[295,87]],[[296,87]],[[297,87]],[[298,87]],[[299,87]],[[300,87]],[[301,87]],[[302,87]],[[303,87]],0,0,0,0,0,0,0,0,[[273,87]],[[274,87]],[[275,87]],[[276,87]],[[277,87]],[[278,87]],[[279,87]],[[280,87]],[[281,87]],[[282,87]],[[283,87]],[[284,87]],[[285,87]],[[286,87]],[[287,87]],[[288,87]],[[289,87]],[[290,87]],[[291,87]],[[292,87]],[[293,87]],[[294,87]],[[295,87]],[[296,87]],[[297,87]],[[298,87]],[[299,87]],[[300,87]],[[301,87]],[[302,87]],[[303,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[272,[106,[105]]],107],[[273,[106,[105]]],107],[[274,[106,[105]]],107],[[304,[106,[105]]],107],[[275,[106,[105]]],107],[[276,[106,[105]]],107],[[277,[106,[105]]],107],[[278,[106,[105]]],107],[[279,[106,[105]]],107],[[280,[106,[105]]],107],[[281,[106,[105]]],107],[[282,[106,[105]]],107],[[283,[106,[105]]],107],[[284,[106,[105]]],107],[[285,[106,[105]]],107],[[286,[106,[105]]],107],[[287,[106,[105]]],107],[[305,[106,[105]]],107],[[288,[106,[105]]],107],[[289,[106,[105]]],107],[[290,[106,[105]]],107],[[291,[106,[105]]],107],[[292,[106,[105]]],107],[[293,[106,[105]]],107],[[294,[106,[105]]],107],[[295,[106,[105]]],107],[[296,[106,[105]]],107],[[297,[106,[105]]],107],[[298,[106,[105]]],107],[[299,[106,[105]]],107],[[300,[106,[105]]],107],[[301,[106,[105]]],107],[[302,[106,[105]]],107],[[303,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[306],[[]],[[]],[306,306],[[]],0,[306],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[306,16],17],[[]],[306],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[306,101],[102],[69],[69],[306],[306,307],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[306],[306],[[]],[[306,[106,[105]]],107],[[]],0,0,0,0,[26],[26],[26],[26],0,0,0,0,0,0,[[308,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[307,307],[308,308],[309,309],[310,310],[[]],[[]],[[]],[[]],[[],308],[[],309],[[],310],[11],[11],[11],[11],[11],[11],[11],[11],[[308,87]],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[307,16],17],[[308,16],17],[[309,16],17],[[310,16],17],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[308,87]],0,[[308,87]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[307,[106,[105]]],107],[[308,[106,[105]]],107],[[309,[106,[105]]],107],[[310,[106,[105]]],107],0,0,0,0,0,0,0,0,0,[26],[[]],0,[311],[[]],[[]],[311,311],[[]],0,[311],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[311,16],17],[[]],[311],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[311,101],[102],[69],[69],[311],[311,312],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[311],[311],[[]],[[311,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[313,87]],[[314,87]],[[315,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[312,312],[313,313],[314,314],[316,316],[317,317],[315,315],[[]],[[]],[[]],[[]],[[]],[[]],[[],313],[[],314],[[],316],[[],317],[[],315],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[313,87]],[[314,87]],[[315,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[312,16],17],[[313,16],17],[[314,16],17],[[316,16],17],[[317,16],17],[[315,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[313,87]],[[314,87]],[[315,87]],0,0,0,[[313,87]],[[314,87]],[[315,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[312,[106,[105]]],107],[[313,[106,[105]]],107],[[314,[106,[105]]],107],[[316,[106,[105]]],107],[[317,[106,[105]]],107],[[315,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[318],[[]],[[]],[318,318],[[]],0,[318],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[318,16],17],[[]],[318],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[318,101],[102],[69],[69],[318],[318,319],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[318],[318],[[]],[[318,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[320,87]],[[321,87]],[[322,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[319,319],[320,320],[321,321],[323,323],[324,324],[325,325],[326,326],[322,322],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],320],[[],321],[[],323],[[],324],[[],325],[[],326],[[],322],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[320,87]],[[321,87]],[[322,87]],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[319,16],17],[[320,16],17],[[321,16],17],[[323,16],17],[[324,16],17],[[325,16],17],[[326,16],17],[[322,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,[[320,87]],[[321,87]],[[322,87]],0,0,0,[[320,87]],[[321,87]],[[322,87]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[319,[106,[105]]],107],[[320,[106,[105]]],107],[[321,[106,[105]]],107],[[323,[106,[105]]],107],[[324,[106,[105]]],107],[[325,[106,[105]]],107],[[326,[106,[105]]],107],[[322,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[327],[[]],[[]],[327,327],[[]],0,[327],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[327,16],17],[[]],[327],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[327,101],[102],[69],[69],[327],[327,328],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[327],[327],[[]],[[327,[106,[105]]],107],[[]],0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[329,87]],[[330,87]],[[331,87]],[[332,87]],[[333,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[328,328],[329,329],[330,330],[331,331],[332,332],[334,334],[333,333],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],329],[[],330],[[],331],[[],332],[[],334],[[],333],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[329,87]],[[330,87]],[[332,87]],[[333,87]],[11],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],0,0,[[328,16],17],[[329,16],17],[[330,16],17],[[331,16],17],[[332,16],17],[[334,16],17],[[333,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[329,87]],[[330,87]],[[332,87]],[[333,87]],0,0,0,0,[[329,87]],[[330,87]],[[331,87]],[[332,87]],[[333,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[328,[106,[105]]],107],[[329,[106,[105]]],107],[[330,[106,[105]]],107],[[331,[106,[105]]],107],[[332,[106,[105]]],107],[[334,[106,[105]]],107],[[333,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[335],[[]],[[]],[335,335],[[]],0,[335],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[335,16],17],[[]],[335],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[335,101],[102],[69],[69],[335],[335,336],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[335],[335],[[]],[[335,[106,[105]]],107],[[]],0,0,0,0,[26],[26],[26],[26],0,0,0,0,0,0,[[337,87]],[[338,87]],[[339,87]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[336,336],[337,337],[338,338],[339,339],[[]],[[]],[[]],[[]],[[],337],[[],338],[[],339],[11],[11],[11],[11],[11],[11],[11],[11],[[337,87]],[[338,87]],[[339,87]],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[336,16],17],[[337,16],17],[[338,16],17],[[339,16],17],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[337,87]],[[338,87]],[[339,87]],0,0,[[337,87]],[[338,87]],[[339,87]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[336,[106,[105]]],107],[[337,[106,[105]]],107],[[338,[106,[105]]],107],[[339,[106,[105]]],107],0,0,0,0,0,0,0,0,0,[26],[[]],0,[340],[[]],[[]],[340,340],[[]],0,[340],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[340,16],17],[[]],[340],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[340,101],[102],[69],[69],[340],[340,341],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[340],[340],[[]],[[340,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[342,87]],[[343,87]],[[344,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[341,341],[342,342],[343,343],[345,345],[346,346],[347,347],[348,348],[344,344],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],342],[[],343],[[],345],[[],346],[[],347],[[],348],[[],344],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[342,87]],[[343,87]],[[344,87]],0,0,[11],[11],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[341,16],17],[[342,16],17],[[343,16],17],[[345,16],17],[[346,16],17],[[347,16],17],[[348,16],17],[[344,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,[[342,87]],[[343,87]],[[344,87]],0,0,[[342,87]],[[343,87]],[[344,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[341,[106,[105]]],107],[[342,[106,[105]]],107],[[343,[106,[105]]],107],[[345,[106,[105]]],107],[[346,[106,[105]]],107],[[347,[106,[105]]],107],[[348,[106,[105]]],107],[[344,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[349],[[]],[[]],[349,349],[[]],0,[349],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[349,16],17],[[]],[349],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[349,101],[102],[69],[69],[349],[349,350],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[349],[349],[[]],[[349,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[351,87]],[[352,87]],[[353,87]],[[354,87]],[[355,87]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[350,350],[351,351],[352,352],[353,353],[354,354],[355,355],[[]],[[]],[[]],[[]],[[]],[[]],[[],351],[[],352],[[],353],[[],354],[[],355],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[351,87]],[[352,87]],[[353,87]],[[354,87]],[[355,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[350,16],17],[[351,16],17],[[352,16],17],[[353,16],17],[[354,16],17],[[355,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[351,87]],[[352,87]],[[353,87]],[[354,87]],[[355,87]],0,0,[[351,87]],[[352,87]],[[353,87]],[[354,87]],[[355,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[350,[106,[105]]],107],[[351,[106,[105]]],107],[[352,[106,[105]]],107],[[353,[106,[105]]],107],[[354,[106,[105]]],107],[[355,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[356],[[]],[[]],[356,356],[[]],0,[356],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[356,16],17],[[]],[356],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[356,101],[102],[69],[69],[356],[356,357],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[356],[356],[[]],[[356,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[358,87]],[[359,87]],[[360,87]],[[361,87]],[[362,87]],[[363,87]],[[364,87]],[[365,87]],[[366,87]],[[367,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[357,357],[358,358],[359,359],[360,360],[368,368],[361,361],[362,362],[363,363],[364,364],[365,365],[366,366],[367,367],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],358],[[],359],[[],360],[[],368],[[],361],[[],362],[[],363],[[],364],[[],365],[[],366],[[],367],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[358,87]],[[359,87]],[[360,87]],[[361,87]],[[362,87]],[[363,87]],[[364,87]],[[365,87]],[[366,87]],[[367,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],0,[[357,16],17],[[358,16],17],[[359,16],17],[[360,16],17],[[368,16],17],[[361,16],17],[[362,16],17],[[363,16],17],[[364,16],17],[[365,16],17],[[366,16],17],[[367,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,[[358,87]],[[359,87]],[[360,87]],[[361,87]],[[362,87]],[[363,87]],[[364,87]],[[365,87]],[[366,87]],[[367,87]],0,0,0,0,[[358,87]],[[359,87]],[[360,87]],[[361,87]],[[362,87]],[[363,87]],[[364,87]],[[365,87]],[[366,87]],[[367,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[357,[106,[105]]],107],[[358,[106,[105]]],107],[[359,[106,[105]]],107],[[360,[106,[105]]],107],[[368,[106,[105]]],107],[[361,[106,[105]]],107],[[362,[106,[105]]],107],[[363,[106,[105]]],107],[[364,[106,[105]]],107],[[365,[106,[105]]],107],[[366,[106,[105]]],107],[[367,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[369],[[]],[[]],[369,369],[[]],0,[369],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[369,16],17],[[]],[369],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[369,101],[102],[69],[69],[369],[369,370],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[369],[369],[[]],[[369,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[371,87]],[[372,87]],[[373,87]],[[374,87]],[[375,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[370,370],[371,371],[372,372],[373,373],[374,374],[375,375],[[]],[[]],[[]],[[]],[[]],[[]],[[],371],[[],372],[[],373],[[],374],[[],375],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[371,87]],[[372,87]],[[373,87]],[[374,87]],[[375,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[370,16],17],[[371,16],17],[[372,16],17],[[373,16],17],[[374,16],17],[[375,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[371,87]],[[372,87]],[[373,87]],[[374,87]],[[375,87]],0,0,[[371,87]],[[372,87]],[[373,87]],[[374,87]],[[375,87]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[370,[106,[105]]],107],[[371,[106,[105]]],107],[[372,[106,[105]]],107],[[373,[106,[105]]],107],[[374,[106,[105]]],107],[[375,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[376],[[]],[[]],[376,376],[[]],0,[376],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[376,16],17],[[]],[376],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[376,101],[102],[69],[69],[376],[376,377],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[376],[376],[[]],[[376,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[378,87]],[[379,87]],[[380,87]],[[381,87]],[[382,87]],[[383,87]],[[384,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[377,377],[378,378],[379,379],[380,380],[381,381],[382,382],[385,385],[383,383],[386,386],[384,384],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],378],[[],379],[[],380],[[],381],[[],382],[[],385],[[],383],[[],386],[[],384],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[378,87]],[[379,87]],[[380,87]],[[381,87]],[[382,87]],[[383,87]],[[384,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],0,[[377,16],17],[[378,16],17],[[379,16],17],[[380,16],17],[[381,16],17],[[382,16],17],[[385,16],17],[[383,16],17],[[386,16],17],[[384,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[378,87]],[[379,87]],[[380,87]],[[381,87]],[[382,87]],[[383,87]],[[384,87]],0,0,0,0,[[378,87]],[[379,87]],[[380,87]],[[381,87]],[[382,87]],[[383,87]],[[384,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[377,[106,[105]]],107],[[378,[106,[105]]],107],[[379,[106,[105]]],107],[[380,[106,[105]]],107],[[381,[106,[105]]],107],[[382,[106,[105]]],107],[[385,[106,[105]]],107],[[383,[106,[105]]],107],[[386,[106,[105]]],107],[[384,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[387],[[]],[[]],[387,387],[[]],0,[387],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[387,16],17],[[]],[387],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[387,101],[102],[69],[69],[387],[387,388],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[387],[387],[[]],[[387,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[389,87]],[[390,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[388,388],[389,389],[391,391],[390,390],[392,392],[393,393],[[]],[[]],[[]],[[]],[[]],[[]],[[],389],[[],391],[[],390],[[],392],[[],393],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[389,87]],[[390,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[388,16],17],[[389,16],17],[[391,16],17],[[390,16],17],[[392,16],17],[[393,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[389,87]],[[390,87]],0,[[389,87]],[[390,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[388,[106,[105]]],107],[[389,[106,[105]]],107],[[391,[106,[105]]],107],[[390,[106,[105]]],107],[[392,[106,[105]]],107],[[393,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[394],[[]],[[]],[394,394],[[]],0,[394],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[394,16],17],[[]],[394],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[394,101],[102],[69],[69],[394],[394,395],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[394],[394],[[]],[[394,[106,[105]]],107],[[]],0,0,0,0,0,[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,[[396,87]],[[397,87]],[[398,87]],[[399,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[395,395],[396,396],[397,397],[398,398],[399,399],[[]],[[]],[[]],[[]],[[]],[[],396],[[],397],[[],398],[[],399],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[396,87]],[[397,87]],[[398,87]],[[399,87]],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[395,16],17],[[396,16],17],[[397,16],17],[[398,16],17],[[399,16],17],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[396,87]],[[397,87]],[[398,87]],[[399,87]],0,[[396,87]],[[397,87]],[[398,87]],[[399,87]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[395,[106,[105]]],107],[[396,[106,[105]]],107],[[397,[106,[105]]],107],[[398,[106,[105]]],107],[[399,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[400],[[]],[[]],[400,400],[[]],0,[400],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[400,16],17],[[]],[400],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[400,101],[102],[69],[69],[400],[400,401],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[400],[400],[[]],[[400,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[402,87]],[[403,87]],[[404,87]],[[405,87]],[[406,87]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[401,401],[402,402],[403,403],[404,404],[405,405],[406,406],[[]],[[]],[[]],[[]],[[]],[[]],[[],402],[[],403],[[],404],[[],405],[[],406],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[402,87]],[[403,87]],[[404,87]],[[405,87]],[[406,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[401,16],17],[[402,16],17],[[403,16],17],[[404,16],17],[[405,16],17],[[406,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[402,87]],[[403,87]],[[404,87]],[[405,87]],[[406,87]],0,[[402,87]],[[403,87]],[[404,87]],[[405,87]],[[406,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[401,[106,[105]]],107],[[402,[106,[105]]],107],[[403,[106,[105]]],107],[[404,[106,[105]]],107],[[405,[106,[105]]],107],[[406,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[407],[[]],[[]],[407,407],[[]],0,[407],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[407,16],17],[[]],[407],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[407,101],[102],[69],[69],[407],[407,408],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[407],[407],[[]],[[407,[106,[105]]],107],[[]],0,0,0,0,[26],[26],[26],[26],0,0,0,0,0,0,[[409,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[408,408],[409,409],[410,410],[411,411],[[]],[[]],[[]],[[]],[[],409],[[],410],[[],411],[11],[11],[11],[11],[11],[11],[11],[11],[[409,87]],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[408,16],17],[[409,16],17],[[410,16],17],[[411,16],17],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[409,87]],0,0,0,[[409,87]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[408,[106,[105]]],107],[[409,[106,[105]]],107],[[410,[106,[105]]],107],[[411,[106,[105]]],107],0,0,0,0,0,0,0,0,0,[26],[[]],0,[412],[[]],[[]],[412,412],[[]],0,[412],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[412,16],17],[[]],[412],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[412,101],[102],[69],[69],[412],[412,413],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[412],[412],[[]],[[412,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[414,87]],[[415,87]],[[416,87]],[[417,87]],[[418,87]],[[419,87]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[413,413],[414,414],[415,415],[420,420],[416,416],[417,417],[418,418],[419,419],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],414],[[],415],[[],420],[[],416],[[],417],[[],418],[[],419],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[414,87]],[[415,87]],[[416,87]],[[417,87]],[[418,87]],[[419,87]],[11],[11],[11],[11],[11],[11],[11],[11],0,[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[413,16],17],[[414,16],17],[[415,16],17],[[420,16],17],[[416,16],17],[[417,16],17],[[418,16],17],[[419,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[414,87]],[[415,87]],[[416,87]],[[417,87]],[[418,87]],[[419,87]],0,0,0,[[414,87]],[[415,87]],[[416,87]],[[417,87]],[[418,87]],[[419,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[413,[106,[105]]],107],[[414,[106,[105]]],107],[[415,[106,[105]]],107],[[420,[106,[105]]],107],[[416,[106,[105]]],107],[[417,[106,[105]]],107],[[418,[106,[105]]],107],[[419,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[421],[[]],[[]],[421,421],[[]],0,[421],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[421,16],17],[[]],[421],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[421,101],[102],[69],[69],[421],[421,422],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[421],[421],[[]],[[421,[106,[105]]],107],[[]],0,0,0,0,0,[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,[[423,87]],[[424,87]],[[425,87]],[[426,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[422,422],[423,423],[424,424],[425,425],[426,426],[[]],[[]],[[]],[[]],[[]],[[],423],[[],424],[[],425],[[],426],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[423,87]],[[424,87]],[[425,87]],[[426,87]],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[422,16],17],[[423,16],17],[[424,16],17],[[425,16],17],[[426,16],17],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[423,87]],[[424,87]],[[425,87]],[[426,87]],0,0,0,0,[[423,87]],[[424,87]],[[425,87]],[[426,87]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[422,[106,[105]]],107],[[423,[106,[105]]],107],[[424,[106,[105]]],107],[[425,[106,[105]]],107],[[426,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[427],[[]],[[]],[427,427],[[]],0,[427],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[427,16],17],[[]],[427],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[427,101],[102],[69],[69],[427],[427,428],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[427],[427],[[]],[[427,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[429,87]],[[430,87]],[[431,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[428,428],[429,429],[430,430],[432,432],[433,433],[434,434],[435,435],[431,431],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],429],[[],430],[[],432],[[],433],[[],434],[[],435],[[],431],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[429,87]],[[430,87]],[[431,87]],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[428,16],17],[[429,16],17],[[430,16],17],[[432,16],17],[[433,16],17],[[434,16],17],[[435,16],17],[[431,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,[[429,87]],[[430,87]],[[431,87]],0,0,[[429,87]],[[430,87]],[[431,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[428,[106,[105]]],107],[[429,[106,[105]]],107],[[430,[106,[105]]],107],[[432,[106,[105]]],107],[[433,[106,[105]]],107],[[434,[106,[105]]],107],[[435,[106,[105]]],107],[[431,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[436],[[]],[[]],[436,436],[[]],0,[436],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[436,16],17],[[]],[436],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[436,101],[102],[69],[69],[436],[436,437],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[436],[436],[[]],[[436,[106,[105]]],107],[[]],0,0,0,0,0,[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,[[438,87]],[[439,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[437,437],[438,438],[440,440],[439,439],[441,441],[[]],[[]],[[]],[[]],[[]],[[],438],[[],440],[[],439],[[],441],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],0,[[438,87]],[[439,87]],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[437,16],17],[[438,16],17],[[440,16],17],[[439,16],17],[[441,16],17],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[438,87]],[[439,87]],0,0,[[438,87]],[[439,87]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[437,[106,[105]]],107],[[438,[106,[105]]],107],[[440,[106,[105]]],107],[[439,[106,[105]]],107],[[441,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[442],[[]],[[]],[442,442],[[]],0,[442],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[442,16],17],[[]],[442],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[442,101],[102],[69],[69],[442],[442,443],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[442],[442],[[]],[[442,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[444,87]],[[445,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[443,443],[444,444],[446,446],[447,447],[448,448],[445,445],[[]],[[]],[[]],[[]],[[]],[[]],[[],444],[[],446],[[],447],[[],448],[[],445],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[444,87]],[[445,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[443,16],17],[[444,16],17],[[446,16],17],[[447,16],17],[[448,16],17],[[445,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[444,87]],[[445,87]],0,0,[[444,87]],[[445,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[443,[106,[105]]],107],[[444,[106,[105]]],107],[[446,[106,[105]]],107],[[447,[106,[105]]],107],[[448,[106,[105]]],107],[[445,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[449],[[]],[[]],[449,449],[[]],0,[449],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[449,16],17],[[]],[449],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[449,101],[102],[69],[69],[449],[449,450],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[449],[449],[[]],[[449,[106,[105]]],107],[[]],0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[451,87]],[[452,87]],[[453,87]],[[454,87]],[[455,87]],[[456,87]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[450,450],[451,451],[452,452],[453,453],[454,454],[455,455],[456,456],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],451],[[],452],[[],453],[[],454],[[],455],[[],456],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[451,87]],[[452,87]],[[453,87]],[[454,87]],[[455,87]],[[456,87]],[11],[11],[11],[11],[11],[11],[11],0,[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[450,16],17],[[451,16],17],[[452,16],17],[[453,16],17],[[454,16],17],[[455,16],17],[[456,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[451,87]],[[452,87]],[[453,87]],[[454,87]],[[455,87]],[[456,87]],0,0,[[451,87]],[[452,87]],[[453,87]],[[454,87]],[[455,87]],[[456,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[450,[106,[105]]],107],[[451,[106,[105]]],107],[[452,[106,[105]]],107],[[453,[106,[105]]],107],[[454,[106,[105]]],107],[[455,[106,[105]]],107],[[456,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[457],[[]],[[]],[457,457],[[]],0,[457],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[457,16],17],[[]],[457],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[457,101],[102],[69],[69],[457],[457,458],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[457],[457],[[]],[[457,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[459,87]],[[460,87]],[[461,87]],[[462,87]],[[463,87]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[458,458],[459,459],[460,460],[461,461],[462,462],[463,463],[[]],[[]],[[]],[[]],[[]],[[]],[[],459],[[],460],[[],461],[[],462],[[],463],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[459,87]],[[460,87]],[[461,87]],[[462,87]],[[463,87]],[11],[11],[11],[11],[11],[11],0,[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[458,16],17],[[459,16],17],[[460,16],17],[[461,16],17],[[462,16],17],[[463,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[459,87]],[[460,87]],[[461,87]],[[462,87]],[[463,87]],0,[[459,87]],[[460,87]],[[461,87]],[[462,87]],[[463,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[458,[106,[105]]],107],[[459,[106,[105]]],107],[[460,[106,[105]]],107],[[461,[106,[105]]],107],[[462,[106,[105]]],107],[[463,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[464],[[]],[[]],[464,464],[[]],0,[464],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[464,16],17],[[]],[464],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[464,101],[102],[69],[69],[464],[464,465],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[464],[464],[[]],[[464,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[466,87]],[[467,87]],[[468,87]],[[469,87]],[[470,87]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[465,465],[466,466],[467,467],[468,468],[469,469],[470,470],[[]],[[]],[[]],[[]],[[]],[[]],[[],466],[[],467],[[],468],[[],469],[[],470],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[466,87]],[[467,87]],[[468,87]],[[469,87]],[[470,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[465,16],17],[[466,16],17],[[467,16],17],[[468,16],17],[[469,16],17],[[470,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[466,87]],[[467,87]],[[468,87]],[[469,87]],[[470,87]],0,[[466,87]],[[467,87]],[[468,87]],[[469,87]],[[470,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[465,[106,[105]]],107],[[466,[106,[105]]],107],[[467,[106,[105]]],107],[[468,[106,[105]]],107],[[469,[106,[105]]],107],[[470,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[471],[[]],[[]],[471,471],[[]],0,[471],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[471,16],17],[[]],[471],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[471,101],[102],[69],[69],[471],[471,472],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[471],[471],[[]],[[471,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[473,87]],[[474,87]],[[475,87]],[[476,87]],[[477,87]],[[478,87]],[[479,87]],[[480,87]],[[481,87]],[[482,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[472,472],[473,473],[483,483],[474,474],[475,475],[476,476],[477,477],[478,478],[479,479],[480,480],[481,481],[484,484],[482,482],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],473],[[],483],[[],474],[[],475],[[],476],[[],477],[[],478],[[],479],[[],480],[[],481],[[],484],[[],482],0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[473,87]],[[474,87]],[[475,87]],[[476,87]],[[477,87]],[[478,87]],[[479,87]],[[480,87]],[[481,87]],[[482,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],0,[[472,16],17],[[473,16],17],[[483,16],17],[[474,16],17],[[475,16],17],[[476,16],17],[[477,16],17],[[478,16],17],[[479,16],17],[[480,16],17],[[481,16],17],[[484,16],17],[[482,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,[[473,87]],[[474,87]],[[475,87]],[[476,87]],[[477,87]],[[478,87]],[[479,87]],[[480,87]],[[481,87]],[[482,87]],0,0,0,0,[[473,87]],[[474,87]],[[475,87]],[[476,87]],[[477,87]],[[478,87]],[[479,87]],[[480,87]],[[481,87]],[[482,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[472,[106,[105]]],107],[[473,[106,[105]]],107],[[483,[106,[105]]],107],[[474,[106,[105]]],107],[[475,[106,[105]]],107],[[476,[106,[105]]],107],[[477,[106,[105]]],107],[[478,[106,[105]]],107],[[479,[106,[105]]],107],[[480,[106,[105]]],107],[[481,[106,[105]]],107],[[484,[106,[105]]],107],[[482,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[485],[[]],[[]],[485,485],[[]],0,[485],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[485,16],17],[[]],[485],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[485,101],[102],[69],[69],[485],[485,486],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[485],[485],[[]],[[485,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[487,87]],[[488,87]],[[489,87]],[[490,87]],[[491,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[486,486],[487,487],[488,488],[489,489],[490,490],[491,491],[[]],[[]],[[]],[[]],[[]],[[]],[[],487],[[],488],[[],489],[[],490],[[],491],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[487,87]],[[488,87]],[[489,87]],[[490,87]],[[491,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[486,16],17],[[487,16],17],[[488,16],17],[[489,16],17],[[490,16],17],[[491,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[487,87]],[[488,87]],[[489,87]],[[490,87]],[[491,87]],0,0,[[487,87]],[[488,87]],[[489,87]],[[490,87]],[[491,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[486,[106,[105]]],107],[[487,[106,[105]]],107],[[488,[106,[105]]],107],[[489,[106,[105]]],107],[[490,[106,[105]]],107],[[491,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[492],[[]],[[]],[492,492],[[]],0,[492],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[492,16],17],[[]],[492],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[492,101],[102],[69],[69],[492],[492,493],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[492],[492],[[]],[[492,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[494,87]],[[495,87]],[[496,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[493,493],[494,494],[495,495],[497,497],[498,498],[496,496],[[]],[[]],[[]],[[]],[[]],[[]],[[],494],[[],495],[[],497],[[],498],[[],496],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[494,87]],[[495,87]],[[496,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[493,16],17],[[494,16],17],[[495,16],17],[[497,16],17],[[498,16],17],[[496,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,0,[[494,87]],[[495,87]],[[496,87]],0,[[494,87]],[[495,87]],[[496,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[493,[106,[105]]],107],[[494,[106,[105]]],107],[[495,[106,[105]]],107],[[497,[106,[105]]],107],[[498,[106,[105]]],107],[[496,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[499],[[]],[[]],[499,499],[[]],0,[499],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[499,16],17],[[]],[499],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[499,101],[102],[69],[69],[499],[499,500],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[499],[499],[[]],[[499,[106,[105]]],107],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[501,87]],[[502,87]],[[503,87]],[[504,87]],[[505,87]],[[506,87]],[[507,87]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[500,500],[501,501],[502,502],[503,503],[508,508],[509,509],[510,510],[511,511],[504,504],[505,505],[512,512],[506,506],[507,507],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],501],[[],502],[[],503],[[],508],[[],509],[[],510],[[],511],[[],504],[[],505],[[],512],[[],506],[[],507],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[501,87]],[[502,87]],[[503,87]],[[504,87]],[[505,87]],[[506,87]],[[507,87]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[500,16],17],[[501,16],17],[[502,16],17],[[503,16],17],[[508,16],17],[[509,16],17],[[510,16],17],[[511,16],17],[[504,16],17],[[505,16],17],[[512,16],17],[[506,16],17],[[507,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[501,87]],[[502,87]],[[503,87]],[[504,87]],[[505,87]],[[506,87]],[[507,87]],0,0,0,0,[[501,87]],[[502,87]],[[503,87]],[[504,87]],[[505,87]],[[506,87]],[[507,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[500,[106,[105]]],107],[[501,[106,[105]]],107],[[502,[106,[105]]],107],[[503,[106,[105]]],107],[[508,[106,[105]]],107],[[509,[106,[105]]],107],[[510,[106,[105]]],107],[[511,[106,[105]]],107],[[504,[106,[105]]],107],[[505,[106,[105]]],107],[[512,[106,[105]]],107],[[506,[106,[105]]],107],[[507,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[[]],0,[513],[[]],[[]],[513,513],[[]],0,[513],[11],[11],[[]],[11],0,[94,[[97,[95,96]]]],[94,[[97,[95,98]]]],[[],[[20,[11,99]]]],[[513,16],17],[[]],[513],[[],11],[[]],[94,[[97,[100,96]]]],[94,[[97,[100,98]]]],[[]],[[],24],[513,101],[102],[69],[69],[513],[513,514],0,[[]],[[]],[[],20],[[],20],[[],25],[94,[[97,[104,96]]]],[94,[[97,[104,98]]]],[513],[513],[[]],[[513,[106,[105]]],107],[[]],0,0,0,0,0,0,[26],[26],[26],[26],[26],[26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[515,87]],[[516,87]],[[517,87]],[[518,87]],[[519,87]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[514,514],[515,515],[516,516],[517,517],[518,518],[519,519],[[]],[[]],[[]],[[]],[[]],[[]],[[],515],[[],516],[[],517],[[],518],[[],519],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[515,87]],[[516,87]],[[517,87]],[[518,87]],[[519,87]],[11],[11],[11],[11],[11],[11],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[],[[20,[11,99]]]],[[514,16],17],[[515,16],17],[[516,16],17],[[517,16],17],[[518,16],17],[[519,16],17],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[515,87]],[[516,87]],[[517,87]],[[518,87]],[[519,87]],0,0,[[515,87]],[[516,87]],[[517,87]],[[518,87]],[[519,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],[[]],[[]],[[514,[106,[105]]],107],[[515,[106,[105]]],107],[[516,[106,[105]]],107],[[517,[106,[105]]],107],[[518,[106,[105]]],107],[[519,[106,[105]]],107],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26],[26],[26],[26],[520],[520],[520],[520],[520],[520],[521],[521],[521],[521],[521],[521],[522],[522],[522],[522],[522],[522],[523],[523],[523],[523],[523],[523],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[520,520],[521,521],[522,522],[523,523],[[]],[[]],[[]],[[]],0,0,0,0,[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[520,16],17],[[521,16],17],[[522,16],17],[[523,16],17],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[520,524],525],[[521,524],525],[[522,524],525],[[523,524],525],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],25],[[],25],[[],25],[[],25],[[]],[[]],[[]],[[]],0,[26],[[]],[[]],[526,526],[[]],[520,23],[11],[11],[11],[[]],[[],[[527,[520]]]],[[],11],[[]],[[],24],[[]],[[],20],[[],20],[[],25],[[]],0,[26],[[]],[[]],[528,528],[[]],[521,23],[11],[11],[11],[[]],[[],[[527,[521]]]],[[],11],[[]],[[],24],[[]],[[],20],[[],20],[[],25],[[]],0,[26],[[]],[[]],[529,529],[[]],[522,23],[11],[11],[11],[[]],[[],[[527,[522]]]],[[],11],[[]],[[],24],[[]],[[],20],[[],20],[[],25],[[]],0,[26],[[]],[[]],[530,530],[[]],[523,23],[11],[11],[11],[[]],[[],[[527,[523]]]],[[],11],[[]],[[],24],[[]],[[],20],[[],20],[[],25],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[11],[11],[11],[11],[11],[11],[11],[[75,75],13],[[],13],0,[[75,16],17],[[75,16],17],[[532,16],17],[[533,16],17],[[]],[[]],[[]],[[[0,[61,62,63]]],[[64,[[0,[61,62,63]]]]]],[[]],[[],11],[[],11],[[],11],[[]],[[]],[[]],[[],24],[[],24],[[],24],[82],0,0,[[75,72],20],[[532,72],20],[[533,72],20],0,0,0,[[],56],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,[[],25],[[],25],[[],25],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[6,4],[[1,[39]]]],[[8,8,9],1],0,[26],[[]],[[]],[9,9],[[]],[[],9],[11],[11],[11],[[9,9],13],[[],13],0,[[9,16],17],[[]],[[],11],[[]],[[],24],0,0,0,[[]],[[],20],[[],20],[[],25],[[]],0,0,0,[[],40],0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[11],[11],[11],[[534,16],17],[535,534],[[]],[[],11],[[]],[[],24],[534,[[4,[2,3]]]],[[],20],[[],20],[[],25],[[534,5,5],[[1,[[7,[6]]]]]],[[]],0,0,[[],40],[[]],[[]],[11],[11],[11],[[]],[[],11],[[]],[[],24],[39,40],0,[[40,536]],[[40,537]],[[],20],[[],20],[[],25],[[40,44]],[[40,58]],[[]],0,[538,6],0,0,0,0,0,0,0,0,[[],6],[[],539],0,[26],[[]],[[]],0,[540,540],[[]],[[],540],[11],[11],[11],0,[[]],0,[[],11],[[]],[[],24],0,[[]],[[],20],[[],20],[[],25],0,0,[[45,46],[[20,[75]]]],[[32,540],[[20,[75]]]],[44,[[20,[75]]]],[[[22,[29]],540],[[20,[75]]]],[[]],[65,[[7,[74]]]],0,0,[[]],0,[538,6],0,0,0,0,0,0,0,0,[[],6],[[],539],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[],73],[11],[11],[11],[[5,5,8,68],[[20,[[67,[66]]]]]],[[]],[[],11],[[]],[[],24],[[74,68],13],[[541,542],541],[[],73],[[],56],0,0,[[32,68],2],[[],20],[[],20],[[],25],[73,[[20,[75]]]],[73,[[20,[75]]]],[[]]],"c":[],"p":[[6,"Result"],[6,"StakeKeyHash"],[3,"BigDecimal"],[3,"DashMap"],[3,"SlotNo"],[3,"SignedRegistration"],[3,"Vec"],[3,"Client"],[3,"VotingPowerArgs"],[3,"Command"],[15,"usize"],[4,"DryRunCommand"],[15,"bool"],[3,"PathBuf"],[3,"Args"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[6,"Error"],[4,"Result"],[3,"Id"],[4,"Option"],[15,"str"],[3,"Request"],[3,"TypeId"],[3,"Private"],[8,"Strategy"],[3,"Nonce"],[3,"VotingPurpose"],[3,"TxId"],[3,"VotingKeyHex"],[3,"StakeKeyHex"],[3,"DbName"],[3,"DbUser"],[3,"DbHost"],[3,"StakeAddr"],[3,"StakePubKey"],[3,"RewardsAddress"],[3,"SnapshotEntry"],[3,"SnapshotOutputAssert"],[3,"u5"],[3,"Global"],[3,"u5"],[4,"VotingKey"],[3,"Registration"],[3,"Signature"],[3,"RawRegistration"],[3,"DbPass"],[3,"__WrapperDbPass"],[4,"Ordering"],[8,"Microtype"],[8,"Deserializer"],[4,"FromHexError"],[15,"char"],[8,"FromIterator"],[3,"String"],[3,"PubKey"],[15,"u64"],[3,"HexString"],[3,"Bytes"],[8,"Display"],[8,"Send"],[8,"Sync"],[3,"IndentedSection"],[4,"Value"],[8,"Error"],[3,"Box"],[4,"NetworkId"],[15,"i64"],[3,"OsStr"],[4,"Resettable"],[8,"Serializer"],[3,"CddlConfig"],[15,"u8"],[4,"RegistrationError"],[3,"Sig"],[3,"HexBytes"],[3,"V"],[3,"Error"],[8,"Error"],[3,"NetworkInfoFromStrError"],[3,"Demand"],[3,"DbConfig"],[3,"Db"],[8,"FnOnce"],[3,"Text"],[8,"AsExpression"],[8,"DbQuery"],[15,"u128"],[3,"meta_table"],[3,"sig_table"],[3,"Report"],[3,"table"],[8,"AsQuery"],[3,"Except"],[3,"Distinct"],[3,"CombinationClause"],[3,"All"],[4,"Error"],[3,"Intersect"],[3,"UpdateTarget"],[3,"OnClauseWrapper"],[3,"star"],[3,"Union"],[8,"Backend"],[3,"AstPass"],[6,"QueryResult"],[3,"id"],[3,"slot_no"],[3,"epoch_no"],[3,"treasury"],[3,"reserves"],[3,"rewards"],[3,"utxo"],[3,"deposits"],[3,"fees"],[3,"block_id"],[3,"table"],[3,"star"],[3,"id"],[3,"epoch_no"],[3,"slot_no"],[3,"epoch_slot_no"],[3,"block_no"],[3,"previous_id"],[3,"slot_leader_id"],[3,"size"],[3,"time"],[3,"tx_count"],[3,"proto_major"],[3,"proto_minor"],[3,"op_cert_counter"],[3,"hash"],[3,"vrf_key"],[3,"op_cert"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_in_id"],[3,"tx_out_id"],[3,"tx_out_index"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_id"],[3,"index"],[3,"stake_address_id"],[3,"value"],[3,"inline_datum_id"],[3,"reference_script_id"],[3,"address"],[3,"address_raw"],[3,"address_has_script"],[3,"payment_cred"],[3,"data_hash"],[3,"multi_assets_descr"],[3,"table"],[3,"star"],[3,"id"],[3,"block_id"],[3,"costs"],[3,"hash"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_id"],[3,"hash"],[3,"value"],[3,"bytes"],[3,"table"],[3,"star"],[3,"id"],[3,"addr_id"],[3,"cert_index"],[3,"pool_hash_id"],[3,"active_epoch_no"],[3,"tx_id"],[3,"slot_no"],[3,"redeemer_id"],[3,"table"],[3,"star"],[3,"id"],[3,"hash_raw"],[3,"table"],[3,"star"],[3,"id"],[3,"out_sum"],[3,"fees"],[3,"tx_count"],[3,"blk_count"],[3,"no"],[3,"start_time"],[3,"end_time"],[3,"table"],[3,"star"],[3,"id"],[3,"epoch_no"],[3,"min_fee_a"],[3,"min_fee_b"],[3,"max_block_size"],[3,"max_tx_size"],[3,"max_bh_size"],[3,"key_deposit"],[3,"pool_deposit"],[3,"max_epoch"],[3,"optimal_pool_count"],[3,"influence"],[3,"monetary_expand_rate"],[3,"treasury_growth_rate"],[3,"decentralisation"],[3,"protocol_major"],[3,"protocol_minor"],[3,"min_utxo_value"],[3,"min_pool_cost"],[3,"cost_model_id"],[3,"price_mem"],[3,"price_step"],[3,"max_tx_ex_mem"],[3,"max_tx_ex_steps"],[3,"max_block_ex_mem"],[3,"max_block_ex_steps"],[3,"max_val_size"],[3,"collateral_percent"],[3,"max_collateral_inputs"],[3,"block_id"],[3,"coins_per_utxo_size"],[3,"nonce"],[3,"extra_entropy"],[3,"table"],[3,"star"],[3,"id"],[3,"addr_id"],[3,"pool_id"],[3,"amount"],[3,"epoch_no"],[3,"table"],[3,"star"],[3,"id"],[3,"no"],[3,"seconds"],[3,"state"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_id"],[3,"hash"],[3,"table"],[3,"star"],[3,"id"],[3,"quantity"],[3,"tx_id"],[3,"ident"],[3,"table"],[3,"star"],[3,"id"],[3,"quantity"],[3,"tx_out_id"],[3,"ident"],[3,"table"],[3,"star"],[3,"id"],[3,"start_time"],[3,"network_name"],[3,"version"],[3,"table"],[3,"star"],[3,"id"],[3,"policy"],[3,"name"],[3,"fingerprint"],[3,"table"],[3,"star"],[3,"id"],[3,"epoch_no"],[3,"min_fee_a"],[3,"min_fee_b"],[3,"max_block_size"],[3,"max_tx_size"],[3,"max_bh_size"],[3,"key_deposit"],[3,"pool_deposit"],[3,"max_epoch"],[3,"optimal_pool_count"],[3,"influence"],[3,"monetary_expand_rate"],[3,"treasury_growth_rate"],[3,"decentralisation"],[3,"protocol_major"],[3,"protocol_minor"],[3,"min_utxo_value"],[3,"min_pool_cost"],[3,"cost_model_id"],[3,"price_mem"],[3,"price_step"],[3,"max_tx_ex_mem"],[3,"max_tx_ex_steps"],[3,"max_block_ex_mem"],[3,"max_block_ex_steps"],[3,"max_val_size"],[3,"collateral_percent"],[3,"max_collateral_inputs"],[3,"registered_tx_id"],[3,"coins_per_utxo_size"],[3,"key"],[3,"entropy"],[3,"table"],[3,"star"],[3,"id"],[3,"hash_raw"],[3,"view"],[3,"table"],[3,"star"],[3,"id"],[3,"pool_id"],[3,"registered_tx_id"],[3,"url"],[3,"hash"],[3,"table"],[3,"star"],[3,"id"],[3,"pool_id"],[3,"pmr_id"],[3,"ticker_name"],[3,"hash"],[3,"json"],[3,"bytes"],[3,"table"],[3,"star"],[3,"id"],[3,"pool_id"],[3,"fetch_time"],[3,"pmr_id"],[3,"retry_count"],[3,"fetch_error"],[3,"table"],[3,"star"],[3,"id"],[3,"addr_id"],[3,"pool_update_id"],[3,"table"],[3,"star"],[3,"id"],[3,"update_id"],[3,"port"],[3,"ipv4"],[3,"ipv6"],[3,"dns_name"],[3,"dns_srv_name"],[3,"table"],[3,"star"],[3,"id"],[3,"hash_id"],[3,"cert_index"],[3,"announced_tx_id"],[3,"retiring_epoch"],[3,"table"],[3,"star"],[3,"id"],[3,"hash_id"],[3,"cert_index"],[3,"pledge"],[3,"active_epoch_no"],[3,"meta_id"],[3,"margin"],[3,"fixed_cost"],[3,"registered_tx_id"],[3,"reward_addr_id"],[3,"vrf_key_hash"],[3,"table"],[3,"star"],[3,"id"],[3,"cert_index"],[3,"treasury"],[3,"reserves"],[3,"tx_id"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_id"],[3,"unit_mem"],[3,"unit_steps"],[3,"fee"],[3,"index"],[3,"redeemer_data_id"],[3,"purpose"],[3,"script_hash"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_id"],[3,"hash"],[3,"value"],[3,"bytes"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_in_id"],[3,"tx_out_id"],[3,"tx_out_index"],[3,"table"],[3,"star"],[3,"id"],[3,"addr_id"],[3,"cert_index"],[3,"amount"],[3,"tx_id"],[3,"table"],[3,"star"],[3,"id"],[3,"name"],[3,"pool_hash"],[3,"table"],[3,"star"],[3,"id"],[3,"addr_id"],[3,"amount"],[3,"earned_epoch"],[3,"spendable_epoch"],[3,"pool_id"],[3,"type_"],[3,"table"],[3,"star"],[3,"id"],[3,"stage_one"],[3,"stage_two"],[3,"stage_three"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_id"],[3,"serialised_size"],[3,"hash"],[3,"type_"],[3,"json"],[3,"bytes"],[3,"table"],[3,"star"],[3,"id"],[3,"pool_hash_id"],[3,"hash"],[3,"description"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_id"],[3,"hash_raw"],[3,"view"],[3,"script_hash"],[3,"table"],[3,"star"],[3,"id"],[3,"addr_id"],[3,"cert_index"],[3,"epoch_no"],[3,"tx_id"],[3,"redeemer_id"],[3,"table"],[3,"star"],[3,"id"],[3,"addr_id"],[3,"cert_index"],[3,"epoch_no"],[3,"tx_id"],[3,"table"],[3,"star"],[3,"id"],[3,"addr_id"],[3,"cert_index"],[3,"amount"],[3,"tx_id"],[3,"table"],[3,"star"],[3,"id"],[3,"block_id"],[3,"block_index"],[3,"out_sum"],[3,"fee"],[3,"deposit"],[3,"size"],[3,"invalid_before"],[3,"invalid_hereafter"],[3,"script_size"],[3,"hash"],[3,"valid_contract"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_in_id"],[3,"tx_out_id"],[3,"tx_out_index"],[3,"redeemer_id"],[3,"table"],[3,"star"],[3,"id"],[3,"key"],[3,"tx_id"],[3,"json"],[3,"bytes"],[3,"table"],[3,"star"],[3,"id"],[3,"tx_id"],[3,"index"],[3,"stake_address_id"],[3,"value"],[3,"inline_datum_id"],[3,"reference_script_id"],[3,"address"],[3,"address_raw"],[3,"address_has_script"],[3,"payment_cred"],[3,"data_hash"],[3,"table"],[3,"star"],[3,"id"],[3,"addr_id"],[3,"amount"],[3,"redeemer_id"],[3,"tx_id"],[4,"Rewardtype"],[4,"Scriptpurposetype"],[4,"Scripttype"],[4,"Syncstatetype"],[3,"Output"],[6,"Result"],[3,"RewardtypeMapping"],[6,"Result"],[3,"ScriptpurposetypeMapping"],[3,"ScripttypeMapping"],[3,"SyncstatetypeMapping"],[3,"Nullable"],[3,"InvalidRegistration"],[3,"RegistrationCorruptedBin"],[3,"MockDbProvider"],[3,"InMemoryDbSync"],[3,"RewardAddress"],[3,"PublicKey"],[8,"Rng"],[4,"Value"],[3,"ValidationCtx"],[6,"Valids"],[6,"Invalids"],[8,"DataProvider"],[13,"DryRun"],[13,"IncorrectVotingPurpose"],[13,"StakeKeyWrongNetwork"],[13,"StakePublicKeyError"],[13,"SignatureError"],[13,"CddlParsingFailed"],[13,"CborDeserializationFailed"],[13,"RawBinCborRegistrationFailure"],[13,"RawBinCborSignatureFailure"],[13,"InvalidAddressPrefix"],[13,"MismatchedSignature"],[8,"RegexExpressionMethods"],[8,"VerifiableSnapshotOutput"]]},\
"wallet":{"doc":"","t":"DCEENNNNGSDNDNCDAMLLLMMALLLLLLLLMLLLLMLLLLLLLLMLLLAAMMAAMLLAMLLLLLMMWDEENNNNNNDDDMLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLMLMMDMMLLLLLLLLMLLMLLLLLLLMMLMLLLLGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFWWNNDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLNENFLLLLLLLLLLFLLLLLLEDENNNNRNNEENNENNNNDDDNEAMMMMMMMMAMAMENNENNNNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMLMLLLLLMLLLLLLLLLLLLLLMLLLLMNNREENDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLEDNNDILLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLL","n":["AccountId","AccountWitnessBuilder","EitherAccount","Error","Extended","InvalidLane","NonMonotonicSpendingCounter","NotEnoughFunds","Password","SIZE","ScrubbedBytes","Seed","Settings","SpendingCounters","TransactionBuilder","Wallet","account","account","address","as_ref","base32_len","block0_date","block0_initial_hash","blockchain","borrow","borrow_mut","check_base32","clone","clone_into","cmp","deref","deref_mut","discrimination","drop","encode_hex","encode_hex_upper","eq","fees","fmt","fmt","from","from","from_str","from_str","get_hash","hash","id","init","into","partial_cmp","password","scheme","slot_duration","state","states","time","time_era","to_owned","to_string","transaction","transaction_max_expiry_epochs","try_from","try_into","type_id","vzip","write_base32","current","needed","","AccountId","EitherAccount","Error","Extended","InvalidLane","NonMonotonicSpendingCounter","NotEnoughFunds","Seed","SpendingCounters","State","Wallet","WalletBuildTx","account","account_id","account_id","add_fragment_id","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_fragment","confirm","confirmed_value","counters","current_counter","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","from","from","id","init","init","init","init","init","input","into","into","into","into","into","needed_input","new_from_key","new_from_key","new_from_seed","new_from_seed","new_transaction","next_value","pending_transactions","provide","secret_key","secret_key","set_state","source","spending_counter","state","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unconfirmed_value","value","value","vzip","vzip","vzip","vzip","vzip","wallet","witness_builder","current","needed","Settings","block0_date","block0_initial_hash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","discrimination","discrimination","drop","eq","fees","fmt","from","init","into","is_input_worth","new","serialize","slot_duration","time_era","to_owned","transaction_max_expiry_epochs","try_from","try_into","type_id","vzip","Password","ScrubbedBytes","as_ref","base32_len","borrow","borrow_mut","check_base32","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","encode_hex","encode_hex_upper","fmt","from","from","from","init","into","to_owned","try_from","try_into","type_id","vzip","write_base32","for_each_output","on_tx_input_and_witnesses","on_tx_output","","","Confirmed","Pending","StateRef","States","Status","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","confirm","confirm","confirmed_state","contains","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","fmt","fmt","fmt","from","from","from","get_hash","hash","init","init","init","into","into","into","is_confirmed","is_pending","iter","last_state","new","new","partial_cmp","pop_old_confirmed_states","push","state","state","states","status","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unconfirmed_states","vzip","vzip","vzip","BeforeBlock0Date","Error","FinalDateOutOfRange","block_date_from_system_time","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","init","into","max_expiration_date","provide","to_string","try_from","try_into","type_id","vzip","AccountSecretKey","AccountWitnessBuilder","AddInputStatus","Added","BalancingError","BestEffort","BestEffort","DEFAULT_STRATEGIES","Ed25519","Ed25519Extended","Error","InputStrategy","InvalidWitnessInputAmount","NotEnoughSpace","OutputStrategy","PrivacyPreserving","SecretKey","Signature","Skipped","Strategy","StrategyBuilder","TransactionBuilder","UtxoReshuffle","WitnessInput","builder","input","input","inputs","output","output","outputs","payload","settings","strategy","validity","witness_builder","witness_builders","AddInputStatus","Added","BalancingError","Error","InvalidWitnessInputAmount","NotEnoughSpace","SecretKey","Signature","Skipped","TransactionBuilder","WitnessInput","add_input","add_input_if_worth","add_output","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_balance","check_balance_with","clone","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","estimate_fee","estimate_fee_with","finalize_tx","fmt","fmt","from","from","from","from","get_sign_data","init","init","init","init","inputs","inputs","inputs_value","into","into","into","into","new","outputs","outputs","outputs_value","payload","prepare_tx","provide","set_ios","set_validity","set_witnesses","settings","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validity","vzip","vzip","vzip","vzip","witness_builders","BestEffort","BestEffort","DEFAULT_STRATEGIES","InputStrategy","OutputStrategy","PrivacyPreserving","Strategy","StrategyBuilder","UtxoReshuffle","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","cmp","cmp","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","fmt","fmt","from","from","from","from","get_hash","get_hash","hash","hash","init","init","init","init","input","input","input","into","into","into","into","most_efficient","most_private","output","output","output","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AccountSecretKey","AccountWitnessBuilder","Ed25519","Ed25519Extended","UtxoWitnessBuilder","WitnessBuilder","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","build","build_sign_data","build_sign_data","build_sign_data","build_sign_data","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","sign","sign","sign","sign","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":[[0,"wallet"],[66,"wallet::Error"],[68,"wallet::account"],[178,"wallet::account::Error"],[180,"wallet::blockchain"],[210,"wallet::password"],[240,"wallet::scheme"],[243,"wallet::states"],[314,"wallet::time"],[335,"wallet::transaction"],[372,"wallet::transaction::builder"],[462,"wallet::transaction::strategy"],[547,"wallet::transaction::witness_builder"]],"d":["","","","","","","","","","the total size of an account ID","","","","","","","","","get the public address associated to this account …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","confirm a pending transaction","get the confirmed value of the wallet","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","get all the pending transactions of the wallet","","","","set the state counter so we can sync with the blockchain …","","","","","","","","","","","","","","","","","","","","get the unconfirmed value of the wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","convenient function to check if a given input is covering …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","access the confirmed state of the store verse","check wether the given state associate to this key is …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","iterate through the states from the confirmed one up to …","get the last state of the store","create a new States with the given initial state","","","","push a new <strong>unconfirmed</strong> state in the States","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","try to get the most optimise transaction consuming the …","If the transaction needs to offload extra inputs in an …","the default strategies, in order of importance, to apply …","","","","","","","","preserve the privacy of the UTxOs","","","","","","","Along with privacy preserving, this one will have the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","create a new transaction builder with the given settings …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try to get the most optimise transaction consuming the …","If the transaction needs to offload extra inputs in an …","the default strategies, in order of importance, to apply …","","","preserve the privacy of the UTxOs","","","Along with privacy preserving, this one will have the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,21,25,25,25,0,1,0,21,0,25,0,0,0,20,1,1,1,40,40,0,1,1,1,1,1,1,1,1,40,1,1,1,1,40,1,1,1,1,1,1,1,1,1,1,1,1,0,0,40,20,0,0,40,1,1,0,40,1,1,1,1,1,88,88,0,0,0,0,21,25,25,25,21,25,0,0,0,20,20,21,22,20,22,21,27,25,20,22,21,27,25,20,20,20,27,22,27,20,22,21,27,25,20,22,21,27,25,20,22,21,27,25,27,25,25,20,22,21,27,25,25,1,20,22,21,27,25,22,20,22,21,27,25,22,20,21,20,21,20,22,20,25,20,21,20,25,20,20,25,20,22,21,27,25,20,22,21,27,25,20,22,21,27,25,20,20,27,20,22,21,27,25,22,22,88,88,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,0,0,0,0,48,48,0,0,0,53,48,54,53,48,54,48,48,48,53,54,53,53,53,48,54,53,48,54,53,48,54,48,53,48,54,53,48,54,48,48,53,48,54,53,48,54,54,54,53,53,53,54,48,53,53,54,54,53,54,48,53,48,54,53,48,54,53,48,54,53,53,48,54,58,0,58,0,58,58,58,58,58,58,58,58,58,58,0,58,58,58,58,58,58,0,0,0,63,68,76,77,0,37,37,0,0,68,63,0,76,67,67,63,0,0,0,77,0,0,75,74,61,75,74,61,61,61,0,61,0,61,0,63,68,0,68,63,67,67,63,0,0,61,61,61,61,63,68,67,61,63,68,67,61,61,67,67,61,63,68,67,61,63,68,67,61,63,68,67,61,61,61,68,68,61,63,68,67,61,61,63,68,67,61,61,61,61,63,68,67,61,61,61,61,61,61,68,61,61,61,61,67,68,61,63,68,67,61,63,68,67,61,63,68,67,61,61,63,68,67,61,76,77,0,0,0,76,0,0,77,75,74,76,77,75,74,76,77,74,76,77,76,77,76,77,74,75,74,76,77,75,74,76,77,75,74,76,77,76,77,76,77,75,74,76,77,76,77,76,77,75,74,76,77,75,75,74,75,74,76,77,74,74,75,75,74,76,77,76,77,75,74,76,77,75,74,76,77,75,74,76,77,75,74,76,77,0,0,37,37,0,0,79,39,37,79,39,37,62,79,79,39,62,79,79,39,37,37,79,39,37,79,39,37,79,39,37,79,39,37,79,39,37,79,39,37,62,79,79,39,37,79,39,37,79,39,37,79,39,37,79,39,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],[1],[[],4],0,0,0,[[]],[[]],[[],[[8,[[7,[5,6]]]]]],[1,1],[[]],[[1,1],9],[4],[4],0,[4],[[],[[11,[10]]]],[[],[[11,[10]]]],[[1,1],12],0,[[1,13],[[8,[14]]]],[[1,13],[[8,[14]]]],[[],1],[[]],[15,[[8,[1]]]],[15,8],[[],16],[1],0,[[],4],[[]],[[1,1],[[17,[9]]]],0,0,0,0,0,0,0,[[]],[[],18],0,0,[[],8],[[],8],[[],19],[[]],[[],8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20,1],[21,1],[[22,23]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[20,23,24],[[8,[12,25]]]],[[20,23]],[20,26],0,0,[[],27],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[27,13],28],[[25,13],28],[[25,13],28],[[]],[[]],[[]],[[]],[29,25],[[]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[22,30],[[]],[[]],[[]],[[]],[[]],0,[[[32,[31]]],20],[[[32,[31]]],21],[33,20],[33,21],[[20,26,34],[[8,[22,25]]]],0,[20,35],[36],[20,37],[21,37],[[20,26],[[8,[25]]]],[25,[[17,[38]]]],[20],0,[[],18],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[],19],[20,[[17,[26]]]],[20,26],0,[[]],[[]],[[]],[[]],[[]],0,[22,39],0,0,0,0,0,[[]],[[]],[40,40],[[]],[4],[4],[41,[[8,[40]]]],[40,2],0,[4],[[40,40],12],0,[[40,13],28],[[]],[[],4],[[]],[[40,30],12],[42,[[8,[40,43]]]],[[40,44],8],0,0,[[]],0,[[],8],[[],8],[[],19],[[]],0,0,[45],[[],4],[[]],[[]],[[],[[8,[[7,[5,6]]]]]],[45,45],[[]],[[],45],[4],[45],[45],[4],[45],[4],[[],[[11,[10]]]],[[],[[11,[10]]]],[[45,13],28],[[[7,[34]]],45],[[]],[18,45],[[],4],[[]],[[]],[[],8],[[],8],[[],19],[[]],[[],8],[[46,47]],[[24,47]],[[24,47]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[48,48],[[]],[[48,48],9],[[[53,[[52,[[0,[49,50,51]]]]]]]],[54],[53,54],[[[53,[[52,[[0,[49,50,51]]]]]]],12],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[48,48],12],[[[53,[55,55]],13],28],[[48,13],28],[[[54,[55]],13],28],[[]],[[]],[[]],[[],16],[48],[[],4],[[],4],[[],4],[[]],[[]],[[]],[54,12],[54,12],[53,35],[53,54],[[[0,[49,50]]],[[53,[[0,[49,50]]]]]],[48,54],[[48,48],[[17,[9]]]],[[[53,[[0,[49,50]]]]]],[[[53,[[0,[49,50]]]],[0,[49,50]]]],[54],0,0,0,[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[53,35],[[]],[[]],[[]],0,0,0,[[40,56],[[8,[57,58]]]],[[]],[[]],[4],[4],[4],[[58,13],28],[[58,13],28],[[]],[[],4],[[]],[[40,56],[[8,[57,58]]]],[36],[[],18],[[],8],[[],8],[[],19],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[61,[59,60]],30,[62,[60]]],12],[[[61,[59,60]],30,[62,[60]]],63],[[[61,[59,60]],[64,[3]]],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[61,[59,60]]],65],[[[61,[59,60]],34,34],65],[[[67,[66,66]]],[[67,[66,66]]]],[[]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[[61,[59,60]]],26],[[[61,[59,60]],34,34],26],[[[61,[59,60]],[7,[67]]],[[8,[[46,[59]],68]]]],[[68,13],28],[[68,13],28],[[]],[[]],[[]],[[]],[[[61,[59,60]]],[[8,[[7,[60]],68]]]],[[],4],[[],4],[[],4],[[],4],[[[61,[59,60]]]],0,[[[61,[59,60]]],26],[[]],[[]],[[]],[[]],[[40,59,57],[[61,[59,60]]]],[[[61,[59,60]]]],0,[[[61,[59,60]]],26],0,[[[61,[59,60]]],[[8,[[70,[[69,[59]]]],68]]]],[36],[[[61,[59,60]],[70,[[71,[59]]]]],[[70,[[69,[59]]]]]],[[[61,[59,60]],[70,[[72,[59]]]]],[[70,[[71,[59]]]]]],[[[61,[59,60]],[70,[[69,[59]]]],[7,[67]]],[[8,[[70,[[73,[59]]]],68]]]],0,[[]],[[],18],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74,75],[76,76],[77,77],[[]],[[]],[[76,76],9],[[77,77],9],[[],74],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[76,76],12],[[77,77],12],[[76,13],28],[[77,13],28],[[]],[[]],[[]],[[]],[[],16],[[],16],[76],[77],[[],4],[[],4],[[],4],[[],4],[75,76],0,0,[[]],[[]],[[]],[[]],[[],74],[[],74],[75,77],0,0,[[76,76],[[17,[9]]]],[[77,77],[[17,[9]]]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[],19],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[79,[81,[80]]],78],[[79,[81,[80]]],78],[[39,82],78],[[83,84]],[[79,83,84],80],[[79,83,84],80],[[39,83,84],85],[37,37],[[]],[4],[4],[4],[4],[4],[4],[4],[4],[4],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[]],[[]],[[]],[[],78],[[79,80,[87,[86]]],78],[[79,80,[32,[31]]],78],[[39,85,37],78],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],19],[[],19],[[],19],[[]],[[]],[[]]],"c":[],"p":[[3,"AccountId"],[4,"Discrimination"],[3,"Address"],[15,"usize"],[3,"u5"],[3,"Global"],[3,"Vec"],[4,"Result"],[4,"Ordering"],[15,"char"],[8,"FromIterator"],[15,"bool"],[3,"Formatter"],[3,"Error"],[15,"str"],[15,"u64"],[4,"Option"],[3,"String"],[3,"TypeId"],[3,"Wallet"],[4,"EitherAccount"],[3,"WalletBuildTx"],[6,"FragmentId"],[4,"Fragment"],[4,"Error"],[3,"Value"],[3,"State"],[6,"Result"],[4,"Error"],[3,"Input"],[3,"Ed25519Extended"],[3,"SecretKey"],[6,"Seed"],[15,"u8"],[8,"Iterator"],[3,"Demand"],[4,"AccountSecretKey"],[8,"Error"],[3,"AccountWitnessBuilder"],[3,"Settings"],[8,"Deserializer"],[3,"Block"],[4,"Error"],[8,"Serializer"],[3,"ScrubbedBytes"],[3,"Transaction"],[8,"FnMut"],[4,"Status"],[8,"Hash"],[8,"Eq"],[8,"Sized"],[8,"Borrow"],[3,"States"],[3,"StateRef"],[8,"Debug"],[3,"SystemTime"],[3,"BlockDate"],[4,"Error"],[8,"Payload"],[8,"AsRef"],[3,"TransactionBuilder"],[8,"WitnessBuilder"],[4,"AddInputStatus"],[3,"Output"],[4,"Balance"],[8,"Clone"],[4,"WitnessInput"],[4,"Error"],[3,"SetWitnesses"],[3,"TxBuilderState"],[3,"SetIOs"],[3,"SetTtl"],[3,"SetAuthData"],[3,"StrategyBuilder"],[3,"Strategy"],[4,"InputStrategy"],[4,"OutputStrategy"],[4,"Witness"],[3,"UtxoWitnessBuilder"],[3,"WitnessUtxoData"],[6,"SpendingSignature"],[6,"Witness"],[6,"HeaderId"],[6,"TransactionSignDataHash"],[3,"WitnessAccountData"],[3,"XPrv"],[3,"Key"],[13,"NotEnoughFunds"]]},\
"wallet_core":{"doc":"","t":"DDEENNEGNNNNNNNNNNNNNNNDNEENNNNNDNNDDNNNNNNDNNRDNNNDNNNNNNNNMLLLLLLLLLMMLLLLLLLLLLLLMLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLMMLLLMLLLLLLLMLLLLMLLLLLLLMLLLLLLLLLLLLLLALLLLLLLAMLLLLLLALMGRGRDDGDGDDGMMLLLLLLLLMMFLLLLLLLLMLLLLMLLLLALLLLLLLLLLLLMALLAMFFAMLLMLLLLLLLLLLLLALLLLFFFFFFFFFFFFFFOOOEGDDDNDGNDMMLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLMMFFFFMMMMMLLLLLLLLLLLLLLLLLLLLLLLLDFLLLLLMLLLLFMLLLLRDDDMMLLLLLLLLMLLMLLLLLLFMMMLLLLLLLLLLDEENNNNNNNNNNNNDNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLMLLLLLLLLLLLLLLENDNRLLLLLLLLLLLLMLLLLLLLMMLLLLLLLMLLDLMLLLLLLLLLLLLLLLLLLL","n":["Choice","Error","ErrorCode","ErrorKind","Evm","EvmMapping","Fragment","FragmentId","Initial","InvalidFragment","InvalidFragment","InvalidInput","InvalidInput","InvalidSpendingCounters","InvalidSpendingCounters","InvalidTransactionValidityDate","InvalidTransactionValidityDate","InvalidVoteEncryptionKey","InvalidVoteEncryptionKey","MintToken","NotEnoughFunds","NotEnoughFunds","OldUtxoDeclaration","Options","OwnerStakeDelegation","PayloadType","PayloadTypeConfig","PoolRegistration","PoolRetirement","PoolUpdate","Private","Private","Proposal","Public","Public","Result","Settings","StakeDelegation","SymmetricCipherError","SymmetricCipherError","SymmetricCipherInvalidPassword","SymmetricCipherInvalidPassword","Transaction","TxBuilder","UpdateProposal","UpdateVote","VOTE_PLAN_ID_LENGTH","Value","VoteCast","VotePlan","VoteTally","Wallet","WalletConversion","WalletConversion","WalletRecovering","WalletRecovering","WalletTransactionBuilding","WalletTransactionBuilding","WalletVoteOutOfRange","WalletVoteOutOfRange","account","add","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary","arbitrary_with","as_byte","as_ref","block0_date","block0_initial_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","bytes","c","checked_add","checked_sub","choice_range","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize_from_slice","deserialize_from_slice","details","discrimination","discrimination","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","error","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_hash","get_hash","hash","hash","hash","hash","id","index","init","init","init","init","init","init","into","into","into","into","into","into","is_input_worth","kind","new","new","new_length","options","options_range","partial_cmp","partial_cmp","partial_cmp","payload_type","saturating_add","scale","serialize","serialize","serialize","serialized_size","serialized_size","slot_duration","split_in","sub","sum","sum","time_era","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transaction_max_expiry_epochs","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","tx_builder","type_id","type_id","type_id","type_id","type_id","type_id","validate","vote","vote_plan_id","vzip","vzip","vzip","vzip","vzip","vzip","wallet","zero","argument_name","ErrorPtr","FRAGMENT_ID_LENGTH","FragmentPtr","NONCES_SIZE","NulPtr","OutOfBound","ProposalPtr","Settings","SettingsPtr","SpendingCounters","TransactionOut","WalletPtr","block0_date","block0_initial_hash","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","data","delete_buffer","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","drop","fees","fmt","fmt","fmt","fmt","fragment","from","from","from","from","init","init","init","init","into","into","into","into","len","macros","provide","provide","settings","slot_duration","spending_counters_delete","symmetric_cipher_decrypt","time","time_era","to_string","to_string","transaction_max_expiry_epochs","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vote","vzip","vzip","vzip","vzip","wallet_confirm_transaction","wallet_delete_error","wallet_delete_proposal","wallet_delete_settings","wallet_delete_wallet","wallet_id","wallet_import_keys","wallet_set_state","wallet_spending_counters","wallet_total_value","wallet_vote_cast","fragment_delete","fragment_from_raw","fragment_id","non_null","non_null_array","non_null_mut","Discrimination","Epoch","LinearFee","PerCertificateFee","PerVoteCertificateFee","Production","SettingsInit","Slot","Test","TimeEra","block0_date","block0_initial_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate_owner_stake_delegation","certificate_pool_registration","certificate_stake_delegation","certificate_vote_cast","certificate_vote_plan","coefficient","constant","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discrimination","drop","drop","drop","drop","drop","drop","epoch_start","fees","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","per_certificate_fees","per_vote_certificate_fees","settings_block0_hash","settings_discrimination","settings_fees","settings_new","slot_duration","slot_start","slots_per_epoch","time_era","transaction_max_expiry_epochs","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","BlockDate","block_date_from_system_time","borrow","borrow_mut","deref","deref_mut","drop","epoch","from","from","init","into","max_epiration_date","slot","try_from","try_into","type_id","vzip","INPUT_NAME","ProposalPrivate","ProposalPublic","Settings","block0_date","block0_initial_hash","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","discrimination","drop","drop","fees","from","from","init","init","into","into","proposal_new","slot_duration","time_era","transaction_max_expiry_epochs","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","vzip","vzip","Error","ErrorCode","ErrorKind","InvalidFragment","InvalidFragment","InvalidInput","InvalidInput","InvalidSpendingCounters","InvalidSpendingCounters","InvalidTransactionValidityDate","InvalidTransactionValidityDate","InvalidVoteEncryptionKey","InvalidVoteEncryptionKey","NotEnoughFunds","NotEnoughFunds","Result","SymmetricCipherError","SymmetricCipherError","SymmetricCipherInvalidPassword","SymmetricCipherInvalidPassword","WalletConversion","WalletConversion","WalletRecovering","WalletRecovering","WalletTransactionBuilding","WalletTransactionBuilding","WalletVoteOutOfRange","WalletVoteOutOfRange","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","code","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","details","details","drop","drop","drop","drop","error","fmt","fmt","fmt","fmt","from","from","from","from","from","from","init","init","init","init","into","into","into","into","into_c_api","invalid_fragment","invalid_input","invalid_spending_counters","invalid_transaction_validity_date","invalid_vote_encryption_key","is_err","is_ok","kind","kind","not_enough_funds","provide","source","success","symmetric_cipher_error","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wallet_conversion","wallet_recovering","wallet_transaction","wallet_vote_range","with","with","argument_name","TxBuilder","borrow","borrow_mut","build_tx","builder","deref","deref_mut","drop","from","get_sign_data","init","into","new","prepare_tx","sign_tx","try_from","try_into","type_id","vzip","PayloadTypeConfig","Private","Proposal","Public","VOTE_PLAN_ID_LENGTH","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","index","init","init","into","into","new","new_private","new_public","options","payload_type","try_from","try_from","try_into","try_into","type_id","type_id","vote","vote_plan_id","vzip","vzip","Wallet","account","account","borrow","borrow_mut","confirm_transaction","deref","deref_mut","drop","from","id","init","into","recover_free_keys","set_state","spending_counter","total_value","try_from","try_into","type_id","vote","vzip"],"q":[[0,"wallet_core"],[244,"wallet_core::ErrorKind"],[245,"wallet_core::c"],[342,"wallet_core::c::fragment"],[345,"wallet_core::c::macros"],[348,"wallet_core::c::settings"],[457,"wallet_core::c::time"],[475,"wallet_core::c::vote"],[513,"wallet_core::error"],[622,"wallet_core::error::ErrorKind"],[623,"wallet_core::tx_builder"],[642,"wallet_core::vote"],[679,"wallet_core::wallet"]],"d":["a choice","The error structure, contains details of what may have …","a code representing the kind of error that occurred","","","","All possible messages recordable in the content","","","invalid fragment","invalid fragment","the input was not valid, it may be because it was a null …","kind of error where the input (named <code>argument_name</code>) is of …","invalid spending counters provided to the set_state …","invalid spending counters provided to the set_state …","invalid transaction validity date, it’s either before …","invalid transaction validity date","vote encryption key is invalid either because is not valid …","vote encryption key is invalid either because is not valid …","","wallet out of funds","wallet out of funds","","options for the vote","","the <code>PayloadType</code> to use for a vote plan","","","","","","","","","","result returned by a call, this allows to check if an error","","","error encrypting or decrypting transfer protocol payload","format error (malformed input, etc…)","authentication failed","authentication failed","","","","","","Unspent transaction value.","","","","the wallet","the operation on the wallet conversion object fail, it may …","This is the kind of error that may happen when operating …","an error occurred while recovering a wallet","an error occurred while recovering a wallet","the wallet failed to build a valid transaction, for example","the wallet failed to build a valid transaction","the provided voting choice is out of the allowed range","the provided voting choice is out of the allowed range","","","","","","","","","","","","","","","","","","","","","","","","","","","This module expose handy C compatible functions to reuse …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","The ID of a message is a hash of its serialization <em>without</em> …","","","","The ID of a fragment is a hash of its serialization <em>without</em>…","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","convenient function to check if a given input is covering …","","","","create a new <code>Options</code> with the given number of available …","","","","","","","","","","","","","","","Divide a value by n equals parts, with a potential …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","validate the given <code>Choice</code> against the available <code>Options</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete a binary buffer that was returned by this library …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Release the memory holding the spending counters","decrypt payload of the wallet transfer protocol","","","","","","","","","","","","","","","","","","","","","","","Confirm the previously generated transaction identified by …","delete the pointer and free the allocated memory","delete the pointer","delete the pointer and free the allocated memory","delete the pointer, zero all the keys and free the …","get the wallet id","recover a wallet from an account and a list of utxo keys","update the wallet account state","get the current spending counter for the (only) account in …","get the total value in the wallet","build the vote cast transaction","Safety","Safety","Safety","","","","","","Linear fee using the basic affine formula …","","","","","","","","Unix timestamp of the genesis block. Provides an anchor to …","block_0_initial_hash is assumed to point to 32 bytes of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Safety","Safety","Safety","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Safety","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","build the proposal object","","","","","","","","","","","","","","The error structure, contains details of what may have …","a code representing the kind of error that occurred","","invalid fragment","invalid fragment","the input was not valid, it may be because it was a null …","kind of error where the input (named <code>argument_name</code>) is of …","invalid spending counters provided to the set_state …","invalid spending counters provided to the set_state …","invalid transaction validity date, it’s either before …","invalid transaction validity date","vote encryption key is invalid either because is not valid …","vote encryption key is invalid either because is not valid …","wallet out of funds","wallet out of funds","result returned by a call, this allows to check if an error","error encrypting or decrypting transfer protocol payload","format error (malformed input, etc…)","authentication failed","authentication failed","the operation on the wallet conversion object fail, it may …","This is the kind of error that may happen when operating …","an error occurred while recovering a wallet","an error occurred while recovering a wallet","the wallet failed to build a valid transaction, for example","the wallet failed to build a valid transaction","the provided voting choice is out of the allowed range","the provided voting choice is out of the allowed range","","","","","","","","","retrieve the error code associated to the error kind","","","","","","","","","if there are details return the pointer to the error type …","","","","","","if it is an error, this function will returns the the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","construct a Result which is an error with invalid inputs","","","","returns <code>true</code> if the <code>Result</code> means error","returns <code>true</code> if the <code>Result</code> means success","access the error kind","","","","","constructor to build a <code>Result</code> that means success","","","","","","","","","","","","","","","","","","","","","","","","set some details to the <code>Result</code> object if the <code>Result</code> is of …","set some details to the <code>Result</code> object if the <code>Result</code> is of …","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","the wallet","Returns address of the account with the given chain …","","","","use this function to confirm a transaction has been …","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Retrieve a wallet from a key used as utxo’s","Update the wallet’s account state.","get the current spending counter","get the total value in the wallet","","","","Cast a vote",""],"i":[0,0,0,0,2,2,0,0,2,64,63,64,63,64,63,64,63,64,63,2,64,63,2,0,2,0,0,2,2,2,58,5,0,58,5,0,0,2,64,63,64,63,2,0,2,2,0,0,2,2,2,0,64,63,64,63,64,63,64,63,79,1,2,1,3,4,5,1,4,1,11,11,11,2,1,3,4,5,11,2,1,3,4,5,71,1,0,1,1,3,11,2,1,3,4,5,11,2,1,3,4,5,1,4,5,1,5,11,2,1,3,4,5,11,2,1,3,4,5,11,2,1,2,1,61,11,11,11,2,1,3,4,5,11,2,1,3,4,5,0,11,11,2,1,1,3,4,5,11,2,2,1,1,1,1,3,4,5,5,1,4,5,2,1,4,5,2,76,11,2,1,3,4,5,11,2,1,3,4,5,11,61,11,4,3,76,3,1,4,5,76,1,1,11,2,1,2,1,11,1,1,1,1,11,11,2,1,3,4,5,1,11,11,2,1,1,3,4,5,5,11,2,1,3,4,5,0,11,2,1,3,4,5,3,0,76,11,2,1,3,4,5,0,1,84,0,0,0,0,0,0,0,0,0,0,0,0,11,11,43,50,39,41,43,50,39,41,43,50,0,43,50,39,41,43,50,39,41,11,43,50,39,41,11,39,39,41,41,0,43,50,39,41,43,50,39,41,43,50,39,41,50,0,39,41,0,11,0,0,0,11,39,41,11,43,50,39,41,43,50,39,41,43,50,39,41,0,43,50,39,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,0,55,0,56,56,55,85,56,52,53,54,55,85,56,52,53,54,52,53,53,53,54,54,52,52,52,53,54,55,85,56,52,53,54,55,85,56,52,53,54,56,55,85,56,52,53,54,85,56,55,85,56,52,53,54,55,85,56,52,53,54,55,85,56,52,53,54,52,52,0,0,0,0,56,85,85,56,56,55,85,56,52,53,54,55,85,56,52,53,54,55,85,56,52,53,54,55,85,56,52,53,54,0,0,49,49,49,49,49,49,49,49,49,49,0,49,49,49,49,49,0,0,0,0,11,11,60,62,60,62,60,62,60,62,11,60,62,11,60,62,60,62,60,62,0,11,11,11,60,62,60,60,62,62,60,62,60,62,0,0,0,64,63,64,63,64,63,64,63,64,63,64,63,0,64,63,64,63,64,63,64,63,64,63,64,63,44,64,61,63,44,64,61,63,63,44,64,61,63,44,64,61,63,61,61,44,64,61,63,44,61,61,63,63,44,44,44,64,61,63,44,64,61,63,44,64,61,63,44,61,61,61,61,61,44,44,61,61,61,61,61,44,61,61,63,44,64,61,63,44,64,61,63,44,64,61,63,44,64,61,63,61,61,61,61,44,61,84,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,58,0,58,0,76,58,76,58,76,58,76,58,76,58,76,58,76,76,58,76,58,76,76,76,76,76,76,58,76,58,76,58,76,76,76,58,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[],2],[[],1],[[],3],[[],4],[[],5],[[]],[4,6],[1,7],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1],0,[[1,1],[[9,[1,8]]]],[[1,1],[[9,[1,8]]]],[3,10],[11,11],[2,2],[1,1],[3,3],[4,4],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],12],[[4,4],12],[[5,5],12],[[],1],[[],5],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[14,[[9,[11]]]],[15,[[9,[2,16]]]],[15,[[9,[1,16]]]],[15,[[9,[16]]]],[15,[[9,[16]]]],0,[11,17],0,[13],[13],[13],[13],[13],[13],[[11,11],18],[[2,2],18],[[1,1],18],[[3,3],18],[[4,4],18],[[5,5],18],0,0,[[11,19],[[9,[20]]]],[[2,19],[[9,[20]]]],[[1,19],[[9,[20]]]],[[1,19],[[9,[20]]]],[[3,19],[[9,[20]]]],[[4,19],[[9,[20]]]],[[5,19],[[9,[20]]]],[[]],[[]],[21,2],[22,1],[23,1],[[]],[24,1],[[]],[[]],[25,5],[[]],[[],7],[[],7],[[],7],[2,26],[1],[4],[5],[2],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[11,27],18],0,[28,[[9,[11,29]]]],[6,4],[6,[[9,[3,30]]]],0,0,[[1,1],[[31,[12]]]],[[4,4],[[31,[12]]]],[[5,5],[[31,[12]]]],0,[[1,1],1],[[1,32],[[9,[1,8]]]],[[11,33],9],[[2,15],[[9,[34]]]],[[1,15],[[9,[34]]]],[2,13],[1,13],0,[[1,32],35],[[1,1]],[36,[[9,[1,8]]]],[36,1],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],37],0,[[],9],[[],9],[[],[[9,[1,8]]]],[[],9],[[],9],[[],9],[[],9],[6,[[9,[5]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[3,4],18],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[6,13]],[13],[13],[13],[13],[13],[13],[13],[13],0,[13],[13],[13],[13],0,[[39,19],40],[[39,19],40],[[41,19],40],[[41,19],40],0,[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],0,0,[42],[42],0,0,[43],[[6,13,6,13,6,13],44],0,0,[[],37],[[],37],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],38],[[],38],[[],38],[[],38],0,[[]],[[]],[[]],[[]],[[45,6],44],[46],[47],[48],[45],[[45,6],44],[[6,45],44],[[45,7,43],44],[[45,43],44],[[45,7],44],[[45,48,47,6,49,6,50],44],[51],[[6,13,51],44],[[51,6],44],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],52],[[],53],[[],54],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],0,[13],[13],[13],[13],[13],[13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[11,6],44],[[11,55],44],[[11,52],44],[[56,11],44],0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[]],[[]],0,[[11,7,49],44],[[]],[[]],[13],[13],[13],0,[57,49],[[]],[[],13],[[]],[[11,7,49],44],0,[[],9],[[],9],[[],38],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[13],[13],[13],[13],0,[13],[13],0,[[]],[[]],[[],13],[[],13],[[]],[[]],[[6,6,6,[59,[58]],47],44],0,0,0,[[],9],[[],9],[[],9],[60,[[9,[58,61]]]],[[],9],[62,[[9,[58,61]]]],[[],38],[[],38],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,64],[13],[13],[13],[13],[13],[13],[13],[13],[61,[[31,[65]]]],0,[13],[13],[13],[13],[44,[[31,[61]]]],[[61,19],40],[[61,19],40],[[63,19],40],[[63,19],40],[[[9,[61]]],44],[61,44],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[]],[[]],[[]],[[]],[44,61],[[],61],[66,61],[[],61],[[],61],[[],61],[44,18],[44,18],[61,63],0,[[],61],[42],[61,[[31,[65]]]],[[],44],[67,61],[[],37],[[],37],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],38],[[],38],[[],38],[[],38],[[]],[[]],[[]],[[]],[[],61],[[],61],[[],61],[[],61],[[44,[0,[65,68,69]]],44],[[61,[0,[65,68,69]]],61],0,0,[[]],[[]],[[[71,[70]],72],[[9,[2,61]]]],0,[13],[13],[13],[[]],[[[71,[70]]],[[9,[73,61]]]],[[],13],[[]],[[11,70],[[71,[70]]]],[[[71,[70]],37,74],[[9,[[71,[70]],61]]]],[[[71,[70]],72],[[9,[2,61]]]],[[],9],[[],9],[[],38],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[13],[13],[13],[13],[13],[13],[[]],[[]],0,[[],13],[[],13],[[]],[[]],[[75,6,3,58],76],[[75,6,3,77],76],[[75,6,3],76],0,0,[[],9],[[],9],[[],9],[[],9],[[],38],[[],38],[[76,4],[[31,[78]]]],0,[[]],[[]],0,[[79,17],80],0,[[]],[[]],[[79,81]],[13],[13],[13],[[]],[79,82],[[],13],[[]],[[],[[9,[79,61]]]],[[79,1],[[9,[61]]]],[79],[79,1],[[],9],[[],9],[[],38],[[79,11,76,4,57,6],[[9,[83,61]]]],[[]]],"c":[],"p":[[3,"Value"],[4,"Fragment"],[3,"Options"],[3,"Choice"],[4,"PayloadType"],[15,"u8"],[15,"u64"],[4,"ValueError"],[4,"Result"],[3,"Range"],[3,"Settings"],[4,"Ordering"],[15,"usize"],[8,"Deserializer"],[3,"Codec"],[4,"ReadError"],[4,"Discrimination"],[15,"bool"],[3,"Formatter"],[3,"Error"],[3,"FragmentDef"],[3,"AverageValue"],[3,"NonZeroValue"],[3,"Value"],[3,"VotePrivacy"],[3,"Hash"],[3,"Input"],[3,"Block"],[4,"Error"],[3,"InvalidOptionsLength"],[4,"Option"],[15,"u32"],[8,"Serializer"],[4,"WriteError"],[3,"SplitValueIn"],[8,"Iterator"],[3,"String"],[3,"TypeId"],[3,"NulPtr"],[6,"Result"],[3,"OutOfBound"],[3,"Demand"],[3,"SpendingCounters"],[3,"Result"],[6,"WalletPtr"],[6,"ErrorPtr"],[6,"ProposalPtr"],[6,"SettingsPtr"],[3,"BlockDate"],[3,"TransactionOut"],[6,"FragmentPtr"],[3,"LinearFee"],[3,"PerCertificateFee"],[3,"PerVoteCertificateFee"],[4,"Discrimination"],[3,"SettingsInit"],[3,"BlockDate"],[4,"PayloadTypeConfig"],[8,"TryInto"],[3,"ProposalPublic"],[3,"Error"],[3,"ProposalPrivate"],[4,"ErrorKind"],[4,"ErrorCode"],[8,"Error"],[15,"str"],[4,"Error"],[8,"Send"],[8,"Sync"],[8,"Payload"],[3,"TxBuilder"],[8,"FnOnce"],[3,"WitnessAccountData"],[3,"SpendingCounter"],[6,"VotePlanId"],[3,"Proposal"],[3,"ElectionPublicKey"],[3,"VoteCast"],[3,"Wallet"],[3,"Address"],[6,"FragmentId"],[3,"AccountId"],[3,"Box"],[13,"InvalidInput"],[3,"TimeEra"]]},\
"wallet_wasm_js":{"doc":"JavaScript and TypeScript bindings for the Jormungandr …","t":"DDDDDDDDDFRFRFRFRFRFRFRFFLLLLLALLLLLLLLALLLLLLOLLLLLLLLOLLLLLLLLLLLLLLLLLLALLDFRFLLLLLLLLLLLLLLLLLLLALALDDDFRFRFRFRFRFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDFRFRFRFLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDFRFRFRFFRFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLL","n":["Certificate","ElectionPublicKey","Fragment","FragmentId","Payload","Settings","VoteCast","VoteCastTxBuilder","VotePlanId","__wasm_bindgen_generated_Settings_from_json","__wasm_bindgen_generated_Settings_from_json__const","__wasm_bindgen_generated_Settings_to_json","__wasm_bindgen_generated_Settings_to_json__const","__wasm_bindgen_generated_VoteCastTxBuilder_build_tx","__wasm_bindgen_generated_VoteCastTxBuilder_build_tx__const","__wasm_bindgen_generated_VoteCastTxBuilder_get_sign_data","__wasm_bindgen_generated_VoteCastTxBuilder_get_sign_data__const","__wasm_bindgen_generated_VoteCastTxBuilder_new","__wasm_bindgen_generated_VoteCastTxBuilder_new__const","__wasm_bindgen_generated_VoteCastTxBuilder_prepare_tx","__wasm_bindgen_generated_VoteCastTxBuilder_prepare_tx__const","__wasm_bindgen_generated_VoteCastTxBuilder_sign_tx","__wasm_bindgen_generated_VoteCastTxBuilder_sign_tx__const","__wbg_settings_new","__wbg_votecasttxbuilder_new","borrow","borrow","borrow_mut","borrow_mut","build_tx","certificates","deref","deref","deref_mut","deref_mut","describe","describe","drop","drop","fragment","from","from","from_abi","from_abi","from_json","get_sign_data","impl_collection","init","init","into","into","into_abi","into_abi","is_none","is_none","log","new","none","none","prepare_tx","ref_from_abi","ref_from_abi","ref_mut_from_abi","ref_mut_from_abi","return_abi","return_abi","sign_tx","to_json","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","Certificate","__wasm_bindgen_generated_Certificate_vote_cast","__wasm_bindgen_generated_Certificate_vote_cast__const","__wbg_certificate_new","borrow","borrow_mut","deref","deref_mut","describe","drop","from","from_abi","init","into","into_abi","is_none","none","ref_from_abi","ref_mut_from_abi","return_abi","try_from","try_into","type_id","vote_cast","vote_cast","vote_plan","vzip","ElectionPublicKey","Payload","VoteCast","__wasm_bindgen_generated_ElectionPublicKey_from_bytes","__wasm_bindgen_generated_ElectionPublicKey_from_bytes__const","__wasm_bindgen_generated_ElectionPublicKey_from_hex","__wasm_bindgen_generated_ElectionPublicKey_from_hex__const","__wasm_bindgen_generated_Payload_new_private","__wasm_bindgen_generated_Payload_new_private__const","__wasm_bindgen_generated_Payload_new_public","__wasm_bindgen_generated_Payload_new_public__const","__wasm_bindgen_generated_VoteCast_new","__wasm_bindgen_generated_VoteCast_new__const","__wbg_electionpublickey_new","__wbg_payload_new","__wbg_votecast_new","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref_mut","deref_mut","deref_mut","describe","describe","describe","drop","drop","drop","from","from","from","from_abi","from_abi","from_abi","from_bytes","from_hex","init","init","init","into","into","into","into_abi","into_abi","into_abi","is_none","is_none","is_none","new","new_private","new_public","none","none","none","ref_from_abi","ref_from_abi","ref_from_abi","ref_mut_from_abi","ref_mut_from_abi","ref_mut_from_abi","return_abi","return_abi","return_abi","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","VotePlanId","__wasm_bindgen_generated_VotePlanId_from_bytes","__wasm_bindgen_generated_VotePlanId_from_bytes__const","__wasm_bindgen_generated_VotePlanId_from_hex","__wasm_bindgen_generated_VotePlanId_from_hex__const","__wasm_bindgen_generated_VotePlanId_to_bytes","__wasm_bindgen_generated_VotePlanId_to_bytes__const","__wbg_voteplanid_new","borrow","borrow_mut","clone","clone_into","deref","deref_mut","describe","drop","eq","fmt","from","from_abi","from_bytes","from_hex","init","into","into_abi","is_none","none","ref_from_abi","ref_mut_from_abi","return_abi","to_bytes","to_owned","try_from","try_into","type_id","vzip","Fragment","FragmentId","FragmentIds","__wasm_bindgen_generated_Fragment_from_bytes","__wasm_bindgen_generated_Fragment_from_bytes__const","__wasm_bindgen_generated_Fragment_id","__wasm_bindgen_generated_Fragment_id__const","__wasm_bindgen_generated_Fragment_to_bytes","__wasm_bindgen_generated_Fragment_to_bytes__const","__wbg_fragment_new","__wbg_fragmentid_new","__wbg_generated_const_FragmentIds","__wbg_instanceof_FragmentIds_6c2b8eab6b540adf","as_ref","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","describe","describe","describe","drop","drop","drop","from","from","from","from","from_abi","from_abi","from_abi","from_bytes","id","init","init","init","instanceof","into","into","into","into_abi","into_abi","into_abi","into_abi","is_none","is_none","is_none","none","none","none","none","obj","ref_from_abi","ref_from_abi","ref_from_abi","ref_mut_from_abi","ref_mut_from_abi","return_abi","return_abi","return_abi","to_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unchecked_from_js","unchecked_from_js_ref","vzip","vzip","vzip"],"q":[[0,"wallet_wasm_js"],[77,"wallet_wasm_js::certificates"],[104,"wallet_wasm_js::certificates::vote_cast"],[185,"wallet_wasm_js::certificates::vote_plan"],[221,"wallet_wasm_js::fragment"]],"d":["","","","Identifier of a block fragment","","Encapsulates blockchain settings needed for some …","","","","","","","","Finish step of building VoteCast fragment with passing an …","","Get a transaction signing data","","Initializing of the VoteCastTxBuilder","","First step of the VoteCast transaction building process","","Finish step of signing and building VoteCast fragment","","","","","","","","Finish step of building VoteCast fragment with passing an …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get a transaction signing data","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Initializing of the VoteCastTxBuilder","","","First step of the VoteCast transaction building process","","","","","","","Finish step of signing and building VoteCast fragment","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Identifier of a block fragment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8,2,8,2,0,2,8,2,8,2,8,2,8,0,2,8,2,8,8,2,0,2,8,2,8,2,8,2,8,0,2,2,8,2,2,8,2,8,2,8,2,8,2,8,2,8,2,8,0,2,8,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,13,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,15,11,14,15,11,14,15,11,14,15,11,14,15,11,14,15,11,14,15,11,14,15,11,14,14,14,15,11,14,15,11,14,15,11,14,15,11,11,15,15,14,15,11,14,15,11,14,15,11,14,15,11,14,15,11,14,15,11,14,15,11,14,15,11,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,21,20,4,21,20,4,21,20,20,4,21,20,4,21,20,4,21,20,4,21,20,20,4,21,20,4,4,4,21,20,4,20,21,20,4,21,20,20,4,21,20,4,21,20,20,4,20,21,20,4,21,4,21,20,4,4,21,20,4,21,20,4,21,20,4,20,20,21,20,4],"f":[0,0,0,0,0,0,0,0,0,[[]],0,[1],0,[1],0,[1],0,[[]],0,[1],0,[1],0,[1,1],[1,1],[[]],[[]],[[]],[[]],[[2,3],[[6,[4,5]]]],0,[7],[7],[7],[7],[[]],[[]],[7],[7],0,[[]],[[]],[1,2],[1,8],[3,[[6,[8,5]]]],[2,[[6,[9,5]]]],0,[[],7],[[],7],[[]],[[]],[2,1],[8,1],[[],10],[[],10],0,[[8,11],2],[[]],[[]],[[2,3],[[6,[2,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,3],[[6,[4,5]]]],[8,[[6,[3,5]]]],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],0,[[]],[[]],0,[[]],0,[1,1],[[]],[[]],[7],[7],[[]],[7],[[]],[1,13],[[],7],[[]],[13,1],[[],10],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],12],0,[11,13],0,[[]],0,0,0,[[]],0,[[]],0,[[]],0,[[]],0,[[]],0,[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[[]],[[]],[[]],[1,14],[1,15],[1,11],[[],[[6,[14,5]]]],[3,[[6,[14,5]]]],[[],7],[[],7],[[],7],[[]],[[]],[[]],[14,1],[15,1],[11,1],[[],10],[[],10],[[],10],[[16,17,15],11],[[16,7,17,14],[[6,[15,5]]]],[17,15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[[]],[[]],[[]],0,[[]],0,[[]],0,[1],0,[1,1],[[]],[[]],[16,16],[[]],[7],[7],[[]],[7],[[16,16],10],[[16,18],19],[[]],[1,16],[[],[[6,[16,5]]]],[3,[[6,[16,5]]]],[[],7],[[]],[16,1],[[],10],[[]],[[]],[[]],[[]],[16,[[6,[9,5]]]],[[]],[[],6],[[],6],[[],12],[[]],0,0,0,[[]],0,[1],0,[1],0,[1,1],[1,1],0,[1,1],[20,20],[20,5],[[]],[[]],[[]],[[]],[[]],[[]],[7],[20,5],[7],[7],[7],[7],[7],[[]],[[]],[[]],[7],[7],[7],[[]],[[]],[5,20],[[]],[1,21],[[],20],[1,4],[[],[[6,[4,5]]]],[4,21],[[],7],[[],7],[[],7],[5,10],[[]],[[]],[[]],[21,1],[20],[20],[4,1],[[],10],[[],10],[[],10],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,[[6,[9,5]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[],12],[5,20],[5,20],[[]],[[]],[[]]],"c":[],"p":[[15,"u32"],[3,"VoteCastTxBuilder"],[3,"String"],[3,"Fragment"],[3,"JsValue"],[4,"Result"],[15,"usize"],[3,"Settings"],[3,"Box"],[15,"bool"],[3,"VoteCast"],[3,"TypeId"],[3,"Certificate"],[3,"ElectionPublicKey"],[3,"Payload"],[3,"VotePlanId"],[15,"u8"],[3,"Formatter"],[6,"Result"],[3,"FragmentIds"],[3,"FragmentId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
